var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AggregateResult.html",[0,0.261,1,2.677]],["body/interfaces/AggregateResult.html",[0,0.488,1,3.817,2,1.21,3,0.053,4,0.053,5,0.053,6,0.04,7,3.673,8,1.057,9,4.858,10,5.41,11,0.005,12,0.37,13,0.822,14,5.864,15,3.228,16,1.618,17,0.006,18,1.706,19,0.752,20,1.559,21,4.891,22,3.276,23,0.091,24,3.066,25,3.254,26,3.522,27,3.671,28,2.17,29,2.714,30,3.673,31,3.673,32,3.144,33,2.081,34,3.755,35,3.673,36,2.015,37,4.333,38,3.673,39,3.673,40,3.515,41,3.377,42,3.515,43,3.515,44,3.377,45,4.418,46,1.512,47,1.512,48,1.073,49,1.6,50,3.93,51,2.041,52,1.325,53,0.575,54,3.515,55,1.848,56,2.951,57,3.254,58,3.515,59,1.82,60,4.333,61,4.333,62,4.333,63,4.872,64,5.263,65,1.386,66,3.817,67,4.333,68,1.931,69,2.041,70,2.866,71,3.043,72,2.951,73,2.789,74,3.144,75,4.497,76,3.377,77,3.377,78,4.333,79,4.186,80,3.043,81,3.515,82,1.367,83,2.58,84,3.144,85,3.377,86,3.515,87,0.841,88,3.673,89,2.714,90,3.377,91,3.515,92,2.518,93,3.066,94,3.254,95,3.176,96,3.254,97,2.208,98,3.515,99,0.004,100,0.003]],["title/components/AppComponent.html",[101,0.557,102,1.358]],["body/components/AppComponent.html",[3,0.061,4,0.05,5,0.033,6,0.056,8,0.438,11,0.004,12,0.424,13,0.584,15,2.308,16,1.079,17,0.006,19,0.408,20,0.985,23,0.033,24,1.429,26,2.503,33,1.969,34,1.46,36,2.038,47,1.577,48,1.805,49,2.053,51,1.267,52,1.254,53,0.545,55,0.861,56,1.832,59,0.848,65,1.516,67,4.496,73,1.763,93,1.429,99,0.003,100,0.005,101,1.003,102,2.009,103,1.995,104,0.848,105,0.917,106,0.962,107,0.861,108,3.285,109,4.124,110,4.475,111,5.009,112,3.651,113,3.196,114,2.285,115,5.009,116,2.976,117,2.687,118,2.181,119,2.227,120,1.334,121,5.425,122,1.376,123,4.475,124,6.072,125,2.133,126,6.072,127,1.177,128,1.409,129,1.296,130,3.285,131,1.314,132,4.124,133,3.327,134,5.075,135,4.124,136,1.749,137,3.113,138,5.009,139,5.009,140,5.009,141,2.384,142,4.124,143,3.285,144,2.227,145,1.293,146,3.08,147,3.327,148,1.749,149,5.009,150,0.255,151,0.279,152,2.568,153,1.291,154,1.779,155,2.394,156,1.343,157,5.94,158,2.704,159,3.08,160,4.214,161,2.935,162,2.394,163,2.532,164,3.327,165,3.285,166,2.532,167,3.477,168,2.935,169,1.695,170,2.935,171,2.532,172,4.124,173,1.896,174,2.935,175,1.779,176,2.532,177,2.009,178,3.285,179,0.066,180,1.565,181,1.116,182,3.651,183,1.725,184,2.394,185,2.704,186,3.285,187,3.285,188,3.285,189,3.285,190,3.285,191,2.532,192,1.641,193,2.021,194,2.699,195,3.477,196,7.706,197,1.111,198,5.425,199,1.754,200,5.009,201,3.285,202,2.532,203,3.285,204,0.917,205,1.202,206,3.285,207,3.285,208,3.285,209,3.285,210,3.285,211,3.285,212,2.704,213,2.704,214,3.285,215,1.641,216,1.097,217,2.28,218,3.285,219,0.506,220,3.285,221,3.285,222,3.285,223,2.394,224,1.803,225,2.096,226,6.02,227,4.124,228,2.28,229,3.285,230,3.285,231,5.636,232,2.532,233,1.22,234,3.285,235,1.889,236,1.136,237,1.832,238,1.641,239,2.227,240,2.503,241,3.285,242,5.009,243,3.285,244,3.285,245,5.009,246,3.285,247,1.231,248,1.832,249,2.638,250,3.285,251,5.009,252,1.327,253,1.367,254,3.285,255,5.009,256,3.285,257,3.285,258,3.285,259,1.832,260,3.285,261,2.28,262,5.009,263,5.009,264,4.475,265,5.009,266,5.009,267,5.009,268,2.875,269,1.527,270,1.779,271,2.247,272,2.931,273,2.793,274,2.638,275,1.932,276,2.096,277,1.317,278,2.532,279,2.179,280,2.02,281,1.918,282,1.832,283,1.896,284,1.673,285,2.759,286,1.429,287,3.285,288,2.02,289,2.442,290,1.409,291,2.329,292,2.442,293,1.642,294,2.532,295,1.779,296,1.46,297,2.638,298,1.779,299,2.822,300,1.317,301,1.399,302,1.317,303,2.182,304,3.285,305,1.641,306,2.276,307,1.951,308,1.951,309,1.832,310,2.704,311,2.704,312,2.096,313,2.935,314,2.394,315,2.532,316,2.935,317,0.49,318,1.235,319,1.293,320,0.962,321,1.988,322,0.962,323,1.466,324,0.903,325,0.917,326,1.466,327,0.917,328,0.962,329,0.917,330,0.962,331,0.917,332,1.277,333,0.962,334,0.917,335,0.931,336,0.962,337,0.917,338,0.962,339,0.917,340,0.962,341,1.376,342,1.466,343,1.617,344,2.14,345,1.466,346,0.917,347,1.466,348,0.917,349,0.946,350,1.466,351,0.917,352,1.376,353,1.466,354,0.917,355,1.777,356,1.376,357,1.466,358,0.917,359,0.962,360,0.917,361,0.917,362,0.962,363,0.917,364,0.962,365,0.917,366,1.777,367,0.917,368,0.962,369,0.917,370,1.466,371,0.917,372,0.962,373,0.917,374,0.962,375,0.931,376,0.962,377,0.903,378,0.917,379,0.962,380,0.917,381,0.962,382,0.917,383,0.903,384,0.861,385,0.917,386,0.917,387,0.903,388,0.903,389,0.931,390,0.917,391,0.962,392,0.917,393,0.931,394,0.962,395,1.376,396,0.917,397,0.962,398,0.962]],["title/components/AppComponent-1.html",[101,0.466,102,1.136,253,0.932]],["body/components/AppComponent-1.html",[3,0.078,4,0.052,5,0.052,6,0.039,11,0.003,17,0.006,23,0.052,47,1.663,48,1.819,49,1.553,52,1.287,53,0.751,55,1.347,59,1.327,65,1.536,99,0.004,100,0.005,101,0.879,102,2.393,103,1.628,104,1.327,105,1.434,106,1.504,107,1.347,114,2.328,117,2.749,118,2.225,119,3.071,120,1.84,121,6.974,122,1.898,123,6.173,128,1.192,136,1.229,148,1.48,150,0.149,151,0.436,169,1.434,173,1.434,177,1.898,179,0.102,193,1.347,199,1.327,224,1.925,253,1.758,268,3.069,269,2.388,270,2.782,271,2.123,272,3.129,273,3.853,274,3.639,275,1.981,276,3.278,277,2.059,278,3.96,279,3.005,280,3.159,281,2.047,282,2.865,283,1.944,284,2.308,285,3.14,286,2.235,290,1.604,293,1.39,314,3.745,315,3.96,316,4.59,317,0.767,318,1.704,319,1.784,320,1.504,321,2.444,322,1.504,323,2.022,324,1.412,325,1.434,326,2.022,327,1.434,328,1.504,329,1.434,330,1.504,331,1.434,332,1.57,333,1.504,334,1.434,335,1.457,336,1.504,337,1.434,338,1.504,339,1.434,340,1.504,341,1.898,342,2.022,343,2.079,344,2.55,345,2.022,346,1.434,347,2.022,348,1.434,349,1.48,350,2.022,351,1.434,352,1.898,353,2.022,354,1.434,355,2.285,356,1.898,357,2.022,358,1.434,359,1.504,360,1.434,361,1.434,362,1.504,363,1.434,364,1.504,365,1.434,366,2.285,367,1.434,368,1.504,369,1.434,370,2.022,371,1.434,372,1.504,373,1.434,374,1.504,375,1.457,376,1.504,377,1.412,378,1.434,379,1.504,380,1.434,381,1.504,382,1.434,383,1.412,384,1.347,385,1.434,386,1.434,387,1.412,388,1.412,389,1.457,390,1.434,391,1.504,392,1.434,393,1.457,394,1.504,395,1.898,396,1.434,397,1.504,398,1.504,399,5.138,400,2.567,401,4.59]],["title/modules/AppModule.html",[402,0.715,403,3.811]],["body/modules/AppModule.html",[3,0.058,4,0.058,5,0.058,6,0.044,11,0.003,17,0.006,23,0.058,99,0.004,100,0.003,102,2.714,136,1.393,150,0.291,151,0.494,170,5.203,171,4.489,174,5.203,175,3.154,179,0.116,204,1.625,226,4.794,231,4.489,317,0.869,402,0.842,403,7.891,404,1.625,405,1.625,406,2.43,407,2.354,408,2.128,409,1.705,410,5.203,411,5.203,412,5.203,413,5.203,414,6.771,415,6.771,416,6.448,417,6.17,418,6.771,419,6.771,420,6.448,421,6.771,422,6.771,423,6.771,424,2.062,425,1.481,426,5.824,427,2.232,428,2.196,429,3.847,430,2.707,431,6.704,432,4.984,433,6.704,434,5.203,435,5.824,436,5.824,437,5.824,438,5.203,439,5.824,440,5.203,441,4.245,442,5.203,443,5.824,444,3.868,445,5.824,446,5.203,447,4.794,448,4.245,449,4.489,450,5.824,451,5.469,452,5.824,453,5.824,454,4.794,455,5.824,456,6.177,457,5.824,458,4.794,459,4.794]],["title/classes/AppPage.html",[179,0.099,460,3.811]],["body/classes/AppPage.html",[3,0.074,4,0.074,5,0.074,6,0.07,11,0.004,12,0.516,17,0.006,23,0.074,95,3.945,99,0.005,100,0.004,119,3.282,129,1.658,136,1.766,150,0.214,179,0.147,197,1.927,247,1.761,283,2.795,319,1.907,460,6.695,461,3.69,462,7.383,463,8.51,464,8.51,465,7.383,466,1.537,467,7.383,468,6.596,469,6.596,470,6.596,471,6.596]],["title/classes/AppPage-1.html",[179,0.082,253,0.932,460,3.188]],["body/classes/AppPage-1.html",[3,0.074,4,0.074,5,0.074,6,0.07,11,0.004,12,0.516,17,0.006,23,0.074,95,3.945,99,0.005,100,0.004,119,3.282,129,1.658,136,1.766,150,0.214,179,0.147,197,1.927,247,1.761,283,2.795,319,1.907,460,6.695,461,3.69,463,8.51,464,8.51,466,1.537,468,6.596,469,6.596,470,6.596,471,6.596,472,7.383,473,7.383,474,7.383]],["title/components/BlockSizeInputComponent.html",[101,0.557,324,1.358]],["body/components/BlockSizeInputComponent.htmltitle/modules/BlockSizeInputModule.html",[402,0.715,539,3.604]],["body/modules/BlockSizeInputModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,99,0.005,100,0.004,150,0.279,151,0.601,179,0.141,204,1.978,293,2.453,317,1.058,324,2.784,325,1.978,402,1.025,404,1.978,405,1.978,406,2.655,407,2.009,408,2.009,409,2.655,424,2.329,425,1.802,427,2.108,428,2.481,429,4.346,430,3.294,475,5.833,476,5.462,539,7.185,540,6.331,541,6.331,542,6.331,543,6.331,544,2.737,545,2.25,546,6.978,547,5.833,548,6.331]],["title/interfaces/BlockSizes.html",[0,0.261,483,4.07]],["body/interfaces/BlockSizes.html",[0,0.444,2,1.363,3,0.06,4,0.06,5,0.06,6,0.045,8,0.795,11,0.003,12,0.416,13,0.888,16,0.947,17,0.006,18,1.745,19,0.684,20,1.172,23,0.076,29,4.303,51,2.937,53,0.828,99,0.004,100,0.003,101,0.945,117,1.587,118,1.639,120,1.587,122,1.638,125,1.967,150,0.173,151,0.506,179,0.152,183,1.639,205,1.348,219,1.173,233,2.214,271,2.34,281,1.997,293,2.57,318,1.47,319,1.539,324,1.638,325,2.8,475,4.906,476,4.594,477,4.594,478,4.594,479,5.438,480,3.16,481,4.594,482,4.594,483,7.523,484,5.325,487,4.594,489,2.68,491,4.137,492,4.019,495,4.594,496,5.643,497,5.325,498,5.87,499,4.303,501,2.708,503,3.139,504,1.067,505,3.959,506,3.665,507,7.498,509,3.665,510,2.905,511,2.68,512,5.87,513,5.831,514,5.096,515,6.804,516,4.455,517,2.905,518,3.803,519,4.594,520,4.594,521,4.594,522,7.498,523,4.594,524,6.804]],["title/modules/BodyModule.html",[402,0.715,414,3.604]],["body/modules/BodyModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,99,0.005,100,0.004,128,1.67,150,0.265,151,0.611,179,0.144,204,2.008,317,1.074,402,1.041,404,2.008,405,2.008,406,2.504,407,2.04,408,2.04,409,2.672,414,7.207,424,2.35,425,1.83,427,2.545,428,2.504,544,2.762,545,2.285,549,6.429,550,6.429,551,6.429,552,7.399,553,7.196,554,5.924,555,7.196]],["title/classes/BodyUI.html",[179,0.099,556,3.604]],["body/classes/BodyUI.html",[0,0.296,3,0.038,4,0.038,5,0.038,6,0.073,8,0.509,11,0.002,12,0.267,13,0.654,16,1.239,17,0.006,18,1.194,19,0.778,20,1.657,23,0.056,28,0.942,36,1.689,46,1.488,53,0.886,87,1.425,99,0.003,100,0.002,118,1.207,125,2.512,127,1.633,128,2.249,129,1.813,145,1.448,150,0.244,153,1.501,156,1.561,179,0.132,197,1.244,205,1.587,219,1.298,236,1.939,252,1.781,301,2.83,302,1.531,332,0.718,424,1.825,461,1.908,466,1.38,502,1.921,504,1.301,514,2.129,556,4.087,557,6.965,558,3.143,559,4.615,560,3.724,561,4.239,562,2.807,563,5.658,564,5.012,565,6.935,566,5.469,567,5.469,568,5.469,569,5.469,570,5.469,571,5.469,572,5.607,573,5.607,574,5.607,575,5.607,576,5.607,577,1.173,578,4.615,579,2.772,580,5.607,581,3.447,582,3.818,583,3.818,584,3.818,585,5.068,586,4.615,587,3.818,588,4.437,589,3.818,590,4.615,591,3.818,592,3.818,593,4.615,594,3.818,595,3.818,596,4.615,597,5.314,598,5.121,599,3.32,600,4.819,601,3.818,602,5.121,603,4.615,604,3.818,605,4.615,606,3.818,607,1.817,608,4.615,609,3.818,610,4.615,611,3.818,612,2.668,613,5.469,614,4.615,615,4.615,616,2.196,617,4.615,618,3.143,619,3.447,620,2.268,621,2.196,622,3.143,623,1.735,624,5.121,625,1.501,626,4.615,627,3.499,628,2.943,629,2.268,630,2.437,631,1.697,632,2.011,633,2.268,634,2.437,635,3.407,636,3.143,637,3.143,638,2.268,639,3.143,640,1.697,641,3.143,642,3.143,643,3.143,644,3.143,645,3.143,646,2.348,647,3.143,648,3.143,649,3.143,650,4.615,651,3.143,652,3.143,653,3.143,654,1.626,655,2.129,656,1.593,657,2.437,658,3.143,659,4.615,660,4.239,661,3.143,662,4.615,663,3.143,664,5.469,665,4.615,666,4.615,667,3.143,668,3.143,669,6.299,670,4.615,671,3.143,672,5.469,673,1.254,674,3.143,675,3.143,676,4.615,677,2.943,678,3.143,679,3.143,680,3.143,681,3.143,682,4.615,683,5.469,684,2.663,685,6.419,686,4.615,687,4.615,688,4.615,689,3.143,690,3.143,691,3.143,692,3.143,693,2.943,694,3.143,695,3.143,696,3.143,697,3.143,698,3.143,699,1.32,700,3.143,701,3.143,702,3.143,703,2.437,704,3.143,705,2.783,706,3.143,707,3.143,708,3.143,709,3.143]],["title/classes/BodyUILayer.html",[179,0.099,563,3.431]],["body/classes/BodyUILayer.html",[0,0.244,3,0.064,4,0.046,5,0.046,6,0.064,11,0.003,12,0.323,13,0.749,16,1.501,17,0.006,18,1.658,19,0.683,20,0.908,23,0.064,28,1.969,36,2.266,46,1.602,53,0.698,69,2.477,83,2.25,87,0.734,95,2.574,99,0.004,100,0.003,125,1.907,127,0.895,128,1.947,129,1.524,141,1.373,145,2.167,150,0.268,179,0.092,197,1.425,205,1.136,216,2.145,219,1.373,236,1.597,240,2.307,247,1.701,252,1.744,253,1.04,282,2.574,332,1.207,461,2.307,466,1.307,499,2.367,502,1.088,504,1.034,557,6.116,561,5.354,563,5.54,585,4.451,597,3.949,602,3.559,616,2.655,619,3.949,620,2.742,625,2.525,635,4.302,640,2.052,654,3.145,655,3.581,656,2.679,669,4.681,673,2.622,684,3.2,699,3.081,705,3.365,710,3.365,711,6.597,712,3.145,713,6.597,714,6.422,715,7.132,716,7.132,717,4.617,718,5.737,719,4.617,720,4.617,721,4.617,722,4.125,723,5.737,724,6.597,725,3.801,726,3.204,727,4.125,728,3.559,729,5.287,730,4.125,731,3.559,732,6.079,733,3.559,734,5.737,735,3.801,736,6.695,737,4.125,738,6.597,739,5.125,740,4.125,741,4.125,742,3.365,743,3.801,744,4.125,745,4.125,746,4.125,747,4.125,748,4.125,749,4.125,750,2.946,751,3.559,752,6.153,753,4.95,754,4.95,755,3.559,756,3.559,757,4.95,758,3.559,759,4.451,760,2.197,761,5.737,762,5.287,763,2.25,764,3.801,765,3.801,766,3.801,767,6.597,768,4.125,769,4.125,770,5.737,771,4.125,772,4.125,773,4.125,774,5.737,775,5.287,776,3.559,777,4.125,778,4.125,779,6.597,780,4.125,781,4.125,782,4.125,783,4.125,784,3.559,785,5.737,786,5.737,787,4.125,788,5.737,789,6.571,790,4.125,791,5.737,792,4.125,793,3.559,794,3.066,795,4.125,796,4.125,797,4.125,798,4.125,799,5.737,800,6.597,801,6.079,802,5.287,803,5.737,804,5.737,805,4.125,806,4.125,807,4.125,808,4.125,809,4.125,810,3.801,811,4.125,812,4.125,813,4.125,814,2.946,815,4.125,816,4.125,817,3.559,818,4.125,819,4.125,820,3.559,821,4.125,822,3.801,823,4.125]],["title/interfaces/BodyUIProps.html",[0,0.261,628,3.811]],["body/interfaces/BodyUIProps.html",[0,0.346,2,1.086,3,0.048,4,0.048,5,0.048,6,0.036,11,0.003,12,0.332,13,0.764,16,1.454,17,0.006,18,1.347,19,0.611,23,0.066,28,1.993,36,1.666,46,1.618,99,0.004,100,0.003,118,1.023,125,2.319,128,1.74,145,1.691,150,0.261,153,1.867,156,1.942,179,0.131,205,1.5,219,1.383,236,2.265,252,1.915,301,2.023,302,1.904,332,0.893,424,2.06,504,1.301,514,2.649,556,3.462,557,3.462,558,3.91,559,3.91,560,3.155,561,4.179,562,2.633,563,5.203,564,4.609,565,6.978,566,3.91,567,3.91,568,3.91,569,3.91,570,3.91,571,3.91,578,3.91,579,1.982,581,2.921,585,4.887,586,3.91,588,4.256,590,3.91,593,3.91,596,3.91,598,3.661,600,4.727,602,3.661,603,3.91,605,3.91,608,3.91,610,3.91,612,2.26,613,6.171,614,5.392,615,5.392,616,2.731,617,5.392,618,3.91,619,4.027,620,2.822,621,2.731,622,3.91,623,2.159,624,5.778,625,1.867,626,5.392,627,3.948,628,5.048,629,4.8,630,4.783,631,3.592,632,3.948,633,2.822,634,3.031,635,3.844,636,3.91,637,3.91,638,2.822,639,3.91,640,2.111,641,3.91,642,3.91,643,3.91,644,3.91,645,3.91,646,2.921,647,3.91,648,3.91,649,3.91,650,5.392,651,3.91,652,3.91,653,3.91,654,2.023,655,2.649,656,1.982,657,3.031,658,3.91,659,5.392,660,4.783,661,3.91,662,5.392,663,3.91,664,6.171,665,5.392,666,5.392,667,3.91,668,3.91,669,6.669,670,5.392,671,3.91,672,6.171,673,1.56,674,3.91,675,3.91,676,5.392,677,3.661,678,3.91,679,3.91,680,3.91,681,3.91,682,5.392,683,6.171,684,3.005,685,6.978,686,5.392,687,5.392,688,5.392,689,3.91,690,3.91,691,3.91,692,3.91,693,3.661,694,3.91,695,3.91,696,3.91,697,3.91,698,3.91,699,1.643,700,3.91,701,3.91,702,3.91,703,3.031,704,3.91,705,3.462,706,3.91,707,3.91,708,3.91,709,3.91]],["title/interfaces/BodyUIViewStateProps.html",[0,0.261,624,3.811]],["body/interfaces/BodyUIViewStateProps.html",[0,0.346,2,1.087,3,0.048,4,0.048,5,0.048,6,0.036,11,0.003,12,0.332,13,0.764,16,1.393,17,0.006,18,1.524,19,0.534,23,0.066,28,1.173,36,1.667,46,1.619,87,1.285,99,0.004,100,0.003,118,1.024,125,2.319,128,1.741,145,1.692,150,0.261,153,1.869,156,1.944,179,0.131,205,1.501,219,1.384,236,2.266,252,1.916,301,2.025,302,1.906,332,0.894,424,2.061,504,1.301,514,2.651,556,3.466,557,3.466,558,3.914,559,3.914,560,3.158,561,4.182,562,2.634,563,5.206,564,4.612,565,6.98,566,3.914,567,3.914,568,3.914,569,3.914,570,3.914,571,3.914,578,3.914,579,1.984,581,2.923,585,4.888,586,3.914,588,4.257,590,3.914,593,3.914,596,3.914,598,3.665,600,4.728,602,3.665,603,3.914,605,3.914,608,3.914,610,3.914,612,2.262,613,6.174,614,5.395,615,5.395,616,2.734,617,6.174,618,3.914,619,4.971,620,2.824,621,2.734,622,3.914,623,2.161,624,6.231,625,2.577,626,6.98,627,4.617,628,3.665,629,2.824,630,3.034,631,2.113,632,2.504,633,2.824,634,3.034,635,3.846,636,3.914,637,3.914,638,2.824,639,3.914,640,2.113,641,3.914,642,3.914,643,3.914,644,3.914,645,3.914,646,2.923,647,3.914,648,3.914,649,3.914,650,5.395,651,3.914,652,3.914,653,3.914,654,2.025,655,2.651,656,1.984,657,3.034,658,3.914,659,5.395,660,4.786,661,3.914,662,5.395,663,3.914,664,6.174,665,5.395,666,5.395,667,3.914,668,3.914,669,6.671,670,5.395,671,3.914,672,6.174,673,1.561,674,3.914,675,3.914,676,5.395,677,3.665,678,3.914,679,3.914,680,3.914,681,3.914,682,5.395,683,6.174,684,3.006,685,6.98,686,5.395,687,5.395,688,5.395,689,3.914,690,3.914,691,3.914,692,3.914,693,3.665,694,3.914,695,3.914,696,3.914,697,3.914,698,3.914,699,1.644,700,3.914,701,3.914,702,3.914,703,3.034,704,3.914,705,3.466,706,3.914,707,3.914,708,3.914,709,3.914]],["title/components/BodyUiComponent.html",[101,0.557,327,1.38]],["body/components/BodyUiComponent.html",[3,0.069,4,0.04,5,0.04,6,0.067,11,0.002,12,0.281,13,0.678,17,0.006,19,0.676,23,0.04,28,0.991,36,1.479,47,1.519,48,1.682,52,1.006,53,0.815,55,1.053,59,1.037,65,1.345,68,2.122,73,3.192,81,2.668,87,0.925,99,0.003,100,0.004,101,0.896,102,1.598,103,1.371,104,1.037,105,1.121,106,1.176,107,1.053,114,2.046,117,2.718,118,2.2,120,1.549,122,1.598,125,1.037,127,0.778,128,2.132,129,1.634,136,0.961,144,2.586,148,1.157,150,0.231,151,0.341,152,2.06,160,5.94,161,3.589,162,2.928,163,3.096,167,5.204,168,3.589,169,1.121,173,1.121,177,1.598,179,0.08,184,2.928,193,1.053,197,1.291,199,1.037,205,1.327,216,1.943,219,1.155,224,1.687,253,0.905,277,1.61,290,1.35,293,1.087,295,2.175,317,0.6,318,1.435,319,1.502,320,1.176,321,2.195,322,1.176,323,1.703,324,1.104,325,1.121,326,1.703,327,2.093,328,1.176,329,1.121,330,1.176,331,1.121,332,1.41,333,1.176,334,1.121,335,1.139,336,1.176,337,1.121,338,1.176,339,1.121,340,1.176,341,1.598,342,1.703,343,1.822,344,2.329,345,1.703,346,1.121,347,1.703,348,1.121,349,1.157,350,1.703,351,1.121,352,2.28,353,1.703,354,1.121,355,2.002,356,1.598,357,1.703,358,1.121,359,1.176,360,1.121,361,1.121,362,1.176,363,1.121,364,1.176,365,1.121,366,2.002,367,1.121,368,1.176,369,1.121,370,1.703,371,1.121,372,1.176,373,1.121,374,1.176,375,1.139,376,1.176,377,1.104,378,1.121,379,1.176,380,1.121,381,1.176,382,1.121,383,1.104,384,1.053,385,1.121,386,1.121,387,1.104,388,1.104,389,1.139,390,1.121,391,1.176,392,1.121,393,1.139,394,1.176,395,1.598,396,1.121,397,1.176,398,1.176,466,1.03,480,2.365,486,2.287,489,2.407,502,1.371,504,0.815,511,2.048,532,2.287,554,7.215,556,6.238,561,5.078,562,1.939,577,1.234,579,2.854,599,2.007,612,1.911,629,3.456,693,4.484,739,4.038,763,2.836,824,7.83,825,4.017,826,2.332,827,4.364,828,6.84,829,5.818,830,6.84,831,5.818,832,4.785,833,6.84,834,3.307,835,5.818,836,4.017,837,4.038,838,3.456,839,5.198,840,3.864,841,5.198,842,4.017,843,2.244,844,5.818,845,4.017,846,4.017,847,5.523,848,5.818,849,4.484,850,4.017,851,2.928,852,4.017,853,4.017,854,4.017,855,4.017,856,4.017,857,4.017,858,4.017,859,2.175,860,2.563,861,1.958,862,4.017,863,4.017,864,4.017,865,4.017,866,4.017,867,4.017,868,2.31,869,4.017,870,4.37,871,4.017,872,6.84,873,4.017,874,5.466,875,4.017,876,4.017,877,4.017,878,4.017,879,4.017,880,4.017,881,4.017,882,5.818,883,4.017,884,4.017,885,4.017,886,5.818,887,4.017,888,5.818,889,5.818,890,4.017,891,2.24]],["title/modules/BodyUiModule.html",[402,0.715,552,3.604]],["body/modules/BodyUiModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,99,0.005,100,0.004,128,1.675,150,0.265,151,0.613,179,0.144,204,2.014,317,1.077,327,2.834,402,1.044,404,2.014,405,2.014,406,2.675,407,2.046,408,2.046,409,2.675,424,2.354,425,1.835,427,2.147,428,2.508,544,2.767,545,2.292,552,7.211,554,5.941,824,6.447,892,6.447,893,6.447,894,6.447,895,7.216,896,7.216]],["title/classes/CCFDatabase.html",[179,0.099,897,3.284]],["body/classes/CCFDatabase.html",[0,0.164,1,1.676,2,0.708,3,0.031,4,0.031,5,0.031,6,0.07,8,1.172,9,3.786,11,0.003,12,0.216,13,0.558,16,1.396,17,0.006,18,0.86,19,0.747,20,1.151,23,0.059,24,3.697,25,2.943,26,1.547,27,1.997,28,1.999,32,1.839,34,2.926,36,2.406,45,2.669,47,1.257,48,0.628,50,1.726,53,0.94,65,1.295,66,2.592,68,2.746,69,3.535,73,3.59,80,3.786,83,4.217,85,3.054,87,1.375,92,2.784,94,2.943,95,3.643,96,2.943,99,0.005,100,0.005,118,1.03,127,1.276,128,1.111,129,1.735,131,1.255,145,1.7,150,0.255,152,4.024,179,0.062,180,2.057,181,1.627,183,1.863,194,3.999,197,1.062,219,1.014,236,2.603,237,4.825,240,3.29,247,1.723,249,2.521,252,1.439,253,1.078,259,1.726,461,1.547,466,1.666,502,2.039,504,0.997,512,3.689,577,0.951,585,1.726,712,2.038,726,2.148,739,5.899,760,4.426,763,2.333,826,1.919,897,4.373,898,6.681,899,2.766,900,4.276,901,5.801,902,3.179,903,3.94,904,4.51,905,4.786,906,4.51,907,3.94,908,4.817,909,4.276,910,4.786,911,3.734,912,3.095,913,6.413,914,4.786,915,5.189,916,4.51,917,3.095,918,5.227,919,3.095,920,4.265,921,4.471,922,4.276,923,3.095,924,5.882,925,4.276,926,3.095,927,2.843,928,5.224,929,3.689,930,4.276,931,3.054,932,4.276,933,3.095,934,4.276,935,5.882,936,3.095,937,4.276,938,3.095,939,6.46,940,5.227,941,3.095,942,2.592,943,3.095,944,3.94,945,3.095,946,4.276,947,3.734,948,3.94,949,3.689,950,3.095,951,3.054,952,5.075,953,1.882,954,3.054,955,4.276,956,3.095,957,4.276,958,3.095,959,2.766,960,2.766,961,2.766,962,2.766,963,2.056,964,2.766,965,2.766,966,2.766,967,5.224,968,2.766,969,2.766,970,2.766,971,2.766,972,2.766,973,2.766,974,2.386,975,2.766,976,2.256,977,1.473,978,5.227,979,2.548,980,4.276,981,1.447,982,4.276,983,3.94,984,4.201,985,2.148,986,3.94,987,4.276,988,2.766,989,4.276,990,1.726,991,2.766,992,2.766,993,2.766,994,2.548,995,2.766,996,2.766,997,2.548,998,7.242,999,2.548,1000,2.766,1001,2.766,1002,2.766,1003,2.548,1004,4.276,1005,2.766,1006,2.766,1007,2.766,1008,2.766,1009,2.766,1010,4.276,1011,2.766,1012,2.766,1013,2.766,1014,2.766,1015,2.766,1016,2.766,1017,2.766,1018,2.766,1019,2.256,1020,2.766,1021,2.766,1022,2.766,1023,2.766,1024,2.766,1025,4.276,1026,2.766,1027,2.766,1028,2.545,1029,5.227,1030,2.766,1031,2.766,1032,3.489,1033,2.766,1034,2.766,1035,2.766,1036,2.766,1037,2.766,1038,2.766,1039,2.766,1040,2.766,1041,2.766,1042,2.766,1043,2.766,1044,2.766]],["title/interfaces/CCFDatabaseOptions.html",[0,0.261,913,3.811]],["body/interfaces/CCFDatabaseOptions.html",[0,0.2,1,2.053,2,1.275,3,0.038,4,0.038,5,0.038,6,0.029,8,0.506,9,3.206,11,0.004,12,0.265,13,0.65,16,1.539,17,0.006,18,0.681,19,0.717,23,0.066,24,3.382,25,2.33,26,1.894,27,1.581,28,1.799,32,2.251,34,3.833,36,2.413,45,3.109,47,1.064,48,0.768,50,2.113,65,1.097,66,2.053,68,2.413,69,3.452,73,3.536,80,3.206,83,4.097,85,3.558,87,0.886,92,2.653,94,2.33,95,3.457,96,2.33,99,0.004,100,0.004,118,1.2,127,0.734,128,0.88,131,0.994,145,1.708,150,0.266,152,3.986,179,0.076,180,1.742,181,1.288,183,1.954,194,3.736,219,1.124,236,2.288,237,4.687,240,2.786,247,1.814,249,1.996,252,1.594,253,1.256,259,2.113,466,1.584,504,1.089,512,2.921,585,2.113,712,3.107,726,3.87,739,5.396,760,3.869,763,2.718,826,1.519,897,3.704,898,2.763,899,3.386,900,3.386,901,5.099,904,2.921,906,2.921,908,3.12,911,4.221,913,5.992,915,5.317,916,4.298,918,4.982,920,4.064,921,4.333,922,3.386,924,5.91,925,3.386,927,2.251,929,2.921,930,3.386,931,2.418,932,3.386,934,3.386,935,5.91,937,3.386,939,6.005,940,4.982,942,2.053,944,3.12,946,3.386,947,3.558,948,3.12,949,2.921,951,2.418,952,4.298,953,1.49,954,2.418,955,3.386,957,3.386,959,3.386,960,3.386,961,3.386,962,3.386,963,2.517,964,3.386,965,3.386,966,3.386,967,5.643,968,3.386,969,3.386,970,3.386,971,3.386,972,3.386,973,3.386,974,2.921,975,3.386,976,2.763,977,1.803,978,7.263,979,4.59,980,6.945,981,2.205,982,6.945,983,6.4,984,5.503,985,3.87,986,6.4,987,6.945,988,4.982,989,6.945,990,3.109,991,6.517,992,3.386,993,3.386,994,3.12,995,3.386,996,3.386,997,3.12,998,7.704,999,3.12,1000,3.386,1001,3.386,1002,3.386,1003,3.12,1004,4.982,1005,3.386,1006,3.386,1007,3.386,1008,3.386,1009,3.386,1010,4.982,1011,3.386,1012,3.386,1013,3.386,1014,3.386,1015,3.386,1016,3.386,1017,3.386,1018,3.386,1019,2.763,1020,3.386,1021,3.386,1022,3.386,1023,3.386,1024,3.386,1025,4.982,1026,3.386,1027,3.386,1028,2.878,1029,5.91,1030,3.386,1031,3.386,1032,4.064,1033,3.386,1034,3.386,1035,3.386,1036,3.386,1037,3.386,1038,3.386,1039,3.386,1040,3.386,1041,3.386,1042,3.386,1043,3.386,1044,3.386]],["title/classes/CCFSpatialGraph.html",[179,0.099,916,3.811]],["body/classes/CCFSpatialGraph.html",[3,0.048,4,0.075,5,0.048,6,0.07,11,0.004,12,0.332,13,0.765,16,1.428,17,0.006,18,1.348,19,0.757,23,0.066,53,0.922,80,2.737,83,4.667,84,3.896,87,1.348,99,0.004,100,0.003,118,1.412,127,0.922,129,1.715,150,0.27,152,2.44,179,0.095,197,1.455,205,1.62,216,1.59,219,1.448,236,2.595,237,2.654,247,1.72,252,1.04,253,1.69,259,4.184,272,1.908,461,2.378,466,1.501,502,1.999,504,1.051,577,1.462,619,5.524,620,2.827,627,4.259,654,2.027,655,2.654,656,1.986,684,3.242,759,2.654,868,2.737,870,3.952,874,5.47,897,5.371,898,6.672,901,5.784,916,5.055,921,5.039,967,3.303,976,3.469,977,2.264,999,3.918,1028,3.264,1032,3.469,1045,4.759,1046,6.558,1047,6.558,1048,6.558,1049,8.087,1050,6.558,1051,4.252,1052,6.558,1053,5.055,1054,8.087,1055,6.558,1056,4.759,1057,6.558,1058,6.183,1059,4.759,1060,6.558,1061,6.558,1062,6.236,1063,4.759,1064,6.183,1065,4.759,1066,6.558,1067,8.482,1068,4.759,1069,7.504,1070,3.918,1071,5.859,1072,4.759,1073,4.252,1074,4.759,1075,4.759,1076,5.859,1077,4.759,1078,4.252,1079,4.252,1080,3.668,1081,3.918,1082,4.759,1083,4.759,1084,6.558,1085,6.704,1086,6.983,1087,4.759,1088,3.918,1089,3.668,1090,3.668,1091,3.918,1092,3.121,1093,4.759,1094,4.759,1095,4.759,1096,4.759,1097,4.759,1098,4.759,1099,4.759,1100,3.918,1101,4.759,1102,4.759,1103,4.759,1104,4.759,1105,4.759,1106,4.759,1107,4.759,1108,4.759,1109,2.737,1110,4.759,1111,3.918,1112,2.506,1113,7.504,1114,4.759,1115,7.504,1116,7.504,1117,4.759,1118,4.759,1119,4.759,1120,4.759,1121,4.759,1122,4.759,1123,4.759,1124,4.759,1125,4.759,1126,4.759,1127,4.759,1128,4.759,1129,4.759,1130,6.558,1131,6.177,1132,4.759,1133,4.759,1134,4.759,1135,4.759]],["title/classes/CCFSpatialScene.html",[179,0.099,920,3.604]],["body/classes/CCFSpatialScene.html",[0,0.206,2,0.89,3,0.039,4,0.057,5,0.039,6,0.066,11,0.003,12,0.272,16,1.409,17,0.006,18,1.412,19,0.722,20,0.766,23,0.057,28,1.403,45,2.172,46,1.411,53,0.921,61,3.497,62,3.497,66,2.109,73,3.432,74,3.379,83,4.32,87,1.347,90,2.485,99,0.003,100,0.002,118,1.224,127,1.432,128,2.017,129,1.618,145,2.244,150,0.238,152,1.997,179,0.078,197,1.262,219,1.406,237,2.172,240,2.842,247,1.718,252,2.094,253,1.849,272,1.561,332,1.736,461,1.946,466,1.453,479,2.395,496,3.629,502,1.998,504,0.797,530,4.002,577,1.197,579,2.804,585,5.279,619,3.497,620,2.313,627,3.539,635,5,684,3.553,736,4.384,750,3.629,751,6.327,752,6.327,753,4.384,754,4.384,755,4.384,756,5.696,757,4.384,758,4.384,784,3.002,793,4.384,817,3.002,820,6.058,868,3.864,870,4.668,874,6.46,897,4.908,898,6.334,909,5.082,920,4.146,921,5.422,928,5.455,949,4.384,954,2.485,967,2.703,976,2.839,977,1.853,1032,4.146,1051,3.479,1053,4.384,1070,3.206,1080,3.002,1081,3.206,1086,6.471,1088,3.206,1089,3.002,1090,3.002,1091,3.206,1109,2.239,1111,3.206,1136,3.479,1137,5.688,1138,5.688,1139,5.688,1140,5.688,1141,5.688,1142,3.894,1143,5.082,1144,3.894,1145,5.082,1146,3.894,1147,5.082,1148,3.894,1149,5.082,1150,3.894,1151,3.894,1152,5.082,1153,6.602,1154,3.894,1155,3.002,1156,7.022,1157,5.082,1158,3.479,1159,3.479,1160,3.479,1161,6.602,1162,7.022,1163,5.082,1164,5.082,1165,7.573,1166,3.479,1167,5.082,1168,3.479,1169,3.479,1170,3.479,1171,2.703,1172,3.479,1173,3.479,1174,3.479,1175,3.479,1176,3.479,1177,2.839,1178,3.479,1179,3.479,1180,5.082,1181,3.479,1182,3.479,1183,7.764,1184,5.082,1185,5.082,1186,5.082,1187,5.082,1188,5.082,1189,3.479,1190,5.082,1191,3.479,1192,5.082,1193,5.082,1194,3.479,1195,3.479,1196,3.479,1197,3.479,1198,3.479,1199,3.479,1200,3.479,1201,3.479,1202,3.479,1203,3.479,1204,7.022,1205,5.082,1206,3.479,1207,3.479,1208,3.479,1209,5.082,1210,3.479,1211,3.206,1212,3.479,1213,4.146,1214,2.485,1215,3.479,1216,3.479,1217,3.479,1218,3.479,1219,3.479,1220,3.479,1221,1.898,1222,3.479,1223,3.479,1224,3.479,1225,3.479,1226,3.479,1227,3.479,1228,3.479]],["title/interfaces/ChannelConfig.html",[0,0.261,1229,3.284]],["body/interfaces/ChannelConfig.html",[0,0.382,2,0.849,3,0.055,4,0.037,5,0.037,6,0.028,11,0.004,12,0.384,13,0.64,16,1.283,17,0.006,18,1.754,19,0.736,23,0.081,28,2.059,46,1.379,47,0.709,92,3.668,95,3.09,99,0.003,100,0.002,125,0.959,141,1.944,145,1.418,150,0.224,179,0.074,205,1.549,216,1.835,219,1.423,235,2.135,247,1.904,252,1.578,271,2.634,281,2.19,332,1.449,499,3.952,504,0.52,562,2.525,564,4.74,579,2.291,581,3.377,600,4.027,616,2.135,621,2.135,623,2.97,625,1.46,629,4.579,630,2.369,632,1.955,633,5.29,634,2.369,635,3.351,638,3.882,640,2.905,646,3.377,657,2.369,660,5.328,760,3.668,763,3.757,794,2.466,843,3.112,963,2.466,1028,1.615,1092,2.613,1229,4.341,1230,2.577,1231,2.369,1232,4.06,1233,3.503,1234,4.027,1235,5.013,1236,4.74,1237,4.341,1238,2.205,1239,2.205,1240,2.466,1241,3.377,1242,3.504,1243,3.377,1244,3.504,1245,2.706,1246,2.706,1247,3.648,1248,4.579,1249,2.706,1250,2.706,1251,3.812,1252,4.536,1253,2.706,1254,3.648,1255,3.648,1256,4.764,1257,4.781,1258,3.504,1259,2.369,1260,2.369,1261,3.703,1262,5.619,1263,5.013,1264,4.003,1265,4.536,1266,2.706,1267,2.706,1268,2.706,1269,4.536,1270,2.205,1271,4.764,1272,4.764,1273,2.577,1274,2.577,1275,4.536,1276,4.797,1277,4.764,1278,2.466,1279,2.577,1280,2.706,1281,2.466,1282,5.264,1283,2.577,1284,6.073,1285,3.812,1286,3.812,1287,4.153,1288,2.466,1289,2.706,1290,2.706,1291,2.706,1292,2.706,1293,2.706,1294,2.706,1295,2.369,1296,4.764,1297,4.764,1298,4.764,1299,5.264,1300,5.619,1301,2.577,1302,2.706,1303,2.577,1304,4.003,1305,2.706,1306,2.706,1307,2.706,1308,2.577,1309,2.706,1310,2.706,1311,2.706,1312,2.577,1313,2.706,1314,2.706,1315,4.003,1316,2.706,1317,2.706,1318,2.577,1319,4.764,1320,2.706,1321,2.974,1322,2.706,1323,4.003,1324,2.466,1325,2.466,1326,2.706,1327,2.577,1328,2.706,1329,4.003,1330,2.577,1331,2.706,1332,2.706,1333,2.466,1334,3.377,1335,2.706,1336,2.706,1337,2.706,1338,2.706,1339,2.706,1340,2.577,1341,2.706,1342,2.283,1343,2.706,1344,2.706,1345,2.706,1346,2.706,1347,2.706,1348,2.577,1349,2.706,1350,2.577,1351,3.812,1352,2.706,1353,2.706,1354,2.706,1355,2.706,1356,2.577,1357,2.706,1358,2.706,1359,2.706,1360,2.706,1361,2.706,1362,2.466,1363,2.706,1364,2.706,1365,4.003,1366,2.706,1367,2.706]],["title/components/CheckboxComponent.html",[101,0.557,329,1.38]],["body/components/CheckboxComponent.html",[3,0.069,4,0.04,5,0.04,6,0.063,8,0.775,11,0.002,12,0.28,15,2.977,16,1.419,17,0.006,19,0.648,20,1.344,23,0.04,24,3.258,46,1.109,47,1.518,48,1.681,49,1.211,52,1.004,53,0.742,55,1.051,59,1.035,65,1.344,69,2.889,73,2.404,82,1.5,87,0.637,89,2.978,99,0.003,100,0.004,101,0.895,102,1.596,103,1.369,104,1.035,105,1.118,106,1.173,107,1.051,114,2.045,117,2.718,118,2.197,120,1.547,122,1.596,127,0.777,128,0.93,129,1.518,131,1.523,136,0.959,144,2.581,146,3.571,148,1.154,150,0.169,151,0.34,159,5.386,169,1.118,173,1.118,177,1.596,179,0.08,180,1.814,183,1.25,193,1.051,197,1.288,199,1.764,205,1.028,219,0.617,224,1.685,232,4.476,233,3.08,236,2.008,248,3.239,259,3.239,268,2.685,269,1.863,275,2.24,281,1.051,284,2.282,286,1.743,290,1.348,291,3.175,292,1.953,293,1.084,295,2.17,308,2.38,309,2.235,311,3.299,317,0.598,318,1.432,319,1.5,320,1.173,321,2.192,322,1.173,323,1.7,324,1.101,325,1.118,326,1.7,327,1.118,328,1.173,329,2.091,330,1.173,331,1.118,332,1.495,333,1.173,334,1.118,335,1.136,336,1.173,337,1.118,338,1.173,339,1.118,340,1.173,341,1.596,342,1.7,343,1.819,344,2.327,345,1.7,346,1.118,347,1.7,348,1.118,349,1.154,350,1.7,351,1.118,352,1.596,353,1.7,354,1.118,355,1.999,356,1.596,357,1.7,358,1.118,359,1.173,360,1.118,361,1.118,362,1.173,363,1.118,364,1.173,365,1.118,366,1.999,367,1.118,368,1.173,369,1.118,370,1.7,371,1.118,372,1.173,373,1.118,374,1.173,375,1.136,376,1.173,377,1.101,378,1.118,379,1.173,380,1.118,381,1.173,382,1.118,383,1.101,384,1.051,385,1.118,386,1.118,387,1.101,388,1.101,389,1.136,390,1.118,391,1.173,392,1.118,393,1.136,394,1.173,395,1.596,396,1.118,397,1.173,398,1.173,466,0.709,480,2.59,486,2.283,489,2.404,502,0.944,503,3.059,504,0.561,506,3.571,511,2.044,528,2.235,529,2.304,532,2.283,607,3.564,631,2.581,843,2.24,1131,3.299,1368,4.007,1369,5.808,1370,5.189,1371,8.291,1372,5.808,1373,8.438,1374,6.83,1375,5.808,1376,5.808,1377,5.623,1378,4.007,1379,5.808,1380,5.808,1381,5.808,1382,5.808,1383,4.007,1384,4.781,1385,6.166,1386,4.476,1387,4.007,1388,3.45,1389,8.1,1390,6.692,1391,4.007,1392,4.233,1393,5.808,1394,7.49,1395,7.078,1396,4.007,1397,3.45,1398,4.476,1399,5.808,1400,4.233,1401,4.307,1402,5.808,1403,5.808,1404,3.299,1405,4.007,1406,5.623,1407,4.007,1408,3.58,1409,4.007,1410,4.007,1411,4.007,1412,4.007,1413,3.299,1414,1.821,1415,4.007,1416,2.921,1417,4.233,1418,3.58,1419,4.007,1420,4.007]],["title/modules/CheckboxModule.html",[402,0.715,1421,3.604]],["body/modules/CheckboxModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,99,0.005,100,0.004,150,0.274,151,0.612,179,0.144,204,2.011,317,1.076,329,2.834,402,1.042,404,2.011,405,2.011,406,2.674,407,2.043,408,2.043,409,2.674,424,2.352,425,1.832,427,2.144,428,2.506,544,2.765,545,2.289,1404,5.932,1421,7.209,1422,6.438,1423,6.438,1424,6.438,1425,7.206,1426,7.649,1427,7.206]],["title/interfaces/Collision.html",[0,0.261,1428,4.417]],["body/interfaces/Collision.html",[0,0.254,2,1.098,3,0.048,4,0.048,5,0.048,6,0.037,11,0.003,12,0.336,13,0.77,16,1.552,17,0.006,19,0.693,23,0.048,28,2.396,29,4.163,53,1.062,95,1.926,99,0.004,100,0.003,128,1.532,145,1.704,150,0.255,205,1.168,216,2.205,219,1.544,247,1.338,252,1.442,253,1.917,291,2.233,504,1.343,535,3.384,561,3.065,585,3.681,597,4.059,612,2.286,619,4.637,620,2.853,623,2.183,627,2.53,654,2.046,677,3.703,699,2.608,726,3.334,728,3.703,729,5.434,731,3.703,732,5.434,733,3.703,739,4.581,750,4.812,759,3.681,760,2.286,762,6.208,763,2.341,764,3.955,765,3.955,766,3.955,775,3.955,776,3.703,801,5.434,802,3.955,810,5.434,814,3.065,1211,3.955,1428,6.737,1429,4.804,1430,4.804,1431,8.793,1432,8.119,1433,4.804,1434,4.292,1435,4.292,1436,4.804,1437,4.804,1438,6.6,1439,8.51,1440,4.804,1441,4.804,1442,4.804,1443,4.804,1444,4.804,1445,4.804,1446,4.804,1447,4.804,1448,4.804,1449,4.804,1450,4.804,1451,4.804,1452,4.804,1453,4.804,1454,4.804,1455,4.804,1456,4.804,1457,4.804,1458,4.804,1459,4.804,1460,7.541,1461,4.804,1462,4.804,1463,6.6,1464,8.119,1465,4.804,1466,8.119,1467,4.804,1468,4.804,1469,6.6,1470,6.208,1471,6.6,1472,6.6,1473,6.6,1474,6.6,1475,6.6,1476,6.6,1477,7.541,1478,4.804,1479,4.804,1480,4.804,1481,4.804,1482,6.6,1483,4.804,1484,4.804,1485,4.804,1486,4.804,1487,4.804,1488,4.804,1489,4.804,1490,4.804,1491,8.119,1492,6.6,1493,3.955,1494,4.804,1495,4.804,1496,4.804,1497,4.804,1498,4.804,1499,4.804,1500,4.804,1501,4.804,1502,4.804,1503,4.804,1504,4.804,1505,4.804,1506,4.804,1507,8.51,1508,6.6,1509,6.6,1510,6.6,1511,4.804,1512,4.804,1513,4.804,1514,4.804,1515,4.804]],["title/components/ColorBarComponent.html",[101,0.557,331,1.38]],["body/components/ColorBarComponent.html",[3,0.069,4,0.04,5,0.04,6,0.068,8,0.778,11,0.003,12,0.479,16,1.267,17,0.006,19,0.558,20,1.349,23,0.04,45,2.249,46,0.77,47,1.521,48,1.684,49,1.219,52,1.01,53,0.745,55,1.058,59,1.041,65,1.349,82,1.77,87,0.641,99,0.003,100,0.004,101,0.898,102,1.603,103,1.375,104,1.041,105,1.126,106,1.18,107,1.058,114,2.049,117,2.722,118,2.198,120,1.554,122,1.603,127,1.328,128,0.936,129,1.675,136,0.965,144,3.047,148,1.162,150,0.169,151,0.342,169,1.126,173,1.126,177,1.603,179,0.08,193,1.058,197,1.294,199,1.041,205,0.714,219,0.899,224,2.332,238,3.754,239,4.28,252,0.881,268,1.585,271,1.239,275,1.555,281,1.97,290,1.354,293,1.091,300,1.617,301,1.718,302,1.617,303,3.875,317,0.602,318,1.439,319,1.507,320,1.18,321,2.199,322,1.18,323,1.708,324,1.108,325,1.126,326,1.708,327,1.126,328,1.18,329,1.126,330,1.18,331,2.097,332,1.89,333,1.18,334,1.126,335,1.143,336,1.18,337,1.126,338,1.18,339,1.126,340,1.18,341,1.603,342,1.708,343,1.826,344,2.333,345,1.708,346,1.126,347,1.708,348,1.126,349,1.162,350,1.708,351,1.126,352,1.603,353,1.708,354,1.126,355,2.007,356,1.603,357,1.708,358,1.126,359,1.18,360,1.126,361,1.126,362,1.18,363,1.126,364,1.18,365,1.126,366,2.007,367,1.126,368,1.18,369,1.126,370,1.708,371,1.126,372,1.18,373,1.126,374,1.18,375,1.143,376,1.18,377,1.108,378,1.126,379,1.18,380,1.126,381,1.18,382,1.126,383,1.108,384,1.058,385,1.126,386,1.126,387,1.108,388,1.108,389,1.143,390,1.126,391,1.18,392,1.126,393,1.143,394,1.18,395,1.603,396,1.126,397,1.18,398,1.18,466,1.329,480,2.756,486,2.294,489,2.413,501,1.833,502,0.95,504,0.565,511,2.053,532,2.294,673,2.467,1388,2.395,1414,2.651,1516,5.311,1517,4.358,1518,6.891,1519,4.033,1520,7.223,1521,3.875,1522,6.855,1523,5.834,1524,5.212,1525,6.855,1526,4.05,1527,6.855,1528,6.855,1529,6.855,1530,3.16,1531,6.855,1532,4.033,1533,3.355,1534,4.033,1535,3.466,1536,4.215,1537,4.033,1538,4.033,1539,5.834,1540,4.033,1541,5.212,1542,3.603,1543,4.033,1544,4.033,1545,4.033,1546,4.033,1547,4.99,1548,3.603,1549,4.033,1550,4.033,1551,4.033,1552,4.803,1553,5.212,1554,5.212,1555,5.834,1556,2.48,1557,2.573,1558,3.603,1559,4.049,1560,3.875,1561,2.124,1562,3.603,1563,2.184,1564,1.919,1565,2.124,1566,3.108]],["title/modules/ColorBarModule.html",[402,0.715,1567,3.431]],["body/modules/ColorBarModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,99,0.005,100,0.004,150,0.265,151,0.612,179,0.144,204,2.011,317,1.076,331,2.834,332,1.355,402,1.042,404,2.011,405,2.011,406,2.674,407,2.043,408,2.043,409,2.674,424,2.352,425,1.832,427,2.144,428,2.506,544,2.765,545,2.289,1516,4.28,1517,3.512,1518,5.554,1567,6.864,1568,6.438,1569,6.438,1570,6.438,1571,7.206,1572,7.206]],["title/components/ColorPickerLauncherComponent.html",[101,0.557,334,1.38]],["body/components/ColorPickerLauncherComponent.html",[3,0.074,4,0.047,5,0.047,6,0.057,8,0.62,11,0.003,12,0.325,13,0.753,17,0.006,19,0.526,23,0.047,47,1.704,48,1.874,52,1.165,53,0.702,55,1.22,59,1.201,65,1.458,89,3.309,99,0.004,100,0.004,101,1.005,102,1.773,103,1.521,104,1.201,105,1.298,106,1.361,107,1.22,114,2.147,117,2.738,118,2.213,120,1.719,122,1.773,128,1.079,129,1.232,134,4.48,136,1.113,148,1.34,150,0.187,151,0.395,169,1.298,173,1.298,177,1.773,179,0.093,193,1.22,194,2.869,199,1.201,224,2.075,233,2.398,271,1.429,272,1.864,281,1.22,290,1.498,293,1.258,296,2.067,298,3.496,300,1.864,301,1.981,302,1.864,317,0.694,318,1.592,319,1.667,320,1.361,321,2.344,322,1.361,323,1.889,324,1.278,325,1.298,326,1.889,327,1.298,328,1.361,329,1.298,330,1.361,331,1.298,332,1.845,333,1.361,334,2.235,335,2.77,336,1.361,337,1.298,338,1.361,339,1.298,340,1.361,341,1.773,342,1.889,343,1.974,344,2.462,345,1.889,346,1.298,347,1.889,348,1.298,349,1.34,350,1.889,351,1.298,352,1.773,353,1.889,354,1.298,355,2.17,356,1.773,357,1.889,358,1.298,359,1.361,360,1.298,361,1.298,362,1.361,363,1.298,364,1.361,365,1.298,366,2.17,367,1.298,368,1.361,369,1.298,370,1.889,371,1.298,372,1.361,373,1.298,374,1.361,375,1.319,376,1.361,377,1.278,378,1.298,379,1.361,380,1.298,381,1.361,382,1.298,383,1.278,384,1.22,385,1.298,386,1.298,387,1.278,388,1.278,389,1.319,390,1.298,391,1.361,392,1.298,393,1.319,394,1.361,395,1.773,396,1.298,397,1.361,398,1.361,480,2.232,486,2.537,489,2.609,503,3.399,504,0.651,511,2.818,532,2.537,623,4.136,840,4.287,1265,4.48,1414,2.933,1516,4.403,1517,3.613,1554,5.766,1561,2.449,1573,6.102,1574,4.65,1575,5.313,1576,4.705,1577,5.766,1578,6.454,1579,6.454,1580,3.071,1581,3.071,1582,6.454,1583,7.413,1584,6.454,1585,5.145,1586,4.015,1587,4.65,1588,4.65,1589,5.766,1590,4.975,1591,3.496,1592,4.975,1593,2.213,1594,2.967,1595,4.65,1596,3.828]],["title/modules/ColorPickerLauncherModule.html",[402,0.715,1597,3.604]],["body/modules/ColorPickerLauncherModule.html",[3,0.07,4,0.07,5,0.07,6,0.053,11,0.004,17,0.006,23,0.07,99,0.005,100,0.004,150,0.272,151,0.595,179,0.14,204,1.956,224,2.077,317,1.046,332,1.583,334,2.824,335,2.559,402,1.013,404,1.956,405,1.956,406,2.642,407,1.987,408,1.987,409,2.642,424,2.313,425,1.782,427,2.505,428,2.465,544,2.719,545,2.226,1516,4.163,1517,3.416,1573,5.769,1597,7.278,1598,6.261,1599,6.261,1600,6.261,1601,6.261,1602,7.09,1603,7.008,1604,7.008,1605,5.769,1606,7.008]],["title/interfaces/ColorScheme.html",[0,0.261,1526,2.41]],["body/interfaces/ColorScheme.html",[0,0.389,2,1.683,3,0.074,4,0.074,5,0.074,6,0.056,11,0.004,12,0.514,13,1.011,16,1.563,17,0.006,18,1.656,19,0.815,23,0.074,53,1.034,99,0.005,100,0.004,1526,4.226,1536,5.851,1547,6.122,1557,6.072,1560,6.122,1607,7.362,1608,7.362]],["title/interfaces/ColorScheme-1.html",[0,0.219,253,0.932,1526,2.016]],["body/interfaces/ColorScheme-1.html",[0,0.334,2,1.03,3,0.063,4,0.045,5,0.045,6,0.034,8,0.601,11,0.003,12,0.509,13,0.736,16,1.37,17,0.006,18,1.419,19,0.799,23,0.096,36,1.606,47,0.86,51,1.738,53,1.058,69,1.738,82,1.631,99,0.004,100,0.003,127,1.821,131,1.912,219,1.448,224,2.339,236,1.558,239,2.807,252,2.032,253,2.094,332,1.371,509,2.771,640,2.003,843,1.738,1516,2.677,1517,2.197,1526,4.66,1536,6.035,1547,6.243,1557,6.209,1560,6.543,1591,2.441,1609,4.026,1610,4.507,1611,5.198,1612,5.198,1613,5.642,1614,5.642,1615,4.026,1616,4.026,1617,5.642,1618,4.026,1619,5.642,1620,4.026,1621,4.026,1622,4.026,1623,8.308,1624,8.308,1625,6.778,1626,8.308,1627,8.308,1628,5.642,1629,5.642,1630,4.026,1631,4.026,1632,4.026,1633,4.026,1634,4.026,1635,4.026,1636,6.512,1637,4.026,1638,4.026,1639,4.026,1640,5.642,1641,4.026,1642,4.026,1643,4.026,1644,6.512,1645,4.026,1646,4.026,1647,4.026,1648,4.026,1649,4.026,1650,5.642,1651,4.026,1652,4.026,1653,6.512,1654,4.026,1655,4.026,1656,4.026,1657,4.026,1658,4.026,1659,4.026,1660,4.026,1661,6.512,1662,4.026,1663,4.026,1664,4.026,1665,4.026,1666,4.026,1667,4.026,1668,4.026,1669,6.512,1670,4.026,1671,4.026,1672,4.026,1673,4.026,1674,4.026,1675,4.026,1676,4.026,1677,4.026,1678,6.512,1679,4.026,1680,4.026,1681,4.026,1682,4.026,1683,4.026,1684,4.026,1685,4.026,1686,4.026,1687,6.512,1688,4.026,1689,4.026,1690,4.026,1691,4.026,1692,4.026,1693,4.026,1694,4.026,1695,4.026,1696,6.512,1697,4.026,1698,4.026,1699,4.026,1700,4.026,1701,4.026,1702,4.026,1703,4.026,1704,2.993,1705,2.048,1706,3.474,1707,4.026]],["title/components/ColorSchemeContentsComponent.html",[101,0.557,337,1.38]],["body/components/ColorSchemeContentsComponent.html",[3,0.056,4,0.029,5,0.029,6,0.07,8,0.599,11,0.002,12,0.314,13,0.849,15,0.97,16,0.883,17,0.006,18,1.606,19,0.677,20,1.848,23,0.029,24,1.954,33,1.766,47,1.308,48,1.544,49,1.905,52,0.715,53,0.828,55,0.749,59,0.737,65,1.093,68,2.027,69,3.267,87,1.089,93,1.242,99,0.003,100,0.003,101,0.772,102,1.234,103,1.059,104,0.737,105,0.797,106,0.836,107,0.749,114,1.795,117,2.662,118,2.152,120,1.197,122,1.234,127,0.871,128,0.663,129,1.737,131,1.652,135,3.699,136,0.683,144,2.801,145,1.627,148,0.822,150,0.183,151,0.242,159,3.416,169,0.797,173,0.797,177,1.234,179,0.057,183,0.615,193,0.749,197,0.997,199,1.16,205,1.499,213,3.699,219,0.856,224,2.477,233,1.669,238,2.245,239,1.997,247,1.126,252,0.624,253,1.251,268,2.694,269,2.089,270,2.433,271,1.707,272,1.144,275,1.101,277,2.227,279,2.981,281,1.797,282,2.505,284,2.289,286,3.312,290,1.043,293,1.704,299,1.327,300,2.747,301,1.216,302,2.747,305,1.426,306,1.297,308,1.696,309,1.592,317,0.426,318,1.108,319,1.16,320,0.836,321,1.844,322,0.836,323,1.315,324,0.784,325,0.797,326,1.315,327,0.797,328,0.836,329,0.797,330,0.836,331,0.797,332,1.736,333,0.836,334,0.797,335,0.809,336,0.836,337,1.759,338,0.836,339,0.797,340,0.836,341,1.234,342,1.315,343,1.48,344,2.006,345,1.315,346,0.797,347,1.315,348,0.797,349,0.822,350,1.315,351,0.797,352,1.234,353,1.315,354,0.797,355,1.626,356,1.234,357,1.315,358,0.797,359,0.836,360,0.797,361,0.797,362,0.836,363,0.797,364,0.836,365,0.797,366,1.626,367,0.797,368,0.836,369,0.797,370,1.315,371,0.797,372,0.836,373,0.797,374,0.836,375,0.809,376,0.836,377,0.784,378,0.797,379,0.836,380,0.797,381,0.836,382,0.797,383,0.784,384,0.749,385,0.797,386,0.797,387,0.784,388,0.784,389,0.809,390,0.797,391,0.836,392,0.797,393,0.809,394,0.836,395,1.234,396,0.797,397,0.836,398,0.836,466,1.47,480,2.179,486,1.766,489,1.955,501,3.913,502,1.615,503,3.319,504,1.239,506,2.763,511,1.581,516,1.391,532,1.766,536,1.755,562,1.575,577,1.707,579,1.875,623,4.247,673,1.476,843,3.042,1090,2.2,1221,1.391,1233,3.913,1392,3.275,1414,2.863,1516,5.448,1517,4.471,1520,2.35,1521,2.984,1524,4.014,1526,3.712,1530,2.433,1535,2.669,1542,4.014,1556,3.416,1559,1.981,1561,1.503,1563,1.546,1564,2.138,1565,2.366,1566,2.2,1585,4.373,1586,3.413,1591,2.433,1594,1.822,1704,3.69,1708,7.551,1709,2.855,1710,3.699,1711,4.493,1712,3.463,1713,5.187,1714,5.556,1715,4.493,1716,5.556,1717,5.556,1718,6.301,1719,6.301,1720,4.964,1721,4.574,1722,5.556,1723,5.556,1724,6.446,1725,2.855,1726,4.493,1727,2.855,1728,3.118,1729,1.766,1730,2.855,1731,3.275,1732,4.014,1733,2.855,1734,3.275,1735,2.855,1736,2.855,1737,6.635,1738,2.855,1739,4.493,1740,3.275,1741,3.118,1742,2.245,1743,1.997,1744,2.855,1745,2.855,1746,2.855,1747,4.857,1748,2.855,1749,2.855,1750,2.855,1751,2.855,1752,5.63,1753,2.855,1754,2.855,1755,2.855,1756,2.855,1757,5.63,1758,2.855,1759,2.855,1760,2.855,1761,2.855,1762,2.855,1763,2.855,1764,4.593,1765,2.855,1766,2.855,1767,6.301,1768,2.855,1769,2.855,1770,2.855,1771,2.855,1772,2.855,1773,2.855,1774,5.556,1775,2.55,1776,2.55,1777,2.2,1778,2.55,1779,2.55,1780,2.855,1781,2.855,1782,2.855,1783,2.855,1784,4.493,1785,2.081,1786,2.855,1787,2.855,1788,2.855,1789,1.755,1790,1.981,1791,3.275,1792,2.081,1793,3.118,1794,1.981,1795,2.2,1796,2.35,1797,1.642,1798,4.493,1799,1.981,1800,2.55,1801,3.699,1802,2.35,1803,2.855,1804,2.55]],["title/modules/ColorSchemeContentsModule.html",[402,0.715,1805,3.604]],["body/modules/ColorSchemeContentsModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,150,0.28,151,0.579,179,0.136,204,1.904,224,2.2,317,1.018,332,1.557,337,2.815,402,0.986,404,1.904,405,1.904,406,2.611,407,1.934,408,1.934,409,2.611,417,6.42,424,2.276,425,1.734,427,2.464,428,2.425,447,5.615,448,4.972,449,5.257,544,2.675,545,2.166,1233,3.099,1516,4.052,1517,3.325,1518,5.257,1567,6.708,1708,5.615,1764,4.972,1805,7.323,1806,6.094,1807,6.094,1808,6.821,1809,6.094,1810,6.821,1811,7.401,1812,6.821,1813,6.094]],["title/components/ColorSchemePopupComponent.html",[101,0.557,339,1.38]],["body/components/ColorSchemePopupComponent.html",[3,0.066,4,0.038,5,0.038,6,0.068,8,0.5,11,0.002,12,0.262,13,0.944,17,0.006,19,0.66,20,1.293,23,0.038,47,1.477,48,1.698,49,1.672,52,0.939,53,0.714,55,0.983,59,0.968,65,1.293,87,1.045,99,0.003,100,0.004,101,0.871,102,1.52,103,1.303,104,0.968,105,1.046,106,1.097,107,0.983,114,1.997,117,2.712,118,2.189,120,1.473,122,1.52,127,1.274,128,0.87,129,1.675,136,0.897,145,1.428,148,1.08,150,0.191,151,0.318,169,1.046,173,1.046,177,1.52,179,0.075,183,0.807,193,0.983,197,1.227,199,0.968,205,1.163,215,2.764,219,0.852,224,2.461,233,2.055,247,0.76,248,3.084,269,3.373,274,1.974,277,2.635,283,1.419,286,2.859,290,1.284,293,1.014,296,2.458,299,1.742,317,0.56,318,1.364,319,2.305,320,1.097,321,2.124,322,1.097,323,1.619,324,1.03,325,1.544,326,1.619,327,1.046,328,1.097,329,1.046,330,1.097,331,1.046,332,1.722,333,1.097,334,1.046,335,1.063,336,1.097,337,1.046,338,1.097,339,2.025,340,1.097,341,1.52,342,1.619,343,1.75,344,2.265,345,1.619,346,1.046,347,1.619,348,1.046,349,1.08,350,1.619,351,1.046,352,1.52,353,1.619,354,1.046,355,1.924,356,1.52,357,1.619,358,1.046,359,1.097,360,1.046,361,1.046,362,1.097,363,1.046,364,1.097,365,1.046,366,1.924,367,1.046,368,1.097,369,1.046,370,1.619,371,1.046,372,1.097,373,1.046,374,1.097,375,1.063,376,1.097,377,1.03,378,1.046,379,1.097,380,1.046,381,1.097,382,1.046,383,1.03,384,0.983,385,1.046,386,1.046,387,1.03,388,1.03,389,1.063,390,1.046,391,1.097,392,1.046,393,1.063,394,1.097,395,1.52,396,1.046,397,1.097,398,1.097,466,0.663,480,2.273,486,2.174,489,2.313,502,0.883,504,0.525,511,2.554,532,2.174,562,1.864,598,5.066,599,1.873,607,3.453,623,3.906,627,1.974,632,2.913,654,1.596,673,2.383,684,1.503,712,2.356,759,2.09,838,3.285,847,5.371,849,4.263,851,2.732,928,2.602,1388,3.285,1392,4.031,1516,5.302,1517,4.351,1521,6.291,1526,3.204,1556,4.041,1585,4.562,1586,3.559,1594,2.392,1605,7.348,1704,4.365,1721,5.41,1728,5.62,1732,4.941,1734,4.031,1797,2.155,1814,3.748,1815,6.572,1816,5.531,1817,7.256,1818,8.776,1819,8.098,1820,4.941,1821,4.941,1822,3.748,1823,4.461,1824,3.529,1825,3.748,1826,4.941,1827,3.748,1828,2.602,1829,4.553,1830,3.349,1831,3.748,1832,4.941,1833,4.941,1834,5.289,1835,4.031,1836,5.531,1837,5.531,1838,3.748,1839,4.941,1840,3.748,1841,6.482,1842,5.531,1843,3.748,1844,3.748,1845,3.673,1846,3.529,1847,3.748,1848,4.263,1849,2.889,1850,3.349,1851,3.349,1852,3.349,1853,3.748,1854,4.941,1855,3.748,1856,3.748,1857,3.748,1858,5.531,1859,3.748,1860,3.748,1861,3.748,1862,3.086]],["title/modules/ColorSchemePopupModule.html",[402,0.715,1602,3.604]],["body/modules/ColorSchemePopupModule.html",[3,0.07,4,0.07,5,0.07,6,0.053,11,0.004,17,0.006,23,0.07,99,0.005,100,0.004,150,0.272,151,0.595,179,0.14,204,1.956,224,2.362,317,1.046,332,1.583,339,2.824,402,1.013,404,1.956,405,1.956,406,2.642,407,1.987,408,1.987,409,2.642,424,2.313,425,1.782,427,2.505,428,2.465,544,2.719,545,2.226,1516,4.163,1517,3.416,1602,7.278,1605,5.769,1708,5.769,1805,7.09,1863,6.261,1864,6.261,1865,7.008,1866,6.261,1867,7.008,1868,7.008,1869,7.008]],["title/interfaces/ColorSchemeSelection.html",[0,0.261,1706,3.811]],["body/interfaces/ColorSchemeSelection.html",[0,0.338,2,1.05,3,0.074,4,0.046,5,0.046,6,0.035,8,0.613,11,0.003,12,0.585,13,0.746,16,1.017,17,0.006,18,1.431,19,0.781,23,0.096,36,1.168,51,2.467,53,1.034,69,1.771,82,1.186,99,0.004,100,0.003,127,1.828,131,1.204,219,1.453,224,2.38,236,2.212,239,3.54,252,2.04,253,2.102,332,1.497,509,3.934,843,2.467,1516,2.728,1517,2.238,1526,4.704,1536,5.896,1547,6.027,1557,6.073,1560,6.479,1591,3.465,1609,4.102,1611,3.78,1612,5.267,1613,5.716,1614,5.716,1615,4.102,1616,4.102,1617,5.716,1618,4.102,1619,5.716,1620,4.102,1621,4.102,1622,4.102,1623,8.34,1624,8.34,1625,6.804,1626,8.34,1627,8.34,1628,5.716,1629,5.716,1630,4.102,1631,4.102,1632,4.102,1633,4.102,1634,4.102,1635,4.102,1636,6.578,1637,4.102,1638,4.102,1639,4.102,1640,5.716,1641,4.102,1642,4.102,1643,4.102,1644,6.578,1645,4.102,1646,4.102,1647,4.102,1648,4.102,1649,4.102,1650,5.716,1651,4.102,1652,4.102,1653,6.578,1654,4.102,1655,4.102,1656,4.102,1657,4.102,1658,4.102,1659,4.102,1660,4.102,1661,6.578,1662,4.102,1663,4.102,1664,4.102,1665,4.102,1666,4.102,1667,4.102,1668,4.102,1669,6.578,1670,4.102,1671,4.102,1672,4.102,1673,4.102,1674,4.102,1675,4.102,1676,4.102,1677,4.102,1678,6.578,1679,4.102,1680,4.102,1681,4.102,1682,4.102,1683,4.102,1684,4.102,1685,4.102,1686,4.102,1687,6.578,1688,4.102,1689,4.102,1690,4.102,1691,4.102,1692,4.102,1693,4.102,1694,4.102,1695,4.102,1696,6.578,1697,4.102,1698,4.102,1699,4.102,1700,4.102,1701,4.102,1702,4.102,1703,4.102,1704,3.05,1705,2.907,1706,4.931,1707,7.115]],["title/components/ContainerComponent.html",[101,0.557,341,1.358]],["body/components/ContainerComponent.html",[3,0.061,4,0.033,5,0.033,6,0.069,8,0.809,11,0.002,12,0.35,13,0.584,17,0.006,18,0.899,19,0.673,20,0.984,23,0.033,46,1.296,47,1.395,48,1.561,49,0.992,51,1.265,52,0.822,53,0.738,55,0.86,59,0.847,65,1.193,82,1.292,87,0.795,99,0.003,100,0.004,101,0.989,102,1.375,103,1.815,104,0.847,105,0.916,106,0.96,107,0.86,109,4.12,114,2.301,117,2.687,118,2.176,120,1.333,122,1.375,125,0.847,127,0.97,128,0.761,129,1.72,131,1.312,136,0.785,145,2.069,148,0.945,150,0.223,151,0.278,153,1.29,156,1.341,169,0.916,173,0.916,177,2.008,179,0.146,180,1.563,181,1.701,183,1.461,192,4.314,193,0.86,197,1.11,199,0.847,205,1.201,216,1.672,219,1.046,224,1.496,247,1.376,252,0.717,253,1.366,273,2.791,274,1.728,275,3.475,277,2.93,283,3.478,290,1.162,293,0.887,314,2.391,317,0.49,318,1.674,319,1.292,320,0.96,321,1.987,322,0.96,323,1.465,324,0.901,325,1.397,326,1.465,327,0.916,328,0.96,329,0.916,330,0.96,331,0.916,332,1.276,333,0.96,334,0.916,335,0.93,336,0.96,337,0.916,338,0.96,339,0.916,340,0.96,341,2.008,342,1.465,343,2.051,344,2.139,345,1.465,346,0.916,347,1.465,348,0.916,349,0.945,350,1.465,351,0.916,352,1.375,353,1.465,354,0.916,355,1.776,356,1.375,357,1.465,358,0.916,359,0.96,360,0.916,361,0.916,362,0.96,363,0.916,364,0.96,365,0.916,366,1.776,367,0.916,368,0.96,369,0.916,370,1.465,371,0.916,372,0.96,373,0.916,374,0.96,375,0.93,376,0.96,377,0.901,378,0.916,379,0.96,380,0.916,381,0.96,382,0.916,383,0.901,384,0.86,385,0.916,386,0.916,387,0.901,388,0.901,389,0.93,390,0.916,391,0.96,392,0.916,393,0.93,394,0.96,395,1.375,396,0.916,397,0.96,398,0.96,400,1.639,408,1.419,466,1.418,488,2.791,502,1.179,504,0.85,510,1.599,516,1.599,517,1.599,562,2.727,577,1.008,599,3.032,607,3.665,684,2.006,826,2.006,827,3.871,832,4.331,860,4.331,891,1.829,953,1.967,981,1.513,1530,2.71,1557,3.193,1580,2.381,1581,2.381,1593,1.561,1705,3.084,1729,2.668,1743,2.224,1870,3.281,1871,2.887,1872,3.857,1873,4.471,1874,3.247,1875,5.42,1876,4.471,1877,2.988,1878,5.42,1879,5.42,1880,5.112,1881,3.473,1882,3.23,1883,6.064,1884,5.42,1885,3.473,1886,4.174,1887,4.174,1888,5.004,1889,2.088,1890,2.988,1891,3.077,1892,3.281,1893,4.471,1894,3.149,1895,3.281,1896,3.857,1897,4.471,1898,3.193,1899,3.324,1900,3.193,1901,3.281,1902,2.878,1903,4.471,1904,4.471,1905,3.281,1906,3.077,1907,3.281,1908,4.471,1909,2.584,1910,3.281,1911,2.791,1912,7.157,1913,4.471,1914,6.064,1915,3.281,1916,3.857,1917,6.064,1918,4.471,1919,3.281,1920,3.648,1921,3.857,1922,4.471,1923,3.281,1924,3.871,1925,3.193,1926,2.931,1927,3.281,1928,3.648,1929,2.931,1930,3.281,1931,2.931,1932,2.931,1933,2.701,1934,2.529,1935,2.179,1936,2.529,1937,1.829,1938,2.931,1939,2.529,1940,3.857,1941,2.931,1942,2.529,1943,2.931,1944,2.931,1945,3.286,1946,3.111,1947,2.931,1948,2.179,1949,2.931,1950,2.017,1951,2.931,1952,2.931,1953,2.931,1954,1.829,1955,2.277,1956,2.529,1957,2.277,1958,2.093,1959,2.931,1960,2.931,1961,3.857,1962,1.829,1963,3.648,1964,2.931,1965,2.931,1966,2.093,1967,2.931,1968,2.931,1969,2.931,1970,4.471,1971,4.471,1972,2.931,1973,2.931,1974,2.931,1975,2.931,1976,2.931,1977,2.931,1978,2.931,1979,2.391,1980,2.701]],["title/components/ContainerComponent-1.html",[101,0.466,253,0.932,341,1.136]],["body/components/ContainerComponent-1.html",[3,0.061,4,0.033,5,0.033,6,0.069,8,0.809,11,0.002,12,0.349,13,0.583,17,0.006,18,0.899,19,0.673,20,0.984,23,0.033,46,1.295,47,1.395,48,1.561,49,0.991,51,1.264,52,0.821,53,0.738,55,0.86,59,0.847,65,1.193,82,1.292,87,0.795,99,0.003,100,0.004,101,0.988,102,1.374,103,1.815,104,0.847,105,0.915,106,0.96,107,0.86,109,4.118,114,2.301,117,2.687,118,2.175,120,1.332,122,1.374,125,0.847,127,0.969,128,0.761,129,1.72,131,1.312,136,0.784,145,2.068,148,0.944,150,0.223,151,0.278,153,1.289,156,1.341,169,0.915,173,0.915,177,2.007,179,0.146,180,1.562,181,1.7,183,1.461,192,4.313,193,0.86,197,1.11,199,0.847,205,1.201,216,1.671,219,1.045,224,1.496,247,1.376,252,0.716,253,1.528,273,2.789,274,1.727,275,3.475,277,2.929,283,3.477,290,1.161,293,0.887,314,2.39,317,0.489,318,1.673,319,1.292,320,0.96,321,1.986,322,0.96,323,1.464,324,0.901,325,1.396,326,1.464,327,0.915,328,0.96,329,0.915,330,0.96,331,0.915,332,1.276,333,0.96,334,0.915,335,0.93,336,0.96,337,0.915,338,0.96,339,0.915,340,0.96,341,2.007,342,1.464,343,2.051,344,2.139,345,1.464,346,0.915,347,1.464,348,0.915,349,0.944,350,1.464,351,0.915,352,1.374,353,1.464,354,0.915,355,1.775,356,1.374,357,1.464,358,0.915,359,0.96,360,0.915,361,0.915,362,0.96,363,0.915,364,0.96,365,0.915,366,1.775,367,0.915,368,0.96,369,0.915,370,1.464,371,0.915,372,0.96,373,0.915,374,0.96,375,0.93,376,0.96,377,0.901,378,0.915,379,0.96,380,0.915,381,0.96,382,0.915,383,0.901,384,0.86,385,0.915,386,0.915,387,0.901,388,0.901,389,0.93,390,0.915,391,0.96,392,0.915,393,0.93,394,0.96,395,1.374,396,0.915,397,0.96,398,0.96,400,1.638,408,1.418,466,1.417,488,2.789,502,1.179,504,0.849,510,1.598,516,1.598,517,1.598,562,2.727,577,1.007,599,3.03,607,3.664,684,2.005,826,2.005,827,3.87,832,4.33,860,4.33,891,1.828,953,1.966,981,1.512,1530,2.709,1557,3.192,1580,2.38,1581,2.38,1593,1.56,1705,3.083,1729,2.667,1743,2.223,1871,2.886,1872,3.855,1873,4.469,1874,3.246,1875,5.418,1876,4.469,1877,2.987,1878,5.418,1879,5.418,1880,5.11,1881,3.472,1882,3.229,1883,6.062,1884,5.418,1885,3.472,1886,4.172,1887,4.172,1889,2.087,1890,2.987,1891,3.076,1893,4.469,1894,3.149,1896,3.855,1897,4.469,1898,3.192,1899,3.322,1900,3.192,1902,2.876,1903,4.469,1904,4.469,1906,3.076,1908,4.469,1909,2.583,1911,2.789,1912,7.155,1913,4.469,1914,6.062,1916,3.855,1917,6.062,1918,4.469,1920,3.646,1921,3.855,1922,4.469,1924,3.87,1925,3.192,1926,2.929,1928,3.646,1929,2.929,1931,2.929,1932,2.929,1933,2.699,1934,2.527,1935,2.178,1936,2.527,1937,1.828,1938,2.929,1939,2.527,1940,3.855,1941,2.929,1942,2.527,1943,2.929,1944,2.929,1945,3.284,1946,3.11,1947,2.929,1948,2.178,1949,2.929,1950,2.016,1951,2.929,1952,2.929,1953,2.929,1954,1.828,1955,2.275,1956,2.527,1957,2.275,1958,2.092,1959,2.929,1960,2.929,1961,3.855,1962,1.828,1963,3.646,1964,2.929,1965,2.929,1966,2.092,1967,2.929,1968,2.929,1969,2.929,1970,4.469,1971,4.469,1972,2.929,1973,2.929,1974,2.929,1975,2.929,1976,2.929,1977,2.929,1978,2.929,1979,2.39,1980,2.699,1981,3.278,1982,5.002,1983,3.278,1984,3.278,1985,3.278,1986,3.278,1987,3.278,1988,3.278,1989,3.278,1990,3.278,1991,3.278,1992,3.278,1993,3.278]],["title/components/ContentComponent.html",[101,0.557,343,1.317]],["body/components/ContentComponent.html",[3,0.08,4,0.054,5,0.054,6,0.054,11,0.003,17,0.006,23,0.054,47,1.689,48,1.843,52,1.348,53,0.775,55,1.411,59,1.39,65,1.572,99,0.004,100,0.005,101,0.9,102,1.958,103,1.679,104,1.39,105,1.502,106,1.575,107,1.411,114,2.242,117,2.754,118,2.226,120,1.898,122,1.958,128,1.249,129,1.027,136,1.287,148,1.55,150,0.156,151,0.457,169,1.502,173,1.502,177,1.958,179,0.107,193,1.411,199,1.39,224,1.97,283,2.697,290,1.654,293,1.456,317,0.803,318,1.758,319,1.84,320,1.575,321,2.489,322,1.575,323,2.086,324,1.479,325,1.502,326,2.086,327,1.502,328,1.575,329,1.502,330,1.575,331,1.502,332,1.599,333,1.575,334,1.502,335,1.526,336,1.575,337,1.502,338,1.575,339,1.502,340,1.575,341,1.958,342,2.086,343,2.421,344,2.59,345,2.086,346,1.502,347,2.086,348,1.502,349,1.55,350,2.086,351,1.502,352,1.958,353,2.086,354,1.502,355,2.339,356,1.958,357,2.086,358,1.502,359,1.575,360,1.502,361,1.502,362,1.575,363,1.502,364,1.575,365,1.502,366,2.339,367,1.502,368,1.575,369,1.502,370,2.086,371,1.502,372,1.575,373,1.502,374,1.575,375,1.526,376,1.575,377,1.479,378,1.502,379,1.575,380,1.502,381,1.575,382,1.502,383,1.479,384,1.411,385,1.502,386,1.502,387,1.479,388,1.479,389,1.526,390,1.502,391,1.575,392,1.502,393,1.526,394,1.575,395,1.958,396,1.502,397,1.575,398,1.575,577,2.455,1580,3.391,1581,3.391,1593,2.561,1994,5.381,1995,5.824,1996,5.866,1997,5.381]],["title/components/ContentComponent-1.html",[101,0.466,253,0.932,343,1.102]],["body/components/ContentComponent-1.html",[3,0.06,4,0.032,5,0.032,6,0.068,8,0.894,11,0.002,12,0.343,13,0.573,17,0.006,18,1.371,19,0.546,20,1.563,23,0.032,46,1.38,47,1.38,48,1.547,49,0.968,52,0.802,53,0.786,55,0.84,59,0.827,65,1.176,82,1.97,87,0.95,99,0.003,100,0.003,101,0.946,102,1.35,103,1.158,104,1.269,105,0.894,106,0.937,107,0.84,114,2.365,117,2.683,118,2.172,120,1.308,125,0.827,127,1.588,128,0.743,129,1.69,131,1.288,136,0.766,141,1.778,145,2.051,148,0.923,150,0.21,151,0.272,153,1.259,169,0.894,173,0.894,177,2.096,179,0.144,180,1.535,181,1.67,183,1.71,192,3.613,193,2.001,197,1.09,199,1.97,205,1.35,216,1.07,219,1.224,224,1.474,247,1.359,248,2.739,252,1.58,253,1.106,271,0.984,273,1.786,277,2.687,281,2.204,282,2.739,283,3.429,284,3.16,290,1.14,293,2.149,306,2.232,310,2.636,312,2.043,317,0.478,318,1.653,319,1.269,320,0.937,321,1.962,322,0.937,323,1.438,324,0.88,325,1.371,326,1.438,327,0.894,328,0.937,329,0.894,330,0.937,331,0.894,332,1.26,333,0.937,334,0.894,335,0.908,336,0.937,337,0.894,338,0.937,339,0.894,340,0.937,341,1.35,342,1.438,343,2.032,344,2.116,345,1.438,346,0.894,347,1.438,348,0.894,349,0.923,350,1.438,351,0.894,352,1.35,353,1.438,354,0.894,355,1.75,356,1.35,357,1.438,358,0.894,359,0.937,360,0.894,361,0.894,362,0.937,363,0.894,364,0.937,365,0.894,366,1.75,367,0.894,368,0.937,369,0.894,370,1.438,371,0.894,372,0.937,373,0.894,374,0.937,375,0.908,376,0.937,377,0.88,378,0.894,379,0.937,380,0.894,381,0.937,382,0.894,383,0.88,384,0.84,385,0.894,386,0.894,387,1.642,388,0.88,389,0.908,390,0.894,391,0.937,392,0.894,393,0.908,394,0.937,395,1.35,396,0.894,397,0.937,398,0.937,400,1.6,425,0.814,466,1.279,488,2.739,501,3.046,502,1.408,504,0.688,510,1.561,516,1.561,517,1.561,562,2.593,577,0.984,607,3.63,673,2.374,826,1.969,868,1.841,870,3.148,953,1.931,981,1.485,1112,2.587,1221,1.561,1287,2.825,1401,1.841,1559,2.223,1564,2.844,1580,2.338,1581,2.338,1593,1.524,1705,3.046,1729,1.931,1743,1.423,1799,2.223,1871,2.844,1874,2.999,1880,5.068,1881,3.41,1882,3.189,1885,3.41,1886,4.121,1887,4.121,1889,2.05,1890,2.741,1891,3.021,1894,2.999,1898,3.135,1899,3.263,1900,3.135,1906,3.021,1921,3.787,1924,3.814,1925,3.135,1935,2.127,1945,4.302,1946,3.912,1950,1.969,1958,2.043,1962,1.786,1966,2.043,1995,4.357,1998,3.202,1999,4.389,2000,6.478,2001,5.988,2002,4.389,2003,4.389,2004,4.389,2005,5.988,2006,5.34,2007,5.34,2008,4.913,2009,2.739,2010,3.202,2011,3.787,2012,3.202,2013,3.202,2014,4.389,2015,3.202,2016,3.202,2017,3.41,2018,3.202,2019,3.581,2020,3.41,2021,3.202,2022,3.202,2023,4.389,2024,5.34,2025,4.389,2026,4.474,2027,3.202,2028,3.202,2029,2.468,2030,2.587,2031,2.468,2032,2.334,2033,2.861,2034,2.861,2035,2.861,2036,2.861,2037,2.861,2038,2.861,2039,2.861,2040,4.389,2041,2.861,2042,2.861,2043,2.861,2044,2.861,2045,2.861,2046,2.861,2047,2.223,2048,4.389,2049,2.861,2050,4.389,2051,1.642,2052,2.861,2053,1.642,2054,1.786,2055,2.861,2056,2.861,2057,2.861,2058,5.34,2059,2.861,2060,2.861,2061,4.389,2062,2.861,2063,2.861,2064,4.389,2065,2.861,2066,2.861,2067,2.861,2068,2.468,2069,2.861,2070,2.636,2071,2.127]],["title/components/ContentComponent-2.html",[101,0.466,343,1.102,1221,2.016]],["body/components/ContentComponent-2.html",[3,0.06,4,0.032,5,0.032,6,0.068,8,0.894,11,0.002,12,0.343,13,0.573,17,0.006,18,1.371,19,0.546,20,1.563,23,0.032,46,1.38,47,1.38,48,1.547,49,0.968,52,0.802,53,0.786,55,0.84,59,0.827,65,1.176,82,1.97,87,0.95,99,0.003,100,0.003,101,0.946,102,1.35,103,1.158,104,1.269,105,0.894,106,0.937,107,0.84,114,2.365,117,2.683,118,2.172,120,1.308,125,0.827,127,1.588,128,0.743,129,1.69,131,1.288,136,0.766,141,1.778,145,2.051,148,0.923,150,0.21,151,0.272,153,1.259,169,0.894,173,0.894,177,2.096,179,0.144,180,1.535,181,1.67,183,1.71,192,3.613,193,2.001,197,1.09,199,1.97,205,1.35,216,1.07,219,1.224,224,1.474,247,1.359,248,2.739,252,1.58,253,0.721,271,0.984,273,1.786,277,2.687,281,2.204,282,2.739,283,3.429,284,3.16,290,1.14,293,2.149,306,2.232,310,2.636,312,2.043,317,0.478,318,1.653,319,1.269,320,0.937,321,1.962,322,0.937,323,1.438,324,0.88,325,1.371,326,1.438,327,0.894,328,0.937,329,0.894,330,0.937,331,0.894,332,1.26,333,0.937,334,0.894,335,0.908,336,0.937,337,0.894,338,0.937,339,0.894,340,0.937,341,1.35,342,1.438,343,2.032,344,2.116,345,1.438,346,0.894,347,1.438,348,0.894,349,0.923,350,1.438,351,0.894,352,1.35,353,1.438,354,0.894,355,1.75,356,1.35,357,1.438,358,0.894,359,0.937,360,0.894,361,0.894,362,0.937,363,0.894,364,0.937,365,0.894,366,1.75,367,0.894,368,0.937,369,0.894,370,1.438,371,0.894,372,0.937,373,0.894,374,0.937,375,0.908,376,0.937,377,0.88,378,0.894,379,0.937,380,0.894,381,0.937,382,0.894,383,0.88,384,0.84,385,0.894,386,0.894,387,1.642,388,0.88,389,0.908,390,0.894,391,0.937,392,0.894,393,0.908,394,0.937,395,1.35,396,0.894,397,0.937,398,0.937,400,1.6,425,0.814,466,1.279,488,2.739,501,3.046,502,1.408,504,0.688,510,1.561,516,1.561,517,1.561,562,2.593,577,0.984,607,3.63,673,2.374,826,1.969,868,1.841,870,3.148,953,1.931,981,1.485,1112,2.587,1221,2.395,1287,2.825,1401,1.841,1559,2.223,1564,2.844,1580,2.338,1581,2.338,1593,1.524,1705,3.046,1729,1.931,1743,1.423,1799,2.223,1871,2.844,1874,2.999,1880,5.068,1881,3.41,1882,3.189,1885,3.41,1886,4.121,1887,4.121,1889,2.05,1890,2.741,1891,3.021,1894,2.999,1898,3.135,1899,3.263,1900,3.135,1906,3.021,1921,3.787,1924,3.814,1925,3.135,1935,2.127,1945,4.302,1946,3.912,1950,1.969,1958,2.043,1962,1.786,1966,2.043,1995,4.357,1999,4.389,2000,6.478,2001,5.988,2002,4.389,2003,4.389,2004,4.389,2005,5.988,2006,5.34,2007,5.34,2009,2.739,2011,3.787,2014,4.389,2017,3.41,2019,3.581,2020,3.41,2023,4.389,2024,5.34,2025,4.389,2026,4.474,2029,2.468,2030,2.587,2031,2.468,2032,2.334,2033,2.861,2034,2.861,2035,2.861,2036,2.861,2037,2.861,2038,2.861,2039,2.861,2040,4.389,2041,2.861,2042,2.861,2043,2.861,2044,2.861,2045,2.861,2046,2.861,2047,2.223,2048,4.389,2049,2.861,2050,4.389,2051,1.642,2052,2.861,2053,1.642,2054,1.786,2055,2.861,2056,2.861,2057,2.861,2058,5.34,2059,2.861,2060,2.861,2061,4.389,2062,2.861,2063,2.861,2064,4.389,2065,2.861,2066,2.861,2067,2.861,2068,2.468,2069,2.861,2070,2.636,2071,2.127,2072,3.202,2073,4.913,2074,3.202,2075,3.202,2076,3.202,2077,3.202,2078,3.202,2079,3.202,2080,3.202,2081,3.202,2082,3.202,2083,3.202]],["title/interfaces/ContentContainerChanged.html",[0,0.261,2084,2.843]],["body/interfaces/ContentContainerChanged.html",[0,0.46,2,1.303,3,0.057,4,0.057,5,0.057,6,0.043,8,0.76,11,0.003,12,0.398,13,0.863,17,0.006,18,1.33,19,0.828,23,0.098,46,1.413,53,0.62,82,1.911,97,3.428,99,0.004,100,0.003,101,1.015,103,1.744,114,2.441,116,3.386,131,1.495,141,1.696,150,0.165,179,0.114,192,3.698,215,2.848,219,0.878,233,3.231,275,2.854,281,1.941,283,3.647,284,2.472,290,1.323,296,2.534,492,2.59,504,1.036,654,2.428,656,2.378,684,2.285,699,3.117,953,3.23,977,3.521,981,2.237,1112,3.002,1743,3.289,1874,3.23,1877,2.331,1889,2.378,1890,3.026,1894,3.891,1909,3.152,1962,3.179,2026,3.794,2051,2.923,2053,2.923,2084,4.725,2085,4.155,2086,4.502,2087,4.55,2088,4.55,2089,5.052,2090,3.505,2091,4.255,2092,3.505,2093,4.239,2094,4.55,2095,3.637,2096,3.637,2097,4.255,2098,4.255,2099,3.794,2100,3.637,2101,3.637,2102,4.55,2103,3.278,2104,3.386]],["title/interfaces/ContentContainerChanged-1.html",[0,0.219,253,0.932,2084,2.378]],["body/interfaces/ContentContainerChanged-1.html",[0,0.46,2,1.303,3,0.057,4,0.057,5,0.057,6,0.043,8,0.76,11,0.003,12,0.398,13,0.863,17,0.006,18,1.33,19,0.828,23,0.098,46,1.413,53,0.62,82,1.911,97,3.428,99,0.004,100,0.003,101,1.015,103,1.744,114,2.441,116,3.386,131,1.495,141,1.696,150,0.165,179,0.114,192,3.698,215,2.848,219,0.878,233,3.231,275,2.854,281,1.941,283,3.647,284,2.472,290,1.323,296,2.534,492,2.59,504,1.036,654,2.428,656,2.378,684,2.285,699,3.117,953,3.23,977,3.521,981,2.237,1112,3.002,1743,3.289,1874,3.23,1877,2.331,1889,2.378,1890,3.026,1894,3.891,1909,3.152,1962,3.179,2026,3.794,2051,2.923,2053,2.923,2084,4.725,2086,4.502,2087,4.55,2088,4.55,2089,5.052,2090,3.505,2091,4.255,2092,3.505,2093,4.239,2094,4.55,2095,3.637,2096,3.637,2097,4.255,2098,4.255,2099,3.794,2100,3.637,2101,3.637,2102,4.55,2103,3.278,2104,3.386,2105,4.155]],["title/modules/ContentModule.html",[402,0.715,2106,3.811]],["body/modules/ContentModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,99,0.005,100,0.004,150,0.273,151,0.602,179,0.142,204,1.98,317,1.059,343,2.699,393,2.012,402,1.026,404,1.98,405,1.98,406,2.656,407,2.012,408,2.012,409,2.656,424,2.331,425,1.804,427,2.523,428,2.483,544,2.739,545,2.254,1934,5.469,2106,7.711,2107,6.34,2108,6.34,2109,6.34,2110,6.34,2111,7.11,2112,7.096,2113,5.469,2114,7.096]],["title/modules/CoreModule.html",[402,0.715,415,3.604]],["body/modules/CoreModule.html",[3,0.069,4,0.069,5,0.069,6,0.052,11,0.004,17,0.006,23,0.069,87,1.085,99,0.005,100,0.004,119,3.036,150,0.276,151,0.58,179,0.136,204,1.906,317,1.02,402,1.291,404,1.906,405,1.906,406,1.999,407,1.937,408,1.937,409,2.613,415,7.353,424,2.278,425,1.737,427,2.466,428,2.427,504,0.957,1948,4.536,2115,6.102,2116,6.102,2117,6.102,2118,7.353,2119,7.047,2120,7.047,2121,6.83,2122,8.29,2123,5.622,2124,5.097,2125,6.83,2126,6.83,2127,6.83,2128,4.536,2129,8.926,2130,6.83,2131,4.978,2132,6.83]],["title/interfaces/DataSource.html",[0,0.261,92,2.352]],["body/interfaces/DataSource.html",[0,0.491,1,2.752,2,1.162,3,0.051,4,0.051,5,0.051,6,0.063,7,3.527,8,1.035,9,4.464,10,5.716,11,0.005,12,0.355,14,3.527,15,3.039,16,1.609,17,0.006,18,1.642,19,0.757,20,1.349,21,3.527,22,2.362,23,0.09,24,3.377,25,3.124,26,3.427,27,3.621,28,2.14,29,2.605,30,3.527,31,3.527,32,3.018,33,1.998,34,3.694,35,3.527,36,1.974,37,4.217,38,3.527,39,3.527,40,3.375,41,3.242,42,3.375,43,3.375,44,3.242,45,4.329,46,1.482,47,1.586,48,1.03,49,1.536,50,3.824,51,1.96,52,1.272,53,0.903,54,3.375,55,1.798,56,2.833,57,3.124,58,3.375,59,1.771,60,4.217,61,4.217,62,4.217,63,4.773,64,5.156,65,1.349,66,3.714,67,4.217,68,1.854,69,1.96,70,2.752,71,2.922,72,2.833,73,3.315,74,3.018,75,4.376,76,3.242,77,3.242,78,4.217,79,4.074,80,2.922,81,3.375,82,1.312,83,2.477,84,3.018,85,3.242,86,3.375,87,1.321,88,3.527,89,2.605,90,3.242,91,4.555,92,3.263,93,3.615,94,4.217,95,3.585,96,4.217,97,2.861,98,4.555,99,0.004,100,0.003,129,1.482,197,1.521,217,3.527,466,1.374,502,1.829,904,5.286,906,5.286,907,5.646,928,4.76,2133,5.081,2134,5.081,2135,5.081]],["title/interfaces/DataSource-1.html",[0,0.219,92,1.968,253,0.932]],["body/interfaces/DataSource-1.html",[0,0.382,2,0.852,3,0.077,4,0.037,5,0.037,6,0.028,11,0.004,12,0.385,13,0.642,16,1.284,17,0.006,18,1.661,19,0.753,23,0.081,28,2.062,46,1.051,47,0.711,92,3.845,95,3.095,99,0.003,100,0.002,125,0.962,141,1.948,145,1.422,150,0.224,179,0.074,205,1.551,216,1.84,219,1.424,235,2.143,247,1.905,252,1.581,271,2.637,281,2.192,332,1.035,499,3.958,504,0.522,562,2.527,564,4.747,579,2.298,581,3.386,600,4.035,616,2.143,621,2.143,623,2.976,625,1.465,629,4.586,630,2.378,632,1.963,633,5.295,634,2.378,635,3.358,638,3.891,640,2.911,646,3.386,657,2.378,660,5.334,760,3.673,763,3.763,794,2.475,843,3.116,963,2.475,1028,1.621,1092,2.62,1229,3.658,1230,2.586,1231,2.378,1232,2.9,1233,2.502,1234,4.035,1235,5.022,1236,4.747,1237,4.35,1238,2.213,1239,2.213,1240,2.475,1241,4.449,1242,4.617,1243,4.449,1244,4.617,1245,2.716,1246,2.716,1247,3.658,1248,4.586,1249,2.716,1250,2.716,1251,3.822,1252,4.546,1253,2.716,1254,3.658,1255,3.658,1256,4.774,1257,4.786,1258,3.514,1259,2.378,1260,2.378,1261,3.71,1262,5.627,1263,5.022,1264,4.014,1265,4.546,1266,2.716,1267,2.716,1268,2.716,1269,4.546,1270,2.213,1271,4.774,1272,4.774,1273,2.586,1274,2.586,1275,4.546,1276,4.806,1277,4.774,1278,2.475,1279,2.586,1280,2.716,1281,2.475,1282,5.274,1283,2.586,1284,6.077,1285,3.822,1286,3.822,1287,4.16,1288,2.475,1289,2.716,1290,2.716,1291,2.716,1292,2.716,1293,2.716,1294,2.716,1295,2.378,1296,4.774,1297,4.774,1298,4.774,1299,5.274,1300,5.627,1301,2.586,1302,2.716,1303,2.586,1304,4.014,1305,2.716,1306,2.716,1307,2.716,1308,2.586,1309,2.716,1310,2.716,1311,2.716,1312,2.586,1313,2.716,1314,2.716,1315,4.014,1316,2.716,1317,2.716,1318,2.586,1319,4.774,1320,2.716,1321,2.982,1322,2.716,1323,4.014,1324,2.475,1325,2.475,1326,2.716,1327,2.586,1328,2.716,1329,4.014,1330,2.586,1331,2.716,1332,2.716,1333,2.475,1334,3.386,1335,2.716,1336,2.716,1337,2.716,1338,2.716,1339,2.716,1340,2.586,1341,2.716,1342,2.291,1343,2.716,1344,2.716,1345,2.716,1346,2.716,1347,2.716,1348,2.586,1349,2.716,1350,2.586,1351,3.822,1352,2.716,1353,2.716,1354,2.716,1355,2.716,1356,2.586,1357,2.716,1358,2.716,1359,2.716,1360,2.716,1361,2.716,1362,2.475,1363,2.716,1364,2.716,1365,4.014,1366,2.716,1367,2.716]],["title/injectables/DataSourceService.html",[160,3.431,2136,1.624]],["body/injectables/DataSourceService.html",[1,2.411,3,0.045,4,0.073,5,0.045,6,0.071,8,1.104,9,3.6,11,0.004,12,0.311,13,0.73,16,1.151,17,0.006,19,0.733,23,0.045,24,2.723,26,2.224,27,2.612,28,1.098,36,2.183,47,1.5,50,2.482,53,0.854,65,1.232,68,1.624,69,2.414,70,4.65,72,5.172,73,3.494,87,1.249,91,4.158,92,3.446,94,3.849,95,3.442,96,3.849,97,2.612,98,4.158,99,0.004,100,0.005,118,0.958,119,1.979,129,1.747,137,5.004,150,0.24,151,0.378,152,4.809,153,1.75,160,4.345,162,6.761,179,0.089,180,1.956,181,2.128,183,1.691,194,2.783,197,1.389,217,4.345,219,0.686,236,2.165,238,4.291,247,1.678,402,0.644,466,1.641,492,3.57,502,1.851,504,0.877,562,2.435,577,2.225,684,1.784,699,1.539,760,3.446,763,2.17,897,5.703,904,4.825,906,4.825,907,5.154,908,5.154,913,6.381,915,4.563,928,5.026,944,5.154,947,3.995,948,5.154,953,2.461,981,1.893,1053,6.056,1342,3.849,1417,3.245,1742,4.499,1823,2.737,1928,4.563,2136,2.056,2137,2.411,2138,9.275,2139,4.452,2140,7.241,2141,7.856,2142,7.856,2143,6.26,2144,4.452,2145,4.452,2146,7.856,2147,4.452,2148,4.452,2149,4.452,2150,5.593,2151,7.856,2152,4.452,2153,6.26,2154,4.452,2155,3.977,2156,3.431,2157,3.431,2158,2.56,2159,6.26,2160,4.452,2161,4.452,2162,4.452,2163,7.856,2164,4.452,2165,7.241,2166,4.452,2167,6.26,2168,3.431,2169,4.452,2170,6.26,2171,3.977,2172,3.977,2173,4.452,2174,4.452,2175,3.977,2176,7.241,2177,4.452,2178,7.856,2179,4.452,2180,4.452,2181,4.452,2182,4.452]],["title/injectables/DataState.html",[167,3.431,2136,1.624]],["body/injectables/DataState.html",[0,0.169,1,1.729,3,0.032,4,0.072,5,0.032,6,0.071,8,1.016,9,3.848,10,5.916,11,0.005,12,0.342,13,0.572,17,0.006,18,0.574,19,0.621,20,1.762,23,0.067,24,2.911,26,1.595,36,2.447,46,0.609,53,0.828,60,1.963,65,0.964,66,2.654,67,1.963,71,4.382,72,5.179,73,3.514,74,1.896,76,2.037,77,2.037,78,1.963,79,1.896,87,1.211,99,0.003,100,0.002,118,0.687,125,2.563,127,1.714,129,1.773,131,1.998,133,3.255,137,4.305,141,2.549,142,4.035,145,0.824,146,1.963,150,0.244,151,0.271,152,1.637,153,1.255,154,1.729,155,2.327,156,1.305,160,4.644,162,2.327,163,2.461,166,3.778,167,3.402,179,0.064,180,1.531,181,1.666,183,1.807,197,1.087,205,1.184,216,2.651,219,0.755,233,1.821,237,1.78,247,1.545,249,3.142,253,0.719,309,1.78,352,0.877,466,1.517,492,2.711,501,2.227,502,1.701,504,1.147,509,1.963,562,2.651,577,0.981,579,2.489,588,4.592,599,3.344,600,4.566,621,1.836,625,1.927,655,2.733,843,3.582,861,2.389,947,4.27,974,5.158,981,2.023,1092,1.519,1109,1.836,1287,3.43,1591,2.654,1824,2.037,1889,1.332,1936,4.598,1937,1.78,1945,1.729,2103,1.836,2136,1.61,2137,1.729,2183,2.628,2184,4.379,2185,3.543,2186,5.329,2187,5.329,2188,5.329,2189,6.912,2190,6.45,2191,7.089,2192,6.45,2193,5.329,2194,5.329,2195,6.45,2196,6.45,2197,4.379,2198,2.628,2199,3.192,2200,4.379,2201,3.192,2202,7.089,2203,4.379,2204,3.192,2205,4.379,2206,3.192,2207,4.379,2208,3.543,2209,3.192,2210,6.808,2211,3.192,2212,4.862,2213,3.192,2214,3.192,2215,6.808,2216,4.379,2217,4.379,2218,3.192,2219,6.116,2220,4.379,2221,3.192,2222,6.74,2223,4.379,2224,3.192,2225,4.379,2226,4.379,2227,3.192,2228,4.379,2229,3.192,2230,3.192,2231,4.379,2232,5.329,2233,4.379,2234,4.379,2235,4.379,2236,5.329,2237,4.379,2238,5.329,2239,6.45,2240,5.329,2241,3.192,2242,4.379,2243,4.379,2244,3.192,2245,4.379,2246,3.192,2247,2.733,2248,1.78,2249,1.78,2250,1.556,2251,4.379,2252,4.379,2253,2.852,2254,2.852,2255,4.379,2256,2.628,2257,2.461,2258,2.852,2259,4.379,2260,2.852,2261,2.852,2262,2.852,2263,2.461,2264,2.461,2265,2.216,2266,2.327,2267,4.911,2268,5.554,2269,2.628,2270,2.628,2271,2.852,2272,1.729,2273,2.037,2274,2.852,2275,2.852,2276,2.852,2277,4.379,2278,2.852,2279,2.852,2280,2.852,2281,2.852,2282,2.628,2283,1.78,2284,2.852,2285,2.461,2286,2.852,2287,2.852,2288,2.852,2289,2.852,2290,2.628,2291,2.037,2292,2.037,2293,2.852,2294,2.852,2295,2.852,2296,2.852,2297,4.379,2298,2.852,2299,2.852,2300,2.852,2301,2.852,2302,2.852,2303,2.852,2304,2.852,2305,2.852,2306,2.852,2307,2.852,2308,2.852,2309,2.852,2310,2.852]],["title/interfaces/DataStateModel.html",[0,0.261,2290,4.07]],["body/interfaces/DataStateModel.html",[0,0.216,1,2.216,2,0.935,3,0.041,4,0.076,5,0.041,6,0.031,8,0.546,9,3.39,10,5.827,11,0.004,12,0.412,13,0.687,17,0.006,18,0.735,19,0.333,20,1.16,23,0.076,24,2.564,26,2.044,36,2.426,46,0.781,53,0.445,60,2.515,65,0.805,66,2.216,67,2.515,71,3.974,72,5.079,73,3.52,74,2.43,76,2.61,77,2.61,78,2.515,79,2.43,87,0.65,99,0.003,100,0.002,118,0.881,125,2.428,127,0.793,131,1.812,133,2.717,137,4.11,141,2.669,142,3.368,145,1.056,146,2.515,150,0.26,151,0.347,152,2.098,153,1.608,154,2.216,155,2.982,156,1.673,160,4.091,162,2.982,163,3.153,166,4.544,167,2.839,179,0.082,180,1.278,181,1.39,183,1.931,205,1.223,216,2.875,219,0.908,233,1.52,237,3.287,247,1.693,249,3.64,253,0.921,309,2.281,352,1.124,466,1.478,492,3.14,501,1.859,504,1.123,509,2.515,562,2.367,579,1.707,588,4.639,600,4.47,621,2.352,625,1.608,655,3.287,843,3.557,861,2.873,947,3.762,974,4.544,981,1.782,1092,1.947,1109,2.352,1287,3.974,1591,2.216,1824,2.61,1889,1.707,1936,5.327,1937,2.281,1945,2.216,2103,2.352,2136,1.936,2183,3.368,2184,3.655,2185,3.502,2186,3.655,2187,3.655,2188,3.655,2189,5.689,2190,5.267,2191,5.267,2192,5.267,2193,3.655,2194,3.655,2195,3.655,2196,5.267,2200,3.655,2202,6.756,2203,3.655,2205,3.655,2207,3.655,2208,3.502,2210,6.174,2212,4.41,2215,6.174,2216,3.655,2217,3.655,2219,5.829,2220,3.655,2222,6.225,2223,3.655,2225,3.655,2226,3.655,2228,3.655,2231,3.655,2232,5.267,2233,3.655,2234,3.655,2235,3.655,2236,5.267,2237,3.655,2238,5.267,2239,6.756,2240,5.267,2242,3.655,2243,3.655,2245,3.655,2247,3.287,2248,2.281,2249,2.281,2250,1.994,2251,5.267,2252,5.267,2253,3.655,2254,3.655,2255,5.267,2256,3.368,2257,3.153,2258,3.655,2259,5.267,2260,3.655,2261,3.655,2262,3.655,2263,3.153,2264,3.153,2265,2.839,2266,2.982,2267,5.689,2268,6.086,2269,3.368,2270,3.368,2271,3.655,2272,2.216,2273,2.61,2274,3.655,2275,3.655,2276,3.655,2277,5.267,2278,3.655,2279,3.655,2280,3.655,2281,3.655,2282,3.368,2283,2.281,2284,3.655,2285,3.153,2286,3.655,2287,3.655,2288,3.655,2289,3.655,2290,4.853,2291,2.61,2292,2.61,2293,3.655,2294,3.655,2295,3.655,2296,3.655,2297,5.267,2298,3.655,2299,3.655,2300,3.655,2301,3.655,2302,3.655,2303,3.655,2304,3.655,2305,3.655,2306,3.655,2307,3.655,2308,3.655,2309,3.655,2310,3.655]],["title/interfaces/DefaultIconDefinition.html",[0,0.261,2311,3.811]],["body/interfaces/DefaultIconDefinition.html",[0,0.337,2,1.458,3,0.064,4,0.064,5,0.064,6,0.049,8,0.851,11,0.004,12,0.445,13,0.927,16,1.589,17,0.006,19,0.738,23,0.08,33,3.972,34,4.37,51,3.065,53,1.06,68,3.469,73,2.245,87,1.549,99,0.005,100,0.004,127,1.236,182,4.648,219,0.982,236,2.749,259,3.556,288,4.887,318,2.379,931,4.069,1741,4.426,1824,4.069,2311,6.674,2312,5.25,2313,5.698,2314,5.698,2315,4.426,2316,7.101,2317,5.698,2318,5.698,2319,4.236,2320,5.698,2321,5.698,2322,5.698,2323,6.694,2324,4.887,2325,6.02,2326,6.02,2327,5.516,2328,5.698,2329,4.426,2330,4.648,2331,6.377,2332,5.698,2333,6.377,2334,5.698]],["title/interfaces/DefaultIconDefinition-1.html",[0,0.219,253,0.932,2311,3.188]],["body/interfaces/DefaultIconDefinition-1.html",[0,0.295,2,1.278,3,0.056,4,0.056,5,0.056,6,0.043,8,0.745,11,0.003,12,0.39,13,0.852,16,1.56,17,0.006,19,0.703,23,0.073,33,3.914,34,4.497,51,2.817,53,1.098,68,3.351,87,1.509,99,0.004,100,0.003,127,1.083,182,7.228,219,0.861,236,2.526,259,3.116,288,4.492,318,2.308,931,3.566,1171,3.878,1177,4.073,1741,3.878,1824,3.566,2311,6.273,2313,4.992,2314,4.992,2315,3.878,2316,6.526,2317,4.992,2318,4.992,2319,3.711,2320,4.992,2321,4.992,2322,4.992,2323,7.008,2324,4.492,2325,5.733,2326,5.733,2327,5.07,2328,4.992,2329,3.878,2330,4.073,2332,4.992,2334,4.992,2335,4.6,2336,5.588,2337,4.6,2338,9.871,2339,5.588,2340,4.6,2341,5.588,2342,4.6,2343,5.588,2344,4.6,2345,5.588,2346,5.588,2347,4.6,2348,5.588,2349,4.6,2350,5.588,2351,5.588,2352,5.588,2353,5.588,2354,4.6,2355,5.588,2356,5.588,2357,5.588,2358,5.588,2359,5.588,2360,4.6,2361,5.588,2362,4.6,2363,5.588]],["title/interfaces/DrawerContainersChanged.html",[0,0.261,2091,2.843]],["body/interfaces/DrawerContainersChanged.html",[0,0.459,2,1.297,3,0.057,4,0.057,5,0.057,6,0.043,8,0.757,11,0.003,12,0.396,13,0.86,17,0.006,18,1.326,19,0.828,23,0.098,46,1.408,53,0.617,82,1.905,97,3.421,99,0.004,100,0.003,101,0.978,103,1.932,114,2.46,116,3.371,131,1.488,141,1.688,150,0.165,179,0.113,192,4.497,215,2.836,219,0.874,233,3.226,275,2.846,281,1.935,283,3.286,284,2.465,290,1.317,296,2.522,492,3.353,504,0.795,654,2.417,656,2.368,684,2.958,699,3.248,953,2.901,977,3.511,981,2.231,1112,3.886,1743,3.28,1874,3.223,1877,2.32,1889,2.368,1890,3.017,1894,3.889,1909,3.143,1962,3.164,2026,3.783,2051,2.91,2053,2.91,2084,4.243,2085,4.136,2086,4.497,2087,4.537,2088,4.537,2089,5.042,2090,3.489,2091,4.715,2092,4.537,2093,4.232,2094,4.537,2095,3.621,2096,3.621,2097,4.243,2098,4.243,2099,3.783,2100,3.621,2101,3.621,2102,4.537,2103,3.263,2104,3.371]],["title/interfaces/DrawerContainersChanged-1.html",[0,0.219,253,0.932,2091,2.378]],["body/interfaces/DrawerContainersChanged-1.html",[0,0.459,2,1.297,3,0.057,4,0.057,5,0.057,6,0.043,8,0.757,11,0.003,12,0.396,13,0.86,17,0.006,18,1.326,19,0.828,23,0.098,46,1.408,53,0.617,82,1.905,97,3.421,99,0.004,100,0.003,101,0.978,103,1.932,114,2.46,116,3.371,131,1.488,141,1.688,150,0.165,179,0.113,192,4.497,215,2.836,219,0.874,233,3.226,275,2.846,281,1.935,283,3.286,284,2.465,290,1.317,296,2.522,492,3.353,504,0.795,654,2.417,656,2.368,684,2.958,699,3.248,953,2.901,977,3.511,981,2.231,1112,3.886,1743,3.28,1874,3.223,1877,2.32,1889,2.368,1890,3.017,1894,3.889,1909,3.143,1962,3.164,2026,3.783,2051,2.91,2053,2.91,2084,4.243,2086,4.497,2087,4.537,2088,4.537,2089,5.042,2090,3.489,2091,4.715,2092,4.537,2093,4.232,2094,4.537,2095,3.621,2096,3.621,2097,4.243,2098,4.243,2099,3.783,2100,3.621,2101,3.621,2102,4.537,2103,3.263,2104,3.371,2105,4.136]],["title/interfaces/DrawerInitialized.html",[0,0.261,2097,2.843]],["body/interfaces/DrawerInitialized.html",[0,0.462,2,1.319,3,0.058,4,0.058,5,0.058,6,0.044,8,0.77,11,0.003,12,0.403,13,0.87,17,0.006,18,1.34,19,0.828,23,0.098,46,1.424,53,0.627,82,1.926,97,3.449,99,0.004,100,0.003,101,0.931,103,1.758,114,2.456,116,3.428,131,1.513,141,1.717,150,0.167,179,0.115,192,3.728,215,2.884,219,0.889,233,3.071,275,2.877,281,1.956,283,3.307,284,2.492,290,1.34,296,2.565,492,2.623,504,0.808,654,2.458,656,2.408,684,2.313,699,2.858,953,2.933,977,3.55,981,2.255,1112,3.039,1743,3.316,1874,3.25,1877,2.36,1889,2.408,1890,3.05,1894,3.897,1909,3.177,1962,3.218,2026,3.825,2051,2.959,2053,2.959,2084,4.29,2085,4.207,2086,4.517,2087,4.587,2088,4.587,2089,5.083,2090,3.549,2091,4.29,2092,3.549,2093,4.259,2094,4.587,2095,4.76,2096,4.76,2097,4.753,2098,4.29,2099,3.825,2100,3.683,2101,3.683,2102,4.587,2103,3.319,2104,3.428]],["title/interfaces/DrawerInitialized-1.html",[0,0.219,253,0.932,2097,2.378]],["body/interfaces/DrawerInitialized-1.html",[0,0.462,2,1.319,3,0.058,4,0.058,5,0.058,6,0.044,8,0.77,11,0.003,12,0.403,13,0.87,17,0.006,18,1.34,19,0.828,23,0.098,46,1.424,53,0.627,82,1.926,97,3.449,99,0.004,100,0.003,101,0.931,103,1.758,114,2.456,116,3.428,131,1.513,141,1.717,150,0.167,179,0.115,192,3.728,215,2.884,219,0.889,233,3.071,275,2.877,281,1.956,283,3.307,284,2.492,290,1.34,296,2.565,492,2.623,504,0.808,654,2.458,656,2.408,684,2.313,699,2.858,953,2.933,977,3.55,981,2.255,1112,3.039,1743,3.316,1874,3.25,1877,2.36,1889,2.408,1890,3.05,1894,3.897,1909,3.177,1962,3.218,2026,3.825,2051,2.959,2053,2.959,2084,4.29,2086,4.517,2087,4.587,2088,4.587,2089,5.083,2090,3.549,2091,4.29,2092,3.549,2093,4.259,2094,4.587,2095,4.76,2096,4.76,2097,4.753,2098,4.29,2099,3.825,2100,3.683,2101,3.683,2102,4.587,2103,3.319,2104,3.428,2105,4.207]],["title/modules/DrawerModule.html",[402,0.715,416,3.431]],["body/modules/DrawerModule.html",[3,0.065,4,0.065,5,0.065,6,0.049,11,0.004,17,0.006,23,0.065,99,0.005,100,0.004,136,1.551,150,0.286,151,0.55,177,2.753,179,0.129,204,1.809,290,1.505,317,0.968,341,2.753,343,2.578,395,2.753,402,0.937,404,1.809,405,1.809,406,2.553,407,1.838,408,2.277,409,2.553,416,7.025,424,2.206,425,1.648,427,1.928,428,2.35,429,4.117,430,3.013,431,7.173,432,5.333,433,7.173,434,5.792,458,5.337,459,5.337,1934,4.997,1935,4.306,2090,3.986,2364,5.792,2365,5.792,2366,5.792,2367,6.483,2368,4.937,2369,4.937,2370,6.483,2371,5.337,2372,5.792]],["title/interfaces/DrawerToggled.html",[0,0.261,2098,2.843]],["body/interfaces/DrawerToggled.html",[0,0.453,2,1.257,3,0.055,4,0.055,5,0.055,6,0.042,8,0.733,11,0.003,12,0.384,13,0.843,17,0.006,18,1.643,19,0.83,23,0.098,46,1.746,53,0.598,82,2.215,97,3.369,99,0.004,100,0.003,101,0.909,103,1.703,114,2.474,116,3.266,131,1.895,141,2.15,150,0.16,179,0.11,192,3.611,215,3.611,219,0.847,233,3.186,275,2.787,281,2.398,283,3.246,284,3.055,290,1.677,296,3.212,492,2.498,504,0.77,654,2.342,656,2.294,684,2.204,699,2.792,953,2.841,977,3.439,981,2.185,1112,2.895,1743,3.212,1874,3.174,1877,2.248,1889,3.015,1890,2.955,1894,3.872,1909,3.078,1962,3.066,2026,4.689,2051,2.819,2053,2.819,2084,4.156,2085,4.007,2086,4.342,2087,4.444,2088,4.444,2089,4.965,2090,3.38,2091,4.156,2092,3.38,2093,4.18,2094,4.444,2095,3.508,2096,3.508,2097,4.156,2098,4.643,2099,4.689,2100,4.612,2101,4.612,2102,4.444,2103,3.161,2104,3.266]],["title/interfaces/DrawerToggled-1.html",[0,0.219,253,0.932,2098,2.378]],["body/interfaces/DrawerToggled-1.html",[0,0.453,2,1.257,3,0.055,4,0.055,5,0.055,6,0.042,8,0.733,11,0.003,12,0.384,13,0.843,17,0.006,18,1.643,19,0.83,23,0.098,46,1.746,53,0.598,82,2.215,97,3.369,99,0.004,100,0.003,101,0.909,103,1.703,114,2.474,116,3.266,131,1.895,141,2.15,150,0.16,179,0.11,192,3.611,215,3.611,219,0.847,233,3.186,275,2.787,281,2.398,283,3.246,284,3.055,290,1.677,296,3.212,492,2.498,504,0.77,654,2.342,656,2.294,684,2.204,699,2.792,953,2.841,977,3.439,981,2.185,1112,2.895,1743,3.212,1874,3.174,1877,2.248,1889,3.015,1890,2.955,1894,3.872,1909,3.078,1962,3.066,2026,4.689,2051,2.819,2053,2.819,2084,4.156,2086,4.342,2087,4.444,2088,4.444,2089,4.965,2090,3.38,2091,4.156,2092,3.38,2093,4.18,2094,4.444,2095,3.508,2096,3.508,2097,4.156,2098,4.643,2099,4.689,2100,4.612,2101,4.612,2102,4.444,2103,3.161,2104,3.266,2105,4.007]],["title/components/DropdownComponent.html",[101,0.557,346,1.38]],["body/components/DropdownComponent.html",[3,0.065,4,0.037,5,0.037,6,0.065,8,0.726,11,0.002,12,0.256,13,0.635,15,2.606,16,1.411,17,0.006,19,0.654,20,1.68,22,3.866,23,0.037,47,1.464,48,1.629,52,0.918,53,0.705,55,0.962,59,0.947,65,1.276,69,2.503,87,0.583,99,0.003,100,0.004,101,0.937,102,1.495,103,1.282,104,0.947,105,1.024,106,1.074,107,0.962,114,1.981,117,2.705,118,2.188,120,1.449,122,1.495,125,0.947,127,0.711,128,0.851,129,1.588,131,1.427,136,0.877,144,2.419,147,2.436,148,1.057,150,0.106,151,0.311,159,4.715,169,1.024,173,1.024,177,1.495,179,0.073,183,0.79,193,2.011,197,1.207,199,1.676,205,1.27,224,1.6,228,2.545,239,3.797,252,1.569,253,0.826,261,2.545,268,1.442,271,2.206,272,2.601,277,1.47,279,1.595,281,2.24,282,3.618,286,3.123,289,3.738,290,1.263,291,3.971,292,3.163,293,1.755,295,2.947,297,3.417,298,1.986,299,3.016,300,3.334,308,4.555,309,4.276,317,0.547,318,1.342,319,1.405,320,1.074,321,2.101,322,1.074,323,1.593,324,1.008,325,1.024,326,1.593,327,1.024,328,1.074,329,1.024,330,1.074,331,1.024,332,1.442,333,1.074,334,1.024,335,1.04,336,1.074,337,1.024,338,1.074,339,1.024,340,1.074,341,1.495,342,1.593,343,1.728,344,2.245,345,1.593,346,2.004,347,1.593,348,1.024,349,1.057,350,1.593,351,1.024,352,1.495,353,1.593,354,1.024,355,1.899,356,1.495,357,1.593,358,1.024,359,1.074,360,1.024,361,1.024,362,1.074,363,1.024,364,1.074,365,1.024,366,1.899,367,1.024,368,1.074,369,1.024,370,1.593,371,1.024,372,1.074,373,1.024,374,1.074,375,1.04,376,1.074,377,1.008,378,1.024,379,1.074,380,1.024,381,1.074,382,1.024,383,1.008,384,0.962,385,1.024,386,1.024,387,1.008,388,1.008,389,1.04,390,1.024,391,1.074,392,1.024,393,1.04,394,1.074,395,1.495,396,1.024,397,1.074,398,1.074,466,0.963,480,2.483,486,2.139,489,2.284,501,2.473,502,0.864,504,0.909,511,1.915,528,2.045,529,2.109,530,2.947,532,2.139,535,1.88,560,4.31,843,2.099,951,5.307,1019,3.967,1214,4.893,1377,5.342,1395,6.584,1406,3.019,1533,3.129,1535,3.233,1561,1.932,1563,2.947,1564,2.59,1565,2.866,1710,7.032,1713,4.48,1728,3.777,1743,2.419,1789,2.255,1790,2.545,1791,3.967,1792,2.673,1793,4.504,1794,2.545,1797,2.109,1841,4.862,2011,5.534,2030,1.932,2373,3.667,2374,7.416,2375,5.797,2376,4.862,2377,6.489,2378,5.442,2379,7.179,2380,3.667,2381,4.195,2382,3.667,2383,5.442,2384,3.667,2385,3.667,2386,5.442,2387,3.667,2388,3.667,2389,6.414,2390,5.91,2391,3.667,2392,5.442,2393,3.667,2394,4.862,2395,5.442,2396,3.667,2397,4.862,2398,6.313,2399,2.827,2400,3.019,2401,4.862,2402,3.277,2403,3.019,2404,3.019,2405,2.673,2406,5.534,2407,2.827,2408,4.862,2409,3.019,2410,3.667,2411,3.019,2412,3.277,2413,3.667,2414,3.019,2415,3.667,2416,3.967,2417,3.667,2418,3.277,2419,3.019,2420,3.277,2421,3.277,2422,3.277]],["title/modules/DropdownModule.html",[402,0.715,2423,3.604]],["body/modules/DropdownModule.html",[3,0.072,4,0.072,5,0.072,6,0.054,11,0.004,17,0.006,22,3.317,23,0.072,99,0.005,100,0.004,150,0.279,151,0.606,179,0.142,204,1.992,317,1.065,346,2.83,402,1.032,404,1.992,405,1.992,406,2.663,407,2.023,408,2.023,409,2.663,424,2.339,425,1.814,427,2.123,428,2.491,544,2.749,545,2.266,2423,7.195,2424,6.375,2425,6.375,2426,6.375,2427,7.135,2428,6.56,2429,5.5,2430,7.007,2431,5.874,2432,6.375]],["title/components/DualSliderComponent.html",[101,0.557,348,1.38]],["body/components/DualSliderComponent.html",[3,0.046,4,0.021,5,0.021,6,0.07,8,0.788,11,0.001,12,0.149,13,0.62,15,2.403,16,0.938,17,0.006,18,1.271,19,0.681,20,1.685,22,2.745,23,0.021,47,1.127,48,1.292,49,1.926,51,1.372,52,0.536,53,0.734,55,0.561,59,0.552,63,2.187,65,0.898,69,3.064,71,2.045,75,4.683,82,1.373,87,0.845,93,1.547,99,0.002,100,0.003,101,0.852,102,0.977,103,0.838,104,1.179,105,0.993,106,0.626,107,0.561,114,1.571,117,2.6,118,2.108,120,0.947,122,0.977,127,0.885,128,0.496,129,1.73,131,1.671,134,3.168,136,0.512,144,2.364,145,1.525,147,5.378,148,0.616,150,0.154,151,0.182,159,4.777,169,0.597,173,0.597,177,0.977,179,0.043,180,1.661,181,1.209,183,1.271,193,1.395,197,0.789,199,1.373,202,7.024,205,1.498,219,1.089,223,2.592,224,1.126,228,1.485,233,2.367,235,1.23,239,1.581,247,1.197,249,1.873,252,1.604,253,1.028,268,2.655,269,1.653,270,1.926,271,1.958,272,1.426,274,1.126,277,1.426,279,2.314,281,1.925,282,3.292,283,0.81,284,1.972,286,1.986,289,2.878,290,0.825,291,2.745,292,2.878,293,1.913,295,1.158,296,2.832,297,1.873,298,1.158,299,2.472,300,2.554,302,3.184,305,2.281,306,1.616,307,1.27,308,3.159,309,2.966,317,0.319,318,0.877,319,2.051,320,0.626,321,1.557,322,0.626,323,1.041,324,0.588,325,0.597,326,1.041,327,0.597,328,0.626,329,0.597,330,0.626,331,0.597,332,1.11,333,0.626,334,0.597,335,0.606,336,0.626,337,0.597,338,0.626,339,0.597,340,0.626,341,0.977,342,1.041,343,1.216,344,1.728,345,1.041,346,0.597,347,1.041,348,1.485,349,2.181,350,1.041,351,0.597,352,0.977,353,1.041,354,0.597,355,1.336,356,0.977,357,1.041,358,0.597,359,0.626,360,0.597,361,0.597,362,0.626,363,0.597,364,0.626,365,0.597,366,1.336,367,0.597,368,0.626,369,0.597,370,1.041,371,0.597,372,0.626,373,0.597,374,0.626,375,0.606,376,0.626,377,0.588,378,0.597,379,0.626,380,0.597,381,0.626,382,0.597,383,0.588,384,0.561,385,0.597,386,0.597,387,0.588,388,0.588,389,0.606,390,0.597,391,0.626,392,0.597,393,0.606,394,0.626,395,0.977,396,0.597,397,0.626,398,0.626,448,6.642,466,1.299,480,2.203,486,1.398,489,1.607,492,2.417,499,2.341,501,3.335,502,1.253,504,0.639,506,2.187,511,1.252,528,1.983,529,2.045,530,1.926,532,1.398,537,1.043,560,2.362,562,2.146,577,1.093,599,1.777,607,3.853,627,1.126,632,1.873,654,1.944,673,2.411,684,1.426,712,2.265,742,2.592,759,2.545,826,1.426,838,2.113,843,2.051,847,4.908,849,2.741,851,1.559,951,3.767,953,2.78,981,1.075,1003,1.761,1019,2.592,1214,3.767,1221,1.733,1233,4.455,1377,3.758,1386,1.649,1406,1.761,1408,1.911,1414,2.417,1418,1.911,1520,1.761,1530,1.926,1535,3.785,1563,1.926,1564,1.692,1565,1.873,1591,2.881,1705,1.616,1713,2.928,1729,1.398,1743,0.951,1752,4.752,1757,4.078,1764,3.877,1775,3.177,1776,4.078,1777,1.649,1778,1.911,1779,1.911,1789,1.315,1790,1.485,1791,2.592,1792,1.559,1793,3.692,1794,1.485,1797,1.23,1820,3.177,1821,3.177,1823,1.315,1828,1.485,1829,4.379,1830,1.911,1832,3.177,1833,3.177,1834,2.592,1835,2.592,1845,2.362,1848,3.518,1849,1.649,1850,1.911,1851,1.911,1852,4.078,1862,2.928,1871,2.809,1882,2.531,1906,2.187,1945,1.926,1946,1.097,1980,2.928,2011,4.551,2030,1.126,2051,2.727,2381,2.741,2389,3.177,2390,2.928,2394,3.177,2397,3.177,2398,2.928,2399,1.649,2400,2.928,2401,1.911,2402,1.911,2403,1.761,2404,1.761,2405,1.559,2406,4.1,2407,2.741,2408,3.177,2411,1.761,2412,1.911,2414,1.761,2418,3.177,2419,1.761,2420,1.911,2421,1.911,2433,8.141,2434,1.761,2435,4.565,2436,3.758,2437,2.928,2438,4.565,2439,7.071,2440,6.371,2441,7.071,2442,7.34,2443,6.753,2444,5.904,2445,5.319,2446,5.319,2447,3.556,2448,3.556,2449,3.556,2450,6.371,2451,5.319,2452,5.319,2453,4.565,2454,5.904,2455,2.139,2456,3.556,2457,3.177,2458,3.556,2459,2.362,2460,2.139,2461,3.556,2462,2.139,2463,2.139,2464,2.741,2465,3.556,2466,2.139,2467,2.139,2468,3.556,2469,3.556,2470,3.177,2471,3.556,2472,2.139,2473,2.468,2474,3.556,2475,5.319,2476,2.139,2477,3.556,2478,2.139,2479,3.556,2480,3.177,2481,2.139,2482,5.904,2483,2.139,2484,6.753,2485,5.319,2486,4.565,2487,3.556,2488,2.139,2489,2.139,2490,2.928,2491,2.139,2492,3.556,2493,2.139,2494,2.139,2495,2.139,2496,5.319,2497,3.177,2498,2.139,2499,3.177,2500,2.139,2501,2.139,2502,2.139,2503,3.556,2504,2.139,2505,2.741,2506,4.565,2507,3.556,2508,1.911,2509,2.139,2510,2.139,2511,3.556,2512,3.556,2513,1.649,2514,1.911,2515,2.139,2516,2.139,2517,2.139,2518,2.139,2519,3.556,2520,2.139,2521,2.139,2522,2.139,2523,2.139,2524,2.139,2525,2.139,2526,2.139,2527,1.911,2528,2.139,2529,3.556,2530,2.139,2531,3.556,2532,2.139,2533,3.556,2534,2.139,2535,2.139,2536,2.139,2537,2.139,2538,2.139,2539,2.139,2540,2.139,2541,2.139,2542,2.139,2543,2.139,2544,3.556,2545,4.565,2546,3.556,2547,4.565,2548,2.139,2549,2.139,2550,2.139,2551,5.319,2552,2.139,2553,2.139,2554,2.139,2555,3.556,2556,3.556,2557,3.556,2558,2.139,2559,2.139,2560,2.139,2561,2.139,2562,3.556,2563,2.139,2564,2.139,2565,2.139,2566,2.139,2567,2.139,2568,3.177,2569,1.761,2570,2.139,2571,1.911,2572,2.139]],["title/modules/DualSliderModule.html",[402,0.715,417,3.284]],["body/modules/DualSliderModule.html",[3,0.069,4,0.069,5,0.069,6,0.053,11,0.004,17,0.006,22,3.209,23,0.069,99,0.005,100,0.004,150,0.287,151,0.586,179,0.138,204,1.927,317,1.031,348,2.819,349,1.989,402,0.998,404,1.927,405,1.927,406,2.625,407,1.958,408,1.958,409,2.625,417,6.513,424,2.293,425,1.756,427,2.054,428,2.443,448,5.032,544,2.695,545,2.193,1233,3.137,1764,5.032,1811,7.455,2428,6.432,2429,5.321,2430,6.869,2431,5.683,2433,6.168,2513,5.321,2514,6.168,2573,6.168,2574,6.168,2575,6.168,2576,6.168,2577,8.344,2578,8.344,2579,6.168]],["title/interfaces/ExtDeckProps.html",[0,0.261,1251,3.431]],["body/interfaces/ExtDeckProps.html",[0,0.383,2,0.856,3,0.055,4,0.038,5,0.038,6,0.029,11,0.004,12,0.386,13,0.645,16,1.366,17,0.006,18,1.663,19,0.715,23,0.081,28,2.065,46,1.055,47,0.715,87,0.878,92,3.681,95,3.101,99,0.003,100,0.002,125,0.967,141,1.954,145,1.427,150,0.224,179,0.075,205,1.553,216,1.847,219,1.425,235,2.154,247,1.907,252,1.585,271,2.641,281,2.196,332,1.039,499,3.967,504,0.525,562,2.531,564,4.757,579,2.306,581,4.04,600,4.045,616,2.154,621,2.154,623,2.985,625,2.173,629,5.105,630,2.39,632,3.46,633,5.301,634,2.39,635,3.369,638,3.902,640,2.92,646,3.399,657,2.39,660,5.343,760,3.681,763,3.771,794,2.488,843,3.122,963,2.488,1028,1.629,1092,2.63,1229,3.671,1230,2.6,1231,2.39,1232,2.911,1233,2.512,1234,4.045,1235,5.034,1236,4.757,1237,4.364,1238,2.225,1239,2.225,1240,2.488,1241,3.399,1242,3.527,1243,3.399,1244,3.527,1245,2.73,1246,2.73,1247,3.671,1248,4.595,1249,2.73,1250,2.73,1251,4.56,1252,4.56,1253,2.73,1254,3.671,1255,3.671,1256,4.789,1257,4.793,1258,3.527,1259,2.39,1260,2.39,1261,3.719,1262,5.639,1263,5.034,1264,4.029,1265,4.56,1266,2.73,1267,2.73,1268,2.73,1269,4.56,1270,2.225,1271,4.789,1272,4.789,1273,2.6,1274,2.6,1275,4.56,1276,4.818,1277,4.789,1278,2.488,1279,2.6,1280,2.73,1281,2.488,1282,5.287,1283,2.6,1284,6.084,1285,3.837,1286,3.837,1287,4.171,1288,2.488,1289,2.73,1290,2.73,1291,2.73,1292,2.73,1293,2.73,1294,2.73,1295,2.39,1296,4.789,1297,4.789,1298,4.789,1299,5.287,1300,5.639,1301,2.6,1302,2.73,1303,2.6,1304,4.029,1305,2.73,1306,2.73,1307,2.73,1308,2.6,1309,2.73,1310,2.73,1311,2.73,1312,2.6,1313,2.73,1314,2.73,1315,4.029,1316,2.73,1317,2.73,1318,2.6,1319,4.789,1320,2.73,1321,2.994,1322,2.73,1323,4.029,1324,2.488,1325,2.488,1326,2.73,1327,2.6,1328,2.73,1329,4.029,1330,2.6,1331,2.73,1332,2.73,1333,2.488,1334,3.399,1335,2.73,1336,2.73,1337,2.73,1338,2.73,1339,2.73,1340,2.6,1341,2.73,1342,2.303,1343,2.73,1344,2.73,1345,2.73,1346,2.73,1347,2.73,1348,2.6,1349,2.73,1350,2.6,1351,3.837,1352,2.73,1353,2.73,1354,2.73,1355,2.73,1356,2.6,1357,2.73,1358,2.73,1359,2.73,1360,2.73,1361,2.73,1362,2.488,1363,2.73,1364,2.73,1365,4.029,1366,2.73,1367,2.73]],["title/interfaces/Filter.html",[0,0.261,73,1.74]],["body/interfaces/Filter.html",[0,0.478,1,2.652,2,1.119,3,0.049,4,0.049,5,0.049,6,0.037,7,3.398,8,1.016,9,3.845,10,5.032,11,0.005,12,0.342,13,0.78,14,3.398,15,3.006,16,1.618,17,0.006,18,1.759,19,0.793,20,1.315,21,3.398,22,2.276,23,0.089,24,2.909,25,3.01,26,3.342,27,3.575,28,2.113,29,2.51,30,3.398,31,3.398,32,2.908,33,1.925,34,3.638,35,3.398,36,1.937,37,4.112,38,3.398,39,3.398,40,3.252,41,3.124,42,3.252,43,3.252,44,3.124,45,4.564,46,1.728,47,1.454,48,0.993,49,1.48,50,3.729,51,1.888,52,1.226,53,0.532,54,3.252,55,1.754,56,2.73,57,3.01,58,3.252,59,1.967,60,5.268,61,5.032,62,5.032,63,5.032,64,5.436,65,1.498,66,4.125,67,5.268,68,1.786,69,2.579,70,3.622,71,3.845,72,3.729,73,2.88,74,4.524,75,5.222,76,5.222,77,5.222,78,5.438,79,5.253,80,3.845,81,5.436,82,1.727,83,3.259,84,3.972,85,5.222,86,4.442,87,1.465,88,4.641,89,3.429,90,5.222,91,3.252,92,2.33,93,2.909,94,3.01,95,3.053,96,3.01,97,2.043,98,3.252,99,0.004,100,0.003]],["title/components/FiltersContentComponent.html",[101,0.557,351,1.38]],["body/components/FiltersContentComponent.html",[3,0.069,4,0.04,5,0.04,6,0.065,8,0.775,11,0.002,12,0.28,16,1.086,17,0.006,19,0.648,20,1.565,23,0.04,46,1.109,47,1.518,48,1.681,49,2.404,52,1.004,53,0.743,55,1.052,59,1.036,65,1.344,68,2.12,70,3.147,73,3.233,87,0.637,99,0.003,100,0.004,101,0.896,102,1.597,103,1.766,104,1.036,105,1.119,106,1.174,107,1.052,114,2.045,117,2.718,118,2.2,120,1.548,122,1.597,128,0.931,129,1.583,136,0.96,144,3.686,148,1.155,150,0.116,151,0.34,169,1.119,173,1.119,177,1.597,179,0.08,183,1.251,193,1.524,197,1.289,199,1.036,205,1.326,224,1.685,233,2.159,236,2.01,268,2.686,269,1.864,274,4.368,275,1.547,279,2.528,281,1.965,283,2.199,284,2.283,289,1.955,290,1.349,293,1.085,295,3.701,296,3.33,298,3.147,299,3.483,300,2.739,301,1.708,302,1.608,303,3.86,317,0.599,318,1.433,319,1.501,320,1.174,321,2.193,322,1.174,323,1.701,324,1.102,325,1.119,326,1.701,327,1.119,328,1.174,329,1.119,330,1.174,331,1.119,332,1.495,333,1.174,334,1.119,335,1.137,336,1.174,337,1.119,338,1.174,339,1.119,340,1.174,341,1.597,342,1.701,343,1.82,344,2.328,345,1.701,346,1.119,347,1.701,348,1.119,349,1.674,350,1.701,351,2.091,352,2.72,353,1.701,354,1.119,355,2,356,1.597,357,1.701,358,1.119,359,1.174,360,1.119,361,1.119,362,1.174,363,1.119,364,1.174,365,1.119,366,2,367,1.119,368,1.174,369,1.119,370,1.701,371,1.119,372,1.174,373,1.119,374,1.174,375,1.137,376,1.174,377,1.102,378,1.119,379,1.174,380,1.119,381,1.174,382,1.119,383,1.102,384,1.052,385,1.119,386,1.119,387,1.102,388,1.102,389,1.137,390,1.119,391,1.174,392,1.119,393,1.137,394,1.174,395,1.597,396,1.119,397,1.174,398,1.174,466,1.028,480,2.363,486,2.284,489,2.799,499,4.386,501,2.641,502,0.945,503,3.06,504,1.049,511,2.405,532,2.284,699,2.363,837,4.033,838,3.452,843,2.241,1214,3.708,1233,1.822,1257,3.24,1416,2.923,1521,3.86,1535,3.452,1561,2.112,1563,2.172,1564,1.908,1565,2.112,1705,2.641,1747,4.479,1789,2.466,1790,2.784,1793,2.784,1794,2.784,1795,3.091,1804,5.192,1845,3.86,1995,4.981,1996,4.784,2197,5.192,2374,3.302,2404,3.302,2422,3.583,2580,6.593,2581,7.042,2582,3.583,2583,4.033,2584,7.493,2585,6.105,2586,6.105,2587,3.583,2588,4.011,2589,3.583,2590,3.583,2591,5.192,2592,4.011,2593,7.493,2594,5.811,2595,4.011,2596,5.811,2597,7.493,2598,5.192,2599,4.011,2600,4.011,2601,5.811,2602,4.011,2603,4.011,2604,4.011,2605,4.011,2606,4.011,2607,4.011,2608,3.583,2609,5.811]],["title/modules/FiltersContentModule.html",[402,0.715,2610,3.604]],["body/modules/FiltersContentModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,150,0.28,151,0.579,179,0.136,204,1.904,317,1.018,351,2.815,352,1.874,402,0.986,404,1.904,405,1.904,406,2.611,407,1.934,408,1.934,409,2.611,417,6.42,424,2.276,425,1.734,427,2.464,428,2.425,447,5.615,448,4.972,449,5.257,544,2.675,545,2.166,1421,7.045,2423,7.045,2580,5.257,2581,5.615,2610,7.376,2611,6.094,2612,6.094,2613,6.821,2614,6.094,2615,6.094,2616,6.821,2617,6.821,2618,6.094]],["title/components/FiltersPopoverComponent.html",[101,0.557,169,1.38]],["body/components/FiltersPopoverComponent.html",[3,0.067,4,0.038,5,0.038,6,0.066,8,0.748,11,0.002,12,0.464,13,0.654,17,0.006,19,0.596,20,0.751,23,0.038,46,1.07,47,1.488,48,1.653,51,2.823,52,0.956,53,0.722,55,1.001,59,0.986,65,1.307,68,2.671,73,2.577,82,1.89,87,0.607,99,0.003,100,0.004,101,0.878,102,1.54,103,1.321,104,0.986,105,1.854,106,1.118,107,1.001,114,2.131,117,2.711,118,2.191,120,1.493,122,1.54,127,0.74,128,1.699,129,1.608,133,4.863,136,0.914,144,3.254,148,1.1,150,0.111,151,0.324,169,2.043,171,6.661,173,1.066,177,1.54,179,0.076,183,0.822,193,1.47,197,1.244,199,1.716,202,7.006,205,1.443,216,1.873,223,4.087,224,1.639,236,1.939,238,2.802,252,1.225,253,0.86,271,1.723,275,2.162,277,3.126,279,1.661,281,2.138,282,3.705,285,1.735,289,2.733,290,1.301,293,1.033,295,2.068,297,2.953,298,2.068,299,3.088,300,2.935,301,1.626,302,1.531,303,2.536,317,0.57,318,1.383,319,1.448,320,1.118,321,2.143,322,1.118,323,1.641,324,1.049,325,1.066,326,1.641,327,1.066,328,1.118,329,1.066,330,1.118,331,1.066,332,1.376,333,1.118,334,1.066,335,1.083,336,1.118,337,1.066,338,1.118,339,1.066,340,1.118,341,1.54,342,1.641,343,1.769,344,2.282,345,1.641,346,1.066,347,1.641,348,1.066,349,1.1,350,1.641,351,1.066,352,2.726,353,1.641,354,1.066,355,1.945,356,1.54,357,1.641,358,1.066,359,1.118,360,1.066,361,1.066,362,1.118,363,1.066,364,1.118,365,1.066,366,1.945,367,1.066,368,1.118,369,1.066,370,1.641,371,1.066,372,1.118,373,1.066,374,1.118,375,1.083,376,1.118,377,1.049,378,1.066,379,1.118,380,1.066,381,1.118,382,1.066,383,1.049,384,1.001,385,1.066,386,1.066,387,1.049,388,1.049,389,1.083,390,1.066,391,1.118,392,1.066,393,1.083,394,1.118,395,1.54,396,1.066,397,1.118,398,1.118,466,1.176,480,2.298,486,2.204,489,2.338,496,2.437,502,0.9,504,0.535,511,1.973,516,2.733,532,2.204,673,2.182,837,3.891,838,3.33,839,5.009,840,3.724,841,5.009,843,2.823,891,3.705,1019,4.087,1214,4.976,1257,4.348,1401,3.224,1521,5.179,1563,2.068,1564,1.817,1565,2.011,1625,2.783,1705,2.548,1747,4.321,1789,5.423,1790,2.65,1791,4.087,1792,2.783,1793,2.65,1794,2.65,1797,2.196,1824,3.578,1846,3.578,1862,3.143,2030,4.437,2068,5.121,2099,3.407,2407,5.121,2416,2.783,2580,6.661,2585,5.009,2586,5.936,2598,3.411,2619,3.411,2620,5.936,2621,5.009,2622,6.644,2623,7.321,2624,7.321,2625,6.644,2626,3.818,2627,5.643,2628,5.009,2629,3.818,2630,3.818,2631,5.607,2632,3.818,2633,6.541,2634,3.818,2635,3.818,2636,3.818,2637,6.644,2638,3.818,2639,3.818,2640,5.009,2641,3.818,2642,3.818,2643,3.818,2644,3.818,2645,3.818,2646,5.607,2647,3.818,2648,3.818]],["title/modules/FiltersPopoverModule.html",[402,0.715,418,3.604]],["body/modules/FiltersPopoverModule.html",[3,0.07,4,0.07,5,0.07,6,0.053,11,0.004,17,0.006,23,0.07,99,0.005,100,0.004,150,0.278,151,0.595,169,2.824,171,5.402,172,5.769,179,0.14,204,1.956,317,1.046,352,2.313,402,1.013,404,1.956,405,1.956,406,2.642,407,1.987,408,1.987,409,2.642,418,7.278,424,2.313,425,1.782,427,2.505,428,2.465,429,4.317,430,3.258,544,2.719,545,2.226,2580,5.402,2581,5.769,2610,7.09,2649,6.261,2650,6.261,2651,7.008,2652,6.261,2653,6.261,2654,5.769]],["title/classes/FlatNode.html",[179,0.099,2655,4.417]],["body/classes/FlatNode.html",[3,0.058,4,0.058,5,0.058,6,0.069,8,1.104,11,0.003,12,0.404,15,3.077,16,1.187,17,0.006,18,1.666,19,0.712,23,0.058,46,1.426,53,0.812,65,1.901,82,1.929,87,1.187,99,0.004,100,0.003,101,0.841,107,2.507,125,1.494,129,1.669,131,1.959,150,0.168,179,0.115,180,2.732,181,2.539,183,1.883,184,4.216,194,3.321,197,1.657,236,3.207,247,1.677,252,1.264,461,2.89,466,1.548,502,1.76,504,1.268,577,1.777,612,4.828,712,3.524,1530,4.046,1541,6.674,2457,6.674,2497,6.674,2655,7.813,2656,9.054,2657,5.168,2658,7.393,2659,5.784,2660,5.11,2661,7.705,2662,5.784,2663,9.743,2664,7.447,2665,7.471,2666,5.784,2667,5.784,2668,5.784,2669,7.471,2670,5.784,2671,5.784,2672,7.471,2673,4.962,2674,5.784,2675,5.784,2676,5.784]],["title/components/GenderSelectorComponent.html",[101,0.557,354,1.38]],["body/components/GenderSelectorComponent.html",[3,0.074,4,0.046,5,0.046,6,0.064,8,0.854,11,0.003,12,0.321,15,1.562,17,0.006,19,0.521,20,1.259,23,0.046,46,1.406,47,1.599,48,1.758,52,1.845,53,0.801,55,1.205,59,2.492,61,4.899,62,3.936,65,1.449,87,0.73,99,0.004,100,0.004,101,0.83,102,1.759,103,1.509,104,1.187,105,1.283,106,1.345,107,1.205,114,2.139,117,2.739,118,2.212,120,1.705,122,1.759,127,1.241,128,1.067,129,1.521,136,1.1,141,1.904,144,3.541,145,1.653,148,1.324,150,0.133,151,0.39,159,5.151,169,1.283,173,1.283,177,1.759,179,0.092,183,0.989,193,1.205,197,1.42,199,1.187,205,1.133,224,1.817,238,4.334,239,4.034,252,1.004,284,1.535,290,1.849,293,1.243,317,0.686,318,1.579,319,1.653,320,1.345,321,2.332,322,1.345,323,1.874,324,1.263,325,1.283,326,1.874,327,1.283,328,1.345,329,1.283,330,1.345,331,1.283,332,1.498,333,1.345,334,1.283,335,1.303,336,1.345,337,1.283,338,1.345,339,1.283,340,1.345,341,1.759,342,1.874,343,1.962,344,2.452,345,1.874,346,1.283,347,1.874,348,1.283,349,1.324,350,1.874,351,1.283,352,1.759,353,1.874,354,2.224,355,2.156,356,1.759,357,1.874,358,1.283,359,1.345,360,1.283,361,1.283,362,1.345,363,1.283,364,1.345,365,1.283,366,2.156,367,1.283,368,1.345,369,1.283,370,1.874,371,1.283,372,1.345,373,1.283,374,1.345,375,1.303,376,1.345,377,1.263,378,1.283,379,1.345,380,1.283,381,1.345,382,1.283,383,1.263,384,1.205,385,1.283,386,1.283,387,1.263,388,1.263,389,1.303,390,1.283,391,1.345,392,1.283,393,1.303,394,1.345,395,1.759,396,1.283,397,1.345,398,1.345,466,0.813,480,2.897,486,2.517,489,2.593,501,2.909,502,1.083,504,0.644,511,2.253,532,2.517,673,2.102,843,2.469,1233,2.909,1414,2.089,2677,7.484,2678,6.896,2679,3.542,2680,5.678,2681,4.934,2682,6.402,2683,5.678,2684,7.366,2685,7.366,2686,4.106,2687,5.719,2688,5.719,2689,5.719,2690,4.106,2691,5.27,2692,4.106,2693,6.402,2694,4.106,2695,4.596,2696,4.596,2697,4.106,2698,4.596]],["title/modules/GenderSelectorModule.html",[402,0.715,2699,3.604]],["body/modules/GenderSelectorModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,59,1.85,99,0.005,100,0.004,150,0.274,151,0.608,179,0.143,204,2,290,1.663,317,1.07,354,2.832,402,1.036,404,2,405,2,406,2.667,407,2.032,408,2.032,409,2.667,424,2.344,425,1.822,427,2.131,428,2.498,544,2.756,545,2.276,2677,6.402,2678,5.899,2699,7.201,2700,6.402,2701,6.402,2702,6.402,2703,5.899,2704,7.024,2705,5.899,2706,5.899]],["title/components/HeaderComponent.html",[101,0.557,356,1.358]],["body/components/HeaderComponent.html",[3,0.084,4,0.041,5,0.041,6,0.064,8,0.551,11,0.002,12,0.289,16,0.944,17,0.006,19,0.656,23,0.041,33,1.625,34,2.64,36,1.51,37,5.152,46,1.134,47,1.536,48,1.699,49,2.297,52,1.035,53,0.646,55,1.084,59,1.068,60,3.652,63,3.652,64,3.945,65,1.367,73,2.833,93,2.584,99,0.003,100,0.004,101,0.783,102,1.632,103,1.4,104,1.068,105,1.154,106,1.21,107,1.084,113,5.136,114,2.067,117,2.722,118,2.203,120,1.582,122,1.632,128,0.96,129,1.536,136,0.989,148,1.191,150,0.12,151,0.351,169,1.154,173,1.154,177,1.632,179,0.082,191,4.578,193,1.084,199,1.534,224,1.714,252,1.298,253,0.931,268,3.164,271,2.473,272,1.657,276,2.638,280,2.542,281,2.111,283,1.565,284,1.984,285,3.159,286,2.584,289,2.015,290,1.379,291,1.922,292,2.895,293,1.607,294,6.204,296,3.577,299,1.922,300,2.787,301,1.761,302,1.657,305,2.968,306,3.159,307,2.456,308,2.456,309,2.305,317,0.617,318,1.465,319,1.534,320,1.21,321,2.224,322,1.21,323,1.739,324,1.136,325,1.154,326,1.739,327,1.154,328,1.21,329,1.154,330,1.21,331,1.154,332,1.513,333,1.21,334,1.154,335,1.172,336,1.21,337,1.154,338,1.21,339,1.154,340,1.21,341,1.632,342,1.739,343,1.851,344,2.356,345,1.739,346,1.154,347,1.739,348,1.154,349,1.191,350,1.739,351,1.154,352,2.211,353,1.739,354,1.154,355,2.035,356,2.211,357,1.739,358,1.154,359,1.21,360,1.154,361,1.154,362,1.21,363,1.154,364,1.21,365,1.154,366,2.035,367,1.154,368,1.21,369,1.154,370,1.739,371,1.154,372,1.21,373,1.154,374,1.21,375,1.172,376,1.21,377,1.136,378,1.154,379,1.21,380,1.154,381,1.21,382,1.154,383,1.136,384,1.084,385,1.154,386,1.154,387,1.136,388,1.136,389,1.172,390,1.154,391,1.21,392,1.154,393,1.172,394,1.21,395,1.632,396,1.154,397,1.21,398,1.21,480,2.628,486,2.335,489,2.833,503,3.128,504,0.832,509,4.672,511,2.447,526,6.204,532,2.335,534,3.403,535,2.12,537,2.015,538,3.013,843,2.931,984,4.436,985,4.825,986,5.723,1257,3.312,1386,3.186,1388,3.528,1533,3.415,1561,2.177,1563,2.239,1564,1.967,1565,2.177,1580,2.826,1581,2.826,1593,1.967,1747,4.578,1845,5.566,1942,4.578,2030,2.177,2330,5.539,2405,3.013,2707,4.134,2708,7.599,2709,4.89,2710,4.578,2711,6.211,2712,5.306,2713,6.951,2714,6.951,2715,6.951,2716,4.134,2717,4.134,2718,4.134,2719,5.94,2720,4.134,2721,4.134,2722,5.94,2723,5.94,2724,5.94,2725,5.94,2726,5.94,2727,5.306,2728,5.94,2729,5.94,2730,3.403,2731,4.134,2732,3.403,2733,4.134,2734,4.134,2735,3.403,2736,3.403,2737,4.134,2738,4.134,2739,4.134,2740,4.134,2741,4.134]],["title/components/HeaderComponent-1.html",[101,0.466,253,0.932,356,1.136]],["body/components/HeaderComponent-1.html",[0,0.238,3,0.079,4,0.045,5,0.045,6,0.056,8,0.842,11,0.003,12,0.315,17,0.006,19,0.367,20,0.886,23,0.045,33,1.77,36,1.605,47,1.587,48,1.747,49,1.908,52,1.128,53,0.904,55,1.181,59,1.163,65,1.433,87,0.716,93,2.745,99,0.004,100,0.004,101,0.936,102,1.734,103,1.487,104,1.163,105,1.257,106,1.318,107,1.181,113,5.762,114,2.125,117,2.733,118,2.214,120,1.681,122,1.734,125,1.163,127,0.873,128,1.045,129,1.205,136,1.077,148,1.297,150,0.183,151,0.382,169,1.257,173,1.257,177,1.734,179,0.166,180,1.971,181,2.145,183,0.969,184,3.282,193,1.181,199,1.63,224,1.797,252,1.379,253,1.421,268,2.864,271,2.239,276,2.873,280,2.769,281,1.911,284,2.108,285,3.311,286,2.745,288,2.769,289,2.195,290,1.465,292,3.551,293,2.136,299,2.093,300,2.53,301,2.688,302,2.53,305,3.153,306,2.868,317,0.672,318,1.947,319,1.63,320,1.318,321,2.311,322,1.318,323,1.847,324,1.237,325,1.257,326,1.847,327,1.257,328,1.318,329,1.257,330,1.318,331,1.257,332,1.563,333,1.318,334,1.257,335,1.277,336,1.318,337,1.257,338,1.318,339,1.257,340,1.318,341,1.734,342,1.847,343,1.94,344,2.434,345,1.847,346,1.257,347,1.847,348,1.257,349,1.297,350,1.847,351,1.257,352,1.734,353,1.847,354,1.257,355,2.133,356,2.284,357,1.847,358,1.257,359,1.318,360,1.257,361,1.257,362,1.318,363,1.257,364,1.318,365,1.257,366,2.133,367,1.257,368,1.318,369,1.257,370,1.847,371,1.257,372,1.318,373,1.257,374,1.318,375,1.277,376,1.318,377,1.237,378,1.257,379,1.318,380,1.257,381,1.318,382,1.257,383,1.237,384,1.181,385,1.257,386,1.257,387,1.237,388,1.237,389,1.277,390,1.257,391,1.318,392,1.257,393,1.277,394,1.318,395,1.734,396,1.257,397,1.318,398,1.318,400,2.25,488,3.519,502,1.061,510,2.195,517,2.195,518,2.873,528,2.511,537,3.076,538,3.282,577,1.384,984,2.873,1213,3.282,1388,3.749,1414,2.046,1563,2.439,1564,2.143,1565,2.371,1580,3.003,1581,3.003,1593,2.143,1729,1.77,1942,3.471,2030,2.371,2319,4.192,2330,3.282,2411,3.707,2709,3.707,2710,6.82,2711,6.509,2712,5.638,2735,3.707,2736,3.707,2742,4.503,2743,4.503,2744,6.086,2745,6.311,2746,4.503,2747,5.638,2748,6.311,2749,4.023,2750,4.023,2751,4.503,2752,4.503,2753,3.282,2754,3.282,2755,4.503,2756,4.503,2757,4.503,2758,6.509,2759,3.707,2760,4.503]],["title/modules/HeaderModule.html",[402,0.715,2118,3.604]],["body/modules/HeaderModule.html",[3,0.069,4,0.069,5,0.069,6,0.052,11,0.004,17,0.006,23,0.069,99,0.005,100,0.004,150,0.287,151,0.583,179,0.137,204,1.916,317,1.025,356,2.773,402,0.993,404,1.916,405,1.916,406,2.619,407,1.947,408,1.947,409,2.619,424,2.285,425,1.746,427,2.474,428,2.435,429,4.265,430,3.192,440,6.135,544,2.686,545,2.181,2118,7.254,2761,6.135,2762,6.135,2763,6.135,2764,6.135,2765,7.056,2766,6.867,2767,7.431,2768,6.135,2769,8.317,2770,6.867,2771,7.431,2772,6.135,2773,5.653,2774,6.867,2775,6.867]],["title/interfaces/IconDefinition.html",[0,0.261,2776,3.431]],["body/interfaces/IconDefinition.html",[0,0.246,2,1.064,3,0.047,4,0.047,5,0.047,6,0.036,8,0.621,11,0.003,12,0.325,13,0.753,16,1.447,17,0.006,19,0.652,20,0.916,23,0.065,33,3.938,34,4.271,46,1.233,51,2.491,53,1.051,68,3.177,87,1.469,99,0.004,100,0.003,127,1.252,131,1.945,136,1.114,141,2.383,145,1.915,150,0.259,151,0.395,179,0.093,180,1.454,181,1.582,183,1.875,195,3.231,205,0.824,219,1.403,236,2.233,247,1.846,249,2.451,288,4.926,291,3.002,318,2.353,430,2.164,432,3.092,466,1.418,504,0.905,562,2.271,625,1.83,673,2.86,699,2.77,861,3.148,981,1.407,1028,2.025,1248,4.758,1397,4.999,1823,3.971,1828,3.231,2128,3.092,2131,3.393,2136,2.121,2185,3.836,2208,3.836,2212,2.97,2247,3.601,2248,2.596,2249,2.596,2250,2.269,2292,2.97,2312,3.832,2315,6.319,2319,5.321,2323,6.621,2324,5.174,2325,5.932,2326,5.321,2327,4.483,2329,4.483,2459,3.092,2753,3.393,2776,6.198,2777,3.393,2778,3.588,2779,4.978,2780,6.174,2781,6.174,2782,5.716,2783,4.978,2784,3.588,2785,3.092,2786,6.712,2787,4.978,2788,3.588,2789,3.231,2790,3.588,2791,3.588,2792,3.588,2793,3.588,2794,3.588,2795,4.978,2796,4.708,2797,3.588,2798,3.588,2799,3.588,2800,3.588,2801,3.588,2802,4.978,2803,3.588,2804,3.588,2805,3.588,2806,3.231,2807,3.588,2808,3.588,2809,3.588,2810,3.588,2811,3.588,2812,3.588,2813,3.588,2814,4.483,2815,3.588,2816,3.588,2817,3.588,2818,3.588,2819,3.588,2820,3.588,2821,3.588,2822,3.231,2823,3.588,2824,3.588]],["title/interfaces/IconDefinition-1.html",[0,0.219,253,0.932,2776,2.871]],["body/interfaces/IconDefinition-1.html",[0,0.246,2,1.064,3,0.047,4,0.047,5,0.047,6,0.036,8,0.621,11,0.003,12,0.325,13,0.753,16,1.447,17,0.006,19,0.652,20,0.916,23,0.065,33,3.938,34,4.271,46,1.233,51,2.491,53,1.051,68,3.177,87,1.469,99,0.004,100,0.003,127,1.252,131,1.945,136,1.114,141,2.383,145,1.915,150,0.259,151,0.395,179,0.093,180,1.454,181,1.582,183,1.875,195,3.231,205,0.824,219,1.403,236,2.233,247,1.846,249,2.451,288,4.926,291,3.002,318,2.353,430,2.164,432,3.092,466,1.418,504,0.905,562,2.271,625,1.83,673,2.86,699,2.77,861,3.148,981,1.407,1028,2.025,1248,4.758,1397,4.999,1823,3.971,1828,3.231,2128,3.092,2131,3.393,2136,2.121,2185,3.836,2208,3.836,2212,2.97,2247,3.601,2248,2.596,2249,2.596,2250,2.269,2292,2.97,2315,6.319,2319,5.321,2323,6.621,2324,5.174,2325,5.932,2326,5.321,2327,4.483,2329,4.483,2335,3.832,2459,3.092,2753,3.393,2776,6.198,2777,3.393,2778,3.588,2779,4.978,2780,6.174,2781,6.174,2782,5.716,2783,4.978,2784,3.588,2785,3.092,2786,6.712,2787,4.978,2788,3.588,2789,3.231,2790,3.588,2791,3.588,2792,3.588,2793,3.588,2794,3.588,2795,4.978,2796,4.708,2797,3.588,2798,3.588,2799,3.588,2800,3.588,2801,3.588,2802,4.978,2803,3.588,2804,3.588,2805,3.588,2806,3.231,2807,3.588,2808,3.588,2809,3.588,2810,3.588,2811,3.588,2812,3.588,2813,3.588,2814,4.483,2815,3.588,2816,3.588,2817,3.588,2818,3.588,2819,3.588,2820,3.588,2821,3.588,2822,3.231,2823,3.588,2824,3.588]],["title/injectables/IconRegistryState.html",[2136,1.624,2785,3.284]],["body/injectables/IconRegistryState.html",[0,0.224,3,0.042,4,0.042,5,0.042,6,0.064,8,1.024,11,0.002,12,0.295,16,1.291,17,0.006,19,0.661,20,0.832,23,0.061,33,3.912,34,4.02,46,1.466,51,1.631,53,1.048,68,2.569,87,1.342,99,0.003,100,0.002,127,1.364,129,1.55,131,2.214,136,1.012,141,2.512,145,2.097,150,0.252,151,0.359,179,0.084,180,1.886,181,2.052,183,1.818,195,4.191,197,1.34,205,0.749,219,1.369,236,1.463,247,1.801,249,3.18,288,4.722,291,3.57,318,2.231,430,1.966,432,2.81,466,1.573,502,1.914,504,0.592,562,2.602,577,1.3,599,2.114,625,2.374,673,2.919,699,2.808,861,2.943,981,1.825,1028,3.063,1248,4.561,1397,5.279,1823,4.722,1828,4.191,2128,2.81,2131,4.401,2136,1.983,2137,2.291,2185,4.182,2208,4.182,2212,3.853,2247,3.367,2248,2.359,2249,2.359,2250,2.062,2292,2.699,2312,6.951,2315,6.277,2319,5.902,2323,6.168,2324,4.722,2325,5.902,2326,4.01,2327,2.936,2329,4.191,2459,4.01,2753,4.401,2776,6.614,2777,6.155,2778,3.26,2779,3.26,2780,4.654,2781,4.654,2782,6.508,2783,5.919,2784,3.26,2785,4.01,2786,7.072,2787,5.919,2788,4.654,2789,4.191,2790,3.26,2791,3.26,2792,3.26,2793,3.26,2794,4.654,2795,5.919,2796,5.597,2797,4.654,2798,3.26,2799,4.654,2800,5.919,2801,4.654,2802,4.654,2803,3.26,2804,3.26,2805,3.26,2806,2.936,2807,3.26,2808,3.26,2809,3.26,2810,3.26,2811,3.26,2812,3.26,2813,3.26,2814,5.33,2815,5.427,2816,3.26,2817,3.26,2818,3.26,2819,3.26,2820,3.26,2821,3.26,2822,4.191,2823,5.427,2824,3.26,2825,5.394,2826,3.779,2827,3.779,2828,3.779,2829,3.779,2830,3.779,2831,3.779,2832,3.779,2833,3.779]],["title/injectables/IconRegistryState-1.html",[253,0.932,2136,1.358,2785,2.747]],["body/injectables/IconRegistryState-1.html",[0,0.224,3,0.042,4,0.042,5,0.042,6,0.064,8,1.024,11,0.002,12,0.295,16,1.291,17,0.006,19,0.661,20,0.832,23,0.061,33,3.912,34,4.02,46,1.466,51,1.631,53,1.048,68,2.569,87,1.342,99,0.003,100,0.002,127,1.364,129,1.55,131,2.214,136,1.012,141,2.512,145,2.097,150,0.252,151,0.359,179,0.084,180,1.886,181,2.052,183,1.818,195,4.191,197,1.34,205,0.749,219,1.369,236,1.463,247,1.801,249,3.18,288,4.722,291,3.57,318,2.231,430,1.966,432,2.81,466,1.573,502,1.914,504,0.592,562,2.602,577,1.3,599,2.114,625,2.374,673,2.919,699,2.808,861,2.943,981,1.825,1028,3.063,1248,4.561,1397,5.279,1823,4.722,1828,4.191,2128,2.81,2131,4.401,2136,1.983,2137,2.291,2185,4.182,2208,4.182,2212,3.853,2247,3.367,2248,2.359,2249,2.359,2250,2.062,2292,2.699,2315,6.277,2319,5.902,2323,6.168,2324,4.722,2325,5.902,2326,4.01,2327,2.936,2329,4.191,2335,6.951,2459,4.01,2753,4.401,2776,6.614,2777,6.155,2778,3.26,2779,3.26,2780,4.654,2781,4.654,2782,6.508,2783,5.919,2784,3.26,2785,4.01,2786,7.072,2787,5.919,2788,4.654,2789,4.191,2790,3.26,2791,3.26,2792,3.26,2793,3.26,2794,4.654,2795,5.919,2796,5.597,2797,4.654,2798,3.26,2799,4.654,2800,5.919,2801,4.654,2802,4.654,2803,3.26,2804,3.26,2805,3.26,2806,2.936,2807,3.26,2808,3.26,2809,3.26,2810,3.26,2811,3.26,2812,3.26,2813,3.26,2814,5.33,2815,5.427,2816,3.26,2817,3.26,2818,3.26,2819,3.26,2820,3.26,2821,3.26,2822,4.191,2823,5.427,2824,3.26,2825,5.394,2826,3.779,2827,3.779,2828,3.779,2829,3.779,2830,3.779,2831,3.779,2832,3.779,2833,3.779]],["title/interfaces/IdObject.html",[0,0.261,2834,3.811]],["body/interfaces/IdObject.html",[0,0.484,2,1.262,3,0.055,4,0.055,5,0.055,6,0.042,8,0.737,11,0.003,12,0.386,13,0.845,15,2.92,16,1.418,17,0.006,19,0.45,20,1.801,22,4.147,23,0.086,28,2.417,51,3.121,53,0.97,65,1.755,99,0.004,100,0.003,150,0.21,154,2.99,183,1.189,216,3.059,219,1.489,247,1.119,466,0.977,579,3.024,612,4.357,625,2.171,631,4.07,859,4.653,1401,5.717,2660,3.925,2673,3.667,2834,6.622,2835,4.545,2836,4.545,2837,7.394,2838,7.072,2839,3.667,2840,6.236,2841,4.545,2842,5.03,2843,5.966,2844,5.966,2845,5.898,2846,5.966,2847,4.545,2848,7.344,2849,7.344,2850,5.966,2851,4.545,2852,4.545,2853,6.661,2854,4.545,2855,4.545,2856,4.545,2857,4.545,2858,5.966,2859,4.545,2860,4.545,2861,4.545,2862,4.545,2863,4.545,2864,4.545,2865,4.545,2866,4.025,2867,4.025,2868,5.966,2869,4.545,2870,4.545,2871,4.545,2872,4.545,2873,4.545,2874,3.832,2875,4.545]],["title/classes/ImageViewer.html",[179,0.099,1270,2.937]],["body/classes/ImageViewer.html",[0,0.324,3,0.043,4,0.027,5,0.027,6,0.075,11,0.004,12,0.303,13,0.505,16,1.134,17,0.006,18,1.646,19,0.776,20,1.527,23,0.072,28,1.845,46,1.029,47,1.864,53,0.869,87,1.271,92,3.693,95,3.284,99,0.002,100,0.002,125,1.392,127,1.504,129,1.86,141,1.603,145,1.118,150,0.194,179,0.054,197,0.961,205,1.609,216,1.447,219,1.331,235,3.531,247,1.794,252,1.342,271,2.615,281,2.149,332,0.814,461,1.362,466,1.582,499,3.435,502,1.884,504,0.382,562,2.729,564,4.916,577,0.837,579,2.562,581,2.663,599,2.164,600,3.978,616,1.567,621,1.567,623,2.79,625,1.071,629,3.98,630,1.739,632,1.435,633,5.359,634,1.739,635,2.763,638,3.98,640,2.978,646,3.775,657,1.739,660,4.772,760,4.212,763,3.266,794,1.81,843,2.751,963,1.81,1028,1.185,1092,2.061,1229,2.877,1230,6.778,1231,1.739,1232,2.281,1233,1.968,1234,3.736,1235,4.262,1236,4.386,1237,4.078,1238,1.619,1239,1.619,1240,1.81,1241,2.663,1242,2.763,1243,2.663,1244,2.763,1245,1.986,1246,1.986,1247,4.078,1248,4.237,1249,1.986,1250,1.986,1251,3.006,1252,3.741,1253,1.986,1254,4.078,1255,4.078,1256,3.929,1257,4.745,1258,3.439,1259,1.739,1260,1.739,1261,3.835,1262,5.451,1263,4.262,1264,3.157,1265,3.741,1266,1.986,1267,1.986,1268,1.986,1269,5.191,1270,2.573,1271,3.929,1272,3.929,1273,3.741,1274,3.741,1275,3.741,1276,4.738,1277,3.929,1278,3.58,1279,3.741,1280,1.986,1281,3.58,1282,4.476,1283,3.741,1284,6.487,1285,4.262,1286,4.262,1287,4.102,1288,2.877,1289,1.986,1290,1.986,1291,1.986,1292,1.986,1293,1.986,1294,1.986,1295,3.918,1296,3.929,1297,3.929,1298,3.929,1299,4.476,1300,4.884,1301,4.262,1302,1.986,1303,3.006,1304,3.157,1305,1.986,1306,1.986,1307,1.986,1308,3.006,1309,1.986,1310,1.986,1311,1.986,1312,1.891,1313,1.986,1314,1.986,1315,3.157,1316,1.986,1317,1.986,1318,3.006,1319,3.929,1320,1.986,1321,2.345,1322,1.986,1323,3.157,1324,4.078,1325,4.078,1326,1.986,1327,1.891,1328,1.986,1329,3.157,1330,4.262,1331,1.986,1332,1.986,1333,4.078,1334,2.663,1335,1.986,1336,1.986,1337,1.986,1338,1.986,1339,1.986,1340,3.741,1341,1.986,1342,1.676,1343,1.986,1344,1.986,1345,1.986,1346,1.986,1347,1.986,1348,3.006,1349,1.986,1350,3.006,1351,4.262,1352,1.986,1353,1.986,1354,1.986,1355,1.986,1356,4.262,1357,1.986,1358,1.986,1359,1.986,1360,1.986,1361,1.986,1362,2.877,1363,1.986,1364,1.986,1365,3.157,1366,1.986,1367,1.986,1530,2.345,2876,3.869,2877,3.869,2878,3.869,2879,3.869,2880,3.869,2881,4.331,2882,2.725,2883,2.725,2884,2.725,2885,2.725,2886,2.725,2887,2.725,2888,2.725,2889,2.725,2890,2.725,2891,2.725,2892,2.725,2893,2.725,2894,2.725,2895,2.725,2896,2.725,2897,2.725,2898,2.435,2899,2.725,2900,2.435,2901,2.725,2902,2.725,2903,2.725,2904,2.725,2905,2.725,2906,2.725,2907,2.725,2908,2.725,2909,2.435,2910,2.725,2911,2.725,2912,2.725,2913,2.725,2914,2.725,2915,2.725,2916,2.435,2917,2.725,2918,2.725,2919,2.725,2920,2.725,2921,2.725,2922,2.725,2923,2.725]],["title/components/ImageViewerAccordionComponent.html",[101,0.557,358,1.38]],["body/components/ImageViewerAccordionComponent.html",[3,0.068,4,0.04,5,0.04,6,0.063,8,0.532,11,0.002,12,0.278,15,2.314,16,0.919,17,0.006,19,0.674,20,1.34,23,0.04,24,2.516,36,1.471,46,1.104,47,1.825,48,2.019,49,2.059,52,0.998,53,0.629,55,2.17,59,1.029,65,1.34,82,1.494,99,0.003,100,0.004,101,0.767,102,1.589,103,1.95,104,1.029,105,1.112,106,1.167,107,1.045,113,2.543,114,2.041,117,2.717,118,2.196,120,1.541,122,1.589,127,1.121,128,0.925,129,1.514,131,1.517,136,0.954,144,2.571,148,1.148,150,0.198,151,0.338,169,1.112,173,1.112,175,4.482,177,1.589,179,0.079,193,1.786,199,1.758,224,1.957,233,2.149,252,1.264,268,3.356,269,1.853,270,2.158,271,2.092,272,1.598,273,2.222,275,1.537,277,2.319,281,1.786,283,3.132,284,2.496,285,2.629,286,2.962,289,1.943,290,1.343,291,3.473,292,2.82,293,1.565,295,2.158,300,2.73,306,2.629,307,4.438,308,2.367,309,2.222,317,0.595,318,1.427,319,1.494,320,1.167,321,2.187,322,1.167,323,1.693,324,1.095,325,1.112,326,1.693,327,1.112,328,1.167,329,1.112,330,1.167,331,1.112,332,1.492,333,1.167,334,1.112,335,1.13,336,1.167,337,1.112,338,1.167,339,1.112,340,1.167,341,1.589,342,1.693,343,1.813,344,2.322,345,1.693,346,1.112,347,1.693,348,1.112,349,1.148,350,1.693,351,1.112,352,1.589,353,1.693,354,1.112,355,1.993,356,1.589,357,1.693,358,2.085,359,1.167,360,1.112,361,1.112,362,1.167,363,1.112,364,1.167,365,1.112,366,1.993,367,1.112,368,1.167,369,1.112,370,1.693,371,1.112,372,1.167,373,1.112,374,1.167,375,1.13,376,1.167,377,1.095,378,1.112,379,1.167,380,1.112,381,1.167,382,1.112,383,1.095,384,1.045,385,1.112,386,1.112,387,1.095,388,1.095,389,1.13,390,1.112,391,1.167,392,1.112,393,1.13,394,1.167,395,1.589,396,1.112,397,1.167,398,1.167,480,2.584,486,2.274,489,2.792,504,0.81,511,2.792,527,2.647,528,2.222,529,2.292,532,2.274,535,2.966,536,2.451,537,1.943,597,2.451,623,1.811,631,2.571,640,3.962,656,1.663,840,3.842,891,2.222,931,3.691,1414,3.094,1417,4.217,1517,1.943,1526,1.943,1533,3.326,1556,2.451,1561,2.099,1563,2.158,1564,1.896,1565,2.099,1585,4.726,1586,3.688,1591,3.133,1594,2.543,1729,2.274,1743,2.571,1945,2.158,1946,2.044,2150,3.561,2398,3.281,2409,7.028,2658,5.168,2924,4.482,2925,6.812,2926,3.985,2927,7.471,2928,6.809,2929,5.785,2930,5.248,2931,5.248,2932,3.985,2933,4.762,2934,3.985,2935,3.985,2936,3.985,2937,4.762,2938,3.985,2939,5.785,2940,5.785,2941,6.809,2942,3.281,2943,3.561,2944,3.561,2945,3.561,2946,4.459]],["title/modules/ImageViewerAccordionModule.html",[402,0.715,2947,3.604]],["body/modules/ImageViewerAccordionModule.html",[3,0.07,4,0.07,5,0.07,6,0.053,11,0.004,17,0.006,23,0.07,47,1.602,48,1.939,99,0.005,100,0.004,150,0.277,151,0.592,175,3.775,179,0.139,204,1.945,317,1.04,358,2.822,402,1.008,404,1.945,405,1.945,406,2.636,407,1.976,408,1.976,409,2.636,424,2.306,425,1.772,427,2.496,428,2.457,544,2.71,545,2.213,2924,3.775,2925,5.738,2947,7.272,2948,6.227,2949,6.227,2950,6.227,2951,6.227,2952,6.742,2953,6.97,2954,8.392,2955,6.97,2956,6.97,2957,5.372,2958,6.227]],["title/components/ImageViewerContentComponent.html",[101,0.557,360,1.38]],["body/components/ImageViewerContentComponent.html",[3,0.075,4,0.04,5,0.04,6,0.067,8,0.533,11,0.002,12,0.279,17,0.006,19,0.675,23,0.04,24,2.522,36,2.02,46,1.107,47,1.826,48,2.047,49,1.209,50,3.804,52,1.001,53,0.63,55,1.048,59,1.032,65,1.342,82,1.497,99,0.003,100,0.004,101,0.768,102,1.593,103,1.952,104,1.032,105,1.116,106,1.17,107,1.048,113,2.551,114,2.043,117,2.718,118,2.198,120,1.544,122,1.593,127,1.123,128,0.928,129,1.631,131,1.52,136,0.956,144,3.326,148,1.152,150,0.217,151,0.339,152,2.05,169,1.116,173,1.116,175,4.74,177,1.593,179,0.08,193,1.789,197,1.286,199,1.761,205,1.026,224,2.043,233,2.154,252,0.874,268,2.279,271,1.228,279,1.739,283,3.234,285,3.61,286,1.739,289,4.165,290,1.346,292,1.949,293,1.081,296,3.032,297,2.106,298,2.165,299,1.858,300,1.603,301,1.703,302,1.603,307,2.375,317,0.597,318,1.43,319,1.497,320,1.17,321,2.19,322,1.17,323,1.697,324,1.098,325,1.116,326,1.697,327,1.116,328,1.17,329,1.116,330,1.17,331,1.116,332,1.407,333,1.17,334,1.116,335,1.134,336,1.17,337,1.116,338,1.17,339,1.116,340,1.17,341,1.593,342,1.697,343,1.817,344,2.325,345,1.697,346,1.116,347,1.697,348,1.116,349,1.152,350,1.697,351,1.116,352,1.593,353,1.697,354,1.116,355,1.997,356,1.593,357,1.697,358,1.116,359,1.17,360,2.088,361,1.116,362,1.17,363,1.116,364,1.17,365,1.116,366,1.997,367,1.116,368,1.17,369,1.116,370,1.697,371,1.116,372,1.17,373,1.116,374,1.17,375,1.134,376,1.17,377,1.098,378,1.116,379,1.17,380,1.116,381,1.17,382,1.116,383,1.098,384,1.048,385,1.116,386,1.116,387,1.098,388,1.098,389,1.134,390,1.116,391,1.17,392,1.116,393,1.134,394,1.17,395,1.593,396,1.116,397,1.17,398,1.17,466,0.708,480,2.587,486,2.279,489,3.008,504,0.955,511,2.916,528,2.229,529,2.299,532,2.279,535,2.973,623,1.817,631,2.577,640,3.798,840,3.851,931,3.7,1414,1.817,1526,1.949,1533,3.334,1585,4.734,1586,3.694,1591,3.14,1594,2.551,1729,2.279,1743,2.577,1834,4.226,1846,5.782,1946,2.05,1995,4.972,1996,4.773,2582,3.572,2587,3.572,2589,3.572,2590,3.572,2633,5.18,2640,3.572,2924,4.74,2930,5.258,2931,5.258,2933,4.773,2937,4.773,2959,6.747,2960,6.539,2961,7.943,2962,3.998,2963,3.998,2964,3.998,2965,3.998,2966,3.998,2967,3.998,2968,5.798,2969,5.18,2970,5.18,2971,3.998]],["title/modules/ImageViewerContentModule.html",[402,0.715,2972,3.431]],["body/modules/ImageViewerContentModule.html",[3,0.07,4,0.07,5,0.07,6,0.053,11,0.004,17,0.006,23,0.07,47,1.599,48,1.937,99,0.005,100,0.004,150,0.277,151,0.59,175,3.764,179,0.139,204,1.94,317,1.038,360,2.822,402,1.005,404,1.94,405,1.94,406,2.633,407,1.971,408,1.971,409,2.633,424,2.302,425,1.767,427,2.492,428,2.453,429,4.296,430,3.231,544,2.706,545,2.207,2615,6.21,2618,6.21,2924,3.764,2925,5.722,2947,7.076,2959,5.358,2972,6.921,2973,6.21,2974,6.21,2975,6.951,2976,6.21,2977,6.951]],["title/interfaces/ImageViewerData.html",[0,0.261,50,2.757]],["body/interfaces/ImageViewerData.html",[0,0.484,1,2.782,2,1.175,3,0.052,4,0.052,5,0.052,6,0.039,7,3.566,8,1.041,9,3.973,10,5.133,11,0.005,12,0.359,13,0.806,14,3.566,15,3.242,16,1.624,17,0.006,18,1.647,19,0.806,20,1.359,21,3.566,22,2.388,23,0.09,24,3.005,25,3.159,26,3.452,27,3.825,28,2.374,29,2.634,30,3.566,31,3.566,32,3.052,33,2.02,34,3.711,35,3.566,36,2.123,37,4.248,38,3.566,39,3.566,40,3.412,41,3.278,42,3.412,43,3.412,44,3.278,45,4.353,46,1.49,47,1.663,48,1.401,49,2.089,50,4.353,51,2.665,52,1.73,53,0.751,54,5.545,55,2.353,56,2.865,57,3.159,58,3.412,59,1.784,60,4.248,61,4.248,62,4.248,63,4.8,64,5.185,65,1.359,66,3.742,67,4.248,68,1.874,69,1.981,70,2.782,71,2.954,72,2.865,73,2.747,74,3.052,75,4.409,76,3.278,77,3.278,78,4.248,79,4.104,80,2.954,81,3.412,82,1.327,83,2.504,84,3.052,85,3.278,86,3.412,87,0.816,88,3.566,89,2.634,90,3.278,91,3.412,92,2.445,93,3.005,94,3.159,95,3.129,96,3.159,97,2.144,98,3.412,99,0.004,100,0.003,597,4.248]],["title/classes/ImageViewerLayer.html",[179,0.099,1586,2.677]],["body/classes/ImageViewerLayer.html",[0,0.261,3,0.05,4,0.05,5,0.05,6,0.075,11,0.003,12,0.535,13,0.785,15,2.922,16,1.519,17,0.006,18,1.731,19,0.771,20,1.785,23,0.082,28,2.12,33,3.009,36,1.712,46,1.641,48,1.996,53,0.537,82,1.976,87,0.786,99,0.004,100,0.003,127,1.719,129,1.871,145,1.277,150,0.143,179,0.099,180,2.103,197,1.493,199,1.277,219,1.037,224,1.888,226,5.541,227,6.764,228,5.312,239,3.652,247,1.365,248,3.754,252,1.471,253,1.516,272,3.068,298,4.656,300,3.068,332,1.852,461,2.47,466,1.454,502,1.165,577,1.519,579,2.063,673,2.823,710,3.603,826,2.698,834,5.541,1526,4.565,1530,3.645,1535,4.546,1536,3.04,1547,4.471,1557,3.154,1560,3.283,1564,3.203,1575,5.541,1586,3.645,1592,5.899,1724,5.99,1737,6.266,1785,5.99,1839,4.417,2867,3.603,2978,8.107,2979,5.579,2980,6.334,2981,5.99,2982,7.654,2983,7.341,2984,7.654,2985,6.764,2986,6.731,2987,6.014,2988,5.188,2989,4.943,2990,4.943,2991,4.943,2992,4.943,2993,4.943,2994,4.943,2995,4.943,2996,4.943,2997,4.943,2998,4.943,2999,4.417,3000,4.069,3001,4.417,3002,4.943,3003,6.838,3004,6.838,3005,4.943,3006,4.943,3007,4.943,3008,4.069,3009,4.417,3010,4.417,3011,4.417,3012,4.417,3013,4.417,3014,4.417,3015,4.417,3016,4.417,3017,4.417,3018,4.417,3019,4.417,3020,4.417,3021,4.417,3022,4.417]],["title/components/ImageViewerLayersComponent.html",[101,0.557,361,1.38]],["body/components/ImageViewerLayersComponent.html",[3,0.064,4,0.035,5,0.035,6,0.064,8,0.94,11,0.002,12,0.247,13,0.924,16,0.841,17,0.006,19,0.669,23,0.035,24,3.886,28,1.305,46,1.01,47,1.763,48,2.005,49,1.918,51,2.041,52,0.885,53,0.821,55,0.926,59,0.912,65,1.248,68,1.931,69,2.041,82,1.639,87,1.009,89,2.714,93,1.537,99,0.003,100,0.004,101,0.85,102,1.454,103,1.247,104,0.912,105,0.986,106,1.034,107,0.926,112,5.137,114,1.954,117,2.701,118,2.182,120,1.41,122,1.454,127,1.026,128,0.82,129,1.568,131,1.664,133,4.681,134,3.673,136,0.845,144,2.352,148,1.018,150,0.184,151,0.3,169,0.986,173,0.986,175,4.576,177,1.454,179,0.07,183,1.625,193,0.926,197,1.174,199,0.912,205,1.247,216,1.768,224,1.862,225,2.254,232,4.079,233,2.804,235,2.031,236,2.195,239,3.522,247,0.716,248,2.951,268,2.081,269,1.642,271,1.626,272,1.416,274,2.787,281,0.926,283,2.402,285,1.605,290,1.228,293,0.956,295,1.913,300,1.416,305,2.645,306,2.405,307,2.099,317,0.527,318,1.305,319,1.367,320,1.034,321,2.063,322,1.034,323,1.549,324,0.971,325,0.986,326,1.549,327,0.986,328,1.034,329,0.986,330,1.034,331,0.986,332,1.589,333,1.034,334,0.986,335,1.002,336,1.034,337,0.986,338,1.034,339,0.986,340,1.034,341,1.454,342,1.549,343,1.69,344,2.21,345,1.549,346,0.986,347,1.549,348,0.986,349,1.018,350,1.549,351,0.986,352,1.454,353,1.549,354,0.986,355,1.858,356,1.454,357,1.549,358,0.986,359,1.034,360,0.986,361,1.967,362,1.034,363,0.986,364,1.034,365,0.986,366,1.858,367,0.986,368,1.034,369,0.986,370,1.549,371,0.986,372,1.034,373,0.986,374,1.034,375,1.002,376,1.034,377,0.971,378,0.986,379,1.034,380,0.986,381,1.034,382,0.986,383,0.971,384,0.926,385,0.986,386,0.986,387,0.971,388,0.971,389,1.002,390,0.986,391,1.034,392,0.986,393,1.002,394,1.034,395,1.454,396,0.986,397,1.034,398,1.034,400,1.765,466,1.247,480,2.195,486,2.081,489,2.657,501,2.405,502,1.495,503,1.861,504,0.987,506,4.334,511,2.234,532,2.081,537,2.58,607,3.02,623,4.359,640,4.264,931,3.377,1232,2.787,1373,4.728,1397,3.144,1398,4.079,1414,2.405,1416,2.575,1517,1.722,1526,3.093,1533,3.043,1556,2.172,1561,1.861,1585,4.405,1586,5.043,1590,4.079,1592,5.432,1594,2.254,1705,2.405,1731,5.137,1741,4.405,1742,3.522,1743,2.352,1826,4.728,1848,2.723,1899,3.515,2092,3.254,2172,4.728,2459,3.515,2470,4.728,2627,4.079,2628,4.728,2754,2.575,2924,4.576,2930,4.891,2931,4.891,2933,4.357,2957,6.512,2981,5.137,3001,4.728,3023,3.533,3024,5.292,3025,5.292,3026,5.292,3027,6.346,3028,5.292,3029,5.292,3030,5.292,3031,5.292,3032,3.533,3033,3.533,3034,5.292,3035,4.357,3036,5.292,3037,3.533,3038,5.292,3039,3.533,3040,5.292,3041,3.533,3042,4.728,3043,4.079,3044,5.292,3045,3.533,3046,5.292,3047,3.533,3048,5.292,3049,5.292,3050,3.144,3051,3.156,3052,3.533,3053,3.533,3054,2.723,3055,3.533,3056,3.533,3057,3.533,3058,4.728,3059,4.728,3060,5.292,3061,2.908]],["title/modules/ImageViewerLayersModule.html",[402,0.715,2952,3.431]],["body/modules/ImageViewerLayersModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,47,1.298,48,1.806,99,0.005,100,0.004,150,0.28,151,0.577,175,3.684,179,0.136,204,1.899,224,1.678,317,1.015,332,1.279,335,2.345,361,2.814,402,0.984,404,1.899,405,1.899,406,2.608,407,1.929,408,1.929,409,2.608,424,2.272,425,1.73,427,2.46,428,2.421,544,2.671,545,2.16,1404,5.6,1426,7.389,1517,3.316,1573,5.6,1597,7.041,2924,3.684,2952,6.97,2957,5.243,3062,6.077,3063,6.077,3064,6.077,3065,6.077,3066,7.041,3067,6.802,3068,6.802,3069,5.6,3070,6.802,3071,6.802]],["title/components/ImageViewerLegendComponent.html",[101,0.557,363,1.38]],["body/components/ImageViewerLegendComponent.html",[3,0.072,4,0.044,5,0.044,6,0.063,8,0.587,11,0.003,12,0.307,13,0.724,17,0.006,19,0.586,23,0.044,24,3.131,47,1.83,48,2.029,49,2.176,52,1.102,53,0.782,55,1.154,56,4.013,59,1.137,65,1.416,68,1.606,87,0.7,93,2.702,99,0.004,100,0.004,101,0.81,102,1.706,103,1.943,104,1.137,105,1.229,106,1.288,107,1.154,114,2.11,117,2.731,118,2.207,120,1.654,122,1.706,128,1.022,129,1.492,131,1.887,136,1.053,148,1.268,150,0.18,151,0.374,169,1.229,173,1.229,175,4.465,177,1.706,179,0.088,193,1.154,199,1.858,205,0.779,224,1.775,239,2.761,247,0.892,268,3.241,269,2.046,270,2.384,271,2.211,272,1.764,281,1.154,284,2.075,285,2,290,1.442,292,2.146,293,1.68,297,2.318,300,1.764,305,3.104,306,2.822,317,1.312,318,1.532,319,1.604,320,1.288,321,2.288,322,1.288,323,1.818,324,1.209,325,1.229,326,1.818,327,1.229,328,1.288,329,1.229,330,1.288,331,1.229,332,1.55,333,1.288,334,1.229,335,1.248,336,1.288,337,1.229,338,1.288,339,1.229,340,1.288,341,1.706,342,1.818,343,1.917,344,2.413,345,1.818,346,1.229,347,1.818,348,1.229,349,1.268,350,1.818,351,1.229,352,1.706,353,1.818,354,1.229,355,2.107,356,1.706,357,1.818,358,1.229,359,1.288,360,1.229,361,1.229,362,1.288,363,2.182,364,1.288,365,1.229,366,2.107,367,1.229,368,1.288,369,1.229,370,1.818,371,1.229,372,1.288,373,1.229,374,1.288,375,1.248,376,1.288,377,1.209,378,1.229,379,1.288,380,1.229,381,1.288,382,1.229,383,1.209,384,1.154,385,1.229,386,1.229,387,1.209,388,1.209,389,1.248,390,1.229,391,1.288,392,1.229,393,1.248,394,1.288,395,1.706,396,1.229,397,1.288,398,1.288,466,0.779,480,2.148,502,1.037,527,2.924,532,2.442,562,2.041,623,2,640,4.159,654,1.875,655,2.454,656,1.837,759,2.454,840,4.78,1414,3.552,1417,4.527,1530,3.364,1536,3.819,1561,2.318,1580,2.955,1581,2.955,1586,4.465,1593,2.094,1594,2.809,1596,3.624,2400,3.624,2924,4.465,3058,5.549,3072,6.786,3073,4.402,3074,5.549,3075,7.197,3076,6.211,3077,6.43,3078,6.211,3079,4.402,3080,3.932,3081,4.402,3082,3.932,3083,3.932,3084,5.549,3085,4.402,3086,4.402,3087,4.402,3088,4.402]],["title/modules/ImageViewerLegendModule.html",[402,0.715,3089,3.604]],["body/modules/ImageViewerLegendModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,47,1.374,48,1.851,99,0.005,100,0.004,150,0.265,151,0.611,175,3.897,179,0.144,204,2.008,317,1.074,363,2.833,402,1.041,404,2.008,405,2.008,406,2.672,407,2.04,408,2.04,409,2.672,424,2.35,425,1.83,427,2.14,428,2.504,544,2.762,545,2.285,2924,3.897,3072,5.924,3089,7.207,3090,6.429,3091,6.429,3092,6.429,3093,7.196,3094,7.196]],["title/modules/ImageViewerModule.html",[402,0.715,419,3.604]],["body/modules/ImageViewerModule.html",[3,0.067,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,23,0.067,47,1.683,48,1.947,99,0.005,100,0.004,150,0.274,151,0.564,175,3.598,176,5.12,179,0.132,204,1.854,317,0.992,402,0.961,404,1.854,405,1.854,406,2.386,407,1.884,408,2.311,409,2.581,419,7.397,424,2.24,425,1.689,427,2.425,428,2.386,438,5.935,2654,5.469,2924,3.598,2952,6.977,2957,5.12,2958,5.935,2959,5.12,2972,6.977,3095,5.935,3096,5.935,3097,5.935,3098,7.328,3099,6.666,3100,6.643,3101,5.935]],["title/components/ImageViewerPopoverComponent.html",[101,0.557,173,1.38]],["body/components/ImageViewerPopoverComponent.html",[3,0.06,4,0.06,5,0.033,6,0.067,8,0.9,11,0.005,12,0.346,13,0.578,15,1.685,16,1.155,17,0.006,19,0.65,20,1.43,23,0.033,26,4.214,28,1.663,33,1.274,36,2.383,40,4,41,3.164,44,2.068,47,1.858,48,2.047,49,1.499,50,4.275,52,0.812,53,0.833,54,2.153,55,1.3,59,0.837,65,1.185,69,1.912,82,1.742,87,1.072,89,2.542,99,0.003,100,0.003,101,0.819,102,1.362,103,1.589,104,0.837,105,0.905,106,0.949,107,0.85,114,2.029,117,2.685,118,2.172,120,1.32,122,1.362,125,0.837,127,1.409,128,0.752,129,1.643,134,4.681,136,0.775,141,2.509,145,1.742,148,0.934,150,0.175,151,0.275,152,1.662,169,0.905,173,1.883,175,4.74,176,6.746,177,1.362,179,0.065,183,1.452,184,2.362,193,2.01,197,1.1,199,0.837,202,3.822,205,1.456,215,2.478,216,1.083,219,0.928,224,1.485,233,1.842,238,3.831,239,2.204,252,1.084,253,0.73,268,2.652,269,1.507,270,1.755,271,2.234,272,2.704,273,2.765,274,2.611,275,1.25,276,2.068,277,1.299,278,2.498,279,2.619,280,1.993,281,1.906,284,2.428,285,3.483,288,1.993,290,1.151,291,1.507,292,1.58,293,1.341,294,2.498,296,1.441,297,2.611,298,1.755,299,2.799,300,1.299,301,1.38,302,1.299,303,2.153,312,3.842,317,0.74,318,1.223,319,1.28,320,0.949,321,1.974,322,0.949,323,1.451,324,0.89,325,0.905,326,1.451,327,0.905,328,0.949,329,0.905,330,0.949,331,0.905,332,1.441,333,0.949,334,0.905,335,0.919,336,0.949,337,0.905,338,0.949,339,0.905,340,0.949,341,1.362,342,1.451,343,1.604,344,2.128,345,1.451,346,0.905,347,1.451,348,0.905,349,0.934,350,1.451,351,0.905,352,1.362,353,1.451,354,0.905,355,1.763,356,1.362,357,1.451,358,0.905,359,0.949,360,0.905,361,0.905,362,0.949,363,0.905,364,0.949,365,0.905,366,1.763,367,0.905,368,0.949,369,0.905,370,1.451,371,0.905,372,0.949,373,0.905,374,0.949,375,0.919,376,0.949,377,0.89,378,0.905,379,0.949,380,0.905,381,0.949,382,0.905,383,0.89,384,0.85,385,0.905,386,0.905,387,0.89,388,0.89,389,0.919,390,0.905,391,0.949,392,0.905,393,0.919,394,0.949,395,1.362,396,0.905,397,0.949,398,0.949,401,2.896,425,0.824,466,1.357,496,2.068,502,1.589,516,1.58,562,1.912,577,0.996,673,2.215,684,1.299,726,3.441,953,1.949,1214,3.164,1232,4.037,1401,1.864,1521,3.293,1566,2.498,1576,3.614,1580,2.359,1581,2.359,1590,3.822,1593,1.542,1705,2.253,1846,4.304,1886,4.147,1887,4.147,1891,3.049,1902,2.851,1963,4.389,2026,2.542,2030,3.171,2068,2.498,2070,2.668,2071,2.153,2099,1.662,2473,3.441,2619,2.896,2620,5.38,2621,4.43,2789,4.681,2924,4.74,2930,4.641,3102,4.958,3103,4.43,3104,6.021,3105,6.021,3106,4.958,3107,4.958,3108,3.241,3109,4.916,3110,4.958,3111,3.241,3112,3.822,3113,4.958,3114,3.241,3115,1.993,3116,4.958,3117,3.241,3118,4.958,3119,3.241,3120,6.021,3121,3.241,3122,3.241,3123,4.43,3124,6.021,3125,3.241,3126,3.241,3127,3.241,3128,4.958,3129,3.241,3130,3.241,3131,4.958,3132,3.241,3133,3.241,3134,4.958,3135,3.241,3136,3.241,3137,3.241,3138,2.896,3139,3.241,3140,3.241,3141,3.241]],["title/modules/ImageViewerPopoverModule.html",[402,0.715,3098,3.604]],["body/modules/ImageViewerPopoverModule.html",[3,0.066,4,0.066,5,0.066,6,0.05,11,0.004,17,0.006,23,0.066,47,1.68,48,1.971,99,0.005,100,0.004,150,0.282,151,0.562,172,5.447,173,2.804,175,3.584,176,5.1,179,0.132,204,1.847,317,0.988,402,0.957,404,1.847,405,1.847,406,2.577,407,1.876,408,1.876,409,2.577,416,6.66,424,2.234,425,1.683,427,2.419,428,2.38,446,5.912,544,2.626,545,2.101,2653,5.912,2654,5.447,2924,3.584,2959,5.1,2972,6.66,3072,5.447,3089,6.994,3098,7.394,3099,6.66,3101,5.912,3142,5.912,3143,5.912,3144,6.617,3145,5.912,3146,6.617]],["title/interfaces/ImageViewerProps.html",[0,0.261,1259,3.155]],["body/interfaces/ImageViewerProps.html",[0,0.376,2,0.824,3,0.054,4,0.036,5,0.036,6,0.028,11,0.004,12,0.375,13,0.627,16,1.405,17,0.006,18,1.702,19,0.767,23,0.08,28,2.181,46,1.026,47,0.688,87,1.444,92,3.935,95,3.052,99,0.003,100,0.002,125,0.931,141,2.265,145,1.388,150,0.221,179,0.072,205,1.537,216,1.795,219,1.415,235,2.073,247,1.895,252,1.556,271,2.758,281,2.319,332,1.01,499,3.904,504,0.505,562,2.507,564,4.682,579,2.97,581,3.304,600,3.97,616,2.073,621,2.073,623,2.919,625,1.417,629,5.049,630,4.099,632,1.899,633,5.253,634,2.3,635,3.294,638,3.816,640,2.855,646,3.304,657,2.3,660,5.277,760,3.623,763,3.711,794,2.395,843,3.079,963,2.395,1028,1.568,1092,2.557,1229,3.569,1230,2.502,1231,2.3,1232,2.83,1233,2.442,1234,3.97,1235,4.941,1236,4.682,1237,4.266,1238,2.142,1239,2.142,1240,2.395,1241,3.304,1242,3.429,1243,3.304,1244,3.429,1245,2.628,1246,2.628,1247,3.569,1248,4.523,1249,2.628,1250,2.628,1251,3.729,1252,4.458,1253,2.628,1254,3.569,1255,3.569,1256,4.682,1257,4.74,1258,3.429,1259,3.429,1260,4.543,1261,4.241,1262,6.196,1263,5.74,1264,3.917,1265,4.458,1266,2.628,1267,2.628,1268,2.628,1269,4.458,1270,2.142,1271,4.682,1272,4.682,1273,2.502,1274,2.502,1275,4.458,1276,4.728,1277,4.682,1278,2.395,1279,2.502,1280,2.628,1281,2.395,1282,5.189,1283,2.502,1284,6.036,1285,3.729,1286,3.729,1287,4.094,1288,2.395,1289,2.628,1290,2.628,1291,2.628,1292,2.628,1293,2.628,1294,2.628,1295,2.3,1296,4.682,1297,4.682,1298,4.682,1299,5.189,1300,5.55,1301,2.502,1302,2.628,1303,2.502,1304,3.917,1305,2.628,1306,2.628,1307,2.628,1308,2.502,1309,2.628,1310,2.628,1311,2.628,1312,2.502,1313,2.628,1314,2.628,1315,3.917,1316,2.628,1317,2.628,1318,2.502,1319,4.682,1320,2.628,1321,2.91,1322,2.628,1323,3.917,1324,2.395,1325,2.395,1326,2.628,1327,2.502,1328,2.628,1329,3.917,1330,2.502,1331,2.628,1332,2.628,1333,2.395,1334,3.304,1335,2.628,1336,2.628,1337,2.628,1338,2.628,1339,2.628,1340,2.502,1341,2.628,1342,2.217,1343,2.628,1344,2.628,1345,2.628,1346,2.628,1347,2.628,1348,2.502,1349,2.628,1350,2.502,1351,3.729,1352,2.628,1353,2.628,1354,2.628,1355,2.628,1356,2.502,1357,2.628,1358,2.628,1359,2.628,1360,2.628,1361,2.628,1362,2.395,1363,2.628,1364,2.628,1365,3.917,1366,2.628,1367,2.628]],["title/components/InfoButtonComponent.html",[101,0.557,365,1.38]],["body/components/InfoButtonComponent.html",[3,0.099,4,0.048,5,0.048,6,0.057,8,0.874,11,0.003,12,0.332,17,0.006,19,0.387,23,0.048,33,2.577,36,1.209,47,1.619,48,1.777,52,1.191,53,0.815,55,1.247,59,1.228,65,1.475,87,0.756,89,3.361,99,0.004,100,0.004,101,1.012,102,1.801,103,1.544,104,1.228,105,1.327,106,1.392,107,1.247,114,2.162,117,2.74,118,2.215,120,1.745,122,1.801,125,1.228,128,1.104,129,1.251,136,1.137,148,1.37,150,0.218,151,0.404,169,1.327,173,1.327,177,1.801,179,0.095,180,2.047,181,2.227,183,1.024,193,1.247,197,1.454,199,1.228,205,1.16,224,1.85,281,1.247,290,1.521,293,1.286,296,3.896,301,2.025,302,1.906,317,0.71,318,1.616,319,1.692,320,1.392,321,2.366,322,1.392,323,1.918,324,1.306,325,1.327,326,1.918,327,1.327,328,1.392,329,1.327,330,1.392,331,1.327,332,1.594,333,1.392,334,1.327,335,1.348,336,1.392,337,1.327,338,1.392,339,1.327,340,1.392,341,1.801,342,1.918,343,1.997,344,2.482,345,1.918,346,1.327,347,1.918,348,1.327,349,1.37,350,1.918,351,1.327,352,1.801,353,1.918,354,1.327,355,2.195,356,1.801,357,1.918,358,1.327,359,1.392,360,1.327,361,1.327,362,1.392,363,1.327,364,1.392,365,2.256,366,2.195,367,1.829,368,1.392,369,1.327,370,1.918,371,1.327,372,1.392,373,1.327,374,1.392,375,1.348,376,1.392,377,1.306,378,1.327,379,1.392,380,1.327,381,1.392,382,1.327,383,1.306,384,1.247,385,1.327,386,1.327,387,1.306,388,1.306,389,1.348,390,1.327,391,1.392,392,1.327,393,1.348,394,1.392,395,1.801,396,1.327,397,1.392,398,1.392,441,3.466,466,0.841,502,1.12,577,1.461,953,2.577,981,1.981,1109,2.734,1576,4.777,1728,4.549,1845,4.353,2030,2.504,2735,3.914,2749,5.855,2773,6.174,3147,5.781,3148,3.914,3149,6.655,3150,7.222,3151,6.174,3152,5.395,3153,8.084,3154,4.754,3155,8.084,3156,4.754,3157,7.576,3158,4.777,3159,4.754,3160,6.554,3161,3.914,3162,4.248,3163,4.754,3164,4.754]],["title/modules/InfoButtonModule.html",[402,0.715,2765,3.604]],["body/modules/InfoButtonModule.html",[3,0.091,4,0.07,5,0.07,6,0.054,11,0.004,17,0.006,23,0.07,99,0.005,100,0.004,150,0.278,151,0.596,179,0.14,204,1.959,317,1.048,365,2.825,402,1.015,404,1.959,405,1.959,406,2.644,407,1.99,408,1.99,409,2.644,420,6.753,424,2.315,425,1.785,427,2.507,428,2.467,429,4.321,430,3.262,441,5.115,442,6.27,544,2.721,545,2.229,2372,6.27,2765,7.28,2773,5.777,3147,5.409,3165,6.27,3166,6.27,3167,7.018,3168,6.27,3169,7.018]],["title/components/InfoDialogComponent.html",[101,0.557,367,1.38]],["body/components/InfoDialogComponent.html",[0,0.4,3,0.091,4,0.032,5,0.059,6,0.055,8,0.787,11,0.002,12,0.412,13,0.564,17,0.006,19,0.481,23,0.032,29,3.881,33,1.234,36,2.355,47,1.368,48,1.534,49,0.949,52,1.478,53,0.642,55,0.823,59,0.811,65,1.551,79,2.874,83,3.233,87,0.499,89,2.481,99,0.003,100,0.003,101,1.016,102,1.329,103,1.14,104,0.811,105,0.876,106,0.919,107,0.823,114,1.867,117,2.679,118,2.198,120,1.289,122,1.329,128,1.37,129,1.266,131,1.548,136,0.751,147,3.214,148,0.904,150,0.14,151,0.266,169,0.876,173,0.876,177,1.329,179,0.063,180,2.238,181,1.644,183,1.042,193,0.823,195,4.097,197,1.589,199,1.524,205,0.856,216,1.616,224,1.456,225,3.087,248,2.698,252,1.45,271,1.487,275,1.866,279,2.568,283,1.188,284,2.72,285,2.682,286,2.885,289,2.877,290,1.123,291,1.459,292,3.492,293,1.938,297,1.653,298,1.7,301,1.337,302,1.258,308,1.865,309,1.751,317,0.469,318,1.193,319,1.249,320,0.919,321,1.942,322,0.919,323,1.416,324,0.863,325,1.35,326,1.416,327,0.876,328,0.919,329,0.876,330,0.919,331,0.876,332,1.347,333,0.919,334,0.876,335,0.89,336,0.919,337,0.876,338,0.919,339,0.876,340,0.919,341,1.329,342,1.416,343,1.572,344,2.097,345,1.416,346,0.876,347,1.416,348,0.876,349,0.904,350,1.416,351,0.876,352,1.329,353,1.416,354,0.876,355,1.728,356,1.329,357,1.416,358,0.876,359,0.919,360,0.876,361,0.876,362,0.919,363,0.876,364,0.919,365,0.876,366,1.728,367,1.851,368,0.919,369,0.876,370,1.416,371,0.876,372,0.919,373,0.876,374,0.919,375,0.89,376,0.919,377,0.863,378,0.876,379,0.919,380,0.876,381,0.919,382,0.876,383,0.863,384,0.823,385,0.876,386,0.876,387,0.863,388,0.863,389,0.89,390,0.876,391,0.919,392,0.876,393,0.89,394,0.919,395,1.329,396,0.876,397,0.919,398,0.919,441,5.222,466,0.556,480,1.673,502,0.74,527,2.085,528,1.751,529,1.805,577,1.487,599,1.569,655,2.698,656,1.31,699,2.294,859,2.62,860,3.087,902,5.027,911,3.087,953,2.321,984,5.758,985,3.358,1171,3.358,1232,3.493,1295,3.087,1384,3.983,1388,4.496,1413,2.584,1414,3.014,1576,3.527,1611,5.46,1734,6.219,1799,2.179,1801,2.584,1835,3.527,1846,4.83,2171,5.926,2266,3.527,2326,5.409,2330,2.288,2583,3.358,2758,2.805,3000,3.983,3074,4.323,3147,5.522,3149,6.704,3157,7.974,3161,2.584,3170,3.139,3171,4.838,3172,3.358,3173,4.838,3174,4.838,3175,5.903,3176,4.838,3177,7.164,3178,3.139,3179,7.164,3180,3.139,3181,5.903,3182,5.274,3183,5.903,3184,3.139,3185,4.838,3186,3.139,3187,3.139,3188,1.805,3189,3.139,3190,3.139,3191,8.143,3192,6.633,3193,7.569,3194,4.838,3195,4.838,3196,4.838,3197,4.838,3198,4.838,3199,4.838,3200,4.838,3201,4.838,3202,3.087,3203,4.838,3204,4.838,3205,4.323,3206,4.838,3207,4.838,3208,4.838,3209,4.838,3210,4.838,3211,6.231,3212,6.231,3213,5.46,3214,4.838,3215,4.838,3216,4.838,3217,4.838,3218,4.838,3219,4.323,3220,5.926,3221,4.838,3222,6.633,3223,6.633,3224,6.633,3225,5.926,3226,4.838,3227,6.633,3228,4.838,3229,3.983,3230,4.323,3231,4.838,3232,4.838,3233,4.838,3234,5.46,3235,6.704,3236,3.358,3237,6.633,3238,4.838,3239,4.838,3240,4.323,3241,4.838,3242,3.983,3243,4.838,3244,2.975,3245,4.838,3246,4.838,3247,4.838,3248,4.838,3249,4.838,3250,3.729,3251,4.838,3252,4.838,3253,4.838,3254,4.838,3255,4.323,3256,4.323,3257,4.323,3258,4.838,3259,4.838,3260,4.838,3261,4.838,3262,4.838,3263,4.838,3264,4.323,3265,7.046,3266,4.838,3267,3.983,3268,4.838,3269,4.838,3270,4.838,3271,4.838,3272,4.323,3273,4.323,3274,4.838,3275,4.838,3276,4.838,3277,4.838,3278,4.838,3279,4.838,3280,4.838,3281,4.838,3282,4.838,3283,4.838,3284,4.838,3285,4.838,3286,4.838,3287,6.633,3288,4.838,3289,4.323,3290,4.323,3291,4.838,3292,3.139,3293,4.838,3294,3.139,3295,3.139,3296,3.139,3297,3.139]],["title/modules/InfoDialogModule.html",[402,0.715,420,3.431]],["body/modules/InfoDialogModule.html",[3,0.085,4,0.072,5,0.072,6,0.054,11,0.004,17,0.006,23,0.072,99,0.005,100,0.004,150,0.279,151,0.605,179,0.142,204,1.989,317,1.064,367,2.83,402,1.03,404,1.989,405,1.989,406,2.661,407,2.02,408,2.02,409,2.661,420,6.849,424,2.337,425,1.812,427,2.12,428,2.489,429,4.361,430,3.312,441,5.194,544,2.746,545,2.263,3147,5.492,3161,5.866,3162,6.366,3298,6.366,3299,6.366,3300,6.366,3301,7.125,3302,8.504]],["title/classes/InitializationState.html",[179,0.099,3303,3.811]],["body/classes/InitializationState.html",[3,0.026,4,0.026,5,0.026,6,0.056,8,0.351,11,0.002,12,0.184,13,0.491,17,0.006,18,0.757,19,0.572,20,1.295,23,0.026,46,1.609,53,0.572,68,3.021,82,1.904,95,3.319,99,0.002,100,0.002,101,0.791,103,0.62,105,0.734,114,2.383,117,0.701,118,0.907,120,0.701,122,0.723,125,1.554,127,1.166,129,1.341,131,1.104,141,2.727,145,2.138,146,1.618,150,0.191,151,0.223,153,1.034,177,1.447,179,0.105,180,0.822,181,0.894,183,1.588,193,1.104,194,3.122,197,0.934,199,1.087,205,1.536,215,4.337,216,1.759,219,1.249,223,3.07,225,2.687,233,0.977,236,1.456,247,1.832,252,1.871,277,2.413,281,2.276,284,2.9,290,0.611,299,1.223,312,2.687,318,1.039,319,1.904,387,0.723,425,1.071,461,1.315,466,1.243,480,2.081,489,0.926,502,0.992,503,1.386,504,1.033,510,1.282,511,2.596,517,1.282,530,1.425,562,2.68,607,2.864,654,3.591,656,3.518,673,2.517,699,0.91,712,2.243,759,4.407,760,2.864,763,2.566,826,1.055,827,2.687,832,1.679,843,2.031,847,2.923,868,1.513,870,1.386,891,2.348,915,3.07,953,1.656,977,2.505,981,0.795,1221,1.282,1401,3.461,1470,2.166,1564,3.509,1580,1.252,1581,1.252,1593,1.252,1705,1.914,1728,1.826,1729,1.034,1741,1.826,1742,2.631,1835,1.918,1846,2.687,1849,2.028,1871,2.004,1872,2.028,1874,2.07,1877,2.153,1880,3.36,1882,1.252,1885,1.826,1886,2.589,1887,2.589,1890,1.722,1891,1.618,1894,2.07,1896,2.028,1898,1.679,1900,1.679,1902,2.421,1906,1.618,1909,1.794,1911,1.467,1924,2.687,1925,1.679,1928,3.07,1945,4.15,1946,3.929,1950,1.618,1954,1.467,1955,1.826,1956,2.028,1957,1.826,1958,1.679,1961,3.246,1966,1.679,2000,2.028,2017,1.826,2020,1.826,2026,4.246,2029,2.028,2030,2.218,2031,2.028,2032,1.918,2047,1.826,2051,3.376,2053,2.159,2054,1.467,2071,2.797,2099,4.391,2104,3.128,2268,1.918,2272,1.425,2273,2.687,2283,2.348,2406,5.075,2473,1.826,2505,2.028,3112,6.092,3172,3.654,3303,4.058,3304,2.35,3305,3.762,3306,4.704,3307,6.589,3308,5.377,3309,5.377,3310,3.762,3311,4.704,3312,2.631,3313,2.631,3314,2.631,3315,2.631,3316,2.631,3317,2.631,3318,4.704,3319,2.35,3320,2.35,3321,2.166,3322,4.334,3323,6.072,3324,4.334,3325,4.334,3326,5.782,3327,4.334,3328,5.42,3329,3.467,3330,4.334,3331,5.377,3332,3.762,3333,5.377,3334,3.762,3335,2.35,3336,2.028,3337,2.35,3338,2.35,3339,2.35,3340,2.35,3341,2.35,3342,2.35,3343,2.35,3344,3.762,3345,2.35,3346,3.762,3347,2.35,3348,2.35,3349,2.35,3350,2.028,3351,5.075,3352,2.35,3353,2.35,3354,2.35,3355,4.058,3356,2.028,3357,3.246,3358,3.762,3359,2.35,3360,6.275,3361,2.35,3362,3.762,3363,2.35,3364,2.35,3365,2.35,3366,4.704,3367,2.35,3368,2.35,3369,2.35,3370,2.35,3371,4.704,3372,2.35,3373,2.35,3374,3.246,3375,2.35,3376,2.35,3377,2.35,3378,6.275,3379,3.762,3380,5.377,3381,3.762,3382,3.762,3383,2.35,3384,4.704,3385,3.762,3386,2.35,3387,2.35,3388,2.35,3389,3.762,3390,3.762,3391,2.35,3392,2.35,3393,4.704,3394,2.35,3395,2.35,3396,2.35,3397,2.35,3398,2.35,3399,2.35,3400,2.028,3401,2.35,3402,2.35,3403,2.35,3404,4.639,3405,4.704,3406,5.377,3407,3.762,3408,3.762,3409,2.35,3410,2.35,3411,2.35,3412,2.35,3413,2.35,3414,2.35,3415,2.028,3416,2.028,3417,2.35,3418,6.275,3419,3.762,3420,2.35,3421,2.35,3422,2.35,3423,2.35,3424,2.35,3425,2.35,3426,2.35,3427,2.35,3428,1.563,3429,2.35,3430,2.35,3431,3.762,3432,2.35,3433,2.35,3434,2.35,3435,2.35,3436,2.35,3437,2.35,3438,3.762,3439,4.704,3440,2.35,3441,2.35,3442,3.762,3443,2.35,3444,2.35,3445,4.704,3446,4.704,3447,4.704,3448,4.334,3449,2.35,3450,4.704,3451,4.704,3452,2.35,3453,2.35]],["title/classes/InitializationState-1.html",[179,0.082,253,0.932,3303,3.188]],["body/classes/InitializationState-1.html",[3,0.026,4,0.026,5,0.026,6,0.056,8,0.351,11,0.002,12,0.184,13,0.491,17,0.006,18,0.757,19,0.572,20,1.295,23,0.026,46,1.609,53,0.572,68,3.021,82,1.904,95,3.319,99,0.002,100,0.002,101,0.791,103,0.62,105,0.734,114,2.383,117,0.701,118,0.907,120,0.701,122,0.723,125,1.554,127,1.166,129,1.341,131,1.104,141,2.727,145,2.138,146,1.618,150,0.191,151,0.223,153,1.034,177,1.447,179,0.105,180,0.822,181,0.894,183,1.588,193,1.104,194,3.122,197,0.934,199,1.087,205,1.536,215,4.337,216,1.759,219,1.249,223,3.07,225,2.687,233,0.977,236,1.456,247,1.832,252,1.871,277,2.413,281,2.276,284,2.9,290,0.611,299,1.223,312,2.687,318,1.039,319,1.904,387,0.723,425,1.071,461,1.315,466,1.243,480,2.081,489,0.926,502,0.992,503,1.386,504,1.033,510,1.282,511,2.596,517,1.282,530,1.425,562,2.68,607,2.864,654,3.591,656,3.518,673,2.517,699,0.91,712,2.243,759,4.407,760,2.864,763,2.566,826,1.055,827,2.687,832,1.679,843,2.031,847,2.923,868,1.513,870,1.386,891,2.348,915,3.07,953,1.656,977,2.505,981,0.795,1221,1.282,1401,3.461,1470,2.166,1564,3.509,1580,1.252,1581,1.252,1593,1.252,1705,1.914,1728,1.826,1729,1.034,1741,1.826,1742,2.631,1835,1.918,1846,2.687,1849,2.028,1871,2.004,1872,2.028,1874,2.07,1877,2.153,1880,3.36,1882,1.252,1885,1.826,1886,2.589,1887,2.589,1890,1.722,1891,1.618,1894,2.07,1896,2.028,1898,1.679,1900,1.679,1902,2.421,1906,1.618,1909,1.794,1911,1.467,1924,2.687,1925,1.679,1928,3.07,1945,4.15,1946,3.929,1950,1.618,1954,1.467,1955,1.826,1956,2.028,1957,1.826,1958,1.679,1961,3.246,1966,1.679,2000,2.028,2017,1.826,2020,1.826,2026,4.246,2029,2.028,2030,2.218,2031,2.028,2032,1.918,2047,1.826,2051,3.376,2053,2.159,2054,1.467,2071,2.797,2099,4.391,2104,3.128,2268,1.918,2272,1.425,2273,2.687,2283,2.348,2406,5.075,2473,1.826,2505,2.028,3112,6.092,3172,3.654,3303,4.058,3305,3.762,3306,4.704,3307,6.589,3308,5.377,3309,5.377,3310,3.762,3311,4.704,3318,4.704,3319,2.35,3320,2.35,3321,2.166,3322,4.334,3323,6.072,3324,4.334,3325,4.334,3326,5.782,3327,4.334,3328,5.42,3329,3.467,3330,4.334,3331,5.377,3332,3.762,3333,5.377,3334,3.762,3335,2.35,3336,2.028,3337,2.35,3338,2.35,3339,2.35,3340,2.35,3341,2.35,3342,2.35,3343,2.35,3344,3.762,3345,2.35,3346,3.762,3347,2.35,3348,2.35,3349,2.35,3350,2.028,3351,5.075,3352,2.35,3353,2.35,3354,2.35,3355,4.058,3356,2.028,3357,3.246,3358,3.762,3359,2.35,3360,6.275,3361,2.35,3362,3.762,3363,2.35,3364,2.35,3365,2.35,3366,4.704,3367,2.35,3368,2.35,3369,2.35,3370,2.35,3371,4.704,3372,2.35,3373,2.35,3374,3.246,3375,2.35,3376,2.35,3377,2.35,3378,6.275,3379,3.762,3380,5.377,3381,3.762,3382,3.762,3383,2.35,3384,4.704,3385,3.762,3386,2.35,3387,2.35,3388,2.35,3389,3.762,3390,3.762,3391,2.35,3392,2.35,3393,4.704,3394,2.35,3395,2.35,3396,2.35,3397,2.35,3398,2.35,3399,2.35,3400,2.028,3401,2.35,3402,2.35,3403,2.35,3404,4.639,3405,4.704,3406,5.377,3407,3.762,3408,3.762,3409,2.35,3410,2.35,3411,2.35,3412,2.35,3413,2.35,3414,2.35,3415,2.028,3416,2.028,3417,2.35,3418,6.275,3419,3.762,3420,2.35,3421,2.35,3422,2.35,3423,2.35,3424,2.35,3425,2.35,3426,2.35,3427,2.35,3428,1.563,3429,2.35,3430,2.35,3431,3.762,3432,2.35,3433,2.35,3434,2.35,3435,2.35,3436,2.35,3437,2.35,3438,3.762,3439,4.704,3440,2.35,3441,2.35,3442,3.762,3443,2.35,3444,2.35,3445,4.704,3446,4.704,3447,4.704,3448,4.334,3449,2.35,3450,4.704,3451,4.704,3452,2.35,3453,2.35,3454,2.35,3455,2.631,3456,2.631,3457,2.631,3458,2.631,3459,2.631,3460,2.631]],["title/interfaces/JsonOntologyNode.html",[0,0.261,2842,3.431]],["body/interfaces/JsonOntologyNode.html",[0,0.467,2,1.228,3,0.054,4,0.054,5,0.054,6,0.041,8,0.716,11,0.003,12,0.375,13,0.83,15,3.005,16,1.268,17,0.006,19,0.65,20,1.787,22,4.11,23,0.085,28,2.286,51,2.745,53,0.961,65,1.787,87,1.131,99,0.004,100,0.003,150,0.206,154,2.908,183,1.156,216,3.035,219,1.482,247,1.089,466,0.95,579,2.969,612,4.41,625,2.798,631,4.275,859,4.602,1401,5.719,2660,3.854,2673,3.567,2834,7.003,2835,4.421,2836,4.421,2837,7.401,2838,6.995,2839,3.567,2840,7.144,2841,5.858,2842,5.539,2843,7.278,2844,7.278,2845,6.194,2846,7.278,2847,4.421,2848,7.278,2849,7.278,2850,5.858,2851,4.421,2852,4.421,2853,6.57,2854,4.421,2855,4.421,2856,4.421,2857,4.421,2858,5.858,2859,4.421,2860,4.421,2861,4.421,2862,4.421,2863,4.421,2864,4.421,2865,4.421,2866,3.914,2867,3.914,2868,5.858,2869,4.421,2870,4.421,2871,4.421,2872,4.421,2873,4.421,2874,3.727,2875,4.421]],["title/components/LeftSidebarComponent.html",[101,0.557,369,1.38]],["body/components/LeftSidebarComponent.html",[3,0.076,4,0.048,5,0.048,6,0.058,11,0.003,12,0.336,17,0.006,23,0.048,47,1.625,48,1.783,49,1.995,52,1.653,53,0.717,55,1.26,59,1.947,65,1.483,93,2.09,99,0.004,100,0.004,101,0.849,102,1.814,103,1.555,104,1.24,105,1.341,106,1.406,107,1.26,114,2.169,117,2.741,118,2.216,120,1.758,122,1.814,128,1.115,129,1.26,136,1.149,148,1.384,150,0.139,151,0.408,169,1.341,173,1.341,177,1.814,179,0.096,193,2.47,197,1.464,199,1.704,205,1.168,224,1.86,252,1.442,268,2.965,269,2.233,270,2.602,271,2.028,272,2.646,279,2.871,281,2.129,284,3.009,285,3.689,286,2.09,290,1.532,293,1.299,295,3.575,297,2.53,300,2.646,305,2.4,306,2.183,317,0.717,318,1.628,319,1.704,320,1.406,321,2.377,322,1.406,323,1.932,324,1.32,325,1.341,326,1.932,327,1.341,328,1.406,329,1.341,330,1.406,331,1.341,332,1.527,333,1.406,334,1.341,335,1.362,336,1.406,337,1.341,338,1.406,339,1.341,340,1.406,341,1.814,342,1.932,343,2.008,344,2.491,345,1.932,346,1.341,347,1.932,348,1.341,349,1.384,350,1.932,351,1.341,352,1.814,353,1.932,354,1.341,355,2.207,356,1.814,357,1.932,358,1.341,359,1.406,360,1.341,361,1.341,362,1.406,363,1.341,364,1.406,365,1.341,366,2.207,367,1.341,368,1.406,369,2.266,370,1.932,371,1.341,372,1.406,373,1.341,374,1.406,375,1.362,376,1.406,377,1.32,378,1.341,379,1.406,380,1.341,381,1.406,382,1.341,383,1.32,384,1.26,385,1.341,386,1.341,387,2.072,388,1.32,389,1.362,390,1.341,391,1.406,392,1.341,393,1.362,394,1.406,395,1.814,396,1.341,397,1.406,398,1.406,400,2.4,466,0.85,535,2.463,536,2.954,577,2.317,826,2.646,1233,3.689,1564,2.286,1565,2.53,1580,3.141,1581,3.141,1593,2.286,1712,3.703,2960,5.434,2988,3.703,3244,2.954,3461,6.737,3462,6.737,3463,4.292,3464,6.208,3465,6.737,3466,5.897,3467,6.684,3468,4.804,3469,4.804,3470,4.292,3471,4.292,3472,4.292,3473,4.804]],["title/modules/LeftSidebarModule.html",[402,0.715,3474,3.811]],["body/modules/LeftSidebarModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,150,0.28,151,0.576,179,0.135,193,1.779,204,1.894,317,1.013,369,2.813,402,0.981,404,1.894,405,1.894,406,2.605,407,1.924,408,1.924,409,2.605,424,2.269,425,1.725,427,2.456,428,2.417,544,2.666,545,2.155,2678,5.585,2699,7.036,3461,6.061,3462,6.061,3474,7.795,3475,6.061,3476,6.061,3477,6.061,3478,6.061,3479,7.036,3480,7.036,3481,6.061,3482,6.061,3483,6.784,3484,5.585,3485,8.9,3486,6.784,3487,6.784,3488,5.229]],["title/interfaces/ListResult.html",[0,0.261,26,2.47]],["body/interfaces/ListResult.html",[0,0.476,1,2.604,2,1.099,3,0.048,4,0.048,5,0.048,6,0.037,7,3.337,8,1.136,9,3.798,10,4.994,11,0.005,12,0.336,13,0.77,14,3.337,15,3.202,16,1.628,17,0.006,18,1.619,19,0.811,20,1.299,21,3.337,22,2.235,23,0.088,24,3.282,25,4.061,26,3.77,27,3.759,28,2.346,29,3.387,30,4.584,31,5.637,32,3.923,33,2.597,34,4.079,35,5.637,36,2.165,37,4.994,38,5.637,39,5.637,40,5.395,41,5.183,42,5.011,43,5.011,44,4.814,45,5.024,46,1.625,47,1.44,48,0.975,49,1.454,50,3.683,51,1.854,52,1.204,53,0.523,54,3.194,55,1.732,56,2.681,57,2.957,58,3.194,59,1.706,60,4.061,61,4.061,62,4.061,63,4.639,64,5.011,65,1.299,66,3.577,67,4.061,68,1.754,69,1.854,70,2.604,71,2.765,72,2.681,73,2.655,74,2.856,75,4.214,76,3.068,77,3.068,78,4.061,79,3.923,80,2.765,81,3.194,82,1.242,83,2.344,84,2.856,85,3.068,86,3.194,87,1.552,88,3.337,89,2.465,90,3.068,91,3.194,92,2.288,93,2.873,94,2.957,95,3.024,96,2.957,97,2.006,98,3.194,99,0.004,100,0.003]],["title/interfaces/Message.html",[0,0.261,1894,1.944]],["body/interfaces/Message.html",[0,0.335,2,1.036,3,0.045,4,0.098,5,0.045,6,0.035,8,0.604,11,0.003,12,0.316,13,0.739,17,0.006,18,1.497,19,0.703,23,0.087,27,3.303,28,2.13,36,1.612,46,0.865,69,1.747,73,1.595,82,1.17,87,1.007,97,1.89,99,0.004,100,0.003,104,1.888,119,2.817,125,1.888,127,0.878,131,1.188,137,4.906,145,1.17,150,0.212,151,0.385,153,1.781,156,1.853,179,0.126,180,2.283,181,1.54,183,1.978,194,3.249,205,1.122,219,0.976,247,1.689,252,0.99,466,1.475,504,1.167,562,2.448,577,1.392,588,4.17,631,3.704,699,3.065,712,1.93,826,1.816,859,2.454,927,2.691,942,3.433,981,2.734,990,2.526,1028,1.971,1092,4.218,1261,3.748,1321,3.433,1729,1.781,1742,3.653,1871,3.016,1874,2.492,1877,3.806,1882,2.156,1889,1.89,1890,3.847,1894,3.98,1909,2.7,1911,2.526,1937,2.526,1954,3.534,2009,2.526,2054,3.534,2086,4.209,2093,4.586,2124,3.897,2136,2.082,2158,3.645,2272,2.454,2283,2.526,2368,2.786,2369,3.897,3050,4.703,3115,2.786,3188,2.605,3428,2.691,3489,3.492,3490,4.044,3491,3.765,3492,2.891,3493,2.891,3494,5.317,3495,4.342,3496,2.891,3497,4.044,3498,2.691,3499,2.891,3500,2.891,3501,4.044,3502,2.891,3503,2.691,3504,2.891,3505,2.891,3506,2.891,3507,4.044,3508,2.891,3509,2.891,3510,2.891,3511,2.891,3512,3.897,3513,2.891,3514,4.044,3515,2.691,3516,2.891,3517,2.891,3518,2.891,3519,2.891,3520,2.891,3521,2.891,3522,4.665,3523,2.891,3524,2.891,3525,2.891,3526,2.891,3527,2.891,3528,2.891,3529,2.891,3530,2.891]],["title/interfaces/Message-1.html",[0,0.219,253,0.932,1894,1.626]],["body/interfaces/Message-1.html",[0,0.335,2,1.036,3,0.045,4,0.098,5,0.045,6,0.035,8,0.604,11,0.003,12,0.316,13,0.739,17,0.006,18,1.497,19,0.703,23,0.087,27,3.303,28,2.13,36,1.612,46,0.865,69,1.747,73,1.595,82,1.17,87,1.007,97,1.89,99,0.004,100,0.003,104,1.888,119,2.817,125,1.888,127,0.878,131,1.188,137,4.906,145,1.17,150,0.212,151,0.385,153,1.781,156,1.853,179,0.126,180,2.283,181,1.54,183,1.978,194,3.249,205,1.122,219,0.976,247,1.689,252,0.99,466,1.475,504,1.167,562,2.448,577,1.392,588,4.17,631,3.704,699,3.065,712,1.93,826,1.816,859,2.454,927,2.691,942,3.433,981,2.734,990,2.526,1028,1.971,1092,4.218,1261,3.748,1321,3.433,1729,1.781,1742,3.653,1871,3.016,1874,2.492,1877,3.806,1882,2.156,1889,1.89,1890,3.847,1894,3.98,1909,2.7,1911,2.526,1937,2.526,1954,3.534,2009,2.526,2054,3.534,2086,4.209,2093,4.586,2124,3.897,2136,2.082,2158,3.645,2272,2.454,2283,2.526,2368,2.786,2369,3.897,3050,4.703,3115,2.786,3188,2.605,3428,2.691,3490,4.044,3491,3.765,3492,2.891,3493,2.891,3494,5.317,3495,4.342,3496,2.891,3497,4.044,3498,2.691,3499,2.891,3500,2.891,3501,4.044,3502,2.891,3503,2.691,3504,2.891,3505,2.891,3506,2.891,3507,4.044,3508,2.891,3509,2.891,3510,2.891,3511,2.891,3512,3.897,3513,2.891,3514,4.044,3515,2.691,3516,2.891,3517,2.891,3518,2.891,3519,2.891,3520,2.891,3521,2.891,3522,4.665,3523,2.891,3524,2.891,3525,2.891,3526,2.891,3527,2.891,3528,2.891,3529,2.891,3530,2.891,3531,3.492]],["title/classes/MessageChannel.html",[179,0.099,1909,2.106]],["body/classes/MessageChannel.html",[0,0.306,3,0.04,4,0.097,5,0.04,6,0.067,8,1.059,11,0.002,12,0.279,13,0.676,17,0.006,18,1.488,19,0.713,20,0.786,23,0.083,27,3.313,28,1.845,36,1.016,46,0.763,53,0.813,69,1.541,73,1.406,82,1.032,87,1.316,97,2.418,99,0.003,100,0.002,104,1.761,119,2.576,125,1.761,127,1.123,129,1.631,131,1.52,137,5.074,145,1.032,150,0.198,151,0.339,153,1.571,156,1.633,179,0.116,180,2.48,181,1.358,183,1.92,194,3.681,197,1.285,205,1.207,219,0.893,247,1.61,252,1.266,461,1.996,466,1.603,502,1.762,504,1.16,562,2.569,577,1.781,588,4.5,631,3.53,699,3.174,712,2.904,826,1.601,859,3.138,927,2.373,942,2.164,981,2.646,990,2.228,1028,1.738,1092,4.065,1261,4.246,1321,3.138,1729,1.571,1742,4.138,1871,2.757,1874,2.278,1877,3.829,1882,1.901,1889,2.418,1890,3.969,1894,3.97,1909,2.904,1911,2.228,1937,2.228,1954,3.231,2009,3.231,2054,3.231,2086,4.266,2093,4.473,2124,3.563,2136,1.903,2158,3.332,2198,3.289,2272,3.138,2283,2.228,2368,2.456,2369,3.563,3050,4.717,3115,2.456,3188,2.297,3428,3.442,3489,3.079,3490,2.549,3491,3.442,3492,2.549,3493,2.549,3494,5.067,3495,4.05,3496,2.549,3497,3.697,3498,2.373,3499,2.549,3500,3.697,3501,5.067,3502,3.697,3503,3.442,3504,3.697,3505,2.549,3506,2.549,3507,3.697,3508,3.697,3509,3.697,3510,4.772,3511,2.549,3512,4.599,3513,3.697,3514,3.697,3515,3.442,3516,3.697,3517,2.549,3518,4.772,3519,2.549,3520,2.549,3521,2.549,3522,4.351,3523,2.549,3524,2.549,3525,2.549,3526,2.549,3527,2.549,3528,2.549,3529,2.549,3530,2.549,3532,3.079,3533,5.177,3534,5.177,3535,5.177,3536,5.794,3537,3.995,3538,3.995,3539,3.995,3540,3.995,3541,3.995]],["title/classes/MessageChannel-1.html",[179,0.082,253,0.932,1909,1.762]],["body/classes/MessageChannel-1.html",[0,0.306,3,0.04,4,0.097,5,0.04,6,0.067,8,1.059,11,0.002,12,0.279,13,0.676,17,0.006,18,1.488,19,0.713,20,0.786,23,0.083,27,3.313,28,1.845,36,1.016,46,0.763,53,0.813,69,1.541,73,1.406,82,1.032,87,1.316,97,2.418,99,0.003,100,0.002,104,1.761,119,2.576,125,1.761,127,1.123,129,1.631,131,1.52,137,5.074,145,1.032,150,0.198,151,0.339,153,1.571,156,1.633,179,0.116,180,2.48,181,1.358,183,1.92,194,3.681,197,1.285,205,1.207,219,0.893,247,1.61,252,1.266,461,1.996,466,1.603,502,1.762,504,1.16,562,2.569,577,1.781,588,4.5,631,3.53,699,3.174,712,2.904,826,1.601,859,3.138,927,2.373,942,2.164,981,2.646,990,2.228,1028,1.738,1092,4.065,1261,4.246,1321,3.138,1729,1.571,1742,4.138,1871,2.757,1874,2.278,1877,3.829,1882,1.901,1889,2.418,1890,3.969,1894,3.97,1909,2.904,1911,2.228,1937,2.228,1954,3.231,2009,3.231,2054,3.231,2086,4.266,2093,4.473,2124,3.563,2136,1.903,2158,3.332,2198,3.289,2272,3.138,2283,2.228,2368,2.456,2369,3.563,3050,4.717,3115,2.456,3188,2.297,3428,3.442,3490,2.549,3491,3.442,3492,2.549,3493,2.549,3494,5.067,3495,4.05,3496,2.549,3497,3.697,3498,2.373,3499,2.549,3500,3.697,3501,5.067,3502,3.697,3503,3.442,3504,3.697,3505,2.549,3506,2.549,3507,3.697,3508,3.697,3509,3.697,3510,4.772,3511,2.549,3512,4.599,3513,3.697,3514,3.697,3515,3.442,3516,3.697,3517,2.549,3518,4.772,3519,2.549,3520,2.549,3521,2.549,3522,4.351,3523,2.549,3524,2.549,3525,2.549,3526,2.549,3527,2.549,3528,2.549,3529,2.549,3530,2.549,3531,3.079,3532,3.079,3533,5.177,3534,5.177,3535,5.177,3542,5.794,3543,3.995,3544,3.995,3545,3.995,3546,3.995,3547,3.995]],["title/injectables/MessageService.html",[1874,1.944,2136,1.624]],["body/injectables/MessageService.html",[0,0.321,3,0.043,4,0.096,5,0.043,6,0.065,8,0.943,11,0.002,12,0.298,13,0.708,17,0.006,18,1.27,19,0.689,20,0.838,23,0.085,27,2.95,28,1.744,36,1.084,46,0.814,53,0.66,69,1.644,73,1.5,82,1.101,87,1.225,97,1.778,99,0.004,100,0.002,104,1.826,119,2.698,125,1.826,127,1.176,129,1.554,131,1.118,137,4.892,145,1.101,150,0.205,151,0.362,153,1.675,156,1.743,179,0.121,180,2.407,181,2.063,183,1.951,194,3.143,197,1.347,205,1.251,219,0.935,247,1.651,252,0.931,466,1.541,502,1.43,504,1.22,562,2.606,577,1.865,588,4.289,631,3.958,699,3.012,712,1.815,826,1.708,859,2.308,903,4.997,927,3.606,942,2.308,981,2.839,990,2.377,1028,3.076,1092,3.875,1261,3.625,1321,3.829,1729,2.386,1742,3.533,1871,2.888,1874,3.202,1877,3.901,1882,3.666,1889,1.778,1890,3.901,1894,3.973,1909,3.011,1911,3.385,1937,3.385,1954,3.385,2009,2.377,2054,3.385,2086,4.126,2093,4.34,2124,3.733,2136,1.994,2137,2.308,2158,3.491,2272,2.308,2283,3.385,2368,2.621,2369,3.733,3050,4.2,3115,3.733,3188,2.451,3428,2.532,3489,3.285,3490,2.719,3491,3.606,3492,2.719,3493,2.719,3494,5.401,3495,4.837,3496,2.719,3497,3.873,3498,2.532,3499,2.719,3500,2.719,3501,3.873,3502,2.719,3503,2.532,3504,2.719,3505,2.719,3506,2.719,3507,3.873,3508,2.719,3509,2.719,3510,2.719,3511,2.719,3512,3.733,3513,2.719,3514,3.873,3515,2.532,3516,2.719,3517,2.719,3518,2.719,3519,2.719,3520,2.719,3521,2.719,3522,4.512,3523,2.719,3524,2.719,3525,2.719,3526,2.719,3527,3.873,3528,2.719,3529,3.873,3530,2.719,3532,3.285,3548,3.808,3549,6.07,3550,4.262,3551,4.262,3552,4.262]],["title/injectables/MessageService-1.html",[253,0.932,1874,1.626,2136,1.358]],["body/injectables/MessageService-1.html",[0,0.321,3,0.043,4,0.096,5,0.043,6,0.065,8,0.943,11,0.002,12,0.298,13,0.708,17,0.006,18,1.27,19,0.689,20,0.838,23,0.085,27,2.95,28,1.744,36,1.084,46,0.814,53,0.66,69,1.644,73,1.5,82,1.101,87,1.225,97,1.778,99,0.004,100,0.002,104,1.826,119,2.698,125,1.826,127,1.176,129,1.554,131,1.118,137,4.892,145,1.101,150,0.205,151,0.362,153,1.675,156,1.743,179,0.121,180,2.407,181,2.063,183,1.951,194,3.143,197,1.347,205,1.251,219,0.935,247,1.651,252,0.931,466,1.541,502,1.43,504,1.22,562,2.606,577,1.865,588,4.289,631,3.958,699,3.012,712,1.815,826,1.708,859,2.308,903,4.997,927,3.606,942,2.308,981,2.839,990,2.377,1028,3.076,1092,3.875,1261,3.625,1321,3.829,1729,2.386,1742,3.533,1871,2.888,1874,3.202,1877,3.901,1882,3.666,1889,1.778,1890,3.901,1894,3.973,1909,3.011,1911,3.385,1937,3.385,1954,3.385,2009,2.377,2054,3.385,2086,4.126,2093,4.34,2124,3.733,2136,1.994,2137,2.308,2158,3.491,2272,2.308,2283,3.385,2368,2.621,2369,3.733,3050,4.2,3115,3.733,3188,2.451,3428,2.532,3490,2.719,3491,3.606,3492,2.719,3493,2.719,3494,5.401,3495,4.837,3496,2.719,3497,3.873,3498,2.532,3499,2.719,3500,2.719,3501,3.873,3502,2.719,3503,2.532,3504,2.719,3505,2.719,3506,2.719,3507,3.873,3508,2.719,3509,2.719,3510,2.719,3511,2.719,3512,3.733,3513,2.719,3514,3.873,3515,2.532,3516,2.719,3517,2.719,3518,2.719,3519,2.719,3520,2.719,3521,2.719,3522,4.512,3523,2.719,3524,2.719,3525,2.719,3526,2.719,3527,3.873,3528,2.719,3529,3.873,3530,2.719,3531,3.285,3532,3.285,3548,3.808,3553,6.07,3554,4.262,3555,4.262,3556,4.262]],["title/interfaces/MessageServiceConfig.html",[0,0.261,3495,2.937]],["body/interfaces/MessageServiceConfig.html",[0,0.339,2,1.052,3,0.046,4,0.096,5,0.046,6,0.035,8,0.614,11,0.003,12,0.321,13,0.747,17,0.006,18,1.324,19,0.649,23,0.087,27,3.075,28,1.818,36,1.17,46,1.407,69,2.471,73,1.619,82,1.654,87,1.018,97,1.919,99,0.004,100,0.003,104,1.903,119,2.847,125,1.903,127,0.891,131,1.206,137,4.918,145,1.188,150,0.214,151,0.39,153,1.808,156,1.881,179,0.128,180,2.302,181,1.563,183,1.985,194,3.276,205,1.134,219,0.987,247,1.699,252,1.005,466,1.483,504,1.174,562,2.46,577,1.414,588,4.197,631,3.856,699,2.898,712,1.959,826,1.844,859,2.491,927,2.733,942,2.491,981,2.788,990,2.565,1028,2.001,1092,3.987,1261,3.779,1321,3.469,1729,1.808,1742,3.683,1871,3.048,1874,2.518,1877,3.77,1882,2.189,1889,1.919,1890,3.892,1894,3.963,1909,2.728,1911,2.565,1937,2.565,1954,3.572,2009,2.565,2054,3.572,2086,4.084,2093,4.425,2124,3.939,2136,2.104,2158,3.683,2272,2.491,2283,2.565,2368,2.829,2369,3.939,3050,4.378,3115,2.829,3188,2.645,3428,2.733,3489,3.546,3490,2.935,3491,3.805,3492,2.935,3493,2.935,3494,5.536,3495,4.734,3496,4.087,3497,5.347,3498,2.733,3499,2.935,3500,2.935,3501,4.087,3502,2.935,3503,2.733,3504,2.935,3505,2.935,3506,2.935,3507,4.087,3508,2.935,3509,2.935,3510,2.935,3511,2.935,3512,3.939,3513,2.935,3514,4.087,3515,2.733,3516,2.935,3517,2.935,3518,2.935,3519,2.935,3520,2.935,3521,2.935,3522,4.703,3523,2.935,3524,2.935,3525,2.935,3526,2.935,3527,2.935,3528,2.935,3529,2.935,3530,2.935]],["title/interfaces/MessageServiceConfig-1.html",[0,0.219,253,0.932,3495,2.457]],["body/interfaces/MessageServiceConfig-1.html",[0,0.339,2,1.052,3,0.046,4,0.096,5,0.046,6,0.035,8,0.614,11,0.003,12,0.321,13,0.747,17,0.006,18,1.324,19,0.649,23,0.087,27,3.075,28,1.818,36,1.17,46,1.407,69,2.471,73,1.619,82,1.654,87,1.018,97,1.919,99,0.004,100,0.003,104,1.903,119,2.847,125,1.903,127,0.891,131,1.206,137,4.918,145,1.188,150,0.214,151,0.39,153,1.808,156,1.881,179,0.128,180,2.302,181,1.563,183,1.985,194,3.276,205,1.134,219,0.987,247,1.699,252,1.005,466,1.483,504,1.174,562,2.46,577,1.414,588,4.197,631,3.856,699,2.898,712,1.959,826,1.844,859,2.491,927,2.733,942,2.491,981,2.788,990,2.565,1028,2.001,1092,3.987,1261,3.779,1321,3.469,1729,1.808,1742,3.683,1871,3.048,1874,2.518,1877,3.77,1882,2.189,1889,1.919,1890,3.892,1894,3.963,1909,2.728,1911,2.565,1937,2.565,1954,3.572,2009,2.565,2054,3.572,2086,4.084,2093,4.425,2124,3.939,2136,2.104,2158,3.683,2272,2.491,2283,2.565,2368,2.829,2369,3.939,3050,4.378,3115,2.829,3188,2.645,3428,2.733,3490,2.935,3491,3.805,3492,2.935,3493,2.935,3494,5.536,3495,4.734,3496,4.087,3497,5.347,3498,2.733,3499,2.935,3500,2.935,3501,4.087,3502,2.935,3503,2.733,3504,2.935,3505,2.935,3506,2.935,3507,4.087,3508,2.935,3509,2.935,3510,2.935,3511,2.935,3512,3.939,3513,2.935,3514,4.087,3515,2.733,3516,2.935,3517,2.935,3518,2.935,3519,2.935,3520,2.935,3521,2.935,3522,4.703,3523,2.935,3524,2.935,3525,2.935,3526,2.935,3527,2.935,3528,2.935,3529,2.935,3530,2.935,3531,3.546]],["title/interfaces/OMEZarrInfo.html",[0,0.261,1242,3.155]],["body/interfaces/OMEZarrInfo.html",[0,0.404,2,1.372,3,0.092,4,0.077,5,0.06,6,0.046,11,0.003,12,0.419,13,0.892,16,1.512,17,0.006,18,1.513,19,0.763,23,0.092,34,4.357,47,1.46,48,1.217,95,3.067,99,0.004,100,0.003,127,1.163,150,0.174,216,2.556,219,1.411,247,1.857,712,3.258,760,3.64,763,4.464,868,3.451,870,5.074,977,2.856,1221,2.926,1236,5.178,1238,3.565,1239,3.565,1240,5.081,1241,4.704,1242,5.658,1243,5.178,1244,5.373,1342,3.691,1948,3.987,2264,4.626,2822,4.166,3250,4.626,3557,4.626,3558,5.362,3559,5.362,3560,6.834,3561,6.932,3562,4.941,3563,4.941,3564,4.941,3565,7.217,3566,4.941,3567,4.941,3568,4.941,3569,4.941,3570,4.941,3571,4.941,3572,5.362,3573,7.523,3574,5.362,3575,4.941,3576,5.362,3577,5.362,3578,5.362,3579,5.362,3580,5.362,3581,5.362,3582,5.362,3583,4.941,3584,5.362,3585,5.362,3586,5.362,3587,5.362,3588,5.362,3589,5.362,3590,5.362,3591,5.362,3592,5.362,3593,5.362,3594,5.362,3595,5.362,3596,5.362]],["title/interfaces/OldRuiData.html",[0,0.261,3597,4.417]],["body/interfaces/OldRuiData.html",[0,0.255,2,1.105,3,0.048,4,0.048,5,0.048,6,0.037,8,0.644,11,0.003,12,0.337,13,0.773,15,2.766,16,1.573,17,0.006,18,1.675,19,0.803,23,0.066,27,3.396,28,1.865,29,4.517,36,2.398,52,1.894,53,0.885,87,0.768,99,0.004,100,0.003,118,1.04,150,0.14,183,1.752,216,2.214,219,1.165,236,2.949,247,1.343,253,1.703,261,4.599,272,1.937,277,2.656,278,3.724,293,1.792,384,1.738,466,1.173,504,0.677,513,5.193,514,4.538,516,3.967,597,5.416,627,2.544,684,2.656,699,2.615,789,3.977,921,2.87,953,2.605,979,5.455,994,5.455,1062,3.353,1064,3.521,1080,3.724,1089,5.107,1092,2.299,1100,3.977,1155,6.953,1221,3.686,1390,5.92,2664,3.724,2867,3.521,2988,5.107,3158,4.83,3244,4.074,3597,7.619,3598,4.831,3599,4.831,3600,6.626,3601,5.83,3602,8.138,3603,8.138,3604,8.138,3605,8.138,3606,8.138,3607,8.138,3608,8.138,3609,8.528,3610,8.138,3611,6.573,3612,6.626,3613,6.626,3614,6.626,3615,4.316,3616,6.626,3617,4.316,3618,6.626,3619,4.831,3620,4.831,3621,4.831,3622,4.316,3623,3.977,3624,5.92,3625,4.831,3626,8.138,3627,4.831,3628,4.831,3629,8.528,3630,6.626,3631,4.831,3632,4.831,3633,4.831,3634,4.831,3635,4.831,3636,4.831,3637,4.831,3638,4.831,3639,4.831,3640,6.626,3641,6.626,3642,6.626,3643,6.626,3644,6.626,3645,6.626,3646,3.724,3647,3.724,3648,3.724,3649,4.831,3650,3.724,3651,6.626,3652,4.831,3653,3.724,3654,4.831,3655,3.724,3656,4.831,3657,3.724,3658,4.831,3659,3.724,3660,4.831,3661,3.724,3662,3.724,3663,3.724,3664,3.724,3665,3.724,3666,4.831,3667,3.724,3668,4.831,3669,3.724,3670,4.831,3671,3.724,3672,4.831,3673,3.724,3674,4.831,3675,3.724,3676,4.831,3677,3.724,3678,4.831,3679,3.724,3680,4.831,3681,3.724,3682,4.831,3683,3.724]],["title/modules/OntologyExplorationModule.html",[402,0.715,421,3.604]],["body/modules/OntologyExplorationModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,65,1.75,99,0.005,100,0.004,150,0.275,151,0.575,179,0.135,204,1.891,317,1.011,402,0.98,404,1.891,405,1.891,406,1.983,407,1.921,408,1.921,409,2.604,421,7.371,424,2.267,425,1.723,427,2.454,428,2.415,444,4.5,544,2.664,545,2.152,3684,6.053,3685,6.053,3686,6.053,3687,6.994,3688,7.346,3689,6.994,3690,4.703,3691,6.775,3692,4.323,3693,6.053,3694,5.578,3695,6.775,3696,5.222,3697,6.053]],["title/interfaces/OntologyNode.html",[0,0.261,2660,2.677]],["body/interfaces/OntologyNode.html",[0,0.358,2,1.549,3,0.068,4,0.068,5,0.068,6,0.052,8,0.904,11,0.004,12,0.473,13,0.962,15,3.351,16,1.616,17,0.006,19,0.773,23,0.068,27,3.862,28,2.283,65,1.75,99,0.005,100,0.004,107,1.777,119,3.667,249,4.345,535,4.23,612,4.776,631,4.289,684,3.307,1386,6.359,2657,6.053,2660,4.468,2673,6.149,2845,6.013,2874,6.425,3050,4.9,3698,6.053,3699,6.791]],["title/components/OntologySearchComponent.html",[101,0.557,371,1.38]],["body/components/OntologySearchComponent.html",[3,0.056,4,0.029,5,0.029,6,0.066,8,0.977,11,0.005,12,0.318,13,0.53,15,2.159,16,1.097,17,0.006,18,0.817,19,0.646,20,1.781,22,3.954,23,0.029,28,1.121,47,1.318,48,1.485,49,1.921,52,0.726,53,0.832,55,0.76,57,2.796,59,0.748,65,1.781,73,1.975,87,1.097,99,0.003,100,0.005,101,0.862,102,1.249,103,1.071,104,0.748,105,0.809,106,0.848,107,0.76,114,1.806,117,2.665,118,2.158,120,1.211,122,1.249,127,0.881,128,0.673,129,1.623,136,0.693,137,3.756,144,2.021,148,0.835,150,0.23,151,0.246,153,1.139,154,1.57,156,1.185,158,2.386,169,0.809,173,0.809,177,1.249,179,0.058,180,1.42,181,2.771,183,1.486,193,1.471,194,2.824,197,1.009,198,4.062,199,0.748,205,1.477,215,2.804,216,2.447,219,0.7,224,1.384,239,3.404,240,2.272,247,1.137,252,1.939,253,1.65,268,1.139,271,1.952,272,1.162,273,1.616,275,1.118,279,2.441,280,1.782,281,1.921,284,2.447,285,2.55,286,2.441,290,1.055,291,3.954,293,0.784,297,1.527,299,3.209,300,3.409,303,4.865,308,3.333,309,3.129,315,2.234,317,0.433,318,1.121,319,1.174,320,0.848,321,1.86,322,0.848,323,1.331,324,0.796,325,0.809,326,1.331,327,0.809,328,0.848,329,0.809,330,0.848,331,0.809,332,1.195,333,0.848,334,0.809,335,0.822,336,0.848,337,0.809,338,0.848,339,0.809,340,0.848,341,1.249,342,1.331,343,1.494,344,2.021,345,1.331,346,0.809,347,1.331,348,0.809,349,0.835,350,1.331,351,0.809,352,1.249,353,1.331,354,0.809,355,1.642,356,1.249,357,1.331,358,0.809,359,0.848,360,0.809,361,0.809,362,0.848,363,0.809,364,0.848,365,0.809,366,1.642,367,0.809,368,0.848,369,0.809,370,1.331,371,1.773,372,0.848,373,0.809,374,0.848,375,0.822,376,0.848,377,0.796,378,0.809,379,0.848,380,0.809,381,0.848,382,0.809,383,0.796,384,0.76,385,0.809,386,0.809,387,0.796,388,0.796,389,0.822,390,0.809,391,0.848,392,0.809,393,0.822,394,0.848,395,1.249,396,0.809,397,0.848,398,0.848,444,5.742,466,1.403,480,1.002,486,1.788,489,1.975,491,3.156,502,1.627,504,0.786,511,2.236,537,1.413,560,1.925,577,0.891,607,3.024,612,3.485,673,1.493,826,1.823,870,2.395,902,3.02,911,6.13,928,2.012,947,1.849,951,5.516,981,1.375,997,2.386,1234,2.536,1342,1.782,1385,3.743,1388,3.774,1395,4.898,1414,2.887,1533,2.615,1535,2.701,1561,3.635,1565,1.527,1799,2.012,1802,2.386,1846,2.901,1933,3.743,1945,2.463,1946,2.332,2222,3.743,2256,2.386,2272,2.463,2282,4.619,2399,2.234,2403,2.386,2405,2.113,2414,3.743,2419,2.386,2464,3.505,2480,4.062,2569,2.386,2660,3.441,2736,2.386,2814,3.156,2839,1.925,2845,3.314,2943,8.087,2945,2.59,2946,2.234,3257,4.062,3448,3.743,3464,4.619,3467,5.231,3512,2.796,3690,6,3692,5.593,3700,2.898,3701,4.547,3702,4.062,3703,5.611,3704,4.547,3705,5.611,3706,5.611,3707,7.93,3708,7.658,3709,4.547,3710,4.547,3711,4.547,3712,4.547,3713,2.898,3714,5.032,3715,4.547,3716,5.611,3717,5.682,3718,2.898,3719,3.743,3720,4.547,3721,6.431,3722,2.898,3723,4.547,3724,4.547,3725,2.898,3726,4.547,3727,4.547,3728,4.547,3729,7.324,3730,2.898,3731,4.547,3732,4.547,3733,4.547,3734,2.898,3735,6.354,3736,4.547,3737,2.898,3738,4.547,3739,2.898,3740,5.611,3741,2.898,3742,4.547,3743,4.547,3744,2.898,3745,2.386,3746,2.59,3747,2.898,3748,2.59,3749,2.59,3750,2.898,3751,2.898,3752,2.898,3753,2.898,3754,2.898,3755,2.386,3756,2.898,3757,2.898,3758,2.898,3759,2.898,3760,2.898,3761,2.898,3762,2.898,3763,2.898,3764,2.898,3765,2.898,3766,2.898,3767,2.898,3768,2.898,3769,4.547,3770,4.547,3771,4.547,3772,4.062,3773,6.354,3774,2.234,3775,2.898,3776,2.898,3777,2.898,3778,4.547,3779,2.59]],["title/modules/OntologySearchModule.html",[402,0.715,3687,3.431]],["body/modules/OntologySearchModule.html",[3,0.069,4,0.069,5,0.069,6,0.053,11,0.004,17,0.006,22,3.205,23,0.069,65,1.356,99,0.005,100,0.004,150,0.287,151,0.585,179,0.137,204,1.924,317,1.029,371,2.819,402,0.997,404,1.924,405,1.924,406,2.624,407,1.955,408,1.955,409,2.624,424,2.291,425,1.753,427,2.051,428,2.441,429,4.275,430,3.205,444,4.579,544,2.692,545,2.19,546,6.864,547,5.676,2428,6.426,2429,5.314,3687,6.804,3690,4.785,3692,4.399,3745,5.676,3746,6.16,3780,6.16,3781,6.16,3782,6.16,3783,6.894,3784,8.337,3785,8.337,3786,8.337,3787,6.894]],["title/injectables/OntologySearchService.html",[2136,1.624,3714,3.604]],["body/injectables/OntologySearchService.html",[0,0.252,3,0.031,4,0.031,5,0.031,6,0.063,8,1.044,11,0.004,12,0.593,13,0.555,15,3.196,16,1.538,17,0.006,18,1.047,19,0.691,20,0.937,23,0.075,28,1.995,36,1.482,53,0.816,57,2.929,65,1.891,73,1.677,87,1.193,99,0.003,100,0.005,107,1.862,119,3.596,128,1.353,129,1.544,131,0.807,132,2.533,137,3.64,141,1.952,150,0.251,151,0.261,153,1.21,154,3.157,156,1.258,179,0.061,180,2.05,181,1.981,183,2,194,2.117,197,1.057,205,1.161,212,3.921,216,2.371,219,1.331,236,1.064,237,4.732,240,4.643,247,1.587,248,2.656,249,3.954,259,1.716,466,1.572,502,1.769,504,0.816,535,1.578,537,3.199,562,2.013,577,0.945,579,1.284,612,4.574,631,2.917,699,1.064,742,3.472,814,3.719,843,2.248,860,3.04,861,1.5,870,3.739,911,6.192,942,1.666,947,5.597,951,3.04,953,1.873,954,3.04,981,1.984,1109,1.769,1234,1.716,1400,2.243,1533,1.769,1729,1.873,1740,2.243,1824,1.963,1920,3.472,2123,2.533,2136,2.155,2137,1.666,2156,2.372,2157,2.372,2158,1.769,2168,5.058,2250,1.5,2257,2.372,2263,2.372,2273,3.04,2285,2.372,2464,5.058,2660,5.143,2664,2.372,2673,5.636,2732,6.66,2837,2.243,2839,2.044,2842,2.135,2866,2.243,2874,2.135,3172,2.135,3202,1.963,3244,2.929,3336,2.372,3515,1.828,3692,5.299,3699,2.533,3714,4.784,3717,2.533,3719,2.533,3721,4.493,3755,3.921,3774,3.672,3788,6.837,3789,2.533,3790,4.256,3791,4.256,3792,4.493,3793,4.764,3794,4.764,3795,4.764,3796,5.863,3797,4.764,3798,3.077,3799,5.863,3800,5.374,3801,4.764,3802,6.342,3803,4.256,3804,3.077,3805,4.256,3806,4.256,3807,8.244,3808,3.077,3809,4.256,3810,4.256,3811,5.863,3812,4.256,3813,4.256,3814,3.077,3815,3.672,3816,4.256,3817,3.077,3818,3.077,3819,4.256,3820,4.256,3821,5.863,3822,3.077,3823,4.256,3824,4.256,3825,2.372,3826,4.256,3827,2.749,3828,2.749,3829,2.749,3830,4.256,3831,2.749,3832,2.372,3833,4.555,3834,2.749,3835,2.749,3836,5.208,3837,2.135,3838,3.921,3839,2.533,3840,2.749,3841,6.342,3842,3.672,3843,3.672,3844,2.749,3845,2.749,3846,4.256,3847,2.749,3848,2.749,3849,2.749,3850,2.749,3851,2.749,3852,2.749,3853,2.749,3854,2.749,3855,2.749,3856,2.749,3857,2.749,3858,2.749,3859,5.863,3860,2.749,3861,2.749,3862,2.749,3863,5.208,3864,5.208,3865,4.256,3866,2.749,3867,2.749,3868,4.256,3869,2.749,3870,5.208,3871,2.749,3872,2.533,3873,2.749,3874,2.749,3875,2.749,3876,2.749,3877,2.749,3878,2.749,3879,2.749,3880,2.749,3881,2.749,3882,2.749,3883,2.749,3884,2.749,3885,2.749,3886,2.749,3887,2.749,3888,4.256,3889,2.749,3890,2.749,3891,2.749,3892,2.749,3893,2.749,3894,2.749,3895,2.749,3896,2.749,3897,2.749,3898,2.749,3899,2.749,3900,2.749,3901,4.256,3902,2.749,3903,4.256,3904,4.256,3905,4.256,3906,4.256,3907,2.749,3908,2.749,3909,2.749,3910,2.749,3911,2.749,3912,2.749,3913,4.256,3914,4.256,3915,2.749,3916,2.533,3917,2.749,3918,2.749]],["title/interfaces/OntologySelection.html",[0,0.261,157,3.811]],["body/interfaces/OntologySelection.html",[0,0.391,2,1.691,3,0.074,4,0.074,5,0.074,6,0.056,11,0.004,12,0.517,13,1.014,15,3.239,16,1.565,17,0.006,19,0.752,23,0.074,28,2.35,65,1.455,99,0.005,100,0.004,150,0.215,157,6.7,612,3.518,684,3.701,2660,5.161,3698,6.606,3919,7.394,3920,9.53]],["title/components/OntologySelectionComponent.html",[101,0.557,373,1.38]],["body/components/OntologySelectionComponent.html",[3,0.067,4,0.038,5,0.038,6,0.067,8,0.885,11,0.002,12,0.266,13,0.652,16,0.889,17,0.006,19,0.703,23,0.038,24,2.434,36,1.423,47,1.487,48,1.651,49,1.691,52,0.953,53,0.795,55,0.998,59,0.983,65,1.972,66,4.41,73,1.969,87,0.889,99,0.003,100,0.004,101,1.023,102,1.537,103,1.723,104,0.983,105,1.063,106,1.114,107,2.455,114,2.008,117,2.71,118,2.191,120,1.49,122,1.537,125,0.983,128,0.884,129,1.648,131,1.467,134,5.652,135,4.605,136,0.911,141,1.664,148,1.097,150,0.244,151,0.323,157,5.635,158,4.605,159,5.585,169,1.063,173,1.063,177,1.537,179,0.076,180,1.747,181,1.901,182,4.078,183,1.428,193,0.998,197,1.241,199,0.983,205,0.99,219,0.586,224,1.636,232,4.312,237,4.996,238,2.796,239,3.838,240,1.902,290,1.298,293,1.03,317,0.568,318,1.38,319,1.445,320,1.114,321,2.14,322,1.114,323,1.638,324,1.046,325,1.063,326,1.638,327,1.063,328,1.114,329,1.063,330,1.114,331,1.063,332,1.375,333,1.114,334,1.063,335,1.079,336,1.114,337,1.063,338,1.114,339,1.063,340,1.114,341,1.537,342,1.638,343,1.766,344,2.28,345,1.638,346,1.063,347,1.638,348,1.063,349,1.097,350,1.638,351,1.063,352,1.537,353,1.638,354,1.063,355,1.941,356,1.537,357,1.638,358,1.063,359,1.114,360,1.063,361,1.063,362,1.114,363,1.063,364,1.114,365,1.063,366,1.941,367,1.063,368,1.114,369,1.063,370,1.638,371,1.063,372,1.114,373,2.04,374,1.114,375,2.073,376,1.114,377,1.046,378,1.063,379,1.114,380,1.063,381,1.114,382,1.063,383,1.046,384,0.998,385,1.063,386,1.063,387,1.046,388,1.046,389,1.079,390,1.063,391,1.114,392,1.063,393,1.079,394,1.114,395,1.537,396,1.063,397,1.114,398,1.114,444,5.853,466,0.674,480,2.816,486,2.199,489,2.334,502,1.318,504,0.533,511,1.969,532,2.199,535,2.868,562,1.079,577,1.719,599,1.902,607,2.662,612,3.875,673,1.837,712,2.383,838,3.323,843,2.158,851,2.775,902,4.405,911,5.196,981,2.005,1234,3.12,1257,4.815,1589,4.998,1590,4.312,1591,3.03,1705,3.322,2168,4.312,2250,1.856,2660,4.41,3690,6.116,3692,2.429,3694,7.254,3696,2.934,3702,5.925,3714,6.53,3748,3.401,3749,3.401,3800,2.529,3833,2.642,3916,3.134,3921,3.807,3922,5.594,3923,6.632,3924,5.594,3925,6.632,3926,6.632,3927,6.632,3928,3.807,3929,5.594,3930,3.807,3931,4.605,3932,3.807,3933,3.807,3934,5.594,3935,5.594,3936,3.807,3937,3.807,3938,5.594,3939,3.807,3940,3.807,3941,3.401,3942,3.807,3943,3.807]],["title/modules/OntologySelectionModule.html",[402,0.715,3688,3.604]],["body/modules/OntologySelectionModule.html",[3,0.069,4,0.069,5,0.069,6,0.053,11,0.004,17,0.006,23,0.069,65,1.763,99,0.005,100,0.004,150,0.277,151,0.585,179,0.137,204,1.924,317,1.029,373,2.819,402,0.997,404,1.924,405,1.924,406,2.624,407,1.955,408,1.955,409,2.624,424,2.291,425,1.753,427,2.48,428,2.441,444,4.579,544,2.692,545,2.19,3687,6.725,3688,7.333,3689,6.725,3690,4.785,3692,4.399,3693,6.16,3694,5.676,3696,5.314,3697,6.16,3944,6.16,3945,6.16,3946,6.894,3947,6.16,3948,6.894,3949,6.894]],["title/injectables/OntologyState.html",[2136,1.624,3800,3.284]],["body/injectables/OntologyState.html",[0,0.316,3,0.06,4,0.06,5,0.06,6,0.068,8,1.019,11,0.003,12,0.418,13,0.891,16,1.214,17,0.006,19,0.488,20,1.503,23,0.077,27,2.498,28,1.477,36,1.523,53,0.83,65,1.951,87,0.952,99,0.004,100,0.003,107,2.454,119,4.068,125,2.416,127,1.48,129,1.606,141,2.892,150,0.272,151,0.508,154,3.243,156,2.448,179,0.119,183,1.289,197,1.695,205,1.352,240,4.812,466,1.06,502,1.411,504,1.07,599,2.992,612,4.216,625,3.003,814,3.821,861,3.723,902,6.216,1902,4.392,2136,2.509,2137,3.243,2185,4.996,2208,4.996,2247,4.259,2248,3.339,2249,3.339,2250,2.919,2291,3.821,2660,4.137,3792,6.483,3800,5.073,3832,4.615,3833,6.149,3842,4.615,3843,4.615,3950,5.35,3951,7.638,3952,6.824,3953,5.988,3954,7.915,3955,6.824,3956,5.988,3957,6.824,3958,5.988,3959,5.35]],["title/interfaces/OntologyStateModel.html",[0,0.261,3833,3.431]],["body/interfaces/OntologyStateModel.html",[0,0.334,2,1.444,3,0.063,4,0.063,5,0.063,6,0.048,8,0.842,11,0.004,12,0.441,13,0.921,16,1.435,17,0.006,19,0.736,23,0.079,27,3.296,28,1.557,36,2.009,53,0.686,65,1.914,99,0.005,100,0.004,107,2.26,119,4.325,125,2.04,141,2.863,150,0.275,151,0.536,154,3.42,156,2.582,179,0.126,183,1.359,205,1.117,240,4.904,504,0.884,597,4.857,612,4.298,625,2.482,814,5.04,861,3.85,902,5.246,1902,3.631,2136,2.594,2185,4.692,2208,4.692,2247,4.405,2248,3.521,2249,3.521,2250,3.078,2291,4.029,2660,4.278,3792,4.867,3800,4.194,3832,4.867,3833,5.983,3842,6.088,3843,6.088,3950,5.641,3952,5.641,3954,7.057,3955,5.641,3957,5.641,3959,5.641]],["title/modules/OntologyTreeModule.html",[402,0.715,3689,3.431]],["body/modules/OntologyTreeModule.html",[3,0.07,4,0.07,5,0.07,6,0.053,11,0.004,17,0.006,23,0.07,65,1.371,99,0.005,100,0.004,150,0.285,151,0.592,179,0.139,204,1.945,317,1.04,375,2.867,402,1.008,404,1.945,405,1.945,406,2.636,407,1.976,408,1.976,409,2.636,424,2.306,425,1.772,427,2.073,428,2.457,429,4.303,430,3.24,444,4.629,544,2.71,545,2.213,2767,7.498,2768,6.227,2771,7.498,2772,6.227,3689,6.819,3690,4.837,3696,5.372,3941,6.227,3960,6.227,3961,6.227,3962,6.227,3963,6.97,3964,8.392,3965,6.97]],["title/interfaces/OrganInfo.html",[0,0.261,3966,4.07]],["body/interfaces/OrganInfo.html",[0,0.275,2,1.189,3,0.052,4,0.052,5,0.052,6,0.04,8,0.694,11,0.003,12,0.363,13,0.812,16,1.485,17,0.006,18,0.934,19,0.567,23,0.07,24,2.262,32,3.089,33,3.615,34,3.096,46,0.993,52,2.46,53,1.097,56,2.9,82,2.028,99,0.004,100,0.003,101,0.784,117,1.855,118,1.12,120,1.385,122,1.429,144,3.096,145,2.166,150,0.151,151,0.441,179,0.104,183,1.806,193,1.827,199,2.028,205,1.233,219,0.801,238,3.925,239,4.002,240,2.599,247,1.592,252,1.522,269,2.417,293,1.407,319,1.343,377,1.429,466,0.92,489,2.452,496,3.318,503,3.669,504,0.728,511,2.452,632,2.739,673,2.58,954,3.318,1171,3.609,1177,3.791,1493,8.186,1535,4.665,1777,6.939,1902,2.99,1946,3.572,1979,3.791,2265,3.609,2324,4.283,2337,4.281,2340,4.281,2342,4.281,2344,4.281,2347,4.281,2349,4.281,2354,4.281,2360,4.281,2362,4.281,2381,4.008,2679,4.008,2680,4.008,2681,4.008,3236,3.609,3351,4.008,3488,4.008,3966,7.201,3967,4.281,3968,8.043,3969,4.646,3970,4.646,3971,6.223,3972,4.646,3973,4.646,3974,4.646,3975,4.646,3976,4.646,3977,4.646,3978,4.646,3979,4.646,3980,4.646,3981,4.646,3982,4.646,3983,4.646,3984,4.646,3985,4.646,3986,4.646,3987,4.646,3988,4.646,3989,4.646,3990,4.646,3991,4.646,3992,4.646,3993,4.646,3994,7.495,3995,4.281,3996,4.646,3997,6.223,3998,6.223,3999,4.646,4000,4.646,4001,8.043,4002,4.646,4003,4.646,4004,4.646,4005,4.646,4006,4.646,4007,4.646,4008,6.223,4009,6.223,4010,4.646,4011,4.646,4012,4.281,4013,4.646]],["title/components/OrganSelectorComponent.html",[101,0.557,377,1.358]],["body/components/OrganSelectorComponent.html",[0,0.169,3,0.06,4,0.032,5,0.032,6,0.064,8,0.892,11,0.002,12,0.223,13,0.571,16,1.261,17,0.006,18,1.071,19,0.62,20,1.173,23,0.049,24,2.594,32,2.91,33,3.623,34,1.418,46,0.935,47,1.378,48,1.544,49,1.803,52,2.409,53,1.081,55,0.837,56,3.73,59,0.824,65,1.173,82,1.967,87,0.948,93,1.388,99,0.003,100,0.003,101,0.672,102,1.346,103,1.154,104,0.824,105,0.89,106,0.934,107,0.837,114,1.879,117,2.687,118,2.168,120,1.305,122,1.346,127,1.296,128,0.741,129,1.563,136,0.763,144,2.973,145,1.967,148,0.919,150,0.093,151,0.271,169,0.89,173,0.89,177,1.346,179,0.064,183,1.44,193,2.147,197,1.087,199,2.114,205,1.184,219,0.491,224,1.471,225,2.036,238,3.807,239,3.932,240,2.448,247,1.209,252,1.071,268,2.63,269,2.772,270,1.728,271,1.832,273,1.779,274,1.68,275,1.23,277,1.279,281,1.564,283,1.854,290,1.137,292,2.388,293,1.952,294,3.776,300,1.279,301,2.54,302,1.964,305,3.607,306,3.04,307,2.91,317,0.476,318,1.208,319,1.54,320,0.934,321,1.958,322,0.934,323,1.434,324,0.877,325,0.89,326,1.434,327,0.89,328,0.934,329,0.89,330,0.934,331,0.89,332,1.258,333,0.934,334,0.89,335,0.905,336,0.934,337,0.89,338,0.934,339,0.89,340,0.934,341,1.346,342,1.434,343,1.588,344,2.113,345,1.434,346,0.89,347,1.434,348,0.89,349,0.919,350,1.434,351,0.89,352,1.346,353,1.434,354,0.89,355,1.745,356,1.346,357,1.434,358,0.89,359,0.934,360,0.89,361,0.89,362,0.934,363,0.89,364,0.934,365,0.89,366,1.745,367,0.89,368,0.934,369,0.89,370,1.434,371,0.89,372,0.934,373,0.89,374,0.934,375,0.905,376,0.934,377,1.838,378,0.89,379,0.934,380,0.89,381,0.934,382,0.89,383,0.877,384,0.837,385,0.89,386,0.89,387,0.877,388,0.877,389,0.905,390,0.89,391,0.934,392,0.89,393,0.905,394,0.934,395,1.346,396,0.89,397,0.934,398,0.934,425,0.811,466,1.184,486,1.926,489,2.099,496,2.036,502,1.405,503,1.68,504,0.447,511,1.724,530,1.728,537,3.518,632,1.68,673,2.197,891,1.779,954,3.126,1171,3.4,1177,3.571,1493,7.998,1535,4.525,1561,1.68,1562,2.85,1777,6.605,1902,2.817,1946,3.43,1979,3.571,2030,1.68,2071,2.119,2265,3.4,2324,1.962,2337,4.033,2340,4.033,2342,4.033,2344,4.033,2347,4.033,2349,4.033,2354,4.033,2360,4.033,2362,4.033,2381,3.776,2416,2.325,2571,2.85,2679,2.459,2680,4.596,2681,3.776,2683,2.459,2747,4.376,2754,2.325,2759,2.626,3138,2.85,3236,3.4,3351,3.776,3488,6.47,3966,6.911,3967,6.911,3968,8.527,3969,4.376,3970,5.327,3971,5.977,3972,5.327,3973,5.327,3974,5.327,3975,4.376,3976,4.376,3977,4.376,3978,4.376,3979,4.376,3980,4.376,3981,4.376,3982,4.376,3983,4.376,3984,4.376,3985,4.376,3986,4.376,3987,4.376,3988,4.376,3989,4.376,3990,5.327,3991,4.376,3992,4.376,3993,4.376,3994,6.448,3995,4.033,3996,4.376,3997,4.376,3998,4.376,3999,2.85,4000,2.85,4001,6.806,4002,2.85,4003,2.85,4004,2.85,4005,2.85,4006,2.85,4007,4.376,4008,4.376,4009,5.977,4010,2.85,4011,2.85,4012,4.033,4013,4.376,4014,4.899,4015,4.899,4016,4.899,4017,3.19,4018,3.19,4019,3.19,4020,3.19,4021,3.19,4022,3.19,4023,3.19,4024,3.19,4025,4.899,4026,3.19,4027,3.19,4028,3.19,4029,3.19,4030,3.19,4031,3.19]],["title/modules/OrganSelectorModule.html",[402,0.715,3479,3.604]],["body/modules/OrganSelectorModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,52,1.792,99,0.005,100,0.004,150,0.274,151,0.607,179,0.143,204,1.997,317,1.068,377,2.787,402,1.035,404,1.997,405,1.997,406,2.666,407,2.029,408,2.029,409,2.666,424,2.342,425,1.82,427,2.128,428,2.496,429,4.372,430,3.326,544,2.753,545,2.272,2703,5.891,2706,5.891,3479,7.199,3488,5.515,3967,5.891,4032,6.393,4033,6.393,4034,6.393]],["title/injectables/PageState.html",[2136,1.624,2744,3.811]],["body/injectables/PageState.html",[0,0.368,3,0.07,4,0.07,5,0.07,6,0.069,11,0.004,12,0.486,13,0.978,16,1.106,17,0.006,20,1.65,23,0.084,46,1.329,53,0.757,99,0.005,100,0.004,125,2.508,127,1.625,129,1.601,141,2.494,150,0.277,151,0.591,155,5.073,156,2.846,179,0.139,625,3.297,673,2.286,861,4.087,2136,2.754,2137,3.77,2185,5.346,2247,4.676,2248,3.881,2249,3.881,2250,3.393,2291,4.441,2710,5.365,2744,6.463,4035,6.218,4036,8.541,4037,8.541,4038,7.492,4039,6.96,4040,7.492,4041,6.96,4042,5.73]],["title/interfaces/PageStateModel.html",[0,0.261,4042,4.07]],["body/interfaces/PageStateModel.html",[0,0.373,2,1.613,3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,12,0.493,13,0.986,16,1.439,17,0.006,19,0.689,23,0.085,46,1.728,53,0.767,99,0.005,100,0.004,125,2.183,141,2.515,150,0.278,151,0.599,155,5.144,156,2.885,179,0.141,625,2.774,673,2.318,861,4.121,2136,2.777,2185,5.022,2247,4.715,2248,3.935,2249,3.935,2250,3.44,2291,4.503,2710,5.439,2744,5.439,4035,6.304,4036,8.704,4037,8.704,4038,6.304,4040,6.304,4042,6.96]],["title/classes/PictureInPictureViewer.html",[179,0.099,4043,3.811]],["body/classes/PictureInPictureViewer.html",[0,0.198,3,0.038,4,0.038,5,0.038,6,0.055,11,0.002,12,0.262,13,0.646,16,0.597,17,0.006,18,1.627,19,0.788,20,1.692,23,0.066,28,1.365,46,1.057,47,1.478,48,0.761,53,0.954,87,1.395,92,3.13,95,3.52,99,0.003,100,0.002,125,1.43,127,1.667,129,1.902,145,1.699,150,0.161,179,0.075,193,0.984,197,1.228,205,1.554,219,1.395,235,3.783,247,1.472,252,1.979,271,2.379,277,1.505,281,1.904,284,1.254,286,1.633,332,0.706,461,1.876,466,1.696,499,2.839,502,2.069,504,0.775,562,2.742,564,4.465,577,1.153,579,2.745,599,2.767,600,3.087,623,1.706,625,2.586,633,4.977,635,4.154,638,3.289,640,2.461,646,3.404,760,4.508,1213,2.736,1231,2.395,1232,1.977,1233,1.706,1234,2.093,1236,4.045,1237,3.677,1238,2.23,1239,2.23,1247,3.677,1248,2.23,1254,3.677,1255,3.677,1257,4.049,1258,3.533,1259,3.533,1260,4.941,1261,1.925,1269,5.039,1270,5.918,1273,3.843,1274,3.843,1276,3.677,1278,3.677,1279,3.843,1281,2.493,1283,3.843,1284,6.606,1285,3.843,1286,3.843,1287,3.184,1288,3.677,1295,4.197,1301,4.566,1303,2.605,1308,2.605,1318,2.605,1324,5.566,1325,5.566,1330,4.566,1333,4.369,1340,3.843,1348,2.605,1350,2.605,1351,3.843,1356,4.566,1362,2.493,1877,2.264,2292,2.395,2876,4.947,2877,4.947,2878,4.947,2879,4.947,2880,4.947,2898,3.354,2900,3.354,2909,3.354,4043,4.268,4044,5.977,4045,5.977,4046,5.977,4047,3.754,4048,9.905,4049,3.754,4050,3.754,4051,3.754,4052,3.754,4053,3.754,4054,3.754,4055,3.754,4056,3.754,4057,3.754,4058,3.754,4059,3.754,4060,3.754,4061,3.754,4062,3.754,4063,3.754,4064,3.754,4065,3.754,4066,3.754,4067,3.754,4068,3.754,4069,3.754,4070,3.754,4071,3.754,4072,3.754,4073,3.754,4074,3.754,4075,3.754,4076,3.754,4077,3.754,4078,3.754,4079,6.487,4080,6.487,4081,3.354,4082,4.558,4083,3.09,4084,5.644,4085,4.947,4086,3.354,4087,3.354,4088,3.354,4089,4.947,4090,3.354,4091,3.354,4092,4.947,4093,5.877,4094,5.877,4095,5.877,4096,3.354,4097,3.354,4098,3.354,4099,3.354,4100,3.354,4101,5.977,4102,3.354,4103,3.354]],["title/interfaces/PictureInPictureViewerProps.html",[0,0.261,4046,4.07]],["body/interfaces/PictureInPictureViewerProps.html",[0,0.304,2,1.316,3,0.058,4,0.058,5,0.058,6,0.044,11,0.003,12,0.402,13,0.869,16,0.915,17,0.006,18,1.625,19,0.607,23,0.083,28,1.837,46,1.099,47,1.422,48,1.167,95,2.986,99,0.004,100,0.003,145,2.132,150,0.216,179,0.115,193,1.51,219,1.51,247,1.77,252,2.142,271,2.537,277,2.308,281,2.165,284,1.924,286,2.505,332,1.083,499,3.819,504,1.043,579,2.402,625,3.246,633,4.425,635,4.749,760,3.544,1213,4.197,1231,3.674,1232,3.033,1233,2.617,1236,4.58,1237,3.825,1238,3.42,1239,3.42,1258,3.674,1259,5.269,1260,5.769,1270,4.425,1276,4.948,1281,3.825,1284,4.948,1288,3.825,1324,3.825,1325,3.825,1877,3.046,2292,3.674,4043,4.438,4044,4.74,4045,4.74,4046,6.797,4079,7.8,4080,7.8,4081,5.144,4082,7.187,4083,4.74,4084,6.963,4085,6.655,4086,5.144,4087,5.144,4088,5.144,4089,6.655,4090,5.144,4091,5.144,4092,6.655,4093,7.377,4094,7.377,4095,7.377,4096,5.144,4097,5.144,4098,5.144,4099,5.144,4100,5.144,4101,7.187,4102,5.144,4103,5.144]],["title/interfaces/PureImageViewerLayer.html",[0,0.261,2979,3.604]],["body/interfaces/PureImageViewerLayer.html",[0,0.305,2,1.321,3,0.058,4,0.058,5,0.058,6,0.044,11,0.003,12,0.578,13,0.871,15,3.15,16,1.576,17,0.006,18,1.807,19,0.804,23,0.088,28,2.286,33,2.271,36,1.469,46,1.801,48,1.171,82,1.492,99,0.004,100,0.003,145,1.492,150,0.168,179,0.115,180,1.805,199,1.492,219,1.15,224,1.841,227,6.145,228,4.01,239,4.023,247,1.513,248,3.222,252,1.263,253,1.301,272,2.992,298,4.043,300,2.316,332,1.844,579,2.411,673,2.716,710,4.211,826,2.316,834,4.756,1526,4.781,1535,3.432,1536,3.553,1547,4.958,1557,3.687,1560,3.838,1564,2.749,1575,4.756,1586,3.129,1592,4.453,1724,6.598,1737,6.598,1785,6.598,2978,4.756,2979,6.028,2980,6.976,2981,6.598,2983,5.162,2985,6.145,2987,5.162,2988,4.453,3003,5.162,3004,5.162,3008,4.756,3009,5.162,3010,5.162,3011,5.162,3012,5.162,3013,5.162,3014,5.162,3015,5.162,3016,5.162,3017,5.162,3018,5.162,3019,5.162,3020,5.162,3021,5.162,3022,5.162]],["title/components/ResultsBrowserComponent.html",[101,0.557,378,1.38]],["body/components/ResultsBrowserComponent.html",[1,3.469,3,0.064,4,0.036,5,0.036,6,0.066,8,0.714,11,0.005,12,0.251,13,0.624,15,1.819,16,0.851,17,0.006,19,0.673,20,1.053,23,0.036,24,3.305,26,3.797,36,1.932,46,1.022,47,1.45,48,1.721,49,2.147,52,0.898,53,0.696,55,0.941,59,0.926,65,1.26,68,1.953,82,2.058,87,0.57,89,2.745,93,2.329,99,0.003,100,0.006,101,0.93,102,1.471,103,1.262,104,0.926,105,1.001,106,1.05,107,0.941,112,3.902,114,1.965,117,2.701,118,2.185,120,1.426,122,1.471,127,0.695,128,0.833,129,1.62,131,2.226,133,4.717,136,2.145,141,1.592,148,1.033,150,0.155,151,0.305,152,1.839,169,1.001,173,1.001,177,1.471,179,0.072,183,0.772,193,0.941,197,1.188,199,1.654,205,0.947,213,4.407,219,0.825,224,1.58,238,2.675,239,2.38,247,0.727,249,2.82,252,0.784,259,2.985,268,3.246,269,2.977,270,1.943,271,1.968,273,2,274,1.889,275,2.47,277,1.438,279,2.329,281,1.68,284,2.14,285,3.227,286,3.774,289,1.749,290,1.243,292,1.749,293,0.97,299,2.489,302,1.438,305,1.793,312,2.289,313,3.205,315,2.765,317,0.536,318,1.32,319,1.654,320,1.05,321,2.079,322,1.05,323,1.567,324,0.986,325,1.001,326,1.567,327,1.001,328,1.05,329,1.001,330,1.05,331,1.001,332,1.335,333,1.05,334,1.001,335,1.017,336,1.05,337,1.001,338,1.05,339,1.001,340,1.05,341,1.471,342,1.567,343,1.706,344,2.224,345,1.567,346,1.001,347,1.567,348,1.001,349,1.033,350,1.567,351,1.001,352,1.471,353,1.567,354,1.001,355,1.875,356,1.471,357,1.567,358,1.001,359,1.05,360,1.001,361,1.001,362,1.05,363,1.001,364,1.05,365,1.001,366,1.875,367,1.001,368,1.05,369,1.001,370,1.567,371,1.001,372,1.05,373,1.001,374,1.05,375,1.017,376,1.05,377,0.986,378,1.982,379,1.05,380,1.001,381,1.05,382,1.001,383,0.986,384,0.941,385,1.001,386,1.001,387,0.986,388,0.986,389,1.017,390,1.001,391,1.05,392,1.001,393,1.017,394,1.05,395,1.471,396,1.001,397,1.05,398,1.05,451,6.939,466,0.635,480,3.1,486,2.105,489,2.254,502,0.845,504,0.502,511,2.499,514,2,527,4.254,528,2,529,2.063,532,2.105,536,3.292,537,1.749,607,3.792,656,1.497,673,1.758,838,3.18,840,3.556,1235,3.716,1384,4.407,1398,2.765,1414,1.63,1416,4.668,1417,3.902,1547,4.254,1548,4.783,1559,2.49,1731,5.177,1742,2.675,1789,2.206,1797,2.063,1829,4.407,1834,3.902,1845,3.556,1979,3.902,2189,5.272,2459,3.556,2527,4.783,2583,3.716,2627,5.474,2691,4.407,3042,4.783,3123,4.783,3779,3.205,3995,4.407,4104,6.687,4105,3.587,4106,5.354,4107,7.102,4108,7.102,4109,5.354,4110,5.354,4111,6.405,4112,5.354,4113,6.405,4114,6.405,4115,5.354,4116,6.405,4117,7.598,4118,6.405,4119,3.587,4120,3.587,4121,3.587,4122,3.587,4123,5.354,4124,3.587,4125,5.354,4126,5.354,4127,6.405,4128,3.587,4129,8.832,4130,3.587,4131,5.354,4132,3.587,4133,4.783,4134,5.354,4135,5.354,4136,5.354,4137,3.587,4138,5.354,4139,5.354,4140,6.405,4141,3.205,4142,3.205,4143,3.205]],["title/components/ResultsBrowserItemComponent.html",[101,0.557,380,1.38]],["body/components/ResultsBrowserItemComponent.html",[3,0.08,4,0.04,5,0.04,6,0.057,8,0.997,11,0.005,12,0.279,15,2.315,17,0.006,19,0.471,23,0.04,26,3.404,36,1.9,37,4.595,41,4.347,42,2.649,43,2.649,44,2.545,47,1.751,48,1.773,49,1.75,51,2.232,52,0.999,53,0.629,55,1.046,56,4.168,59,1.03,65,1.34,68,1.455,89,2.968,93,2.518,99,0.003,100,0.005,101,0.962,102,1.59,103,1.364,104,1.03,105,1.113,106,1.168,107,1.046,112,4.219,114,2.041,117,2.717,118,2.198,120,1.541,122,1.59,127,1.122,128,0.926,129,1.3,131,1.96,136,2.312,148,1.149,150,0.168,151,0.339,152,2.045,169,1.113,173,1.113,177,1.59,179,0.08,183,0.859,193,1.518,197,1.284,199,1.495,205,1.024,215,3.966,224,1.68,236,2.356,248,3.228,268,2.678,269,1.854,271,2.093,272,1.599,273,3.228,274,2.101,279,1.735,280,2.453,281,2.081,284,1.934,285,1.813,289,1.944,290,1.343,292,3.321,293,1.566,295,2.16,300,1.599,301,2.465,302,2.32,317,0.595,318,1.427,319,1.495,320,1.168,321,2.188,322,1.168,323,1.694,324,1.096,325,1.113,326,1.694,327,1.113,328,1.168,329,1.113,330,1.168,331,1.113,332,1.405,333,1.168,334,1.113,335,1.131,336,1.168,337,1.113,338,1.168,339,1.113,340,1.168,341,1.59,342,1.694,343,1.814,344,2.323,345,1.694,346,1.113,347,1.694,348,1.113,349,1.149,350,1.694,351,1.113,352,1.59,353,1.694,354,1.113,355,1.994,356,1.59,357,1.694,358,1.113,359,1.168,360,1.113,361,1.113,362,1.168,363,1.113,364,1.168,365,1.113,366,1.994,367,1.113,368,1.168,369,1.113,370,1.694,371,1.113,372,1.168,373,1.113,374,1.168,375,1.131,376,1.168,377,1.096,378,1.901,379,1.168,380,2.086,381,1.168,382,1.113,383,1.096,384,1.046,385,1.113,386,1.113,387,1.096,388,1.096,389,1.131,390,1.113,391,1.168,392,1.113,393,1.131,394,1.168,395,1.59,396,1.113,397,1.168,398,1.168,451,5.448,466,0.706,480,2.585,486,2.275,489,2.398,504,0.811,511,2.63,528,3.228,529,2.294,532,2.275,537,1.944,656,1.664,843,1.538,868,2.294,870,3.588,874,5.448,1270,3.438,1385,4.765,1401,3.328,1413,3.283,1414,2.63,1416,2.907,1563,2.16,1565,2.101,1577,3.563,1729,2.275,1731,4.219,1796,3.283,1802,5.608,1823,2.453,1834,4.966,1845,2.649,2569,3.283,2709,4.765,2727,6.677,2750,3.563,2754,2.907,2937,4.765,2944,3.563,2969,5.171,3061,3.283,4104,5.761,4141,3.563,4144,6.152,4145,3.989,4146,6.812,4147,5.788,4148,7.474,4149,6.812,4150,3.989,4151,6.677,4152,3.989,4153,5.788,4154,3.989,4155,5.788,4156,5.788,4157,5.788,4158,3.989,4159,5.788,4160,5.788,4161,5.788,4162,3.989,4163,3.989,4164,3.989,4165,3.989,4166,3.989,4167,3.989,4168,3.989,4169,3.989]],["title/modules/ResultsBrowserItemModule.html",[402,0.715,4170,3.604]],["body/modules/ResultsBrowserItemModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,99,0.005,100,0.005,136,2.174,150,0.273,151,0.604,179,0.142,204,1.986,317,1.062,380,2.829,402,1.029,404,1.986,405,1.986,406,2.659,407,2.018,408,2.018,409,2.659,424,2.335,425,1.809,427,2.117,428,2.487,429,4.357,430,3.308,451,5.187,544,2.744,545,2.26,4104,5.485,4144,5.858,4170,7.191,4171,6.357,4172,6.357,4173,6.357,4174,7.116,4175,7.116]],["title/modules/ResultsBrowserModule.html",[402,0.715,422,3.604]],["body/modules/ResultsBrowserModule.html",[3,0.07,4,0.07,5,0.07,6,0.053,11,0.004,17,0.006,23,0.07,99,0.005,100,0.005,136,2.009,150,0.278,151,0.592,179,0.139,204,1.948,317,1.042,378,2.823,402,1.009,404,1.948,405,1.948,406,2.637,407,1.979,408,1.979,409,2.637,422,7.273,424,2.308,425,1.775,427,2.498,428,2.459,451,6.122,544,2.712,545,2.217,4104,5.38,4144,5.745,4170,7.083,4176,6.235,4177,6.235,4178,6.979,4179,6.235,4180,6.979,4181,6.979,4182,6.979,4183,8.399,4184,6.979]],["title/components/RightSidebarComponent.html",[101,0.557,382,1.38]],["body/components/RightSidebarComponent.html",[3,0.077,4,0.05,5,0.05,6,0.052,11,0.003,12,0.348,17,0.006,20,0.98,23,0.05,47,1.645,48,1.802,49,1.506,52,1.248,53,0.896,55,1.306,59,1.286,65,1.512,99,0.004,100,0.004,101,0.865,102,1.859,103,1.595,104,1.286,105,1.391,106,1.458,107,1.306,114,2.193,117,2.746,118,2.221,120,1.802,122,1.859,125,1.286,127,0.965,128,1.156,129,0.951,136,1.192,148,1.435,150,0.145,151,0.423,169,1.391,173,1.391,177,1.859,179,0.172,193,1.775,199,2.472,224,1.895,268,2.66,269,2.316,270,2.698,271,1.531,272,2.713,279,2.944,281,1.775,284,2.88,285,3.746,286,2.167,290,1.571,293,1.348,300,2.713,317,0.744,318,2.033,319,1.747,320,1.458,321,2.413,322,1.458,323,1.981,324,1.369,325,1.391,326,1.981,327,1.391,328,1.458,329,1.391,330,1.458,331,1.391,332,1.55,333,1.458,334,1.391,335,1.413,336,1.458,337,1.391,338,1.458,339,1.391,340,1.458,341,1.859,342,1.981,343,2.047,344,2.523,345,1.981,346,1.391,347,1.981,348,1.391,349,1.435,350,1.981,351,1.391,352,1.859,353,1.981,354,1.391,355,2.249,356,1.859,357,1.981,358,1.391,359,1.458,360,1.391,361,1.391,362,1.458,363,1.391,364,1.458,365,1.391,366,2.249,367,1.391,368,1.458,369,1.391,370,1.981,371,1.391,372,1.458,373,1.391,374,1.458,375,1.413,376,1.458,377,1.369,378,1.391,379,1.458,380,1.391,381,1.458,382,2.301,383,1.369,384,1.306,385,1.391,386,1.391,387,1.369,388,1.369,389,1.413,390,1.391,391,1.458,392,1.391,393,1.413,394,1.458,395,1.859,396,1.391,397,1.458,398,1.458,400,2.49,488,3.773,510,2.428,517,2.428,518,3.179,535,2.555,536,3.063,1564,2.371,1565,2.624,1580,3.22,1581,3.22,1593,2.371,2960,6.786,3244,3.063,3463,4.451,3465,6.866,3466,6.046,3470,4.451,3471,4.451,3472,4.451,4185,6.046,4186,6.046,4187,4.982]],["title/modules/RightSidebarModule.html",[402,0.715,4188,3.811]],["body/modules/RightSidebarModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,150,0.28,151,0.574,179,0.135,199,1.747,204,1.889,293,2.23,317,1.01,382,2.812,402,0.979,404,1.889,405,1.889,406,2.602,407,1.919,408,1.919,409,2.602,424,2.265,425,1.721,427,2.452,428,2.413,449,5.215,476,5.215,539,7.032,544,2.662,545,2.149,3481,6.045,3482,6.045,4185,6.045,4186,6.045,4188,7.793,4189,6.045,4190,6.045,4191,6.045,4192,6.045,4193,7.032,4194,7.032,4195,6.766,4196,8.243,4197,6.766,4198,5.215,4199,6.766,4200,5.215]],["title/interfaces/Rotation.html",[0,0.261,384,1.296]],["body/interfaces/Rotation.html",[0,0.309,2,1.338,3,0.059,4,0.059,5,0.059,6,0.045,8,0.78,11,0.003,12,0.409,13,0.878,16,1.196,17,0.006,18,1.754,19,0.74,20,1.885,23,0.076,53,0.636,68,2.134,99,0.004,100,0.003,101,1.023,117,1.558,118,1.62,120,1.558,122,1.607,125,1.943,144,2.6,146,3.597,150,0.17,151,0.497,179,0.15,183,1.62,204,1.633,205,1.332,216,2.514,235,3.364,236,2.023,252,2.067,318,1.443,383,1.607,384,2.592,480,3.037,489,2.649,492,3.42,504,1.23,510,2.852,511,2.928,513,6.115,514,5.344,516,4.671,517,2.852,518,3.733,703,3.733,837,4.061,838,3.475,1233,4.355,1392,4.265,1397,3.475,1552,4.816,1705,2.659,1712,6.413,1742,2.924,1743,3.345,2265,4.061,2434,4.816,2436,4.816,2437,4.816,2583,4.061,3043,4.51,3267,4.816,3931,4.816,4198,4.51,4201,4.816,4202,6.724,4203,4.816,4204,4.816,4205,5.227,4206,5.227,4207,6.724,4208,8.118,4209,5.227,4210,7.433,4211,6.724,4212,5.227,4213,4.265,4214,5.227]],["title/components/RotationSliderComponent.html",[101,0.557,383,1.358]],["body/components/RotationSliderComponent.html",[0,0.189,3,0.064,4,0.036,5,0.036,6,0.061,8,0.713,11,0.002,12,0.25,16,1.266,17,0.006,18,1.431,19,0.578,20,1.737,23,0.054,29,2.742,47,1.449,48,1.615,49,1.617,52,0.897,53,0.825,55,0.939,59,0.925,65,1.259,68,1.951,75,2.286,87,0.569,93,2.326,99,0.003,100,0.004,101,0.977,102,1.469,103,1.26,104,0.925,105,1,106,1.049,107,0.939,113,2.286,114,1.964,117,2.701,118,2.187,120,1.424,122,1.469,125,1.381,127,1.036,128,0.832,129,1.449,136,0.857,144,2.377,146,3.288,148,1.032,150,0.104,151,0.304,169,1,173,1,177,1.469,179,0.151,183,1.151,193,1.678,197,1.186,199,1.381,204,1.786,205,1.256,216,2.371,224,1.578,225,2.286,235,3.075,236,1.849,252,1.958,253,1.441,268,2.516,271,2.333,272,2.144,275,1.382,276,2.286,280,2.203,281,1.991,282,3.568,283,1.356,285,2.43,286,1.558,289,3.459,290,1.241,292,1.746,293,0.969,297,2.817,299,3.299,300,2.565,301,2.726,302,2.565,303,2.379,305,3.198,306,2.908,307,2.128,314,5.173,317,0.535,318,1.75,319,1.381,320,1.049,321,2.077,322,1.049,323,1.565,324,0.984,325,1.786,326,1.565,327,1,328,1.049,329,1,330,1.049,331,1,332,1.334,333,1.049,334,1,335,1.016,336,1.049,337,1,338,1.049,339,1,340,1.049,341,1.469,342,1.565,343,1.704,344,2.223,345,1.565,346,1,347,1.565,348,1,349,1.032,350,1.565,351,1,352,1.469,353,1.565,354,1,355,1.873,356,1.469,357,1.565,358,1,359,1.049,360,1,361,1,362,1.049,363,1,364,1.049,365,1,366,1.873,367,1,368,1.049,369,1,370,1.565,371,1,372,1.049,373,1,374,1.049,375,1.016,376,1.049,377,0.984,378,1,379,1.049,380,1,381,1.049,382,1,383,1.95,384,2.573,385,1,386,1,387,0.984,388,0.984,389,1.016,390,1,391,1.049,392,1,393,1.016,394,1.049,395,1.469,396,1,397,1.049,398,1.049,400,1.79,466,0.946,480,2.754,486,2.102,488,2.982,489,2.252,492,1.628,502,0.844,504,1.156,510,1.746,511,2.498,513,5.266,514,4.602,516,4.023,517,1.746,518,2.286,526,4.122,527,2.379,528,1.998,529,2.06,530,1.94,531,2.949,532,2.102,537,1.746,538,2.611,703,3.413,837,3.712,838,3.177,1233,4.169,1392,3.898,1397,3.177,1552,4.403,1561,3.37,1705,2.43,1712,4.932,1742,2.672,1743,3.154,1789,2.203,1801,4.403,2030,2.817,2265,3.712,2405,2.611,2434,2.949,2436,5.268,2437,4.403,2508,3.201,2568,5.717,2583,3.712,2754,2.611,2946,4.122,3043,4.122,3267,4.403,3772,5.717,3931,4.403,4198,6.139,4201,6.557,4202,3.201,4203,4.403,4204,4.403,4205,4.778,4206,5.717,4207,5.717,4208,7.748,4209,4.778,4210,5.717,4211,4.778,4212,4.778,4213,3.898,4214,6.34,4215,5.348,4216,3.582,4217,3.582,4218,3.582,4219,3.582,4220,5.348,4221,5.348,4222,5.348,4223,3.582,4224,3.582,4225,5.348,4226,3.582,4227,5.348,4228,3.582,4229,3.582]],["title/modules/RotationSliderModule.html",[402,0.715,4193,3.604]],["body/modules/RotationSliderModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,99,0.005,100,0.004,150,0.274,151,0.607,179,0.143,204,1.997,317,1.068,383,2.787,384,1.876,402,1.035,404,1.997,405,1.997,406,2.666,407,2.029,408,2.029,409,2.666,424,2.342,425,1.82,427,2.128,428,2.496,429,4.372,430,3.326,544,2.753,545,2.272,2576,6.393,2579,6.393,4193,7.199,4198,5.515,4201,5.891,4230,6.393,4231,6.393,4232,6.393]],["title/components/SchemeDropdownComponent.html",[101,0.557,385,1.38]],["body/components/SchemeDropdownComponent.html",[3,0.065,4,0.037,5,0.037,6,0.063,8,0.486,11,0.002,12,0.534,13,0.632,15,2.599,17,0.006,18,1.286,19,0.653,20,1.272,22,3.555,23,0.037,47,1.46,48,1.625,49,2.163,52,0.913,53,0.703,55,0.956,59,0.941,65,1.272,69,2.76,86,3.597,87,0.579,99,0.003,100,0.004,101,0.728,102,1.488,103,1.276,104,0.941,105,1.017,106,1.067,107,0.956,114,1.977,117,2.704,118,2.186,120,1.442,122,1.488,127,1.253,128,0.846,129,1.53,136,0.872,144,3.181,148,1.05,150,0.157,151,0.309,169,1.017,173,1.017,177,1.488,179,0.073,193,1.42,197,1.202,199,1.399,205,1.266,224,2.436,238,3.576,239,3.563,252,1.413,268,3.263,269,1.694,270,1.973,271,2.463,275,2.493,277,1.461,279,2.356,281,2.325,283,2.447,284,1.809,286,1.585,289,1.776,290,1.257,291,4.435,293,0.986,295,2.933,296,1.62,297,1.919,299,2.518,300,3.213,301,1.552,302,1.461,306,1.656,307,3.217,308,3.84,309,3.605,311,3,317,0.544,318,1.336,319,1.399,320,1.067,321,2.095,322,1.067,323,1.585,324,1.001,325,1.017,326,1.585,327,1.017,328,1.067,329,1.017,330,1.067,331,1.017,332,1.507,333,1.067,334,1.017,335,1.033,336,1.067,337,1.017,338,1.067,339,1.017,340,1.067,341,1.488,342,1.585,343,1.722,344,2.239,345,1.585,346,1.017,347,1.585,348,1.017,349,1.05,350,1.585,351,1.017,352,1.966,353,1.585,354,1.017,355,1.892,356,1.488,357,1.585,358,1.017,359,1.067,360,1.017,361,1.017,362,1.067,363,1.017,364,1.067,365,1.017,366,1.892,367,1.017,368,1.067,369,1.017,370,1.585,371,1.017,372,1.067,373,1.017,374,1.067,375,1.033,376,1.067,377,1.001,378,1.017,379,1.067,380,1.017,381,1.067,382,1.017,383,1.001,384,0.956,385,1.997,386,1.017,387,1.001,388,1.001,389,1.033,390,1.017,391,1.067,392,1.017,393,1.033,394,1.067,395,1.488,396,1.017,397,1.067,398,1.067,425,1.377,466,0.958,480,2.235,486,2.129,489,2.275,501,2.461,502,0.859,504,0.51,511,1.906,530,1.973,532,2.129,535,1.868,536,3.33,537,1.776,560,2.42,640,2.407,743,3,826,2.171,843,2.76,951,4.88,1389,3.255,1395,4.982,1414,3.959,1517,1.776,1526,4.156,1556,3.975,1558,3.255,1559,2.529,1560,4.293,1563,2.933,1564,2.577,1565,2.852,1566,2.809,1596,5.321,1704,4.293,1706,4.175,1710,4.459,1721,5.321,1734,3.948,1789,2.241,1790,2.529,1791,3.948,1792,2.656,1793,2.529,1794,2.529,1796,3,1797,2.095,1800,3.255,1946,1.868,2374,5.891,2375,5.775,2376,4.839,2390,3,2399,2.809,2409,3,2931,4.982,3069,6.832,3464,5.321,3467,5.891,4142,4.839,4233,7.415,4234,3.644,4235,5.416,4236,6.464,4237,5.416,4238,4.459,4239,3.644,4240,3.644,4241,3.644,4242,3.644,4243,5.416,4244,3.644,4245,5.416,4246,3.644,4247,2.809,4248,3.644,4249,3.644,4250,3.644,4251,3.644,4252,3.644,4253,3.644,4254,3.644,4255,3.644,4256,3.644,4257,3.644,4258,3.644,4259,3.644,4260,8.866,4261,5.416]],["title/modules/SchemeDropdownModule.html",[402,0.715,3066,3.604]],["body/modules/SchemeDropdownModule.html",[3,0.069,4,0.069,5,0.069,6,0.052,11,0.004,17,0.006,22,3.188,23,0.069,99,0.005,100,0.004,150,0.284,151,0.582,179,0.137,204,1.914,224,1.691,317,1.024,385,2.817,402,0.992,404,1.914,405,1.914,406,2.617,407,1.944,408,1.944,409,2.617,424,2.283,425,1.744,427,2.472,428,2.433,544,2.684,545,2.178,1517,3.342,1518,5.286,1567,6.717,1813,6.126,2428,6.405,2429,5.286,2430,6.841,2431,5.645,2432,6.126,3066,7.253,3069,5.645,4233,6.126,4247,5.286,4262,6.126,4263,6.126,4264,6.857,4265,6.126,4266,6.857,4267,7.425,4268,6.126]],["title/interfaces/SearchResult.html",[0,0.261,3721,3.811]],["body/interfaces/SearchResult.html",[0,0.337,2,0.813,3,0.036,4,0.036,5,0.036,6,0.027,8,0.475,11,0.005,12,0.625,13,0.62,15,3.08,16,1.493,17,0.006,18,1.271,19,0.671,20,0.7,23,0.08,28,2.088,36,1.62,57,2.187,65,1.834,99,0.003,100,0.005,107,1.985,119,3.66,128,1.479,131,0.933,132,2.929,137,3.268,141,1.896,150,0.26,151,0.302,153,1.399,154,3.451,156,1.455,179,0.071,180,1.991,181,2.166,183,2.047,194,1.581,205,1.128,212,2.929,216,2.529,219,1.378,236,1.23,237,4.222,240,4.659,247,1.669,248,1.984,249,3.356,259,1.984,466,1.457,504,0.893,535,1.824,537,2.593,562,1.807,579,1.484,612,4.606,631,3.143,699,1.23,742,2.593,814,4.066,843,2.458,860,2.27,861,1.734,870,3.356,911,6.127,942,2.881,947,5.069,951,2.27,953,1.399,954,3.395,981,1.608,1109,2.046,1234,2.967,1400,2.593,1533,3.059,1729,1.399,1740,2.593,1824,2.27,1920,2.593,2123,2.929,2136,2.093,2156,2.742,2157,2.742,2158,2.046,2168,4.101,2250,1.734,2257,2.742,2263,2.742,2273,2.27,2285,2.742,2464,4.101,2660,5.2,2664,2.742,2673,5.277,2732,6.54,2837,2.593,2839,2.363,2842,2.469,2866,2.593,2874,2.469,3172,2.469,3202,3.395,3244,2.187,3336,2.742,3515,2.113,3692,2.27,3699,2.929,3714,3.878,3717,4.38,3719,2.929,3721,4.912,3755,2.929,3774,2.742,3788,2.929,3789,2.929,3790,3.178,3791,3.178,3792,2.742,3796,3.178,3799,4.753,3800,4.697,3802,5.693,3803,3.178,3805,3.178,3806,3.178,3807,7.994,3809,3.178,3810,3.178,3811,4.753,3812,3.178,3813,3.178,3815,2.742,3816,3.178,3819,3.178,3820,3.178,3821,4.753,3823,3.178,3824,3.178,3825,2.742,3826,4.753,3827,3.178,3828,3.178,3829,3.178,3830,4.753,3831,3.178,3832,2.742,3833,4.908,3834,3.178,3835,4.753,3836,7.097,3837,2.469,3838,4.38,3839,2.929,3840,3.178,3841,6.764,3842,4.101,3843,4.101,3844,3.178,3845,3.178,3846,4.753,3847,3.178,3848,3.178,3849,3.178,3850,3.178,3851,3.178,3852,3.178,3853,3.178,3854,3.178,3855,3.178,3856,3.178,3857,3.178,3858,3.178,3859,6.318,3860,3.178,3861,3.178,3862,3.178,3863,5.693,3864,5.693,3865,4.753,3866,3.178,3867,3.178,3868,4.753,3869,3.178,3870,5.693,3871,3.178,3872,2.929,3873,3.178,3874,3.178,3875,3.178,3876,3.178,3877,3.178,3878,3.178,3879,3.178,3880,3.178,3881,3.178,3882,3.178,3883,3.178,3884,3.178,3885,3.178,3886,3.178,3887,3.178,3888,4.753,3889,3.178,3890,3.178,3891,3.178,3892,3.178,3893,3.178,3894,3.178,3895,3.178,3896,3.178,3897,3.178,3898,3.178,3899,3.178,3900,3.178,3901,4.753,3902,3.178,3903,4.753,3904,4.753,3905,4.753,3906,4.753,3907,3.178,3908,3.178,3909,3.178,3910,3.178,3911,3.178,3912,3.178,3913,4.753,3914,4.753,3915,3.178,3916,2.929,3917,3.178,3918,3.178]],["title/interfaces/SearchableItem.html",[0,0.261,58,3.284]],["body/interfaces/SearchableItem.html",[0,0.484,1,2.78,2,1.173,3,0.052,4,0.052,5,0.052,6,0.039,7,3.562,8,1.041,9,3.97,10,5.131,11,0.005,12,0.359,13,0.805,14,3.562,15,3.048,16,1.611,17,0.006,18,1.729,19,0.777,20,1.358,21,3.562,22,2.386,23,0.09,24,3.003,25,3.156,26,3.45,27,3.742,28,2.298,29,2.632,30,3.562,31,3.562,32,3.049,33,2.018,34,3.709,35,3.562,36,1.984,37,4.245,38,3.562,39,3.562,40,3.409,41,3.275,42,3.409,43,3.409,44,3.275,45,4.351,46,1.489,47,1.489,48,1.04,49,1.552,50,3.85,51,1.979,52,1.285,53,0.558,54,3.409,55,1.811,56,3.85,57,4.245,58,4.586,59,2.015,60,5.355,61,5.131,62,5.131,63,5.635,64,6.087,65,1.535,66,4.225,67,5.355,68,2.846,69,1.979,70,2.78,71,2.951,72,2.862,73,2.746,74,3.049,75,4.406,76,3.275,77,3.275,78,4.245,79,4.101,80,2.951,81,3.409,82,1.325,83,2.502,84,3.049,85,3.275,86,3.409,87,1.5,88,3.562,89,2.632,90,3.275,91,3.409,92,2.442,93,3.003,94,3.156,95,3.128,96,3.156,97,2.141,98,3.409,99,0.004,100,0.003]],["title/components/SideSelectorComponent.html",[101,0.557,386,1.38]],["body/components/SideSelectorComponent.html",[3,0.074,4,0.046,5,0.046,6,0.064,8,0.853,11,0.003,12,0.32,15,1.559,17,0.006,19,0.521,20,1.258,23,0.046,46,1.405,47,1.598,48,1.757,52,1.843,53,0.8,55,1.203,59,1.185,65,1.448,87,0.729,99,0.004,100,0.004,101,0.829,102,1.757,103,1.507,104,1.185,105,1.28,106,1.343,107,1.203,114,2.138,117,2.739,118,2.211,120,1.703,122,1.757,127,1.239,128,1.065,129,1.52,136,1.098,141,1.902,144,3.538,148,1.322,150,0.133,151,0.389,159,5.147,169,1.28,173,1.28,177,1.757,179,0.091,183,0.988,193,2.195,197,1.418,199,1.651,205,1.131,224,1.815,238,4.332,239,4.032,252,1.003,284,1.533,290,1.848,293,1.241,317,0.685,318,1.577,319,1.651,320,1.343,321,2.33,322,1.343,323,1.872,324,1.261,325,1.28,326,1.872,327,1.28,328,1.343,329,1.28,330,1.343,331,1.28,332,1.497,333,1.343,334,1.28,335,1.301,336,1.343,337,1.28,338,1.343,339,1.28,340,1.343,341,1.757,342,1.872,343,1.96,344,2.45,345,1.872,346,1.28,347,1.872,348,1.28,349,1.322,350,1.872,351,1.28,352,1.757,353,1.872,354,1.28,355,2.154,356,1.757,357,1.872,358,1.28,359,1.343,360,1.28,361,1.28,362,1.343,363,1.28,364,1.343,365,1.28,366,2.154,367,1.28,368,1.343,369,1.28,370,1.872,371,1.28,372,1.343,373,1.28,374,1.343,375,1.301,376,1.343,377,1.261,378,1.28,379,1.343,380,1.28,381,1.343,382,1.28,383,1.261,384,1.203,385,1.28,386,2.222,387,2.651,388,1.261,389,1.301,390,1.28,391,1.343,392,1.28,393,1.301,394,1.343,395,1.757,396,1.28,397,1.343,398,1.343,466,0.812,480,2.895,486,2.514,489,2.59,501,2.905,502,1.081,504,0.643,511,2.25,532,2.514,673,2.614,822,6.058,843,2.466,1100,3.777,1233,2.905,1414,2.085,2679,3.536,2680,5.673,2681,4.928,2683,5.673,2686,4.099,2687,5.712,2688,5.712,2689,7.112,2690,4.099,2691,5.263,2692,4.099,2694,4.099,2697,4.099,3484,6.891,4269,7.479,4270,5.712,4271,6.575,4272,5.712,4273,4.588,4274,4.588,4275,4.588]],["title/modules/SideSelectorModule.html",[402,0.715,3480,3.604]],["body/modules/SideSelectorModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,99,0.005,100,0.004,150,0.274,151,0.608,179,0.143,204,2,290,1.663,317,1.07,386,2.832,387,1.969,402,1.036,404,2,405,2,406,2.667,407,2.032,408,2.032,409,2.667,424,2.344,425,1.822,427,2.131,428,2.498,544,2.756,545,2.276,2703,5.899,2704,7.024,2705,5.899,2706,5.899,3480,7.201,3484,5.899,4269,6.402,4276,6.402,4277,6.402,4278,6.402]],["title/interfaces/SlicesData.html",[0,0.261,4279,4.07]],["body/interfaces/SlicesData.html",[0,0.442,2,1.355,3,0.059,4,0.059,5,0.059,6,0.045,8,0.79,11,0.003,12,0.414,13,0.885,16,0.942,17,0.006,18,1.726,19,0.618,20,1.493,23,0.076,29,4.525,36,2.32,46,1.131,51,2.926,53,0.825,82,1.53,99,0.004,100,0.003,101,0.943,117,1.578,118,1.633,120,1.578,122,1.628,125,1.959,150,0.172,151,0.503,179,0.151,183,1.633,205,1.343,219,0.913,233,2.201,247,1.201,318,1.461,319,1.53,325,2.605,388,1.628,389,2.752,466,1.049,477,4.567,478,4.567,479,3.643,480,3.227,481,4.567,482,4.567,487,4.567,489,2.67,491,4.113,492,4.145,495,4.567,498,5.848,499,4.292,501,2.693,503,3.121,504,1.063,505,3.936,506,3.643,509,3.643,510,2.888,511,2.67,517,2.888,518,3.781,519,4.567,520,4.567,521,4.567,523,4.567,1334,3.643,3035,4.878,3503,4.507,3815,4.567,4200,4.567,4279,7.265,4280,4.878,4281,8.338,4282,8.67,4283,7.884,4284,7.884,4285,4.567,4286,5.294,4287,5.294,4288,5.294,4289,5.294,4290,5.294,4291,7.478,4292,6.779,4293,5.294]],["title/components/SlicesInputComponent.html",[101,0.557,388,1.358]],["body/components/SlicesInputComponent.html",[0,0.296,3,0.067,4,0.038,5,0.038,6,0.064,8,0.747,11,0.002,12,0.266,13,0.653,16,1.055,17,0.006,18,1.193,19,0.541,20,1.603,22,1.772,23,0.056,29,3.751,36,2.141,46,1.069,47,1.488,48,1.652,49,2.212,51,1.47,52,0.955,53,0.915,55,1,59,0.985,65,1.306,82,1.446,87,0.606,93,1.659,99,0.003,100,0.004,101,0.878,102,1.539,103,1.32,104,0.985,105,1.064,106,1.116,107,1,113,2.433,114,2.009,117,2.711,118,2.194,120,1.492,122,1.539,125,1.446,127,1.085,128,0.885,129,1.555,136,0.912,148,1.098,150,0.111,151,0.324,169,1.064,173,1.064,177,1.539,179,0.155,183,1.206,193,1,197,1.242,199,1.446,205,1.295,219,0.587,224,1.637,233,2.081,247,0.773,253,1.261,268,2.61,271,1.172,276,2.433,281,1,285,1.733,289,1.858,290,1.3,291,1.772,292,1.858,293,1.031,299,1.772,301,1.624,302,1.528,305,2.799,306,2.545,317,0.569,318,1.804,319,1.889,320,1.116,321,2.141,322,1.116,323,1.639,324,1.048,325,2.35,326,1.639,327,1.064,328,1.116,329,1.064,330,1.116,331,1.064,332,1.375,333,1.116,334,1.064,335,1.081,336,1.116,337,1.064,338,1.116,339,1.064,340,1.116,341,1.539,342,1.639,343,1.768,344,2.281,345,1.639,346,1.064,347,1.639,348,1.064,349,1.098,350,1.639,351,1.064,352,1.539,353,1.639,354,1.064,355,1.943,356,1.539,357,1.639,358,1.064,359,1.116,360,1.064,361,1.064,362,1.116,363,1.064,364,1.116,365,1.064,366,1.943,367,1.064,368,1.116,369,1.064,370,1.639,371,1.064,372,1.116,373,1.064,374,1.116,375,1.081,376,1.116,377,1.048,378,1.064,379,1.116,380,1.064,381,1.116,382,1.064,383,1.048,384,1,385,1.064,386,1.064,387,1.048,388,2.01,389,2.736,390,1.064,391,1.116,392,1.064,393,1.081,394,1.116,395,1.539,396,1.064,397,1.116,398,1.116,400,1.905,466,1.379,477,2.939,478,4.317,479,3.444,480,3.211,481,5.116,482,4.317,486,2.202,487,5.116,488,3.123,489,2.336,491,3.887,492,4.073,495,4.317,498,6.007,499,3.996,501,2.545,502,0.898,503,2.95,504,0.93,505,3.72,506,3.444,509,3.444,510,1.858,511,1.971,517,1.858,518,2.433,519,2.939,520,2.939,521,2.939,523,2.939,526,5.116,527,2.532,528,2.126,529,2.192,530,2.065,531,3.139,532,1.499,533,3.406,534,3.139,535,1.955,536,2.344,537,1.858,538,2.779,1334,3.444,1530,3.033,3035,4.61,3503,2.265,3774,4.317,3815,4.317,4200,6.491,4279,6.707,4280,6.932,4281,6.536,4282,7.876,4283,6.962,4284,7.279,4285,4.317,4286,5.004,4287,5.93,4288,3.406,4289,5.004,4290,5.004,4291,5.93,4292,5.004,4293,6.536,4294,5.6,4295,3.813,4296,3.813,4297,3.813,4298,3.813,4299,3.813,4300,3.813,4301,3.813,4302,5.6,4303,3.813,4304,3.813,4305,3.406]],["title/modules/SlicesInputModule.html",[402,0.715,4194,3.604]],["body/modules/SlicesInputModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,99,0.005,100,0.004,150,0.279,151,0.604,179,0.142,204,1.986,317,1.062,388,2.785,389,2.018,402,1.029,404,1.986,405,1.986,406,2.659,407,2.018,408,2.018,409,2.659,424,2.335,425,1.809,427,2.117,428,2.487,429,4.357,430,3.308,543,6.357,544,2.744,545,2.26,546,6.995,547,5.858,548,6.357,4194,7.191,4200,5.485,4280,5.858,4306,6.357,4307,6.357,4308,6.357]],["title/interfaces/SpatialEntity.html",[0,0.261,921,2.937]],["body/interfaces/SpatialEntity.html",[0,0.394,2,1.074,3,0.047,4,0.075,5,0.081,6,0.036,8,0.627,11,0.003,12,0.328,13,0.758,15,2.968,16,1.621,17,0.006,18,1.822,19,0.817,23,0.075,27,3.644,28,2.154,36,2.045,53,1.007,70,2.544,83,3.92,84,5.627,87,1.567,99,0.004,100,0.003,217,4.511,236,2.92,261,4.511,332,1.512,384,2.214,479,3.997,505,6.498,513,5.387,514,4.708,516,4.115,627,3.423,750,5.132,921,5.015,1058,6.366,1062,4.511,1064,4.738,1112,3.423,1591,2.544,3158,4.738,3202,2.997,3236,4.511,3244,3.997,3601,3.621,3611,7.364,3646,6.199,3647,6.199,3648,6.199,3650,6.199,3653,6.199,3655,6.199,3657,6.199,3659,6.199,3661,3.621,3662,3.621,3663,3.621,3664,3.621,3665,3.621,3667,3.621,3669,3.621,3671,3.621,3673,3.621,3675,3.621,3677,3.621,3679,3.621,3681,3.621,3683,3.621,4213,3.424,4309,3.867,4310,3.867,4311,5.351,4312,6.135,4313,6.95,4314,3.867,4315,3.867,4316,3.867,4317,3.867,4318,6.62,4319,6.135,4320,3.867,4321,3.867,4322,6.62]],["title/interfaces/SpatialObjectReference.html",[0,0.261,1058,3.604]],["body/interfaces/SpatialObjectReference.html",[0,0.417,2,1.199,3,0.053,4,0.079,5,0.095,6,0.04,8,0.699,11,0.003,12,0.366,13,0.817,15,2.38,16,1.615,17,0.006,18,1.788,19,0.801,23,0.079,27,3.66,28,2.226,36,2.23,53,1.018,70,2.84,83,3.844,84,5.473,87,1.113,99,0.004,100,0.003,217,3.639,236,2.727,261,3.639,332,0.986,384,2.3,479,3.224,505,6.498,513,5.371,514,4.694,516,4.103,627,3.689,750,3.346,921,5,953,2.061,1058,6.393,1062,4.861,1064,5.105,1112,2.761,1591,2.84,3158,3.822,3202,3.346,3236,3.639,3244,3.224,3601,5.398,3611,6.761,3646,4.041,3647,4.041,3648,4.041,3650,4.041,3653,4.041,3655,4.041,3657,4.041,3659,4.041,3661,4.041,3662,4.041,3663,4.041,3664,4.041,3665,4.041,3667,4.041,3669,4.041,3671,4.041,3673,4.041,3675,4.041,3677,4.041,3679,4.041,3681,4.041,3683,4.041,4213,3.822,4309,4.316,4310,4.316,4311,4.316,4312,5.766,4313,6.929,4314,6.929,4315,5.766,4316,6.929,4317,4.316,4318,6.929,4319,6.492,4320,4.316,4321,4.316,4322,6.929]],["title/interfaces/SpatialPlacement.html",[0,0.261,1062,3.431]],["body/interfaces/SpatialPlacement.html",[0,0.387,2,1.041,3,0.046,4,0.089,5,0.08,6,0.035,8,0.608,11,0.003,12,0.318,13,0.742,15,2.162,16,1.608,17,0.006,18,1.83,19,0.82,23,0.074,27,3.483,28,2.133,36,1.864,53,0.965,70,3.445,83,3.101,84,5.536,87,1.261,99,0.004,100,0.003,217,3.161,236,2.535,261,3.161,332,0.856,384,2.444,479,2.801,505,6.625,513,5.664,514,4.95,516,4.327,627,4.555,750,2.906,921,5.379,1058,6.304,1062,5.088,1064,5.785,1112,2.399,1591,3.445,3158,3.32,3202,4.059,3236,3.161,3244,2.801,3601,3.511,3611,6.435,3646,3.511,3647,3.511,3648,3.511,3650,3.511,3653,3.511,3655,3.511,3657,3.511,3659,3.511,3661,6.117,3662,6.117,3663,6.117,3664,6.117,3665,6.117,3667,6.117,3669,6.117,3671,6.117,3673,6.117,3675,6.117,3677,6.117,3679,6.117,3681,6.117,3683,6.117,4213,4.637,4309,3.75,4310,3.75,4311,3.75,4312,6.035,4313,7.308,4314,3.75,4315,3.75,4316,3.75,4317,5.237,4318,7.455,4319,7.12,4320,5.237,4321,6.533,4322,7.455]],["title/interfaces/SpatialSceneNode.html",[0,0.261,585,2.757]],["body/interfaces/SpatialSceneNode.html",[0,0.234,2,1.013,3,0.063,4,0.044,5,0.044,6,0.034,11,0.003,12,0.31,13,0.728,16,1.585,17,0.006,18,1.752,19,0.794,23,0.063,28,2.173,36,2.24,46,1.82,53,0.482,69,2.407,83,2.16,87,1.557,95,2.502,99,0.004,100,0.003,125,1.145,128,1.029,141,1.318,145,2.134,150,0.265,179,0.088,205,0.784,216,2.085,219,1.357,236,1.533,240,2.215,247,1.676,252,1.714,253,0.998,282,2.472,332,1.554,499,2.273,504,1.012,557,3.231,561,2.828,563,4.332,585,4.609,616,2.549,619,4.822,620,2.633,625,1.742,635,4.238,640,1.97,654,3.077,655,3.48,656,2.604,669,4.549,673,2.575,684,3.143,699,2.858,705,3.231,710,3.231,711,5.576,712,1.888,713,3.96,715,3.96,716,3.96,718,3.96,722,3.96,723,5.576,724,6.454,725,3.649,726,3.076,727,3.96,728,3.416,729,5.138,730,3.96,731,3.416,732,5.947,733,3.416,734,5.576,735,3.649,736,7.048,737,3.96,738,6.454,739,5.014,740,3.96,741,3.96,742,3.231,743,3.649,744,3.96,745,3.96,746,3.96,747,3.96,748,3.96,749,3.96,750,5.003,751,6.044,752,6.79,753,6.371,754,6.371,755,6.044,756,6.044,757,6.371,758,6.044,759,4.373,760,2.109,761,5.576,762,5.138,763,2.16,764,3.649,765,3.649,766,3.649,767,6.454,768,3.96,769,3.96,770,5.576,771,3.96,772,3.96,773,3.96,774,5.576,775,5.138,776,3.416,777,3.96,778,3.96,779,6.454,780,3.96,781,3.96,782,3.96,783,3.96,784,3.416,785,5.576,786,5.576,787,3.96,788,5.576,789,6.455,790,3.96,791,5.576,792,3.96,793,3.416,794,2.944,795,3.96,796,3.96,797,3.96,798,3.96,799,5.576,800,6.454,801,5.947,802,5.138,803,5.576,804,5.576,805,3.96,806,3.96,807,3.96,808,3.96,809,3.96,810,3.649,811,3.96,812,3.96,813,3.96,814,2.828,815,3.96,816,3.96,817,3.416,818,3.96,819,3.96,820,3.416,821,3.96,822,3.649,823,3.96]],["title/interfaces/SpatialSceneNode-1.html",[0,0.219,253,0.932,585,2.306]],["body/interfaces/SpatialSceneNode-1.html",[0,0.212,2,1.327,3,0.04,4,0.04,5,0.04,6,0.031,11,0.003,12,0.28,13,0.677,16,1.555,17,0.006,18,1.683,19,0.784,23,0.058,28,1.96,45,2.233,46,1.772,61,3.569,62,3.569,66,2.169,73,2.917,74,3.448,83,2.829,87,1.536,90,2.555,99,0.003,100,0.002,118,1.25,127,1.323,128,2.033,145,2.261,150,0.24,152,2.053,179,0.08,219,1.414,237,2.233,240,2.9,247,1.733,252,2.102,253,1.867,272,1.605,332,1.788,479,2.462,496,3.704,504,0.813,530,4.055,579,1.671,585,5.176,619,4.604,620,2.379,627,2.109,635,5.017,684,3.51,736,6.126,750,5.072,751,6.879,752,6.879,753,6.126,754,6.126,755,6.126,756,6.59,757,6.126,758,6.126,784,3.086,793,4.474,817,3.086,820,6.126,868,3.926,870,4.7,874,6.506,897,3.855,898,2.919,920,2.919,921,4.721,949,3.086,954,2.555,967,2.779,976,2.919,977,1.905,1032,4.231,1053,3.086,1070,3.296,1080,3.086,1081,3.296,1086,6.543,1088,3.296,1089,3.086,1090,3.086,1091,3.296,1109,2.303,1111,3.296,1136,3.577,1143,3.577,1145,3.577,1147,3.577,1149,3.577,1152,3.577,1153,5.186,1155,3.086,1156,7.101,1157,5.186,1158,3.577,1159,3.577,1160,3.577,1161,6.689,1162,7.101,1163,5.186,1164,5.186,1165,7.638,1166,3.577,1167,5.186,1168,3.577,1169,3.577,1170,3.577,1171,2.779,1172,3.577,1173,3.577,1174,3.577,1175,3.577,1176,3.577,1177,2.919,1178,3.577,1179,3.577,1180,5.186,1181,3.577,1182,3.577,1183,7.824,1184,5.186,1185,5.186,1186,5.186,1187,5.186,1188,5.186,1189,3.577,1190,5.186,1191,3.577,1192,5.186,1193,5.186,1194,3.577,1195,3.577,1196,3.577,1197,3.577,1198,3.577,1199,3.577,1200,3.577,1201,3.577,1202,3.577,1203,3.577,1204,7.101,1205,5.186,1206,3.577,1207,3.577,1208,3.577,1209,5.186,1210,3.577,1211,3.296,1212,3.577,1213,4.231,1214,2.555,1215,3.577,1216,3.577,1217,3.577,1218,3.577,1219,3.577,1220,3.577,1221,1.952,1222,3.577,1223,3.577,1224,3.577,1225,3.577,1226,3.577,1227,3.577,1228,3.577]],["title/components/SpinnerOverlayComponent.html",[101,0.557,390,1.38]],["body/components/SpinnerOverlayComponent.html",[3,0.073,4,0.045,5,0.045,6,0.06,8,1.11,11,0.003,12,0.442,16,1.005,17,0.006,19,0.368,20,1.244,23,0.045,47,1.588,48,1.748,49,1.365,52,1.131,53,0.687,55,1.184,59,1.166,65,1.435,82,1.633,87,1.256,93,1.964,99,0.004,100,0.004,101,0.937,102,1.737,103,1.49,104,1.166,105,1.26,106,1.322,107,1.184,114,2.127,117,2.734,118,2.212,120,1.684,122,1.737,125,1.166,127,1.225,128,1.048,129,1.393,136,1.08,147,6.002,148,2.804,150,0.131,151,0.383,169,1.26,173,1.26,177,1.737,179,0.166,193,1.184,199,1.166,224,1.799,252,1.382,253,1.424,268,2.486,269,2.099,270,2.445,271,1.387,272,2.534,274,2.378,277,1.81,279,1.964,280,3.888,281,1.184,282,4.809,283,1.709,284,1.508,286,1.964,290,1.467,291,2.939,293,1.221,299,2.099,302,2.534,305,2.256,306,2.873,307,2.682,312,2.881,317,0.674,318,1.95,319,1.633,320,1.322,321,2.314,322,1.322,323,1.851,324,1.24,325,1.26,326,1.851,327,1.26,328,1.322,329,1.26,330,1.322,331,1.26,332,1.486,333,1.322,334,1.26,335,1.28,336,1.322,337,1.26,338,1.322,339,1.26,340,1.322,341,1.737,342,1.851,343,1.943,344,2.436,345,1.851,346,1.26,347,1.851,348,1.26,349,1.301,350,1.851,351,1.26,352,1.737,353,1.851,354,1.26,355,2.136,356,1.737,357,1.851,358,1.26,359,1.322,360,1.26,361,1.26,362,1.322,363,1.26,364,1.322,365,1.26,366,2.136,367,1.26,368,1.322,369,1.26,370,1.851,371,1.26,372,1.322,373,1.26,374,1.322,375,1.28,376,1.322,377,1.24,378,1.26,379,1.322,380,1.26,381,1.322,382,1.26,383,1.24,384,1.184,385,1.26,386,1.26,387,1.24,388,1.24,389,1.28,390,2.206,391,1.322,392,1.26,393,1.28,394,1.322,395,1.737,396,1.26,397,1.322,398,1.322,400,2.256,425,1.608,454,6.508,480,2.523,488,3.526,510,2.201,516,2.201,517,2.201,532,2.486,537,4.476,673,2.076,1214,2.881,1232,4.163,1398,4.873,1414,2.052,1533,3.636,1576,4.608,1580,3.008,1581,3.008,1593,2.148,1797,2.596,1799,3.133,1848,5.624,1950,2.776,2030,3.33,2071,4.199,2407,4.873,4323,7.063,4324,4.515,4325,6.322,4326,7.296,4327,6.322,4328,4.515,4329,6.322,4330,4.515,4331,6.322,4332,4.515,4333,4.515,4334,4.515,4335,4.515]],["title/modules/SpinnerOverlayModule.html",[402,0.715,423,3.604]],["body/modules/SpinnerOverlayModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,99,0.005,100,0.004,148,2.458,150,0.274,151,0.608,179,0.143,204,2,317,1.07,390,2.832,402,1.036,404,2,405,2,406,2.667,407,2.032,408,2.032,409,2.667,423,7.201,424,2.344,425,1.822,427,2.131,428,2.498,454,5.899,544,2.756,545,2.276,4323,6.402,4336,6.402,4337,6.402,4338,6.402,4339,7.166,4340,8.533,4341,7.166,4342,7.166]],["title/components/StageNavComponent.html",[101,0.557,392,1.38]],["body/components/StageNavComponent.html",[3,0.067,4,0.039,5,0.039,6,0.065,8,0.896,11,0.002,12,0.272,17,0.006,19,0.668,20,1.118,23,0.057,45,2.168,46,1.499,47,1.499,48,1.663,49,1.175,52,0.974,53,0.803,55,1.02,59,1.004,65,1.321,87,0.903,93,1.691,99,0.003,100,0.004,101,0.998,102,1.561,103,1.339,104,1.004,105,1.085,106,1.138,107,1.02,114,2.023,117,2.714,118,2.193,120,1.513,122,1.561,127,1.101,128,0.903,129,1.566,133,3.774,136,0.93,144,3.282,145,1.467,146,4.541,148,1.12,150,0.113,151,0.33,159,5.536,169,1.085,173,1.085,177,1.561,179,0.078,183,1.223,193,2.151,197,1.26,199,2.188,205,1.307,224,1.656,228,3.943,233,2.111,239,2.525,268,1.529,271,1.746,275,2.191,284,2.467,285,3.356,286,1.691,289,2.769,290,1.319,293,1.052,305,1.943,306,1.767,317,0.58,318,1.401,319,1.467,320,1.138,321,2.162,322,1.138,323,1.663,324,1.068,325,1.085,326,1.663,327,1.085,328,1.138,329,1.085,330,1.138,331,1.085,332,1.477,333,1.138,334,1.085,335,1.102,336,1.138,337,1.085,338,1.138,339,1.085,340,1.138,341,1.561,342,1.663,343,1.788,344,2.299,345,1.663,346,1.085,347,1.663,348,1.085,349,1.12,350,1.663,351,1.085,352,1.561,353,1.663,354,1.085,355,1.965,356,1.561,357,1.663,358,1.085,359,1.138,360,1.085,361,1.085,362,1.138,363,1.085,364,1.138,365,1.085,366,1.965,367,1.085,368,1.138,369,1.085,370,1.663,371,1.085,372,1.138,373,1.085,374,1.138,375,1.102,376,1.138,377,1.068,378,1.085,379,1.138,380,1.085,381,1.138,382,1.085,383,1.068,384,1.02,385,1.085,386,1.085,387,2.658,388,1.068,389,1.102,390,1.085,391,1.138,392,2.061,393,2.553,394,1.138,395,1.561,396,1.085,397,1.138,398,1.138,466,1.005,480,3.064,486,2.234,489,2.765,491,5.125,492,1.767,502,1.339,504,1.034,511,2.982,532,2.234,536,3.494,607,3.514,673,2.425,837,5.694,838,4.386,843,3.164,952,6.695,1233,2.582,1234,4.725,1370,3.474,1388,3.375,1705,2.582,1731,4.141,2053,2.913,2113,6.531,2325,4.905,2583,5.125,2627,4.379,2759,3.201,3043,5.692,3103,5.076,4270,5.076,4271,5.998,4272,5.076,4285,2.997,4343,6.975,4344,3.474,4345,5.682,4346,7.384,4347,6.714,4348,5.682,4349,5.682,4350,6.714,4351,6.714,4352,7.018,4353,3.888,4354,5.682,4355,3.888,4356,5.682,4357,3.888,4358,3.888,4359,3.888,4360,7.384,4361,5.682,4362,3.888,4363,5.998,4364,3.888,4365,3.888,4366,3.888,4367,3.888,4368,5.682,4369,3.888,4370,3.888]],["title/modules/StageNavModule.html",[402,0.715,2111,3.604]],["body/modules/StageNavModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,99,0.005,100,0.004,150,0.279,151,0.603,179,0.142,204,1.983,290,1.649,317,1.061,392,2.829,393,2.015,402,1.028,404,1.983,405,1.983,406,2.658,407,2.015,408,2.015,409,2.658,424,2.333,425,1.807,427,2.114,428,2.485,544,2.742,545,2.257,2111,7.189,2113,5.477,2704,6.989,2705,5.85,4267,7.585,4268,6.348,4343,5.85,4371,6.348,4372,6.348,4373,6.348,4374,7.106,4375,7.106]],["title/modules/StoreModule.html",[402,0.715,2119,3.604]],["body/modules/StoreModule.html",[3,0.07,4,0.07,5,0.07,6,0.053,11,0.004,17,0.006,23,0.084,33,2.729,36,1.765,99,0.005,100,0.004,150,0.287,151,0.589,167,5.811,179,0.138,182,5.06,219,1.069,237,3.871,402,1.004,404,1.937,427,2.065,428,2.451,861,3.383,1287,3.991,2119,6.102,2156,5.35,2157,5.35,2175,6.201,2250,3.383,2777,5.06,2785,5.561,3109,6.102,3182,6.201,3800,5.561,4203,5.714,4376,6.941,4377,6.941,4378,6.201,4379,6.941,4380,6.941,4381,6.941,4382,6.941,4383,6.941,4384,6.941,4385,6.941,4386,6.941,4387,6.941,4388,6.941,4389,6.941,4390,6.941,4391,6.941,4392,6.941,4393,6.941,4394,6.941,4395,6.941,4396,6.941,4397,6.941,4398,6.941]],["title/modules/ThemingModule.html",[402,0.715,2120,3.604]],["body/modules/ThemingModule.html",[3,0.074,4,0.074,5,0.074,6,0.056,11,0.004,17,0.006,23,0.074,99,0.005,100,0.004,145,1.896,150,0.251,151,0.623,164,6.529,179,0.146,204,2.049,317,1.096,402,1.062,404,2.049,405,2.049,406,2.149,407,2.081,408,2.61,409,2.149,424,2.378,425,1.867,428,2.534,458,6.043,459,6.043,2120,7.165,4399,6.558,4400,6.558,4401,7.341,4402,8.656,4403,7.341,4404,7.341,4405,7.341]],["title/injectables/ThemingService.html",[164,3.284,2136,1.624]],["body/injectables/ThemingService.html",[3,0.044,4,0.044,5,0.044,6,0.071,8,1.102,11,0.003,12,0.309,13,0.727,16,1.534,17,0.006,19,0.732,20,0.87,23,0.063,53,0.898,68,2.274,70,3.376,71,3.584,82,1.61,87,1.472,99,0.004,100,0.003,101,1.073,103,1.469,119,1.967,127,1.742,129,1.768,147,4.14,150,0.181,151,0.376,164,4.14,179,0.19,180,1.947,183,1.778,185,6.8,191,4.805,197,1.383,205,1.639,219,1.356,231,7.781,238,4.493,247,1.588,259,5.013,279,3.408,407,1.767,456,3.642,466,1.516,502,1.946,504,1.097,562,2.737,577,1.36,632,2.33,712,3.074,929,6.039,981,2.497,990,2.467,1028,3.408,1232,4.735,1397,4.906,1400,6.246,1729,2.451,1740,4.544,1902,3.584,1916,4.805,1939,3.41,1940,3.41,1948,2.939,2051,3.196,2128,2.939,2136,2.047,2137,2.396,2212,3.978,2273,3.978,2490,5.132,2513,3.41,2661,6.039,2806,3.071,3188,2.544,3491,2.628,3498,2.628,4406,4.425,4407,5.569,4408,7.866,4409,5.569,4410,7,4411,5.569,4412,7,4413,5.569,4414,3.953,4415,4.425,4416,5.569,4417,4.425,4418,5.569,4419,7.379,4420,4.425,4421,5.569,4422,8.166,4423,4.425,4424,5.569,4425,5.569,4426,4.425,4427,4.425,4428,5.569,4429,4.425,4430,4.425,4431,5.569,4432,4.425,4433,4.425,4434,3.953,4435,3.953,4436,3.953,4437,3.953,4438,3.953,4439,3.953,4440,3.953,4441,7,4442,5.569,4443,3.953,4444,3.953,4445,6.448,4446,3.953,4447,5.569,4448,3.953,4449,3.953,4450,3.953,4451,3.953,4452,3.953,4453,3.953,4454,3.953,4455,3.953]],["title/injectables/ThemingService-1.html",[164,2.747,253,0.932,2136,1.358]],["body/injectables/ThemingService-1.html",[3,0.044,4,0.044,5,0.044,6,0.071,8,1.102,11,0.003,12,0.309,13,0.727,16,1.534,17,0.006,19,0.732,20,0.87,23,0.063,53,0.898,68,2.274,70,3.376,71,3.584,82,1.61,87,1.472,99,0.004,100,0.003,101,1.073,103,1.469,119,1.967,127,1.742,129,1.768,147,4.14,150,0.181,151,0.376,164,4.14,179,0.19,180,1.947,183,1.778,185,6.8,191,4.805,197,1.383,205,1.639,219,1.356,231,7.781,238,4.493,247,1.588,259,5.013,279,3.408,407,1.767,456,3.642,466,1.516,502,1.946,504,1.097,562,2.737,577,1.36,632,2.33,712,3.074,929,6.039,981,2.497,990,2.467,1028,3.408,1232,4.735,1397,4.906,1400,6.246,1729,2.451,1740,4.544,1902,3.584,1916,4.805,1939,3.41,1940,3.41,1948,2.939,2051,3.196,2128,2.939,2136,2.047,2137,2.396,2212,3.978,2273,3.978,2490,5.132,2513,3.41,2661,6.039,2806,3.071,3188,2.544,3491,2.628,3498,2.628,4407,5.569,4408,7.866,4409,5.569,4410,7,4411,5.569,4412,7,4413,5.569,4414,3.953,4416,5.569,4418,5.569,4419,7.379,4421,5.569,4422,8.166,4424,5.569,4425,5.569,4428,5.569,4431,5.569,4434,3.953,4435,3.953,4436,3.953,4437,3.953,4438,3.953,4439,3.953,4440,3.953,4441,7,4442,5.569,4443,3.953,4444,3.953,4445,6.448,4446,3.953,4447,5.569,4448,3.953,4449,3.953,4450,3.953,4451,3.953,4452,3.953,4453,3.953,4454,3.953,4455,3.953,4456,4.425,4457,4.425,4458,4.425,4459,4.425,4460,4.425,4461,4.425,4462,4.425,4463,4.425,4464,4.425,4465,4.425,4466,4.425]],["title/interfaces/TiffInfo.html",[0,0.261,1243,3.04]],["body/interfaces/TiffInfo.html",[0,0.4,2,1.352,3,0.091,4,0.076,5,0.059,6,0.045,11,0.003,12,0.413,13,0.883,16,1.542,17,0.006,18,1.638,19,0.772,23,0.091,34,4.346,47,1.446,48,1.198,87,1.204,95,3.037,99,0.004,100,0.003,127,1.146,150,0.172,216,2.531,219,1.404,247,1.848,712,3.227,760,3.605,763,4.443,868,3.399,870,5.058,977,2.813,1221,2.882,1236,5.141,1238,3.512,1239,3.512,1240,5.032,1241,4.658,1242,5.335,1243,5.422,1244,5.335,1342,3.635,1948,3.927,2264,4.557,2822,4.103,3250,4.557,3557,4.557,3558,5.282,3559,5.282,3560,6.768,3561,6.883,3562,4.867,3563,4.867,3564,4.867,3565,7.189,3566,4.867,3567,4.867,3568,4.867,3569,4.867,3570,4.867,3571,4.867,3572,5.282,3573,8.332,3574,5.282,3575,4.867,3576,5.282,3577,5.282,3578,5.282,3579,5.282,3580,5.282,3581,5.282,3582,5.282,3583,4.867,3584,5.282,3585,5.282,3586,5.282,3587,5.282,3588,5.282,3589,5.282,3590,5.282,3591,5.282,3592,5.282,3593,5.282,3594,5.282,3595,5.282,3596,5.282]],["title/components/ToggleButtonComponent.html",[101,0.557,395,1.358]],["body/components/ToggleButtonComponent.html",[3,0.061,4,0.033,5,0.033,6,0.068,8,0.81,11,0.002,12,0.23,13,0.584,16,0.796,17,0.006,19,0.553,20,1.337,23,0.033,33,3.396,46,1.297,47,1.396,48,1.563,49,1.515,52,0.823,53,0.838,55,0.862,59,0.849,65,1.195,82,1.754,87,0.796,99,0.003,100,0.004,101,0.954,102,1.377,103,1.181,104,0.849,105,0.917,106,0.962,107,0.862,114,2.428,117,2.687,118,2.179,120,1.335,122,1.377,125,0.849,127,1.317,128,0.763,129,1.676,131,1.314,136,0.786,141,1.491,145,1.568,148,0.947,150,0.197,151,0.279,153,1.292,169,0.917,173,0.917,177,2.118,179,0.146,180,1.565,181,1.703,183,1.463,192,2.504,193,1.593,194,2.228,197,1.112,199,1.889,205,1.364,219,0.936,224,1.498,247,1.377,271,1.01,277,3.394,279,2.18,281,0.862,290,2.224,291,1.528,293,0.889,296,4.086,297,1.731,300,2.009,301,1.4,302,1.318,317,0.491,318,1.676,319,1.294,320,0.962,321,1.989,322,0.962,323,1.467,324,0.903,325,0.917,326,1.467,327,0.917,328,0.962,329,0.917,330,0.962,331,0.917,332,1.277,333,0.962,334,0.917,335,0.932,336,0.962,337,0.917,338,0.962,339,0.917,340,0.962,341,1.377,342,1.467,343,1.618,344,2.141,345,1.467,346,0.917,347,1.467,348,0.917,349,0.947,350,1.467,351,0.917,352,1.377,353,1.467,354,0.917,355,1.778,356,1.377,357,1.467,358,0.917,359,0.962,360,0.917,361,0.917,362,0.962,363,0.917,364,0.962,365,0.917,366,1.778,367,0.917,368,0.962,369,0.917,370,1.467,371,0.917,372,0.962,373,0.917,374,0.962,375,0.932,376,0.962,377,0.903,378,0.917,379,0.962,380,0.917,381,0.962,382,0.917,383,0.903,384,0.862,385,0.917,386,0.917,387,2.202,388,0.903,389,0.932,390,0.917,391,0.962,392,0.917,393,0.932,394,0.962,395,2.01,396,0.917,397,0.962,398,0.962,400,1.643,466,1.364,488,2.795,501,2.277,502,1.181,504,0.702,510,1.602,517,1.602,530,1.78,562,2.449,577,1.01,607,3.668,654,1.4,656,1.371,673,1.995,759,1.833,826,2.724,827,3.876,832,4.335,891,1.833,953,1.97,981,1.515,1109,1.89,1414,1.494,1530,2.714,1561,2.639,1563,1.78,1580,2.385,1581,2.385,1593,1.564,1705,3.087,1729,1.97,1795,5.237,1797,1.89,1871,2.89,1874,3.249,1877,1.344,1880,5.115,1881,3.478,1882,3.233,1886,4.178,1887,4.178,1889,2.091,1890,2.484,1891,3.082,1894,3.03,1898,3.198,1899,3.329,1900,3.198,1906,3.082,1924,3.876,1925,3.198,1935,2.183,1945,3.68,1946,4.503,1950,2.021,1955,2.281,1957,2.281,1958,2.097,1963,2.396,1966,2.097,2009,2.795,2017,3.478,2019,3.653,2020,3.478,2026,4.11,2047,2.281,2053,1.685,2099,2.57,2371,7.332,2416,4.952,2473,3.478,2730,2.706,2942,4.126,3148,2.706,3151,5,3152,4.126,3350,2.534,3355,2.534,3356,2.534,3357,4.682,3374,3.863,3400,2.534,3404,3.863,3415,5.941,3416,5.941,4467,8.906,4468,4.478,4469,2.937,4470,4.478,4471,6.887,4472,2.937,4473,2.937,4474,4.478,4475,2.937,4476,2.937,4477,2.937,4478,2.937,4479,2.937,4480,2.937,4481,2.937,4482,2.937,4483,2.937,4484,2.937,4485,2.937,4486,2.937,4487,2.937,4488,2.937,4489,2.937,4490,2.937,4491,2.937,4492,2.937,4493,4.478,4494,2.937,4495,4.478,4496,2.937]],["title/components/ToggleButtonComponent-1.html",[101,0.466,253,0.932,395,1.136]],["body/components/ToggleButtonComponent-1.html",[3,0.061,4,0.033,5,0.033,6,0.068,8,0.81,11,0.002,12,0.229,13,0.584,16,0.796,17,0.006,19,0.553,20,1.336,23,0.033,33,3.395,46,1.296,47,1.396,48,1.562,49,1.514,52,0.823,53,0.838,55,0.861,59,0.848,65,1.194,82,1.754,87,0.796,99,0.003,100,0.004,101,0.953,102,1.376,103,1.18,104,0.848,105,0.917,106,0.962,107,0.861,114,2.428,117,2.687,118,2.179,120,1.334,122,1.376,125,0.848,127,1.316,128,0.762,129,1.676,131,1.314,136,0.786,141,1.49,145,1.568,148,0.946,150,0.197,151,0.279,153,1.291,169,0.917,173,0.917,177,2.117,179,0.146,180,1.565,181,1.702,183,1.462,192,2.503,193,1.592,194,2.227,197,1.111,199,1.888,205,1.364,219,0.935,224,1.497,247,1.377,253,0.74,271,1.009,277,3.394,279,2.179,281,0.861,290,2.224,291,1.527,293,0.889,296,4.085,297,1.73,300,2.008,301,1.399,302,1.317,317,0.49,318,1.675,319,1.293,320,0.962,321,1.988,322,0.962,323,1.466,324,0.903,325,0.917,326,1.466,327,0.917,328,0.962,329,0.917,330,0.962,331,0.917,332,1.277,333,0.962,334,0.917,335,0.931,336,0.962,337,0.917,338,0.962,339,0.917,340,0.962,341,1.376,342,1.466,343,1.617,344,2.14,345,1.466,346,0.917,347,1.466,348,0.917,349,0.946,350,1.466,351,0.917,352,1.376,353,1.466,354,0.917,355,1.777,356,1.376,357,1.466,358,0.917,359,0.962,360,0.917,361,0.917,362,0.962,363,0.917,364,0.962,365,0.917,366,1.777,367,0.917,368,0.962,369,0.917,370,1.466,371,0.917,372,0.962,373,0.917,374,0.962,375,0.931,376,0.962,377,0.903,378,0.917,379,0.962,380,0.917,381,0.962,382,0.917,383,0.903,384,0.861,385,0.917,386,0.917,387,2.202,388,0.903,389,0.931,390,0.917,391,0.962,392,0.917,393,0.931,394,0.962,395,2.009,396,0.917,397,0.962,398,0.962,400,1.641,466,1.364,488,2.793,501,2.276,502,1.18,504,0.702,510,1.601,517,1.601,530,1.779,562,2.449,577,1.009,607,3.667,654,1.399,656,1.371,673,1.994,759,1.832,826,2.723,827,3.874,832,4.334,891,1.832,953,1.969,981,1.514,1109,1.889,1414,1.493,1530,2.713,1561,2.638,1563,1.779,1580,2.384,1581,2.384,1593,1.563,1705,3.086,1729,1.969,1795,5.235,1797,1.889,1871,2.889,1874,3.248,1877,1.343,1880,5.114,1881,3.477,1882,3.232,1886,4.176,1887,4.176,1889,2.09,1890,2.483,1891,3.08,1894,3.03,1898,3.196,1899,3.327,1900,3.196,1906,3.08,1924,3.874,1925,3.196,1935,2.182,1945,3.678,1946,4.502,1950,2.02,1955,2.28,1957,2.28,1958,2.096,1963,2.394,1966,2.096,2009,2.793,2017,3.477,2019,3.651,2020,3.477,2026,4.109,2047,2.28,2053,1.684,2099,2.568,2371,7.33,2416,4.951,2473,3.477,2730,2.704,2942,4.124,3148,2.704,3151,4.998,3152,4.124,3350,2.532,3355,2.532,3356,2.532,3357,4.68,3374,3.861,3400,2.532,3404,3.861,3415,5.94,3416,5.94,4468,4.475,4469,2.935,4470,4.475,4471,6.885,4472,2.935,4473,2.935,4474,4.475,4475,2.935,4476,2.935,4477,2.935,4478,2.935,4479,2.935,4480,2.935,4481,2.935,4482,2.935,4483,2.935,4484,2.935,4485,2.935,4486,2.935,4487,2.935,4488,2.935,4489,2.935,4490,2.935,4491,2.935,4492,2.935,4493,4.475,4494,2.935,4495,4.475,4496,2.935,4497,8.905]],["title/interfaces/ValueObject.html",[0,0.261,2840,3.811]],["body/interfaces/ValueObject.html",[0,0.484,2,1.262,3,0.055,4,0.055,5,0.055,6,0.042,8,0.737,11,0.003,12,0.386,13,0.845,15,2.92,16,1.418,17,0.006,19,0.45,20,1.916,22,4.147,23,0.086,28,2.302,51,3.121,53,0.97,65,1.755,99,0.004,100,0.003,150,0.21,154,2.99,183,1.189,216,3.059,219,1.489,247,1.119,466,0.977,579,3.024,612,4.357,625,2.171,631,4.07,859,4.653,1401,5.717,2660,3.925,2673,3.667,2834,6.236,2835,4.545,2836,4.545,2837,7.394,2838,7.072,2839,3.667,2840,6.622,2841,4.545,2842,5.03,2843,5.966,2844,5.966,2845,5.898,2846,5.966,2847,4.545,2848,7.344,2849,7.344,2850,5.966,2851,4.545,2852,4.545,2853,6.661,2854,4.545,2855,4.545,2856,4.545,2857,4.545,2858,5.966,2859,4.545,2860,4.545,2861,4.545,2862,4.545,2863,4.545,2864,4.545,2865,4.545,2866,4.025,2867,4.025,2868,5.966,2869,4.545,2870,4.545,2871,4.545,2872,4.545,2873,4.545,2874,3.832,2875,4.545]],["title/components/ViewerComponent.html",[101,0.557,396,1.38]],["body/components/ViewerComponent.html",[3,0.071,4,0.03,5,0.03,6,0.072,11,0.003,12,0.328,13,0.548,16,1.185,17,0.006,18,1.398,19,0.729,20,1.531,23,0.03,28,0.746,34,2.089,46,0.577,47,1.642,48,1.878,52,0.757,53,0.81,55,0.793,59,0.781,65,1.134,68,1.715,72,1.686,87,1.033,92,3.547,95,2.606,99,0.003,100,0.003,101,0.649,102,1.291,103,1.108,104,0.781,105,0.844,106,0.885,107,0.793,114,1.839,117,2.673,118,2.162,120,1.252,122,1.291,125,0.781,127,1.117,128,0.702,129,1.79,136,0.723,145,1.489,148,0.871,150,0.189,151,0.257,169,0.844,173,0.844,177,1.291,179,0.06,193,1.233,197,1.043,199,1.214,205,1.424,216,1.57,219,1.346,224,1.422,247,1.675,252,1.629,253,1.058,271,1.998,272,2.606,275,2.508,277,1.884,279,1.315,281,1.512,290,1.091,293,0.818,295,1.638,305,2.349,306,1.374,317,0.451,318,1.159,319,1.925,320,0.885,321,1.903,322,0.885,323,1.376,324,0.831,325,0.844,326,1.376,327,0.844,328,0.885,329,0.844,330,0.885,331,0.844,332,1.324,333,0.885,334,0.844,335,0.857,336,0.885,337,0.844,338,0.885,339,0.844,340,0.885,341,1.291,342,1.376,343,1.535,344,2.061,345,1.376,346,0.844,347,1.376,348,0.844,349,0.871,350,1.376,351,0.844,352,1.291,353,1.376,354,0.844,355,1.688,356,1.291,357,1.376,358,0.844,359,0.885,360,0.844,361,0.844,362,0.885,363,0.844,364,0.885,365,0.844,366,1.688,367,0.844,368,0.885,369,0.844,370,1.376,371,0.844,372,0.885,373,0.844,374,0.885,375,0.857,376,0.885,377,0.831,378,0.844,379,0.885,380,0.844,381,0.885,382,0.844,383,0.831,384,0.793,385,0.844,386,0.844,387,0.831,388,0.831,389,0.857,390,0.844,391,0.885,392,0.844,393,0.857,394,0.885,395,1.291,396,1.815,397,0.885,398,0.885,400,1.511,424,0.831,466,1.424,480,1.994,486,1.848,489,2.029,502,1.532,504,0.807,511,1.654,516,1.474,532,1.848,537,2.291,562,2.709,577,0.929,599,1.511,623,2.136,627,1.593,629,4.428,635,3.822,640,3.575,654,2.456,655,2.621,656,1.961,673,1.544,684,1.212,759,2.621,760,3.702,763,3.169,776,2.331,826,1.884,827,3.679,832,4.149,847,5.583,849,3.623,851,2.204,891,1.686,1109,1.739,1221,1.474,1229,2.008,1232,2.475,1233,1.374,1241,1.859,1243,1.859,1257,1.686,1260,1.93,1261,3.822,1263,2.099,1270,3.425,1275,3.262,1278,4.319,1295,4.149,1312,2.099,1327,3.262,1333,4.319,1362,2.008,1530,2.545,1580,2.236,1581,2.236,1586,3.814,1593,1.439,1594,1.93,1797,1.739,1854,4.199,1871,2.743,1882,3.094,2683,3.623,2789,3.262,2916,2.702,2924,5.106,2999,2.702,3051,2.702,3054,2.331,3077,5.151,3080,2.702,3082,2.702,3083,2.702,3084,4.199,3250,5.746,3583,3.869,4043,3.623,4084,2.204,4101,3.869,4133,5.151,4204,3.869,4498,3.024,4499,5.765,4500,4.7,4501,5.765,4502,5.765,4503,4.7,4504,6.502,4505,6.502,4506,3.024,4507,4.7,4508,4.7,4509,4.7,4510,3.024,4511,3.024,4512,3.024,4513,3.024,4514,4.7,4515,3.024,4516,3.024,4517,3.024,4518,3.024,4519,3.024,4520,4.7,4521,3.024,4522,3.024,4523,5.765,4524,3.024,4525,3.024,4526,3.024,4527,3.024,4528,2.702,4529,5.765,4530,3.024,4531,3.024,4532,3.024,4533,3.024,4534,4.7,4535,3.024,4536,3.024,4537,3.024,4538,5.151,4539,3.024,4540,4.7,4541,5.765,4542,4.7,4543,2.702,4544,4.7,4545,3.024,4546,3.024,4547,4.7,4548,3.024,4549,3.024,4550,3.024,4551,3.024,4552,4.7,4553,3.024,4554,4.199,4555,3.024,4556,4.7,4557,3.024,4558,3.024,4559,5.765,4560,3.024,4561,2.489,4562,3.024,4563,3.024,4564,3.024,4565,3.024,4566,3.024,4567,3.024,4568,3.024,4569,3.024,4570,3.024,4571,3.024,4572,3.024,4573,3.024,4574,3.024,4575,3.024,4576,3.024,4577,3.024,4578,3.024,4579,3.024,4580,3.024,4581,3.024,4582,3.024,4583,3.024,4584,5.151,4585,3.024]],["title/modules/ViewerModule.html",[402,0.715,3099,3.431]],["body/modules/ViewerModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,99,0.005,100,0.004,150,0.274,151,0.611,179,0.144,204,2.008,317,1.074,396,2.833,402,1.041,404,2.008,405,2.008,406,2.672,407,2.04,408,2.04,409,2.672,424,2.35,425,1.83,427,2.14,428,2.504,429,4.386,430,3.345,544,2.762,545,2.285,2924,3.897,3099,6.862,4586,6.429,4587,6.429,4588,6.429,4589,7.196,4590,7.196]],["title/injectables/ViewerState.html",[2136,1.624,3109,3.604]],["body/injectables/ViewerState.html",[0,0.25,3,0.047,4,0.047,5,0.047,6,0.068,11,0.003,12,0.591,13,0.761,15,1.607,16,1.425,17,0.006,18,1.611,19,0.657,20,1.284,23,0.066,28,2.158,48,1.324,53,0.92,80,2.719,87,1.282,99,0.004,100,0.003,125,2.26,127,1.265,129,1.67,141,1.942,150,0.272,151,0.401,154,2.561,156,1.933,179,0.094,197,1.448,205,1.549,219,1.484,224,1.989,233,3.251,247,0.958,252,1.634,253,1.906,272,1.895,332,1.591,466,1.427,502,1.9,504,0.914,562,2.12,579,2.724,599,3.737,623,3.398,625,2.94,640,3.324,673,1.553,703,4.166,861,3.931,939,3.892,1221,3.182,1334,2.907,1517,2.305,1526,4.372,1536,2.907,1556,2.907,1586,2.561,1625,3.446,1704,3.14,1720,5.833,1724,3.446,1737,3.446,1785,3.446,2136,2.144,2137,2.561,2208,5.198,2247,3.641,2248,2.637,2249,2.637,2250,2.305,2291,3.017,2979,3.446,2980,6.216,2981,3.446,3054,5.032,3109,4.759,3202,3.017,3825,3.644,4238,3.892,4247,3.644,4561,3.892,4591,4.224,4592,6.681,4593,6.681,4594,6.529,4595,6.529,4596,6.529,4597,5.833,4598,4.728,4599,5.833,4600,4.728,4601,5.833,4602,4.728,4603,4.728,4604,4.728,4605,5.833,4606,7.205,4607,5.833,4608,4.728,4609,5.833,4610,5.833,4611,5.833,4612,5.833,4613,5.833,4614,4.728,4615,5.833,4616,5.833,4617,5.833,4618,4.224,4619,4.224,4620,4.224,4621,5.833,4622,4.224,4623,3.892,4624,3.892,4625,7.818,4626,7.818,4627,7.818,4628,4.224,4629,6.681,4630,4.224,4631,4.224,4632,4.224,4633,4.224,4634,4.224,4635,4.224,4636,5.833,4637,5.833,4638,4.224,4639,4.224,4640,4.224,4641,6.681,4642,4.224,4643,4.224,4644,4.224,4645,4.224,4646,4.224,4647,4.224,4648,4.224,4649,4.224,4650,4.224]],["title/interfaces/ViewerStateModel.html",[0,0.261,4624,4.07]],["body/interfaces/ViewerStateModel.html",[0,0.276,2,1.194,3,0.052,4,0.052,5,0.052,6,0.04,11,0.003,12,0.587,13,0.814,15,1.775,16,1.11,17,0.006,18,1.702,19,0.641,23,0.07,28,2.16,48,1.416,53,0.568,80,3.003,99,0.004,100,0.003,125,1.804,141,2.078,150,0.278,151,0.443,154,2.828,156,2.135,179,0.104,205,1.393,219,1.506,224,1.941,233,3.122,247,1.059,252,1.72,253,1.973,272,2.093,332,1.647,504,0.731,562,1.481,623,3.576,625,3.094,640,2.321,673,1.715,703,4.457,861,4.096,1221,3.405,1334,3.211,1517,2.545,1526,4.486,1536,3.211,1556,3.211,1586,2.828,1625,3.806,1704,3.468,1724,3.806,1737,3.806,1785,3.806,2136,2.294,2208,4.675,2247,3.895,2248,2.912,2249,2.912,2250,2.545,2291,3.332,2979,3.806,2980,6.477,2981,3.806,3054,4.025,3109,3.806,3202,3.332,3825,4.025,4238,4.299,4247,4.025,4561,4.299,4591,4.665,4592,6.24,4593,4.665,4597,4.665,4599,4.665,4601,4.665,4605,4.665,4606,6.24,4607,4.665,4609,4.665,4610,4.665,4611,4.665,4612,4.665,4613,4.665,4615,6.24,4616,7.032,4617,6.24,4618,4.665,4619,4.665,4620,4.665,4621,6.24,4622,4.665,4623,4.299,4624,5.75,4625,8.462,4626,8.462,4627,8.462,4628,4.665,4629,7.032,4630,4.665,4631,4.665,4632,4.665,4633,4.665,4634,4.665,4635,4.665,4636,6.24,4637,6.24,4638,4.665,4639,4.665,4640,4.665,4641,7.032,4642,4.665,4643,4.665,4644,4.665,4645,4.665,4646,4.665,4647,4.665,4648,4.665,4649,4.665,4650,4.665]],["title/changelog.html",[3837,2.871,4651,3.188,4652,3.405]],["body/changelog.html",[0,0.398,10,2.943,11,0.003,17,0.004,25,4.048,29,4.7,33,1.881,36,2.365,37,4.048,47,1.677,48,1.781,49,1.99,52,2.128,55,2.126,56,2.669,59,1.236,63,2.943,65,1.48,68,1.746,73,2.649,78,2.943,79,2.843,99,0.004,100,0.004,105,1.336,107,1.255,110,4.276,118,2.002,128,2.039,129,0.914,131,1.255,136,1.575,152,2.454,199,1.236,225,3.054,238,3.29,253,1.483,264,4.276,274,2.52,290,1.111,296,2.926,298,2.592,332,1.415,405,1.336,501,3.42,504,0.67,506,2.943,561,5.604,638,3.911,655,3.671,703,3.054,860,3.054,902,3.179,911,5.935,931,3.054,952,5.801,983,3.94,984,5.172,985,3.322,1085,4.276,1155,3.689,1221,3.209,1234,2.669,1388,4.47,1521,3.179,1533,3.786,1556,2.943,1612,3.94,1729,2.588,1743,2.926,1789,2.943,2019,3.488,2219,3.689,2266,5.486,2269,6.673,2270,3.94,2499,6.724,2505,3.689,2591,4.276,2608,4.276,2661,5.074,2814,3.322,2970,4.276,3000,3.94,3059,7.242,3061,3.94,3149,6.195,3150,4.276,3205,5.882,3211,3.94,3212,3.94,3213,3.94,3219,4.276,3220,4.276,3225,5.882,3229,6.673,3234,3.94,3235,5.42,3240,4.276,3242,3.94,3565,6.248,3575,3.94,3615,5.882,3617,4.276,3622,5.882,3623,5.42,3839,3.94,3872,8.21,4012,3.94,4143,4.276,4305,7.242,4543,4.276,4554,5.882,4584,5.882,4623,3.94,4651,5.801,4652,5.42,4653,5.882,4654,4.786,4655,6.583,4656,6.583,4657,6.583,4658,6.583,4659,4.786,4660,4.786,4661,4.786,4662,4.786,4663,4.786,4664,4.786,4665,4.786,4666,4.276,4667,4.786,4668,4.786,4669,4.786,4670,4.786,4671,7.526,4672,4.786,4673,6.583,4674,9.412,4675,7.526,4676,6.583,4677,4.786,4678,8.106,4679,4.786,4680,6.583,4681,8.106,4682,4.786,4683,4.786,4684,4.786,4685,4.786,4686,6.583,4687,4.786,4688,4.786,4689,6.583,4690,4.786,4691,4.786,4692,4.786,4693,4.786,4694,6.583,4695,8.039,4696,7.526,4697,6.583,4698,4.786,4699,4.786,4700,4.786,4701,4.786,4702,4.786,4703,4.786,4704,8.106,4705,4.786,4706,4.786,4707,6.583,4708,7.526,4709,4.786,4710,4.786,4711,4.786,4712,6.583,4713,4.786,4714,6.583,4715,4.786,4716,4.786,4717,6.583,4718,6.583,4719,6.583,4720,6.583,4721,4.786,4722,4.786,4723,4.786,4724,4.786,4725,4.786,4726,4.786,4727,4.786,4728,4.786,4729,4.786,4730,4.786,4731,4.786,4732,4.786,4733,4.276,4734,4.786,4735,4.786,4736,4.786,4737,4.786,4738,4.786,4739,4.786,4740,4.276,4741,4.786,4742,4.786,4743,4.786,4744,4.786,4745,4.786,4746,4.786,4747,4.786,4748,4.786,4749,4.786,4750,4.786,4751,6.583,4752,8.499,4753,4.786,4754,4.786,4755,4.786,4756,4.786,4757,4.786,4758,4.786,4759,6.583,4760,4.786,4761,4.276,4762,4.786,4763,4.786,4764,4.786,4765,4.786,4766,4.786,4767,4.786,4768,4.786,4769,4.786,4770,4.786]],["title/dependencies.html",[405,1.658,4771,4.136]],["body/dependencies.html",[11,0.004,17,0.006,72,3.657,99,0.005,100,0.004,136,1.935,151,0.557,153,2.578,319,1.693,405,1.83,432,5.371,545,2.083,597,4.032,600,3.657,616,3.771,620,3.895,621,3.771,640,3.594,725,5.398,728,5.054,731,5.054,733,5.054,735,5.398,814,4.184,861,3.196,967,4.551,1071,7.225,1073,5.859,1076,7.225,1078,5.859,1079,5.859,1131,5.398,1233,2.98,1238,3.895,1239,3.895,1434,5.859,1435,5.859,1553,5.859,1764,4.78,2032,4.78,2155,5.859,2250,3.196,2839,4.356,3623,5.398,3624,5.859,3745,5.398,4378,5.859,4528,5.859,4653,5.859,4772,9.8,4773,6.558,4774,8.086,4775,6.558,4776,6.558,4777,6.558,4778,9.153,4779,6.558,4780,6.558,4781,6.558,4782,8.768,4783,6.558,4784,6.558,4785,6.558,4786,6.558,4787,6.558,4788,6.558,4789,6.558,4790,6.558,4791,6.558,4792,6.558,4793,6.558,4794,6.558,4795,6.558,4796,6.558,4797,6.558,4798,6.558,4799,6.558,4800,6.558,4801,6.558,4802,6.558,4803,6.558,4804,6.558,4805,6.558,4806,6.558,4807,6.558,4808,6.558,4809,6.558,4810,6.558]],["title/miscellaneous/enumerations.html",[4811,3.188,4812,5.308]],["body/miscellaneous/enumerations.html",[6,0.066,11,0.004,12,0.511,17,0.006,20,1.986,36,1.859,47,1.395,72,4.076,99,0.005,100,0.004,141,2.174,166,6.655,712,3.677,843,2.819,1221,3.563,1241,5.309,2183,6.017,2267,7.108,2268,6.293,3557,5.634,3561,7.564,3562,6.017,3563,6.017,3564,6.017,3565,7.569,3566,6.017,3567,6.017,3568,6.017,3569,6.017,3570,6.017,3571,6.017,4811,5.634,4812,6.53,4813,7.309,4814,6.53]],["title/index.html",[12,0.289,3837,2.871,4651,3.188]],["body/index.html",[0,0.462,11,0.004,17,0.005,89,4.484,99,0.005,100,0.004,118,2.097,298,4.046,306,3.394,984,4.767,985,5.185,1388,5.195,1705,3.394,2219,5.758,2266,6.374,3211,7.199,3212,7.199,3213,7.199,3230,7.813,3234,7.199,3235,7.871,3255,6.674,3256,6.674,3264,6.674,3265,6.674,3272,6.674,3273,6.674,4652,6.149,4733,6.674,4815,7.47,4816,7.47,4817,7.47,4818,7.47,4819,7.47,4820,7.47,4821,7.47]],["title/license.html",[3837,2.871,4651,3.188,4822,3.695]],["body/license.html",[11,0.004,17,0.005,82,1.81,99,0.005,100,0.004,112,5.108,425,1.782,588,3.691,607,3.335,860,4.472,942,3.795,984,4.472,1823,5.177,1920,6.579,2796,5.108,3229,5.769,3242,6.932,3290,6.261,4151,6.261,4666,6.261,4695,6.261,4740,6.261,4822,6.261,4823,7.008,4824,9.026,4825,7.008,4826,7.008,4827,8.42,4828,7.008,4829,7.008,4830,7.008,4831,7.008,4832,7.008,4833,8.42,4834,9.985,4835,7.008,4836,7.008,4837,7.008,4838,7.008,4839,7.008,4840,7.008,4841,7.008,4842,7.008,4843,7.008,4844,7.008,4845,7.008,4846,7.008,4847,8.42,4848,7.008,4849,7.008,4850,7.008,4851,7.008,4852,7.008,4853,8.42,4854,8.42,4855,7.008,4856,7.008,4857,7.008,4858,7.008,4859,7.008,4860,7.008,4861,7.008,4862,7.008,4863,7.008,4864,7.008,4865,7.008,4866,7.008,4867,7.008,4868,7.008,4869,7.008,4870,7.008,4871,7.008,4872,7.008,4873,7.008,4874,7.008,4875,7.008,4876,7.008,4877,7.008]],["title/modules.html",[404,1.879]],["body/modules.html",[11,0.003,17,0.004,99,0.004,100,0.003,136,2.48,403,5.75,404,1.611,414,4.207,415,5.437,416,5.177,417,3.833,418,4.207,419,4.207,420,4.006,421,4.207,422,4.207,423,4.207,539,4.207,552,4.207,901,5.75,1421,4.207,1567,4.006,1597,4.207,1602,4.207,1734,5.437,1805,4.207,2106,4.448,2111,4.207,2118,5.437,2119,5.437,2120,5.437,2324,6.374,2423,4.207,2610,4.207,2699,4.207,2765,4.207,2947,4.207,2952,4.006,2972,4.006,3066,4.207,3089,4.207,3098,4.207,3099,4.006,3289,9.261,3474,4.448,3479,4.207,3480,4.207,3687,4.006,3688,4.207,3689,4.006,4170,4.207,4188,4.448,4193,4.207,4194,4.207,4878,10.373]],["title/overview.html",[4084,4.907]],["body/overview.html",[2,0.688,11,0.002,17,0.006,99,0.003,100,0.002,102,2.317,103,0.709,164,4.308,169,2.168,173,2.168,177,2.317,204,0.84,317,0.449,324,2.134,327,2.168,329,2.168,331,2.168,334,2.168,337,2.168,339,2.168,341,2.317,343,2.197,346,2.168,348,2.168,351,2.168,354,2.168,356,2.207,358,2.168,360,2.168,361,2.168,363,2.168,365,2.168,367,2.168,369,2.168,371,2.168,373,2.168,375,2.202,377,2.134,378,2.168,380,2.168,382,2.168,383,2.134,385,2.168,386,2.168,388,2.134,390,2.168,392,2.168,395,2.317,396,2.168,402,0.435,403,7.649,404,0.84,405,0.84,406,0.881,407,0.853,408,0.853,409,0.881,410,2.689,411,2.689,412,2.689,413,2.689,414,5.423,415,6.587,416,6.698,417,5.334,418,5.854,419,6.52,420,5.391,421,6.359,422,5.854,423,5.423,424,1.287,425,0.765,461,1.504,539,5.423,540,2.689,541,2.689,542,2.689,549,2.689,550,2.689,551,2.689,552,6.147,892,2.689,893,2.689,894,2.689,1421,5.423,1422,2.689,1423,2.689,1424,2.689,1567,5.391,1568,2.689,1569,2.689,1570,2.689,1597,5.854,1598,2.689,1599,2.689,1600,2.689,1601,2.689,1602,5.854,1805,6.147,1806,2.689,1807,2.689,1809,2.689,1863,2.689,1864,2.689,1866,2.689,2106,6.19,2107,2.689,2108,2.689,2109,2.689,2110,2.689,2111,5.423,2115,2.689,2116,2.689,2117,2.689,2118,6.587,2119,4.727,2120,5.854,2137,1.63,2364,2.689,2365,2.689,2366,2.689,2423,5.423,2424,2.689,2425,2.689,2426,2.689,2573,2.689,2574,2.689,2575,2.689,2610,6.359,2611,2.689,2612,2.689,2614,2.689,2649,2.689,2650,2.689,2652,2.689,2699,5.423,2700,2.689,2701,2.689,2702,2.689,2761,2.689,2762,2.689,2763,2.689,2764,2.689,2765,5.854,2946,2.32,2947,5.854,2948,2.689,2949,2.689,2950,2.689,2951,2.689,2952,6.272,2972,6.137,2973,2.689,2974,2.689,2976,2.689,3062,2.689,3063,2.689,3064,2.689,3065,2.689,3066,5.854,3089,5.423,3090,2.689,3091,2.689,3092,2.689,3095,2.689,3096,2.689,3097,2.689,3098,6.748,3099,5.391,3142,2.689,3143,2.689,3145,2.689,3165,2.689,3166,2.689,3168,2.689,3298,2.689,3299,2.689,3300,2.689,3474,6.725,3475,2.689,3476,2.689,3477,2.689,3478,2.689,3479,5.423,3480,5.423,3684,2.689,3685,2.689,3686,2.689,3687,5.962,3688,6.52,3689,5.962,3780,2.689,3781,2.689,3782,2.689,3944,2.689,3945,2.689,3947,2.689,3960,2.689,3961,2.689,3962,2.689,4032,2.689,4033,2.689,4034,2.689,4084,2.194,4170,5.423,4171,2.689,4172,2.689,4173,2.689,4176,2.689,4177,2.689,4179,2.689,4188,6.725,4189,2.689,4190,2.689,4191,2.689,4192,2.689,4193,5.423,4194,5.423,4230,2.689,4231,2.689,4232,2.689,4262,2.689,4263,2.689,4265,2.689,4276,2.689,4277,2.689,4278,2.689,4306,2.689,4307,2.689,4308,2.689,4336,2.689,4337,2.689,4338,2.689,4371,2.689,4372,2.689,4373,2.689,4399,2.689,4400,2.689,4538,2.689,4586,2.689,4587,2.689,4588,2.689,4761,2.689,4879,3.01,4880,3.01]],["title/miscellaneous/typealiases.html",[4811,3.188,4881,5.942]],["body/miscellaneous/typealiases.html",[6,0.074,11,0.003,12,0.376,17,0.006,19,0.79,28,1.329,47,1.526,48,1.621,97,3.794,99,0.004,100,0.003,103,1.68,114,2.243,116,4.236,141,2.801,192,3.563,193,1.413,199,1.391,215,4.706,216,2.382,240,2.692,275,2.75,387,2.196,492,2.448,535,2.762,581,4.385,597,3.313,612,2.563,631,2.395,710,5.827,891,3.977,977,4.049,981,2.156,1092,2.563,1230,3.739,1231,6.141,1244,4.55,1247,4.737,1252,5.548,1254,4.737,1255,4.737,1257,3.977,1258,4.55,1526,2.626,1874,3.345,1877,2.916,1890,3.479,1894,3.575,1909,3.624,2084,4.101,2085,3.927,2086,4.147,2087,4.385,2088,4.385,2089,4.385,2091,4.101,2093,4.691,2094,5.592,2097,4.101,2098,4.101,2099,3.657,2102,5.592,2103,4.101,2105,3.927,2113,4.152,2978,4.435,2985,5.87,3008,5.87,3112,6.558,3172,4.949,3304,4.813,3321,5.87,3322,7.004,3323,7.004,3324,5.87,3325,7.004,3326,5.87,3327,7.004,3328,5.87,3329,5.87,3330,5.87,3454,4.813,3557,4.152,3692,3.438,3788,4.435,3789,5.87,3837,3.739,3838,5.87,4044,4.435,4045,5.87,4082,5.87,4083,4.435,4285,4.152,4343,4.435,4344,6.371,4352,4.813,4363,4.813,4811,4.152,4814,4.813,4882,5.387,4883,9.766,4884,9.531,4885,9.094,4886,5.387,4887,7.131,4888,5.387,4889,7.131,4890,5.387,4891,5.387,4892,5.387]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["0.095rem",{"_index":2570,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0.1.0",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":4810,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":4087,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["0.15.1",{"_index":4790,"title":{},"body":{"dependencies.html":{}}}],["0.15rem",{"_index":1803,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["0.17.1",{"_index":4793,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1804,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{}}}],["0.2",{"_index":704,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["0.2.0",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["0.25rem",{"_index":4495,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["0.25s",{"_index":4029,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["0.2rem",{"_index":2603,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.2s",{"_index":4225,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["0.3s",{"_index":2407,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["0.4.2",{"_index":4781,"title":{},"body":{"dependencies.html":{}}}],["0.4em",{"_index":2604,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.4rem",{"_index":1791,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.4s",{"_index":4335,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.5",{"_index":664,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["0.5*255",{"_index":820,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["0.5.0",{"_index":3623,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{},"dependencies.html":{}}}],["0.5em",{"_index":1415,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["0.5rem",{"_index":1801,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/InfoDialogComponent.html":{},"components/RotationSliderComponent.html":{}}}],["0.6.0",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["0.6s",{"_index":4334,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.7",{"_index":4224,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["0.75rem",{"_index":536,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["0.8",{"_index":796,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["0.875rem",{"_index":3293,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["0.8rem",{"_index":1792,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.9*255",{"_index":793,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["000000",{"_index":1794,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["020202",{"_index":1694,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["03",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["0c1687",{"_index":1703,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["0em",{"_index":2642,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["0px",{"_index":2416,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["0rem",{"_index":1793,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0s",{"_index":2646,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["0xff",{"_index":4541,"title":{},"body":{"components/ViewerComponent.html":{}}}],["1",{"_index":253,"title":{"components/AppComponent-1.html":{},"classes/AppPage-1.html":{},"interfaces/ColorScheme-1.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled-1.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState-1.html":{},"classes/InitializationState-1.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["1*255",{"_index":1180,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["1.0",{"_index":705,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["1.0.0",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":4789,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":4493,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["1.1.0",{"_index":4653,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.1.1",{"_index":4799,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":4788,"title":{},"body":{"dependencies.html":{}}}],["1.125rem",{"_index":1798,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["1.2",{"_index":4028,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["1.2.3",{"_index":4792,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":4798,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":4141,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["1.3.4",{"_index":4794,"title":{},"body":{"dependencies.html":{}}}],["1.3.6",{"_index":4803,"title":{},"body":{"dependencies.html":{}}}],["1.55rem",{"_index":2413,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1.5em",{"_index":1418,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["1.5px",{"_index":3471,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["1.5rem",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["1.5s",{"_index":2069,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["1.6.1",{"_index":4797,"title":{},"body":{"dependencies.html":{}}}],["1.8rem",{"_index":4369,"title":{},"body":{"components/StageNavComponent.html":{}}}],["10",{"_index":496,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/CCFSpatialScene.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["10.0",{"_index":637,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["10.0.7",{"_index":4772,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":4774,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["1000",{"_index":1090,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["10000",{"_index":4563,"title":{},"body":{"components/ViewerComponent.html":{}}}],["104",{"_index":4255,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["10px",{"_index":1562,"title":{},"body":{"components/ColorBarComponent.html":{},"components/OrganSelectorComponent.html":{}}}],["10rem",{"_index":1796,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["10x",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["11.5",{"_index":681,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["110",{"_index":2260,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["12",{"_index":4761,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["1234",{"_index":3632,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["12rem",{"_index":4257,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["13",{"_index":2261,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["136",{"_index":783,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["14px",{"_index":2400,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{}}}],["15",{"_index":662,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["1500",{"_index":1266,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["152px",{"_index":2415,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1565c0",{"_index":1620,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["15px",{"_index":2568,"title":{},"body":{"components/DualSliderComponent.html":{},"components/RotationSliderComponent.html":{}}}],["15rem",{"_index":2569,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["15x",{"_index":4229,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["16",{"_index":4538,"title":{},"body":{"components/ViewerComponent.html":{},"overview.html":{}}}],["16.13.1",{"_index":4805,"title":{},"body":{"dependencies.html":{}}}],["16.5rem",{"_index":2643,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["166",{"_index":1623,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["16px",{"_index":2402,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["16px/20px",{"_index":2738,"title":{},"body":{"components/HeaderComponent.html":{}}}],["17.5rem",{"_index":4030,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["18rem",{"_index":3777,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["1].rotation",{"_index":773,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["1a9850",{"_index":1645,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["1e88e5",{"_index":3140,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["1em",{"_index":2398,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["1px",{"_index":1563,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["1rem",{"_index":1414,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["1s",{"_index":2735,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoButtonComponent.html":{}}}],["2",{"_index":1221,"title":{"components/ContentComponent-2.html":{}},"body":{"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":4808,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":4492,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["2.2.8",{"_index":4782,"title":{},"body":{"dependencies.html":{}}}],["2.25rem",{"_index":2758,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{}}}],["2.2rem",{"_index":3141,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["2.5rem",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["2.75rem",{"_index":4031,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["20",{"_index":2987,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["20000",{"_index":1267,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["2019",{"_index":4695,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3225,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["20em",{"_index":2563,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["2166ac",{"_index":1637,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["21908a",{"_index":1682,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["22",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["22.5rem",{"_index":2644,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["225",{"_index":3021,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["229",{"_index":784,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["24",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["24rem",{"_index":2645,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["25",{"_index":4086,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["25.5rem",{"_index":401,"title":{},"body":{"components/AppComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["25000",{"_index":4562,"title":{},"body":{"components/ViewerComponent.html":{}}}],["255",{"_index":635,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["25rem",{"_index":2945,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{}}}],["27",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["275s",{"_index":2408,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["28.5rem",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["28px",{"_index":2572,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["2d6379",{"_index":1683,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["2em",{"_index":2601,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["2px",{"_index":2405,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["2rem",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OrganSelectorComponent.html":{}}}],["3",{"_index":703,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["3.0.6",{"_index":4785,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":4795,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4784,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":3138,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"components/OrganSelectorComponent.html":{}}}],["3.6.2",{"_index":4786,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":782,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["31",{"_index":4623,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["32px",{"_index":2571,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OrganSelectorComponent.html":{}}}],["33",{"_index":2609,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["33.33",{"_index":533,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["333",{"_index":1624,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3542b8",{"_index":4370,"title":{},"body":{"components/StageNavComponent.html":{}}}],["35rem",{"_index":2647,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["380px",{"_index":3778,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["393768",{"_index":1684,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3d",{"_index":952,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["3d121f",{"_index":1693,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3px",{"_index":4026,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["3rem",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["3s",{"_index":2410,"title":{},"body":{"components/DropdownComponent.html":{}}}],["4",{"_index":4648,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["4.17.19",{"_index":4796,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":4791,"title":{},"body":{"dependencies.html":{}}}],["4.5rem",{"_index":2759,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/OrganSelectorComponent.html":{},"components/StageNavComponent.html":{}}}],["40",{"_index":3473,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["400",{"_index":2737,"title":{},"body":{"components/HeaderComponent.html":{}}}],["404",{"_index":3595,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["40px",{"_index":3775,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["450b57",{"_index":1685,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["47",{"_index":4879,"title":{},"body":{"overview.html":{}}}],["4a2484",{"_index":1702,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["4em",{"_index":2641,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["4px",{"_index":1795,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["4rem",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["5",{"_index":1625,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["5.5rem",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["50",{"_index":2946,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{},"overview.html":{}}}],["500",{"_index":1024,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["500px",{"_index":3773,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["542788",{"_index":1654,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["5678",{"_index":3633,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["57",{"_index":4880,"title":{},"body":{"overview.html":{}}}],["5em",{"_index":2422,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{}}}],["5px",{"_index":4223,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["5rem",{"_index":1802,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["5s",{"_index":3135,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["6",{"_index":4561,"title":{},"body":{"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["6.5.5",{"_index":4806,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2988,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["60em",{"_index":3164,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["625rem",{"_index":4168,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["64b5f6",{"_index":1633,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["666",{"_index":1626,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["66bb6a",{"_index":1616,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["67a9cf",{"_index":1638,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["69f0ae",{"_index":2606,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["6bab65",{"_index":1681,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["6e016b",{"_index":1670,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["6rem",{"_index":2730,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["7",{"_index":4536,"title":{},"body":{"components/ViewerComponent.html":{}}}],["7.5rem",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}}}],["70px",{"_index":2565,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["75rem",{"_index":2566,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["78223c",{"_index":1692,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["7rem",{"_index":1559,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["8",{"_index":4543,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["8.2.0",{"_index":4783,"title":{},"body":{"dependencies.html":{}}}],["8.2.4",{"_index":4778,"title":{},"body":{"dependencies.html":{}}}],["8.25rem",{"_index":2734,"title":{},"body":{"components/HeaderComponent.html":{}}}],["8.9",{"_index":702,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["80cbc4",{"_index":1631,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["83",{"_index":2262,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["833",{"_index":1627,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["85",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["883381",{"_index":1701,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["88419d",{"_index":1671,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8c6bb1",{"_index":1672,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8c96c6",{"_index":1673,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8em",{"_index":1419,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["8rem",{"_index":3137,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["9.5",{"_index":667,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["9.85rem",{"_index":2396,"title":{},"body":{"components/DropdownComponent.html":{}}}],["90",{"_index":2608,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["91cf60",{"_index":1646,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["95",{"_index":4143,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"changelog.html":{}}}],["990000",{"_index":1662,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["998ec3",{"_index":1655,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["9e9e9e",{"_index":3139,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["9ebcda",{"_index":1674,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["9rem",{"_index":4142,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["_afterconnected",{"_index":2140,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["_aggregatedataquerystatus",{"_index":2186,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_blank",{"_index":4162,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["_channelconfigs",{"_index":1283,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_error",{"_index":2813,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["_expanded",{"_index":3369,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_height",{"_index":1274,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_layers",{"_index":3077,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["_lighting",{"_index":753,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["_listdataquerystatus",{"_index":2187,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_loaders",{"_index":1279,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_measuredmargin",{"_index":3397,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_measuredwidth",{"_index":3391,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_msg",{"_index":1897,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["_onclick",{"_index":572,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onclick(e",{"_index":596,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["_onhover",{"_index":573,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onhover(e",{"_index":603,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["_onviewstatechange",{"_index":574,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onviewstatechange(event",{"_index":605,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["_opened",{"_index":3365,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_placement",{"_index":3660,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["_position",{"_index":3361,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_self",{"_index":4163,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["_sources",{"_index":1278,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["_termoccurencesdataquerystatus",{"_index":2188,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_width",{"_index":1273,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["a.highlighted",{"_index":1040,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["aabb",{"_index":1432,"title":{},"body":{"interfaces/Collision.html":{}}}],["ability",{"_index":3024,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["about.wrapper",{"_index":3292,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["above",{"_index":4740,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":1797,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["abstract",{"_index":1269,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["acc",{"_index":3870,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["acc[current.id",{"_index":3874,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["accelerate",{"_index":3203,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["accent",{"_index":1410,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["accepting",{"_index":3447,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["accessible",{"_index":2174,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["accessors",{"_index":1530,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["accordingly",{"_index":2628,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["accordion",{"_index":2927,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion'},{'name",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["accordion.component",{"_index":2956,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["accordion.component.html",{"_index":2929,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.scss",{"_index":2928,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts",{"_index":2926,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:20",{"_index":2935,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:25",{"_index":2934,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:30",{"_index":2932,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:35",{"_index":2936,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:38",{"_index":2938,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.module",{"_index":2977,"title":{},"body":{"modules/ImageViewerContentModule.html":{}}}],["accordion.module.ts",{"_index":2953,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["accordion/image",{"_index":2925,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["accumulated",{"_index":3871,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["accumulator",{"_index":3869,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["acknowledgements",{"_index":3253,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["action",{"_index":4151,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["activate",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":1232,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ViewerComponent.html":{}}}],["active/showing",{"_index":4329,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["activelayers",{"_index":4593,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["actual_component",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["add",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["addclass",{"_index":4452,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["added",{"_index":3872,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["addhubmapdatatostore",{"_index":964,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["additional",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["addjsonldtostore",{"_index":959,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["addn3tostore",{"_index":960,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["addrdfxmltostore",{"_index":961,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["adds",{"_index":1740,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["addspatialentity",{"_index":1046,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialentity(entity",{"_index":1055,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialobjectreference",{"_index":1047,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialobjectreference(ref",{"_index":1057,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialplacement",{"_index":1048,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialplacement(placement",{"_index":1061,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addsubtree",{"_index":3873,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsubtree(model.nodes",{"_index":3867,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsubtree(nodes",{"_index":3876,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsvgicon",{"_index":2817,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["aed581",{"_index":1635,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["afterviewinit",{"_index":827,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["against",{"_index":3436,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["age",{"_index":63,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["agerange",{"_index":76,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["aggregate",{"_index":9,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["aggregatedata",{"_index":2189,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["aggregatedata(filter",{"_index":2200,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["aggregatedataquerystatus",{"_index":2190,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["aggregateresult",{"_index":1,"title":{"interfaces/AggregateResult.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{}}}],["aims",{"_index":3214,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["aliases",{"_index":4882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["alignment_datetime",{"_index":3602,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_id",{"_index":3603,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_operator_first_name",{"_index":3604,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_operator_last_name",{"_index":3605,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["allcompleted(states",{"_index":2238,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["allergy",{"_index":3281,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["allow",{"_index":1020,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["allowing",{"_index":4123,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["allows",{"_index":837,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["along",{"_index":1590,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["alongside",{"_index":4331,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["alpha",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":1916,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["always",{"_index":1942,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["ambientlight",{"_index":613,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["analysis",{"_index":3197,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["and/or",{"_index":4845,"title":{},"body":{"license.html":{}}}],["angle",{"_index":4345,"title":{},"body":{"components/StageNavComponent.html":{}}}],["angular",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["angular's",{"_index":2479,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["angular/animations",{"_index":2032,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":4773,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":3320,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["angular/cdk/overlay",{"_index":2513,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["angular/cdk/portal",{"_index":2514,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["angular/cdk/scrolling",{"_index":4184,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["angular/common",{"_index":545,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ViewerModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":2123,"title":{},"body":{"modules/CoreModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["angular/compiler",{"_index":4775,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":3745,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4776,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":3746,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/button",{"_index":2768,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/checkbox",{"_index":1404,"title":{},"body":{"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["angular/material/dialog",{"_index":3161,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":2955,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["angular/material/form",{"_index":2429,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["angular/material/icon",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"modules/ImageViewerContentModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/input",{"_index":547,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/OntologySearchModule.html":{},"modules/SlicesInputModule.html":{}}}],["angular/material/progress",{"_index":4341,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["angular/material/radio",{"_index":4268,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/select",{"_index":2431,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["angular/material/slide",{"_index":2705,"title":{},"body":{"modules/GenderSelectorModule.html":{},"modules/SideSelectorModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/theming",{"_index":4164,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["angular/material/toolbar",{"_index":2770,"title":{},"body":{"modules/HeaderModule.html":{}}}],["angular/material/tooltip",{"_index":2772,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/tree",{"_index":3965,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["angular/platform",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4777,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":2029,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animate('1.5s",{"_index":3346,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animate('1s",{"_index":2037,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["animate(0",{"_index":3345,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animation",{"_index":2406,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animations",{"_index":2000,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animationsenabled",{"_index":2039,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["annotate",{"_index":3216,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["anterior",{"_index":4352,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":983,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"changelog.html":{}}}],["app",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/OntologySelectionComponent.html":{},"modules/StoreModule.html":{}}}],["app.component",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}}}],["app.component.scss",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}}}],["app/core/services/theming/theming.service",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["app:bladder",{"_index":3975,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:brain",{"_index":3976,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:colon",{"_index":3977,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:heart",{"_index":3978,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:kidney",{"_index":3979,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:liver",{"_index":3980,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:lung",{"_index":3981,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:lymph_nodes",{"_index":3982,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:ovaries",{"_index":3984,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:small_intestine",{"_index":3985,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:spleen",{"_index":3987,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:stomach",{"_index":3988,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:thymus",{"_index":3989,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app_bootstrap_listener",{"_index":4402,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":102,"title":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["appearance",{"_index":3772,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["applicable",{"_index":2689,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["applied",{"_index":70,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["apply",{"_index":2593,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applybuttonclick",{"_index":2584,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applyfilter",{"_index":831,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["applyfilter(filter",{"_index":844,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["applyfilters",{"_index":2585,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["applyfilters(filters",{"_index":2631,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["applypropdefaults(props",{"_index":1264,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["applyspatialplacement(tx",{"_index":1084,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["applythemeclass",{"_index":4409,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["applythemeclass(cls",{"_index":4416,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["appmodule",{"_index":403,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":460,"title":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["appropriate",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":4165,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["args",{"_index":1248,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["args.filter(value",{"_index":2824,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["argsgenerator",{"_index":1341,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["argument",{"_index":2822,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["arguments",{"_index":1828,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["arising",{"_index":4875,"title":{},"body":{"license.html":{}}}],["array",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{}}}],["array.from(searchresults.values",{"_index":3909,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["arrow",{"_index":2420,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["arxiv",{"_index":3233,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["asking",{"_index":1382,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["assets",{"_index":988,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["assets/icons/app/hubmap",{"_index":2331,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["assets/icons/filter.svg",{"_index":2333,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["assets/icons/hubmap",{"_index":2336,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["assets/icons/icons",{"_index":2338,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["associated",{"_index":942,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["async",{"_index":760,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["at(model.nodes",{"_index":3862,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["at(nodes",{"_index":3917,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["atlas",{"_index":3193,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["atscrollbottom",{"_index":4113,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["attach",{"_index":4474,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["authentication",{"_index":2733,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authors",{"_index":4868,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1799,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["autocolorindex",{"_index":4626,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["autocomplete",{"_index":3740,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autocompleteopen",{"_index":3705,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autohighlight",{"_index":780,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["available",{"_index":1734,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/InfoDialogComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules.html":{}}}],["await",{"_index":763,"title":{},"body":{"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["awaited",{"_index":3305,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["award",{"_index":3272,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["axis",{"_index":4208,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["b",{"_index":1039,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["b.highlighted",{"_index":1041,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["b2182b",{"_index":1643,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b35806",{"_index":1659,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b39ddb",{"_index":1617,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b4335a",{"_index":1691,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b5c740",{"_index":1680,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["back",{"_index":2748,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["backbutton",{"_index":2752,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["backend",{"_index":91,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["background",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":2799,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["bar",{"_index":1520,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["bar'},{'name",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["bar.component",{"_index":1572,"title":{},"body":{"modules/ColorBarModule.html":{}}}],["bar.component.html",{"_index":1523,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.scss",{"_index":1522,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts",{"_index":1519,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:18",{"_index":1532,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:23",{"_index":1537,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:28",{"_index":1538,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:33",{"_index":1534,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:38",{"_index":1540,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:43",{"_index":1551,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:55",{"_index":1546,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:64",{"_index":1543,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.module",{"_index":1813,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["bar.module.ts",{"_index":1571,"title":{},"body":{"modules/ColorBarModule.html":{}}}],["bar/color",{"_index":1518,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["bars",{"_index":1555,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["base",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{}}}],["bbox",{"_index":1470,"title":{},"body":{"interfaces/Collision.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["bbox.left",{"_index":3388,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["bbox.right",{"_index":3387,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["bcbb",{"_index":3288,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["became",{"_index":3223,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["becomes",{"_index":3249,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["before",{"_index":1741,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["beginning",{"_index":3971,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["being",{"_index":3182,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/StoreModule.html":{}}}],["between",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["bf",{"_index":3568,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["bfd3e6",{"_index":1675,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["bftiff",{"_index":3567,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["bind",{"_index":600,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"dependencies.html":{}}}],["biomolecular",{"_index":3192,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bioportal",{"_index":3228,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bitwise",{"_index":4534,"title":{},"body":{"components/ViewerComponent.html":{}}}],["black",{"_index":2404,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{}}}],["bladder",{"_index":2337,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["block",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["blocksizeinputcomponent",{"_index":324,"title":{"components/BlockSizeInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["blocksizeinputmodule",{"_index":539,"title":{"modules/BlockSizeInputModule.html":{}},"body":{"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["blocksizes",{"_index":483,"title":{"interfaces/BlockSizes.html":{}},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{}}}],["blue",{"_index":4544,"title":{},"body":{"components/ViewerComponent.html":{}}}],["bluered",{"_index":1636,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["bmi",{"_index":64,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["bmirange",{"_index":77,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["board",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["body.id",{"_index":3864,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["bodycanvas",{"_index":830,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["bodyid",{"_index":1156,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["bodymodule",{"_index":414,"title":{"modules/BodyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyui",{"_index":556,"title":{"classes/BodyUI.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{}}}],["bodyuicomponent",{"_index":327,"title":{"components/BodyUiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["bodyuilayer",{"_index":563,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["bodyuimodule",{"_index":552,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyuiprops",{"_index":628,"title":{"interfaces/BodyUIProps.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["bodyuiviewstateprops",{"_index":624,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["bold",{"_index":529,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["booleaninput",{"_index":3318,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["boolean}).zoomopacity",{"_index":671,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["bootstrap",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["border",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["both",{"_index":74,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["bottom",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["bound",{"_index":2496,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["bounding",{"_index":1192,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["box",{"_index":1789,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"changelog.html":{}}}],["boxes",{"_index":1193,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["brain",{"_index":2340,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["branch",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":874,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["brightness",{"_index":1737,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["brightness/transparency",{"_index":1711,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightness[0",{"_index":4548,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightness[1",{"_index":4549,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightness_2",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["brightness_5",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["brightnesschanged",{"_index":1718,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesshigh",{"_index":1723,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesshigh(value",{"_index":1770,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesslow",{"_index":1722,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesslow(value",{"_index":1766,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnessslideroptions",{"_index":1716,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesstoslider(brightness",{"_index":4545,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightnesstoslider(layer.brightness",{"_index":4579,"title":{},"body":{"components/ViewerComponent.html":{}}}],["browse",{"_index":4878,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser'},{'name",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["browser.component",{"_index":4182,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser.component.html",{"_index":4112,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.scss",{"_index":4111,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts",{"_index":4105,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:20",{"_index":4120,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:25",{"_index":4119,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:30",{"_index":4122,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:35",{"_index":4121,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:41",{"_index":4124,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:47",{"_index":4130,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:52",{"_index":4132,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:59",{"_index":4128,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.get(browser.baseurl",{"_index":469,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["browser.module",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["browser.module.ts",{"_index":4180,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser/animations",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browser/results",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["browseranimationsmodule",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsermodule",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3220,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["bug",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["button.component",{"_index":2372,"title":{},"body":{"modules/DrawerModule.html":{},"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":3152,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.scss",{"_index":3151,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts",{"_index":3148,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:15",{"_index":3156,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4472,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:22",{"_index":4473,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:25",{"_index":4482,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:26",{"_index":3159,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:34",{"_index":4480,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:36",{"_index":4479,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:38",{"_index":4470,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:59",{"_index":4476,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:69",{"_index":4477,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:79",{"_index":4475,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:91",{"_index":4478,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.module",{"_index":2774,"title":{},"body":{"modules/HeaderModule.html":{}}}],["button.module.ts",{"_index":3169,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button/info",{"_index":2773,"title":{},"body":{"modules/HeaderModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{}}}],["button/toggle",{"_index":2371,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button:active",{"_index":2605,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["c",{"_index":4825,"title":{},"body":{"license.html":{}}}],["c6427e",{"_index":1700,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ca7670",{"_index":1690,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["cached",{"_index":3389,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["calc",{"_index":4494,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["calc(100",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["calc(50",{"_index":3350,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["calculated",{"_index":3382,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["calculates",{"_index":1839,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"classes/ImageViewerLayer.html":{}}}],["call",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent.html":{}}}],["callback",{"_index":3731,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["called",{"_index":2273,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["calling",{"_index":4360,"title":{},"body":{"components/StageNavComponent.html":{}}}],["calls",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["candidate",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":1434,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["canvas",{"_index":629,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":854,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["captures",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["carousel",{"_index":3968,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["case",{"_index":870,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{}}}],["catch",{"_index":2812,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["ccf",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"index.html":{}}}],["ccf.spatial.body.id",{"_index":1166,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.bothsexes.id",{"_index":1160,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.female.id",{"_index":1159,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.femaleorgans.id",{"_index":1164,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.male.id",{"_index":1158,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.maleorgans.id",{"_index":1163,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatialentity",{"_index":1119,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.spatialobjectreference",{"_index":1117,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.spatialplacement",{"_index":1122,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.x('vhkidney').id",{"_index":3634,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ccf.x('vhleftkidney').id",{"_index":1187,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhrightkidney').id",{"_index":1184,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleen').id",{"_index":1189,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc1').id",{"_index":1195,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc2').id",{"_index":1196,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc3').id",{"_index":1197,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf_annotations",{"_index":3652,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ccfcontexturl",{"_index":980,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfdatabase",{"_index":897,"title":{"classes/CCFDatabase.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccfdatabaseoptions",{"_index":913,"title":{"interfaces/CCFDatabaseOptions.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["ccfdrawer",{"_index":3338,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ccfdrawercontainer",{"_index":1873,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["ccfowlurl",{"_index":978,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfowlurl.endswith('.n3",{"_index":1007,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfspatialgraph",{"_index":916,"title":{"classes/CCFSpatialGraph.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{}}}],["ccfspatialgraph(this",{"_index":1000,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfspatialscene",{"_index":920,"title":{"classes/CCFSpatialScene.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccfspatialscene(this",{"_index":1002,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["cdk",{"_index":2417,"title":{},"body":{"components/DropdownComponent.html":{}}}],["cdkportal",{"_index":2506,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cdr",{"_index":1886,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["cdr.markforcheck",{"_index":1958,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["ceil",{"_index":1776,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["cell",{"_index":3205,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["center",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["centers",{"_index":3262,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["centimeter",{"_index":1088,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["cff",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["change",{"_index":1705,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySelectionComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"index.html":{}}}],["changed",{"_index":1743,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":1580,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy",{"_index":1593,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1581,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["changedetectorref",{"_index":1887,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["changelog",{"_index":4652,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changerotation",{"_index":4215,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["changerotation(newrotation",{"_index":4209,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["changes",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.color",{"_index":4634,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.customizedcolor",{"_index":4638,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.push",{"_index":4645,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.selected",{"_index":4639,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.selection",{"_index":2526,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changes.valuerange",{"_index":2524,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changing",{"_index":4354,"title":{},"body":{"components/StageNavComponent.html":{}}}],["channel",{"_index":1877,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["channelconfig",{"_index":1229,"title":{"interfaces/ChannelConfig.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["channelconfigs",{"_index":1281,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelison",{"_index":4093,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelison.push(active",{"_index":4098,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelnames",{"_index":1262,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["channelnames.length",{"_index":1358,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["channels",{"_index":3115,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["channelschange",{"_index":4505,"title":{},"body":{"components/ViewerComponent.html":{}}}],["channelschange.emit(!isrgb",{"_index":4574,"title":{},"body":{"components/ViewerComponent.html":{}}}],["charge",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["checkbox",{"_index":1373,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["checkbox'},{'name",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["checkbox.component",{"_index":1427,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["checkbox.component.html",{"_index":1375,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1374,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.mat",{"_index":1409,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":329,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["checkboxes",{"_index":1371,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxmodule",{"_index":1421,"title":{"modules/CheckboxModule.html":{}},"body":{"modules/CheckboxModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["checkboxonchange",{"_index":3029,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["checkboxonchange(layer",{"_index":3040,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["checked",{"_index":1389,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["checkmark",{"_index":1411,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checks",{"_index":2023,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["chevron_left",{"_index":2747,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/OrganSelectorComponent.html":{}}}],["chevron_right",{"_index":4025,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["child",{"_index":535,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"miscellaneous/typealiases.html":{}}}],["children",{"_index":2673,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["choices",{"_index":2383,"title":{},"body":{"components/DropdownComponent.html":{}}}],["choose",{"_index":1826,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["circle",{"_index":1596,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["claim",{"_index":4871,"title":{},"body":{"license.html":{}}}],["class",{"_index":179,"title":{"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"classes/PictureInPictureViewer.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["class.ccf",{"_index":4468,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["class.cff",{"_index":2004,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["classend",{"_index":3356,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["classes",{"_index":461,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"classes/PictureInPictureViewer.html":{},"overview.html":{}}}],["classname",{"_index":1950,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["clean",{"_index":3527,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["cleans",{"_index":1906,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["clear",{"_index":1295,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["click",{"_index":1834,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["clicked",{"_index":1845,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/InfoButtonComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["clickpos",{"_index":1858,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["clicks",{"_index":1836,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["clientheight",{"_index":4133,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{}}}],["clientwidth",{"_index":4559,"title":{},"body":{"components/ViewerComponent.html":{}}}],["close",{"_index":1846,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{}}}],["close(target",{"_index":1853,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["closed",{"_index":3112,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["closeexpanded",{"_index":3413,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["closeopendone",{"_index":3421,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["closes",{"_index":1835,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["closesliderpopover(target",{"_index":2541,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["closeviewer",{"_index":2961,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["cloud_download",{"_index":2727,"title":{},"body":{"components/HeaderComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["cls",{"_index":4419,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["clsname",{"_index":518,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/HeaderComponent-1.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["cluster_appmodule",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule",{"_index":540,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_declarations",{"_index":541,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_exports",{"_index":542,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_bodymodule",{"_index":549,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_exports",{"_index":551,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_imports",{"_index":550,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":892,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":893,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":894,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule",{"_index":1422,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_declarations",{"_index":1423,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_exports",{"_index":1424,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule",{"_index":1568,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule_declarations",{"_index":1569,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule_exports",{"_index":1570,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule",{"_index":1598,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_declarations",{"_index":1599,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_exports",{"_index":1601,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_imports",{"_index":1600,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule",{"_index":1806,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_declarations",{"_index":1807,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_exports",{"_index":1809,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_imports",{"_index":1808,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["cluster_colorschemepopupmodule",{"_index":1863,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_declarations",{"_index":1864,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_exports",{"_index":1866,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_imports",{"_index":1865,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["cluster_contentmodule",{"_index":2107,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_declarations",{"_index":2108,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_exports",{"_index":2110,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_imports",{"_index":2109,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":2115,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":2117,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":2116,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":2364,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":2365,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":2366,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule",{"_index":2424,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":2425,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":2426,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule",{"_index":2573,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_declarations",{"_index":2574,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_exports",{"_index":2575,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule",{"_index":2611,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_declarations",{"_index":2612,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_exports",{"_index":2614,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_imports",{"_index":2613,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["cluster_filterspopovermodule",{"_index":2649,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_declarations",{"_index":2650,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_exports",{"_index":2652,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_imports",{"_index":2651,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["cluster_genderselectormodule",{"_index":2700,"title":{},"body":{"modules/GenderSelectorModule.html":{},"overview.html":{}}}],["cluster_genderselectormodule_declarations",{"_index":2701,"title":{},"body":{"modules/GenderSelectorModule.html":{},"overview.html":{}}}],["cluster_genderselectormodule_exports",{"_index":2702,"title":{},"body":{"modules/GenderSelectorModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":2761,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":2762,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":2764,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_imports",{"_index":2763,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule",{"_index":2948,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_declarations",{"_index":2949,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_exports",{"_index":2951,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_imports",{"_index":2950,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule",{"_index":2973,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_declarations",{"_index":2974,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_exports",{"_index":2976,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_imports",{"_index":2975,"title":{},"body":{"modules/ImageViewerContentModule.html":{}}}],["cluster_imageviewerlayersmodule",{"_index":3062,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_declarations",{"_index":3063,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_exports",{"_index":3065,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_imports",{"_index":3064,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule",{"_index":3090,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule_declarations",{"_index":3091,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule_exports",{"_index":3092,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule",{"_index":3095,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule_exports",{"_index":3097,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule_imports",{"_index":3096,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule",{"_index":3142,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_declarations",{"_index":3143,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_exports",{"_index":3145,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_imports",{"_index":3144,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{}}}],["cluster_infobuttonmodule",{"_index":3165,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":3166,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":3168,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":3167,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["cluster_infodialogmodule",{"_index":3298,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":3299,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":3300,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule",{"_index":3475,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_declarations",{"_index":3476,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_exports",{"_index":3478,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_imports",{"_index":3477,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule",{"_index":3684,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_exports",{"_index":3686,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_imports",{"_index":3685,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule",{"_index":3780,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_declarations",{"_index":3781,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_exports",{"_index":3782,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule",{"_index":3944,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_declarations",{"_index":3945,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_exports",{"_index":3947,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_imports",{"_index":3946,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["cluster_ontologytreemodule",{"_index":3960,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_declarations",{"_index":3961,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_exports",{"_index":3962,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_organselectormodule",{"_index":4032,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_declarations",{"_index":4033,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_exports",{"_index":4034,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule",{"_index":4171,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule_declarations",{"_index":4172,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule_exports",{"_index":4173,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule",{"_index":4176,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_declarations",{"_index":4177,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_exports",{"_index":4179,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_imports",{"_index":4178,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["cluster_rightsidebarmodule",{"_index":4189,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_declarations",{"_index":4190,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_exports",{"_index":4192,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_imports",{"_index":4191,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule",{"_index":4230,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_declarations",{"_index":4231,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_exports",{"_index":4232,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule",{"_index":4262,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_declarations",{"_index":4263,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_exports",{"_index":4265,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_imports",{"_index":4264,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["cluster_sideselectormodule",{"_index":4276,"title":{},"body":{"modules/SideSelectorModule.html":{},"overview.html":{}}}],["cluster_sideselectormodule_declarations",{"_index":4277,"title":{},"body":{"modules/SideSelectorModule.html":{},"overview.html":{}}}],["cluster_sideselectormodule_exports",{"_index":4278,"title":{},"body":{"modules/SideSelectorModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule",{"_index":4306,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_declarations",{"_index":4307,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_exports",{"_index":4308,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule",{"_index":4336,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_declarations",{"_index":4337,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_exports",{"_index":4338,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule",{"_index":4371,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_declarations",{"_index":4372,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_exports",{"_index":4373,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":4399,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":4400,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_viewermodule",{"_index":4586,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_declarations",{"_index":4587,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_exports",{"_index":4588,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["code",{"_index":3000,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["codex",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":3319,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["collapse",{"_index":3416,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["collapsed",{"_index":3328,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":3412,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["collider",{"_index":740,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["collider.ts",{"_index":1430,"title":{},"body":{"interfaces/Collision.html":{}}}],["collision",{"_index":1428,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{}}}],["collisioning",{"_index":1459,"title":{},"body":{"interfaces/Collision.html":{}}}],["colon",{"_index":2342,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["color",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["colorbarcomponent",{"_index":331,"title":{"components/ColorBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorbarmodule",{"_index":1567,"title":{"modules/ColorBarModule.html":{}},"body":{"modules/ColorBarModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["colorchange",{"_index":1529,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["colorchanged",{"_index":1524,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{}}}],["colorchanged(color",{"_index":1542,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{}}}],["coloridx",{"_index":1707,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["coloring",{"_index":4311,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["colorizing",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["colorpickerlaunchercomponent",{"_index":334,"title":{"components/ColorPickerLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorpickerlaunchermodule",{"_index":1597,"title":{"modules/ColorPickerLauncherModule.html":{}},"body":{"modules/ColorPickerLauncherModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules.html":{},"overview.html":{}}}],["colors",{"_index":1536,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["colors.foreach((color",{"_index":3019,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["colors[order[index",{"_index":4649,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["colorscheme",{"_index":1526,"title":{"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{}},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["colorscheme.colors",{"_index":1539,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["colorschemecontentscomponent",{"_index":337,"title":{"components/ColorSchemeContentsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorschemecontentsmodule",{"_index":1805,"title":{"modules/ColorSchemeContentsModule.html":{}},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["colorschemepopupcomponent",{"_index":339,"title":{"components/ColorSchemePopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorschemepopupmodule",{"_index":1602,"title":{"modules/ColorSchemePopupModule.html":{}},"body":{"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["colorschemeselection",{"_index":1706,"title":{"interfaces/ColorSchemeSelection.html":{}},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/SchemeDropdownComponent.html":{}}}],["colorvalues",{"_index":4094,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["colorvalues.push(color",{"_index":4099,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["column",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["combined",{"_index":2103,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":2232,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["combines",{"_index":2278,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["come",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":2155,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["comma",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["common",{"_index":3211,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["common_options",{"_index":1774,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["commonmodule",{"_index":544,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ViewerModule.html":{}}}],["compare",{"_index":2302,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["compatibility",{"_index":4396,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":2268,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/enumerations.html":{}}}],["completion",{"_index":3419,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["componenet",{"_index":3701,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["component",{"_index":101,"title":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["component's",{"_index":2458,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["component.injector.get(overlaycontainer",{"_index":4450,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component.injector.get(renderer2",{"_index":4448,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component.injector.get(themingservice",{"_index":4437,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component.location.nativeelement",{"_index":4449,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component_template",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["componentref",{"_index":4422,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["components",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["composes",{"_index":3824,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["compositelayer",{"_index":711,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["computational",{"_index":3198,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["computations",{"_index":3791,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computes",{"_index":2511,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["concept",{"_index":3246,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["condition",{"_index":3901,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["conditions",{"_index":4852,"title":{},"body":{"license.html":{}}}],["config",{"_index":1321,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["config.isolated",{"_index":3521,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["configs",{"_index":1362,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["configuration",{"_index":3494,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["connect",{"_index":903,"title":{},"body":{"classes/CCFDatabase.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}}}],["connect(options",{"_index":925,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["connect(source",{"_index":3529,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["connected",{"_index":1911,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["connectedposition",{"_index":2512,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["connecting",{"_index":2169,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connection",{"_index":4876,"title":{},"body":{"license.html":{}}}],["connects",{"_index":927,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["consider",{"_index":4395,"title":{},"body":{"modules/StoreModule.html":{}}}],["console.log",{"_index":1502,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('starting",{"_index":1458,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":1515,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(this.selectedorgan",{"_index":4010,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["consortium",{"_index":4826,"title":{},"body":{"license.html":{}}}],["const",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["construction",{"_index":3204,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor",{"_index":577,"title":{},"body":{"classes/BodyUI.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["constructor(@inject(message_service_config",{"_index":3520,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["constructor(@optional",{"_index":2128,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["constructor(config",{"_index":3548,"title":{},"body":{"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}}}],["constructor(container",{"_index":4506,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor(data",{"_index":834,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["constructor(db",{"_index":1051,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{}}}],["constructor(deckprops",{"_index":578,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["constructor(defaulttheme",{"_index":4414,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["constructor(dialog",{"_index":3154,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["constructor(dialogref",{"_index":3178,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(drawer",{"_index":4469,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["constructor(http",{"_index":3798,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["constructor(messageservice",{"_index":1885,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["constructor(ontologysearchservice",{"_index":3928,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["constructor(ontologyservice",{"_index":3713,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(options",{"_index":912,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["constructor(original",{"_index":2659,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(overlay",{"_index":2455,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["constructor(page",{"_index":2743,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["constructor(private",{"_index":1109,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/InfoButtonComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["constructor(props",{"_index":1288,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["constructor(public",{"_index":997,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/OntologySearchComponent.html":{}}}],["constructor(readonly",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["constructor(registry",{"_index":2826,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["constructor(source",{"_index":2198,"title":{},"body":{"injectables/DataState.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["constructor(state",{"_index":3108,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["constructorparameters[0",{"_index":1250,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["contain",{"_index":2092,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerLayersComponent.html":{}}}],["container",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["container.component.html",{"_index":1876,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["container.component.scss",{"_index":1875,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["container/container.component",{"_index":2370,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":341,"title":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["containerpayload",{"_index":2094,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":1962,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["containing",{"_index":51,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/ValueObject.html":{}}}],["contains",{"_index":503,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["content",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["content'},{'name",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["content.component",{"_index":2618,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["content.component.html",{"_index":1996,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.scss",{"_index":1995,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts",{"_index":2582,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:16",{"_index":2588,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:21",{"_index":2587,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:26",{"_index":2590,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:31",{"_index":2589,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:36",{"_index":2962,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:38",{"_index":2595,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:41",{"_index":2963,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:44",{"_index":2964,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:46",{"_index":2592,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:49",{"_index":2965,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.module",{"_index":2654,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["content.module.ts",{"_index":2615,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["content/content.component",{"_index":1934,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{}}}],["content/filters",{"_index":2581,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{}}}],["content/image",{"_index":2959,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["content1",{"_index":1878,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["content2",{"_index":1879,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["content?.contains(target",{"_index":1855,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["contentchildren",{"_index":1931,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["contentchildren(contentcomponent",{"_index":1913,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["contentchildren(drawercomponent",{"_index":1922,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["contentcomponent",{"_index":343,"title":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":2084,"title":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["contentelement",{"_index":1817,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["contentmodule",{"_index":2106,"title":{"modules/ContentModule.html":{}},"body":{"modules/ContentModule.html":{},"modules.html":{},"overview.html":{}}}],["contents",{"_index":1713,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["contents'},{'name",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["contents.component",{"_index":1812,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["contents.component.html",{"_index":1715,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.scss",{"_index":1714,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts",{"_index":1709,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:106",{"_index":1738,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:118",{"_index":1746,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:21",{"_index":1727,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:26",{"_index":1733,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:31",{"_index":1730,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:36",{"_index":1735,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:41",{"_index":1748,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:46",{"_index":1749,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:51",{"_index":1751,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:52",{"_index":1754,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:59",{"_index":1756,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:60",{"_index":1759,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:67",{"_index":1761,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:68",{"_index":1763,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:70",{"_index":1725,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:91",{"_index":1736,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:98",{"_index":1744,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.module",{"_index":1869,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["contents.module.ts",{"_index":1810,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["contents/color",{"_index":1708,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{}}}],["contentsvisible",{"_index":2438,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["context",{"_index":979,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/OldRuiData.html":{}}}],["context.jsonld",{"_index":994,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/OldRuiData.html":{}}}],["continues",{"_index":3247,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contract",{"_index":3290,"title":{},"body":{"components/InfoDialogComponent.html":{},"license.html":{}}}],["control",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{}}}],["controller",{"_index":639,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["controls",{"_index":1841,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{}}}],["convenience",{"_index":559,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["convertoldruitojsonld(data",{"_index":3628,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["converts",{"_index":2867,"title":{},"body":{"interfaces/IdObject.html":{},"classes/ImageViewerLayer.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OldRuiData.html":{},"interfaces/ValueObject.html":{}}}],["coordinate",{"_index":3212,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["coordinate_system",{"_index":722,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordinate_system.cartesian",{"_index":786,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordinatesystem",{"_index":785,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordination/office",{"_index":3270,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["copied",{"_index":3574,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["copies",{"_index":4847,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4833,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4824,"title":{},"body":{"license.html":{}}}],["core",{"_index":2129,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/color",{"_index":2966,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["core/models/image",{"_index":1594,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["core/models/ontology",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/data",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{}}}],["core/services/ontology",{"_index":3748,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/theming/theming.service",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/data/data.state",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{}}}],["core/store/ontology/ontology.state",{"_index":3940,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["core/store/page/page.state",{"_index":2746,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["core/store/viewer/viewer.state",{"_index":3127,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["coremodule",{"_index":415,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2757,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["corresponds",{"_index":1579,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["count",{"_index":14,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["counter",{"_index":3501,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["counts",{"_index":948,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["cover",{"_index":4167,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["coverage",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["covid",{"_index":3570,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["covidtiff",{"_index":3569,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["create",{"_index":2457,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["create(original",{"_index":2665,"title":{},"body":{"classes/FlatNode.html":{}}}],["created",{"_index":2497,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["createentitycollections",{"_index":4617,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["creategraph",{"_index":1049,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["createlayerconfigs",{"_index":1325,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["createlayers",{"_index":4594,"title":{},"body":{"injectables/ViewerState.html":{}}}],["createlayers(ids",{"_index":4597,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["createloader",{"_index":1240,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createloader(source.type",{"_index":1311,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["createmodel(nodemap",{"_index":3853,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["createometiffloader",{"_index":3560,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["creates",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewerLayer.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["createselectionlabel(ontolgyselection",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["createvivviews",{"_index":1324,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["createzarrloader",{"_index":3558,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createzarrloader(info",{"_index":3578,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["creating",{"_index":1937,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["creation",{"_index":3158,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creation_date",{"_index":3650,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator",{"_index":3611,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_first_name",{"_index":3646,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_last_name",{"_index":3647,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_orcid",{"_index":3648,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["credits",{"_index":4817,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":2461,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["css",{"_index":4528,"title":{},"body":{"components/ViewerComponent.html":{},"dependencies.html":{}}}],["csvreport",{"_index":1506,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":1508,"title":{},"body":{"interfaces/Collision.html":{}}}],["ctrlclick",{"_index":693,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{}}}],["ctrlkey",{"_index":691,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["cubegeometry",{"_index":734,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["cubes",{"_index":799,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["cuboid",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":843,"title":{},"body":{"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["currently",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"injectables/DataSourceService.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"changelog.html":{}}}],["currentstate",{"_index":698,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["currentstate.data",{"_index":707,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["currentstate.zoomopacity",{"_index":706,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["currentstates",{"_index":1343,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["currentstates[view.id",{"_index":1345,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["currentviewstate",{"_index":1367,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["cursor",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["customizable",{"_index":3060,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["customizedcolor",{"_index":1785,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["cyberinfrastructure",{"_index":4819,"title":{},"body":{"index.html":{}}}],["d",{"_index":789,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.scenegraph",{"_index":801,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.wireframe",{"_index":802,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.x",{"_index":3654,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d.y",{"_index":3656,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d.z",{"_index":3658,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d1e5f0",{"_index":1639,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d47d60",{"_index":1699,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d7301f",{"_index":1663,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d73027",{"_index":1651,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d8daeb",{"_index":1656,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d9ef8b",{"_index":1647,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["damages",{"_index":4872,"title":{},"body":{"license.html":{}}}],["dark",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data",{"_index":36,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["data.aggregatedata$.subscribe",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["data.alignment_datetime",{"_index":3651,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_id",{"_index":3643,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_first_name",{"_index":3644,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_last_name",{"_index":3645,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_orcid",{"_index":3649,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.colorscheme.colors[0",{"_index":3012,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data.filter$.pipe(pluck('ontologyterms",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["data.id",{"_index":3011,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data.label",{"_index":2969,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["data.length",{"_index":778,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["data.listdata$.subscribe",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["data.organname",{"_index":2968,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["data.reference_organ_id",{"_index":3630,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.storage.googleapis.com/test",{"_index":4531,"title":{},"body":{"components/ViewerComponent.html":{}}}],["data.termoccurencesdata$.subscribe",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["data.tissue_object_rotation",{"_index":3638,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_object_size",{"_index":3637,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point",{"_index":3639,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.x",{"_index":3619,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.y",{"_index":3620,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.z",{"_index":3621,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.ts",{"_index":4889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["data/data.state",{"_index":4380,"title":{},"body":{"modules/StoreModule.html":{}}}],["data/hubmap/pyramid_0.0.2/spraggins.ome.tif",{"_index":4532,"title":{},"body":{"components/ViewerComponent.html":{}}}],["data?.length",{"_index":668,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["dataaction",{"_index":2208,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["database",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["database.ts",{"_index":899,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["database.ts:106",{"_index":938,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:116",{"_index":933,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:126",{"_index":958,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:136",{"_index":956,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:147",{"_index":943,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:161",{"_index":936,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:171",{"_index":945,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:181",{"_index":941,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:190",{"_index":950,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:47",{"_index":923,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:49",{"_index":917,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:51",{"_index":914,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:58",{"_index":919,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:70",{"_index":926,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database/src/lib/ccf",{"_index":898,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["database/src/lib/hubmap/hubmap",{"_index":4892,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["database/src/lib/hubmap/old",{"_index":3598,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["database/src/lib/interfaces.ts",{"_index":7,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["database/src/lib/interfaces.ts:90",{"_index":2135,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/interfaces.ts:92",{"_index":2133,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/interfaces.ts:94",{"_index":2134,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/spatial",{"_index":4309,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["datafactory",{"_index":962,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["dataloading",{"_index":4116,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["dataquerystate",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["dataquerystate.completed",{"_index":2239,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["dataquerystate.running",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datasets",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":92,"title":{"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/ListResult.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchableItem.html":{},"components/ViewerComponent.html":{}}}],["datasourceservice",{"_index":160,"title":{"injectables/DataSourceService.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datastate",{"_index":167,"title":{"injectables/DataState.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"modules/StoreModule.html":{}}}],["datastatemodel",{"_index":2290,"title":{"interfaces/DataStateModel.html":{}},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["date",{"_index":4312,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["db",{"_index":1053,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["db.getaggregateresults(filter",{"_index":2180,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getimageviewerdata(iri",{"_index":2182,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getlistresults(filter",{"_index":2179,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytermoccurences(filter",{"_index":2181,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["dbmi/viv",{"_index":1239,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{},"dependencies.html":{}}}],["dboptions",{"_index":2141,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["deal",{"_index":4836,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":4877,"title":{},"body":{"license.html":{}}}],["debug",{"_index":90,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["debugging",{"_index":88,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["decided",{"_index":4155,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["decides",{"_index":1399,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["decisions",{"_index":3036,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["deck",{"_index":564,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["deck(props",{"_index":658,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["deck.gl/core",{"_index":616,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":618,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["deck.gl/geo",{"_index":4779,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":4780,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":725,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["deckcallbackargs",{"_index":1252,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["deckprops",{"_index":581,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["declarations",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["decompress",{"_index":765,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["decoration",{"_index":2736,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/OntologySearchComponent.html":{}}}],["decorator",{"_index":621,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"dependencies.html":{}}}],["decorators",{"_index":599,"title":{},"body":{"classes/BodyUI.html":{},"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"components/DualSliderComponent.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/InfoDialogComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["deep",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["default",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["default_block_sizes",{"_index":507,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{}}}],["default_ccf_db_options",{"_index":918,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["default_color_schemes",{"_index":1704,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["default_color_schemes[0",{"_index":4238,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["default_filter",{"_index":2259,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["default_icons",{"_index":2329,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["default_theme",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["defaultchannelconfig",{"_index":1263,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["defaulticondefinition",{"_index":2311,"title":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["defaultorder",{"_index":2980,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaults",{"_index":2291,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaultscheme",{"_index":4625,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaulttheme",{"_index":4408,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["deferred",{"_index":3306,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["deficient",{"_index":748,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["defined",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"changelog.html":{}}}],["definition",{"_index":2315,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["definition.html",{"_index":2804,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["definition.url",{"_index":2803,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["degree",{"_index":3676,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["delay",{"_index":1019,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["delete",{"_index":3857,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["demo",{"_index":3250,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["demo_source",{"_index":4529,"title":{},"body":{"components/ViewerComponent.html":{}}}],["department",{"_index":3285,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dependencies",{"_index":405,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":515,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{}}}],["descendants",{"_index":1914,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["describes",{"_index":1379,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["describing",{"_index":4317,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{}}}],["desired",{"_index":1215,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["detail",{"_index":4090,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["detailed",{"_index":3102,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["detailheight",{"_index":4565,"title":{},"body":{"components/ViewerComponent.html":{}}}],["details",{"_index":3150,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["detailview",{"_index":4079,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["detailwidth",{"_index":4564,"title":{},"body":{"components/ViewerComponent.html":{}}}],["detect",{"_index":2527,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["detected",{"_index":2477,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detection",{"_index":1898,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["detector",{"_index":1891,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["determine",{"_index":2691,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SideSelectorComponent.html":{}}}],["determines",{"_index":1535,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/OntologySearchComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["develop",{"_index":3194,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["developed",{"_index":4818,"title":{},"body":{"index.html":{}}}],["development",{"_index":2171,"title":{},"body":{"injectables/DataSourceService.html":{},"components/InfoDialogComponent.html":{}}}],["developmentmode",{"_index":4394,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":4733,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":3157,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["dialog's",{"_index":3181,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog'},{'name",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["dialog.component",{"_index":3162,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":3176,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.scss",{"_index":3175,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts",{"_index":3170,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":3180,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":3187,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":3186,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":3184,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.module",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":3301,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialogref",{"_index":3177,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogue",{"_index":3160,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["didzoom",{"_index":672,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["diff",{"_index":4136,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["different",{"_index":3448,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{}}}],["dim",{"_index":1220,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["dimension",{"_index":505,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["dimension_units",{"_index":3659,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["dimensions",{"_index":479,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["dir",{"_index":3994,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["direct",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["directedgraph",{"_index":1054,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["direction",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["directive",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["directives",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["directly",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["director",{"_index":3271,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["disable",{"_index":743,"title":{},"body":{"classes/BodyUILayer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["disabled",{"_index":2683,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/OrganSelectorComponent.html":{},"components/SideSelectorComponent.html":{},"components/ViewerComponent.html":{}}}],["disables",{"_index":2687,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["discrete",{"_index":1560,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{}}}],["diseases",{"_index":3283,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["display",{"_index":49,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["displayed",{"_index":1533,"title":{},"body":{"components/ColorBarComponent.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["displayformatter",{"_index":3709,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displayformatter(option",{"_index":3720,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displaying",{"_index":3074,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{}}}],["displaylabel",{"_index":3836,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["displays",{"_index":1576,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["distinct",{"_index":2240,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["distribute",{"_index":4843,"title":{},"body":{"license.html":{}}}],["div",{"_index":1577,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["doc",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":738,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["docollisions(scene",{"_index":1457,"title":{},"body":{"interfaces/Collision.html":{}}}],["docollisions(state.data",{"_index":806,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["document",{"_index":1833,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["document.getelementsbyclassname('carousel",{"_index":3999,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["document:click",{"_index":1821,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["document:click(target",{"_index":1830,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["documentation",{"_index":3229,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"license.html":{}}}],["dom",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["domsanitizer",{"_index":2783,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["don't",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["down",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["download",{"_index":37,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["downloadclicked",{"_index":2714,"title":{},"body":{"components/HeaderComponent.html":{}}}],["downloadtooltip",{"_index":39,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["downloadurl",{"_index":38,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["dracoloader",{"_index":729,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["dracoworkerloader",{"_index":730,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["draggable",{"_index":4205,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["drawer",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["drawer.close",{"_index":4490,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawer.closeexpanded",{"_index":4489,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawer.component.html",{"_index":3339,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["drawer.component.scss",{"_index":3340,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["drawer.open",{"_index":4491,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawer.position",{"_index":1971,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["drawer/drawer.component",{"_index":1935,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawercomponent",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":2055,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["drawercontainerschanged",{"_index":2091,"title":{"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawerexpanded",{"_index":2625,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["drawerinitialized",{"_index":2097,"title":{"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":416,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":2102,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":1970,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["drawertoggled",{"_index":2098,"title":{"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":2374,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown'},{'name",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["dropdown.component",{"_index":2432,"title":{},"body":{"modules/DropdownModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["dropdown.component.html",{"_index":2376,"title":{},"body":{"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2375,"title":{},"body":{"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":4234,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:18",{"_index":4240,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:23",{"_index":4239,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:28",{"_index":4241,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:33",{"_index":4246,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:38",{"_index":4242,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:46",{"_index":4244,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.module",{"_index":3070,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["dropdown.module.ts",{"_index":4266,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["dropdown/scheme",{"_index":3069,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{}}}],["dropdowncomponent",{"_index":346,"title":{"components/DropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["dropdownmodule",{"_index":2423,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["dual",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["dualslidercomponent",{"_index":348,"title":{"components/DualSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["dualslidermodule",{"_index":417,"title":{"modules/DualSliderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["due",{"_index":747,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["duration",{"_index":2068,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["during",{"_index":71,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["dynamic",{"_index":1553,"title":{},"body":{"components/ColorBarComponent.html":{},"dependencies.html":{}}}],["dynamically",{"_index":1575,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["e",{"_index":602,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.info",{"_index":823,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["e.isdragging",{"_index":651,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.object",{"_index":685,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.object['@id",{"_index":686,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.picked",{"_index":683,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e1b986",{"_index":1689,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e3b842",{"_index":1698,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e65100",{"_index":1622,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e91e63",{"_index":1621,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["each",{"_index":3503,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["ease",{"_index":2071,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OrganSelectorComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["easily",{"_index":4212,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["edf8fb",{"_index":1676,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef6548",{"_index":1664,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef8a62",{"_index":1642,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef9a9a",{"_index":1632,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["effect",{"_index":2390,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["effects",{"_index":634,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["efficient",{"_index":3218,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["effort",{"_index":3259,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["element",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["element(by.css('ccf",{"_index":470,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["element.getboundingclientrect",{"_index":3386,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["element.nativeelement.contains(target",{"_index":2542,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["element.style.left",{"_index":4003,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["elementref",{"_index":847,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ViewerComponent.html":{}}}],["ellipsis",{"_index":2944,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["embedded",{"_index":4036,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["emit",{"_index":1392,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["emits",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/StageNavComponent.html":{}}}],["emitted",{"_index":509,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["emitter",{"_index":491,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/OntologySearchComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["emitters",{"_index":4109,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["emitting",{"_index":1742,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/DataSourceService.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["empty",{"_index":3815,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["empty_data",{"_index":3120,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["empty_result",{"_index":3124,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["enable",{"_index":3724,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["enabled",{"_index":2014,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["enables",{"_index":1552,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["enableselection",{"_index":1527,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["encapsulates",{"_index":3922,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["encoded",{"_index":2868,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["end",{"_index":1946,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["end?.expanded",{"_index":2066,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["end?.opened",{"_index":2065,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["enddrawers",{"_index":1972,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["enddrawers.length",{"_index":1975,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["enddrawers[0",{"_index":1978,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["endexpanded",{"_index":2064,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["enough",{"_index":3003,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["ensures",{"_index":3835,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enter",{"_index":2485,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["entered",{"_index":4286,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["entering",{"_index":478,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["entire",{"_index":4385,"title":{},"body":{"modules/StoreModule.html":{}}}],["entities",{"_index":80,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["entity",{"_index":84,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["entityid",{"_index":750,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["entityupdate",{"_index":4615,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["entry",{"_index":2943,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{}}}],["entry.displaylabel.join().includes",{"_index":3764,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.label",{"_index":2939,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["entry.node.label.tolowercase",{"_index":3765,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.value",{"_index":2940,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["enum",{"_index":2264,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["enumerations",{"_index":4812,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":2156,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["environment.dboptions",{"_index":2166,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["environment.disabledbworker",{"_index":2160,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["environment.organnodes",{"_index":3893,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["environment.production",{"_index":2175,"title":{},"body":{"injectables/DataSourceService.html":{},"modules/StoreModule.html":{}}}],["environments/environment",{"_index":2157,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":1940,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["error('the",{"_index":2130,"title":{},"body":{"modules/CoreModule.html":{}}}],["error('theming",{"_index":4446,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["error(`multiple",{"_index":1949,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["error(`pyramid",{"_index":3589,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["errors",{"_index":1938,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["es",{"_index":1435,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["etc",{"_index":2101,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["eui",{"_index":3235,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["eui/e2e/src/app.po.ts",{"_index":462,"title":{},"body":{"classes/AppPage.html":{}}}],["eui/e2e/src/app.po.ts:4",{"_index":467,"title":{},"body":{"classes/AppPage.html":{}}}],["eui/e2e/src/app.po.ts:8",{"_index":465,"title":{},"body":{"classes/AppPage.html":{}}}],["eui/src/app/app.component.ts",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.component.ts:28",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.component.ts:31",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.component.ts:35",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.module.ts",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/core/core.module.ts",{"_index":2121,"title":{},"body":{"modules/CoreModule.html":{}}}],["eui/src/app/core/header/header.component.ts",{"_index":2707,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:18",{"_index":2717,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:23",{"_index":2718,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:28",{"_index":2716,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:33",{"_index":2721,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:38",{"_index":2720,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.module.ts",{"_index":2766,"title":{},"body":{"modules/HeaderModule.html":{}}}],["eui/src/app/core/models/color",{"_index":1607,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["eui/src/app/core/models/flat",{"_index":2656,"title":{},"body":{"classes/FlatNode.html":{}}}],["eui/src/app/core/models/image",{"_index":2978,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/core/models/json",{"_index":2835,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["eui/src/app/core/models/ontology",{"_index":3698,"title":{},"body":{"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{}}}],["eui/src/app/core/services/data",{"_index":2138,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["eui/src/app/core/services/ontology",{"_index":3788,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/core/services/theming/theming.module.ts",{"_index":4401,"title":{},"body":{"modules/ThemingModule.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts",{"_index":4406,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:13",{"_index":4430,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:15",{"_index":4432,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:17",{"_index":4433,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:20",{"_index":4423,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:23",{"_index":4415,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:37",{"_index":4420,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:46",{"_index":4429,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:56",{"_index":4427,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:67",{"_index":4426,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:82",{"_index":4417,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/store/data/data.state.ts",{"_index":2183,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["eui/src/app/core/store/data/data.state.ts:101",{"_index":2224,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:103",{"_index":2227,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:107",{"_index":2218,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:111",{"_index":2244,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:116",{"_index":2229,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:118",{"_index":2221,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:120",{"_index":2246,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:123",{"_index":2241,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:130",{"_index":2199,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:155",{"_index":2209,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:169",{"_index":2204,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:181",{"_index":2201,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:193",{"_index":2206,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:92",{"_index":2213,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:94",{"_index":2211,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:96",{"_index":2214,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:98",{"_index":2230,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/icon",{"_index":2312,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts",{"_index":3950,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts:39",{"_index":3956,"title":{},"body":{"injectables/OntologyState.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts:42",{"_index":3958,"title":{},"body":{"injectables/OntologyState.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts:50",{"_index":3953,"title":{},"body":{"injectables/OntologyState.html":{}}}],["eui/src/app/core/store/store.module.ts",{"_index":4376,"title":{},"body":{"modules/StoreModule.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts",{"_index":4591,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:116",{"_index":4600,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:40",{"_index":4614,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:44",{"_index":4608,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:49",{"_index":4598,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:71",{"_index":4604,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:96",{"_index":4602,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/modules/body/body",{"_index":824,"title":{},"body":{"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{}}}],["eui/src/app/modules/body/body.module.ts",{"_index":553,"title":{},"body":{"modules/BodyModule.html":{}}}],["eui/src/app/modules/color",{"_index":1516,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["eui/src/app/modules/filters/filters",{"_index":2580,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{}}}],["eui/src/app/modules/image",{"_index":2924,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{}}}],["eui/src/app/modules/info/info",{"_index":3147,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["eui/src/app/modules/ontology",{"_index":3690,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["eui/src/app/modules/results",{"_index":4104,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["eui/src/app/modules/scheme",{"_index":4233,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts",{"_index":1368,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:16",{"_index":1378,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:21",{"_index":1383,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:26",{"_index":1387,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:31",{"_index":1391,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:38",{"_index":1396,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.module.ts",{"_index":1425,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts",{"_index":1870,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:101",{"_index":1905,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:111",{"_index":1895,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:120",{"_index":1907,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":1892,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":1923,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":1915,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":1919,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":1927,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":1930,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:58",{"_index":1910,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":1888,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:79",{"_index":1901,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts",{"_index":1998,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:100",{"_index":2027,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:113",{"_index":2022,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":2012,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":2013,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":2015,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":2016,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":2010,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":2028,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":2008,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:58",{"_index":2021,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:68",{"_index":2018,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/drawer.module.ts",{"_index":2367,"title":{},"body":{"modules/DrawerModule.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":3304,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:33",{"_index":3313,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":3312,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":3314,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:42",{"_index":3315,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:52",{"_index":3317,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:59",{"_index":3316,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/messages.ts",{"_index":2085,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/shared/components/drawer/toggle",{"_index":4467,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts",{"_index":2373,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:16",{"_index":2380,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:21",{"_index":2382,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:26",{"_index":2384,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:31",{"_index":2385,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:36",{"_index":2391,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:41",{"_index":2388,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:49",{"_index":2387,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.module.ts",{"_index":2427,"title":{},"body":{"modules/DropdownModule.html":{}}}],["eui/src/app/shared/components/dual",{"_index":2433,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["eui/src/app/shared/components/spinner",{"_index":4323,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{}}}],["eui/src/app/shared/services/message/message.service.ts",{"_index":3489,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:101",{"_index":3539,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:110",{"_index":3540,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:126",{"_index":3552,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:128",{"_index":3549,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:151",{"_index":3551,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:161",{"_index":3550,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:48",{"_index":3536,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:68",{"_index":3541,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:81",{"_index":3537,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:91",{"_index":3538,"title":{},"body":{"classes/MessageChannel.html":{}}}],["euler",{"_index":1078,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["event",{"_index":607,"title":{},"body":{"classes/BodyUI.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"license.html":{}}}],["event.checked",{"_index":1405,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["event.interactionstate?.iszooming",{"_index":697,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["event.key",{"_index":2554,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["event.pagey",{"_index":1859,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["event.target",{"_index":1829,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["event.viewstate",{"_index":709,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["event.viewstate.zoom",{"_index":701,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["eventemitter",{"_index":489,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["eventemitter(true",{"_index":3371,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["events",{"_index":1398,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["everything",{"_index":2293,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["evolve",{"_index":3248,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["evt",{"_index":855,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["evt.preventdefault",{"_index":856,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["example",{"_index":3532,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}}}],["except",{"_index":3508,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["executionstrategy",{"_index":4397,"title":{},"body":{"modules/StoreModule.html":{}}}],["expand",{"_index":3415,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["expand/collapse",{"_index":3423,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expand_collapse_params_default",{"_index":3331,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expandable",{"_index":2658,"title":{},"body":{"classes/FlatNode.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["expandcollapsedone",{"_index":3425,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expanded",{"_index":2099,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":3367,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expanded/collapsed",{"_index":3324,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":3372,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expandedstate",{"_index":3325,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":3327,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":3377,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expands",{"_index":3409,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expansion",{"_index":2941,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["expert",{"_index":3260,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["exploration",{"_index":3234,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["exploration.module",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["exploration.module.ts",{"_index":3691,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["exploration/ontology",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["exportas",{"_index":1872,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["exports",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["express",{"_index":4860,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":4319,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["extdeckprops",{"_index":1251,"title":{"interfaces/ExtDeckProps.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["extended",{"_index":3330,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":625,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["external_link",{"_index":42,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["externalid",{"_index":3625,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["extracting",{"_index":2848,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["f",{"_index":863,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["f1a340",{"_index":1658,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f2f424",{"_index":1697,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f7f7f7",{"_index":1640,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f8fc9d",{"_index":1688,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["factor",{"_index":1086,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["factory",{"_index":3499,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["fade",{"_index":2389,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["faded",{"_index":2024,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["fadein",{"_index":2397,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["fadeinout",{"_index":2003,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["fafafa",{"_index":1420,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["fake",{"_index":3846,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["false",{"_index":673,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["fc8d59",{"_index":1650,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fdbb84",{"_index":1665,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fdd49e",{"_index":1666,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fddbc7",{"_index":1641,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["features",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["fee08b",{"_index":1649,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fee0b6",{"_index":1657,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fef0d9",{"_index":1667,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["female",{"_index":62,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/GenderSelectorComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["fetch",{"_index":2327,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["fetch(url",{"_index":3593,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["fetches",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["few",{"_index":745,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ffb74d",{"_index":1634,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffcc80",{"_index":1618,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffe31c",{"_index":1679,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffff8d",{"_index":1619,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffffbf",{"_index":1648,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["field",{"_index":22,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/Filter.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"interfaces/ValueObject.html":{}}}],["fields",{"_index":2849,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["file_format",{"_index":4314,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["file_subpath",{"_index":4316,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["files",{"_index":4835,"title":{},"body":{"license.html":{}}}],["fill",{"_index":2411,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["filler",{"_index":538,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["filter",{"_index":73,"title":{"interfaces/Filter.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["filter's",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(d",{"_index":1461,"title":{},"body":{"interfaces/Collision.html":{}}}],["filter(l",{"_index":821,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["filter(s",{"_index":1203,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter(value",{"_index":3755,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["filter?.debug",{"_index":1191,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter?.ontologyterms",{"_index":1168,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter?.sex",{"_index":1157,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filterbox",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["filterbox.removebox",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["filterchange",{"_index":833,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["filtered",{"_index":3512,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{}}}],["filteredresults",{"_index":3706,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filtering",{"_index":3221,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["filteronchange",{"_index":1376,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filteronchange(event",{"_index":1393,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filters",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["filters?.agerange[0",{"_index":2723,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.agerange[1",{"_index":2724,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.bmirange[0",{"_index":2725,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.bmirange[1",{"_index":2726,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.sex",{"_index":2722,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filterschange",{"_index":2586,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["filterscontentcomponent",{"_index":351,"title":{"components/FiltersContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["filterscontentmodule",{"_index":2610,"title":{"modules/FiltersContentModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filterspopovercomponent",{"_index":169,"title":{"components/FiltersPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["filterspopovermodule",{"_index":418,"title":{"modules/FiltersPopoverModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filtersvisible",{"_index":2622,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["finalize",{"_index":1301,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["find",{"_index":3826,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["find(nodemap[''].children",{"_index":3854,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["findids",{"_index":968,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["findids(this.store",{"_index":1026,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["finished",{"_index":2095,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["fired",{"_index":1850,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["first",{"_index":3244,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/RightSidebarComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["fit",{"_index":4166,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["fitness",{"_index":4864,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{}}}],["fixes",{"_index":3615,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["fixes/performance",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["fixoldruikidneydata(data",{"_index":3618,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["flat",{"_index":2663,"title":{},"body":{"classes/FlatNode.html":{}}}],["flatmap",{"_index":1245,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatmap(loaders",{"_index":1359,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatmap(vivviews",{"_index":1336,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatnode",{"_index":2655,"title":{"classes/FlatNode.html":{}},"body":{"classes/FlatNode.html":{}}}],["flatnode(original",{"_index":2676,"title":{},"body":{"classes/FlatNode.html":{}}}],["flex",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["float",{"_index":3295,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["floor",{"_index":1775,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["flow",{"_index":2838,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["fly",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":4303,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["following",{"_index":4851,"title":{},"body":{"license.html":{}}}],["font",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["footer",{"_index":3297,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["foreach",{"_index":3827,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(current.children",{"_index":3875,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(nodemap",{"_index":3851,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(organnodes",{"_index":3865,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["form",{"_index":951,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{}}}],["format",{"_index":3601,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["formatlabel",{"_index":3793,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["formatlabel(label",{"_index":3806,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formats",{"_index":3809,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formatter",{"_index":3723,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formcontrol",{"_index":3707,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formsmodule",{"_index":3784,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["forwards",{"_index":2412,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["found",{"_index":3810,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foundational",{"_index":3200,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["framework",{"_index":3213,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["free",{"_index":4830,"title":{},"body":{"license.html":{}}}],["from(this.getdb().then((db",{"_index":2178,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["fromeuler",{"_index":1075,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["full",{"_index":3172,"title":{},"body":{"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["fullscreen_exit",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["fully",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2282,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["fund",{"_index":3266,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["funded",{"_index":3264,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["furnished",{"_index":4850,"title":{},"body":{"license.html":{}}}],["further",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["gender",{"_index":59,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["genderchanged",{"_index":2685,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["genderselectorcomponent",{"_index":354,"title":{"components/GenderSelectorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["genderselectormodule",{"_index":2699,"title":{"modules/GenderSelectorModule.html":{}},"body":{"modules/GenderSelectorModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["generate",{"_index":1384,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["generation",{"_index":3195,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["genericmessage",{"_index":2087,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":2088,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":2089,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["get(event",{"_index":3766,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["get(id",{"_index":932,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getaggregateresults",{"_index":904,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":96,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getaggregateresults(this.getids(filter",{"_index":1042,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getarguments",{"_index":2823,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getarguments(undefined",{"_index":2828,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getautocolor",{"_index":4595,"title":{},"body":{"injectables/ViewerState.html":{}}}],["getautocolor(index",{"_index":4599,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["getbackground",{"_index":3006,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["getbrightness",{"_index":2982,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["getbrightnesshigh",{"_index":1755,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getbrightnesslow",{"_index":1750,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getchannelconfigs",{"_index":2922,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getchannelnames",{"_index":2920,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getchildren",{"_index":3794,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getchildren(node",{"_index":3813,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getchildrenfunc",{"_index":3838,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["getcolor",{"_index":791,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getcontent",{"_index":1926,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["getcursor",{"_index":648,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["getdb",{"_index":2142,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getentityscenenodes",{"_index":1137,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getentityscenenodes(filter",{"_index":1143,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getexpandable",{"_index":2670,"title":{},"body":{"classes/FlatNode.html":{}}}],["getgradientstyle",{"_index":1550,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["gethasthicknessvalue",{"_index":4300,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["gethaswrappedcontent",{"_index":1929,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["getheight",{"_index":2914,"title":{},"body":{"classes/ImageViewer.html":{}}}],["geticon",{"_index":4481,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["getids",{"_index":905,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["getids(filter",{"_index":937,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getimageviewerdata",{"_index":906,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getimageviewerdata(id",{"_index":940,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getimageviewerdata(iri",{"_index":98,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getindexofmatch",{"_index":3795,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getindexofmatch(label",{"_index":3816,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getlabel",{"_index":2667,"title":{},"body":{"classes/FlatNode.html":{}}}],["getlayers",{"_index":3080,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["getlistresult",{"_index":971,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getlistresult(this.store",{"_index":1034,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getlistresults",{"_index":907,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getlistresults(filter",{"_index":94,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getloaders",{"_index":2918,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getmessages",{"_index":3510,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["getmessagesfromsource",{"_index":3533,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["getmessagesfromsource(source",{"_index":3513,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["getmessagesfromsources",{"_index":3534,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["getmessagesfromsources(sources",{"_index":3516,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["getmethodname",{"_index":2815,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getmethodname(undefined",{"_index":2830,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getontologytermoccurences",{"_index":908,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":944,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(this.getids(filter",{"_index":1043,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getpickinginfo",{"_index":714,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":718,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getrangelabel",{"_index":2509,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["getreferencebody",{"_index":1138,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferencebody(filter",{"_index":1145,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getreferenceorgans",{"_index":1139,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferenceorgans(filter",{"_index":1147,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getreferencescenenodes",{"_index":1140,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferencescenenodes(filter",{"_index":1149,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gets",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorPickerLauncherComponent.html":{},"injectables/DataSourceService.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["getscene",{"_index":909,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{}}}],["getscene(filter",{"_index":949,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getscenenode",{"_index":1141,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getscenenode(source",{"_index":1152,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getsources",{"_index":2916,"title":{},"body":{"classes/ImageViewer.html":{},"components/ViewerComponent.html":{}}}],["getspatialentities",{"_index":910,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["getspatialentities(filter",{"_index":955,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialentity",{"_index":1081,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getspatialentity(this.db.store",{"_index":1161,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getspatialentityforentity",{"_index":975,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialentityforentity(this.store",{"_index":1031,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialobjectreference",{"_index":1082,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["getspatialplacement",{"_index":1083,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["getter/setter",{"_index":3360,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["gettheme",{"_index":4410,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["getting",{"_index":3837,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["gettitletext",{"_index":463,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["gettransformationmatrix",{"_index":1050,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["gettransformationmatrix(sourceiri",{"_index":1066,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["gettransformmatrix",{"_index":788,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gettransparency",{"_index":1760,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getvivid",{"_index":1246,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["getwidth",{"_index":2912,"title":{},"body":{"classes/ImageViewer.html":{}}}],["github",{"_index":3227,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["give",{"_index":3502,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["given",{"_index":2755,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["global",{"_index":2168,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["globally",{"_index":2173,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis",{"_index":2167,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis.dboptions",{"_index":2170,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":3394,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["gloptions",{"_index":1354,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["gltf",{"_index":762,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.nodes?.find((n",{"_index":768,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene",{"_index":774,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene.nodes[gltf.scene.nodes.length",{"_index":772,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene?.nodes?.length",{"_index":771,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scenes",{"_index":775,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltfloader",{"_index":732,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltfscene",{"_index":1479,"title":{},"body":{"interfaces/Collision.html":{}}}],["grab",{"_index":653,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["grabbing",{"_index":652,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["gradient",{"_index":1547,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{}}}],["gradient(to",{"_index":3018,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["gradienthighlight",{"_index":1525,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["gradientstyle",{"_index":1531,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["grant",{"_index":3277,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["granted",{"_index":4829,"title":{},"body":{"license.html":{}}}],["graph",{"_index":901,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"modules.html":{}}}],["graph.ts",{"_index":1045,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:38",{"_index":1052,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:44",{"_index":1065,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:63",{"_index":1056,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:66",{"_index":1059,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:69",{"_index":1063,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:73",{"_index":1068,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graphology",{"_index":1071,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["greeenorange",{"_index":1614,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["green",{"_index":4542,"title":{},"body":{"components/ViewerComponent.html":{}}}],["greenred",{"_index":1644,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["group",{"_index":1370,"title":{},"body":{"components/CheckboxComponent.html":{},"components/StageNavComponent.html":{}}}],["grow",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["h",{"_index":1511,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":1514,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":1513,"title":{},"body":{"interfaces/Collision.html":{}}}],["half",{"_index":3329,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":2322,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["handlemessage",{"_index":1881,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["handlemessage(_msg",{"_index":1893,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["handlemessage(msg",{"_index":2017,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["handler",{"_index":2492,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["handles",{"_index":2583,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["handling",{"_index":2459,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["happen",{"_index":2591,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["happy",{"_index":4390,"title":{},"body":{"modules/StoreModule.html":{}}}],["has3dobject",{"_index":1204,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hash",{"_index":3842,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["hasspatialentity",{"_index":85,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["hasterm",{"_index":1169,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.kidney",{"_index":1185,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.left_kidney",{"_index":1188,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.right_kidney",{"_index":1186,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.spleen",{"_index":1190,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasthicknessvalue",{"_index":4287,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["haswrappedcontent",{"_index":1884,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["header",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["header'},{'name",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["header.component",{"_index":2775,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":2712,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["header.component.scss",{"_index":2711,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["header/header.module",{"_index":2125,"title":{},"body":{"modules/CoreModule.html":{}}}],["headercomponent",{"_index":356,"title":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["headermodule",{"_index":2118,"title":{"modules/HeaderModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["heading",{"_index":3294,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["health",{"_index":3286,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["heart",{"_index":2344,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["height",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/ChannelConfig.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["helper",{"_index":1936,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["here",{"_index":2334,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["hereby",{"_index":4828,"title":{},"body":{"license.html":{}}}],["hex",{"_index":2999,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ViewerComponent.html":{}}}],["hex.length",{"_index":4535,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hextorgbtriple(hex",{"_index":4533,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hextorgbtriple(layer.color",{"_index":4578,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hhsn316201300006w/hhsn27200002",{"_index":3291,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["hidden",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["hide",{"_index":2648,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["hidelimitlabels",{"_index":1778,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["hidepointerlabels",{"_index":1779,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["hides",{"_index":2633,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["hiding",{"_index":3171,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["high",{"_index":1757,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["highlightcolor",{"_index":781,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["highlighted",{"_index":45,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/ColorBarComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{}}}],["highlighted.has(entity.entityid",{"_index":1202,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["highlighted.has(s['@id",{"_index":1037,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["highlightedentities",{"_index":81,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BodyUiComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["highlightedentities.concat([node.entityid",{"_index":887,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlightedentities.length",{"_index":884,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlightedentities[0",{"_index":885,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlighting",{"_index":1548,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["highvalue",{"_index":2439,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hit",{"_index":1507,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":1512,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":1510,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":1509,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":1431,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":1497,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":1495,"title":{},"body":{"interfaces/Collision.html":{}}}],["hive",{"_index":3258,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["hms",{"_index":1238,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{},"dependencies.html":{}}}],["holders",{"_index":4869,"title":{},"body":{"license.html":{}}}],["home",{"_index":2751,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["homeurl",{"_index":4037,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["hook",{"_index":2480,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["hooked",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":400,"title":{},"body":{"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["hostbinding",{"_index":510,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["hostbinding('@expandcollapse",{"_index":3376,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostbinding('@fadeinout",{"_index":2043,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["hostbinding('@openclose",{"_index":3375,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostbinding('class",{"_index":517,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["hostbinding('class.active",{"_index":4333,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["hostbinding('class.ccf",{"_index":3355,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["hostbinding('class.cff",{"_index":2038,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["hostbinding('style.margin",{"_index":2040,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["hostbindings",{"_index":488,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent-1.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["hostlistener",{"_index":1849,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":3424,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostlistener('@openclose.done",{"_index":3420,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostlistener('document:click",{"_index":1851,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["hostlistener('document:mousemove",{"_index":2539,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlistener('document:touchstart",{"_index":2540,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlisteners",{"_index":1820,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["hover",{"_index":1566,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["hr",{"_index":3470,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["html",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":630,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["htmlelement",{"_index":632,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["htmlinputelement",{"_index":521,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["htmlinputelement).value",{"_index":2553,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["http",{"_index":3802,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":881,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":876,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":873,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0013702",{"_index":2263,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["http://purl.org/ccf/0.5",{"_index":3642,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhleftkidney",{"_index":875,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhrightkidney",{"_index":871,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleen",{"_index":877,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc1",{"_index":878,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc2",{"_index":879,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc3",{"_index":880,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://www.geneontology.org/formats/oboinowl#hasexactsynonym",{"_index":2846,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["http://www.w3.org/2000/01/rdf",{"_index":2843,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["httpclient",{"_index":3799,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["httpclientmodule",{"_index":2122,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://assets.hubmapconsortium.org",{"_index":996,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":4815,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":3640,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["https://hubmapconsortium.org",{"_index":3210,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["https://portal.hubmapconsortium.org",{"_index":995,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://purl.org/ccf/latest/ccf",{"_index":993,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://purl.org/ccf/latest/ccf.owl",{"_index":992,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["https://vitessce",{"_index":4530,"title":{},"body":{"components/ViewerComponent.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":4398,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":984,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmap/hubmap",{"_index":965,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapassetsurl",{"_index":989,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapdataservice",{"_index":982,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapdataurl",{"_index":987,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapportalurl",{"_index":986,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{}}}],["hubmaptoken",{"_index":991,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["human",{"_index":3191,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["icon",{"_index":33,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchableItem.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["icon.name",{"_index":4009,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["icondefinition",{"_index":2776,"title":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{}},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["iconregistry",{"_index":2784,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["iconregistrystate",{"_index":2785,"title":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"modules/StoreModule.html":{}}}],["icons",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["icons.ts",{"_index":2314,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["id",{"_index":28,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":27,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["identifiers",{"_index":3699,"title":{},"body":{"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["identity",{"_index":1127,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["idextractor",{"_index":2850,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idextractor(json",{"_index":2871,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idobject",{"_index":2834,"title":{"interfaces/IdObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idproperty",{"_index":2847,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["ids",{"_index":939,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/ViewerState.html":{}}}],["ids.length",{"_index":4630,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["idx",{"_index":4245,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["iec",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["if(data.reference_organ_id",{"_index":3635,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["if(this.handlemessage(msg",{"_index":2046,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["image",{"_index":47,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["image_viewer",{"_index":44,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["image_viewer_layer_defaults",{"_index":4622,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["images",{"_index":3059,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["imageviewer",{"_index":1270,"title":{"classes/ImageViewer.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserItemComponent.html":{},"components/ViewerComponent.html":{}}}],["imageviewer:110",{"_index":4066,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:114",{"_index":4071,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:133",{"_index":4072,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:148",{"_index":4074,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:168",{"_index":4065,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:169",{"_index":4064,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:171",{"_index":4073,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:181",{"_index":4078,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:185",{"_index":4076,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:195",{"_index":4077,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:208",{"_index":4075,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:212",{"_index":4067,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:231",{"_index":4070,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:244",{"_index":4068,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:250",{"_index":4069,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:64",{"_index":4057,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:68",{"_index":4053,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:69",{"_index":4050,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:73",{"_index":4052,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:74",{"_index":4051,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:78",{"_index":4049,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:80",{"_index":4060,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:81",{"_index":4059,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:82",{"_index":4056,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:83",{"_index":4055,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:84",{"_index":4058,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:86",{"_index":4054,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:99",{"_index":4063,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imagevieweraccordioncomponent",{"_index":358,"title":{"components/ImageViewerAccordionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imagevieweraccordionmodule",{"_index":2947,"title":{"modules/ImageViewerAccordionModule.html":{}},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewercontentcomponent",{"_index":360,"title":{"components/ImageViewerContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewercontentmodule",{"_index":2972,"title":{"modules/ImageViewerContentModule.html":{}},"body":{"modules/ImageViewerContentModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerdata",{"_index":50,"title":{"interfaces/ImageViewerData.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["imageviewerlayer",{"_index":1586,"title":{"classes/ImageViewerLayer.html":{}},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageviewerlayer(layer",{"_index":4613,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageviewerlayerargs",{"_index":2985,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["imageviewerlayerrequiredargnames",{"_index":3008,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["imageviewerlayerscomponent",{"_index":361,"title":{"components/ImageViewerLayersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerlayersmodule",{"_index":2952,"title":{"modules/ImageViewerLayersModule.html":{}},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerlegendcomponent",{"_index":363,"title":{"components/ImageViewerLegendComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerlegendmodule",{"_index":3089,"title":{"modules/ImageViewerLegendModule.html":{}},"body":{"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewermodule",{"_index":419,"title":{"modules/ImageViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImageViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerpopovercomponent",{"_index":173,"title":{"components/ImageViewerPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerpopovermodule",{"_index":3098,"title":{"modules/ImageViewerPopoverModule.html":{}},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerprops",{"_index":1259,"title":{"interfaces/ImageViewerProps.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["immutable",{"_index":3821,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["implementation",{"_index":2212,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["implemented",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":826,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["implied",{"_index":4861,"title":{},"body":{"license.html":{}}}],["implies",{"_index":2100,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["import",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["important",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["imported",{"_index":2131,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["imports",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ViewerModule.html":{}}}],["improved",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":86,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{}}}],["included",{"_index":4855,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3242,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"license.html":{}}}],["increased",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indiana",{"_index":3255,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["indicates",{"_index":2672,"title":{},"body":{"classes/FlatNode.html":{}}}],["indicator",{"_index":2150,"title":{},"body":{"injectables/DataSourceService.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["individual",{"_index":1385,"title":{},"body":{"components/CheckboxComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["infectious",{"_index":3282,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["infix",{"_index":2399,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["info_outline",{"_index":2749,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/InfoButtonComponent.html":{}}}],["infobuttoncomponent",{"_index":365,"title":{"components/InfoButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":2765,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infodialogcomponent",{"_index":367,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["infodialogmodule",{"_index":420,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":89,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"index.html":{}}}],["infrastructure",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["inherit",{"_index":2640,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["inherited",{"_index":4048,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["init",{"_index":3726,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["initial",{"_index":4305,"title":{},"body":{"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["initialization",{"_index":915,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["initializationstate",{"_index":3303,"title":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["initialize",{"_index":929,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initialize(component",{"_index":4421,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initialized",{"_index":2051,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializedeck",{"_index":2876,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["initializedeck(props",{"_index":1350,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["initializeimpl",{"_index":4411,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializeimpl(component",{"_index":4425,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializer",{"_index":4424,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializes",{"_index":2473,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["initializesliderpopover",{"_index":2446,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["initializestate",{"_index":715,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["initializing",{"_index":2096,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["initialviewstate",{"_index":1260,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["initiates",{"_index":1726,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["inject",{"_index":3188,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["inject(default_theme",{"_index":4439,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["inject(mat_dialog_data",{"_index":3185,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["injectable",{"_index":2136,"title":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/PageState.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"injectables/ViewerState.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["injectables",{"_index":2137,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/PageState.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"injectables/ViewerState.html":{},"overview.html":{}}}],["injected",{"_index":3183,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["injectiontoken",{"_index":3491,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["injectiontoken('default",{"_index":4436,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["inner",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["input",{"_index":480,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["input'},{'name",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["input.component",{"_index":548,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.component.html",{"_index":482,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["input.component.scss",{"_index":481,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["input.component.ts",{"_index":477,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["input.component.ts:23",{"_index":4296,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:28",{"_index":4295,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:32",{"_index":493,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:33",{"_index":4299,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:37",{"_index":508,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:41",{"_index":4301,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:42",{"_index":490,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:49",{"_index":500,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:50",{"_index":4298,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:58",{"_index":494,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:59",{"_index":4297,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.module",{"_index":4196,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["input.module.ts",{"_index":543,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.target",{"_index":520,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["input/block",{"_index":476,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/RightSidebarModule.html":{}}}],["input/slices",{"_index":4200,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{}}}],["inputevent",{"_index":498,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["inputeventsinterval",{"_index":1781,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["inputs",{"_index":532,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["inputtarget",{"_index":519,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["inputtarget.value",{"_index":523,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["inserted",{"_index":3855,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["inside",{"_index":2560,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["instance",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["instances",{"_index":3049,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["instant",{"_index":3323,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":2567,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["institute",{"_index":3280,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["integrated",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":636,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["intent",{"_index":4153,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["inter",{"_index":2739,"title":{},"body":{"components/HeaderComponent.html":{}}}],["interactions",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":695,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["interest",{"_index":4012,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"changelog.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AggregateResult.html":{},"interfaces/BlockSizes.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"interfaces/PageStateModel.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"interfaces/ViewerStateModel.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"index.html":{}}}],["interfaceinfo_outline",{"_index":2760,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/BlockSizes.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"interfaces/PageStateModel.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"interfaces/ViewerStateModel.html":{},"overview.html":{}}}],["intestine",{"_index":3986,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["intestine.svg",{"_index":2358,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["invisible",{"_index":2011,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["iri",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["isdark",{"_index":2983,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["isdemo",{"_index":4501,"title":{},"body":{"components/ViewerComponent.html":{}}}],["isdragging",{"_index":649,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["islight",{"_index":2984,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["isloading",{"_index":2930,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["ismale",{"_index":2684,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["isnan(this.slicesdata.thickness",{"_index":4288,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["isolated",{"_index":3497,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["isrgb",{"_index":4101,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["isselected",{"_index":4014,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["isselected(icon",{"_index":4013,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["issliderinitialized",{"_index":2440,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isslideropen",{"_index":2441,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["issues",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":696,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["it's",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":56,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["item'},{'name",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["item.component",{"_index":4175,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{}}}],["item.component.html",{"_index":4147,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.scss",{"_index":4146,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts",{"_index":4145,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:19",{"_index":4150,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:24",{"_index":4152,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:30",{"_index":4154,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.module",{"_index":4181,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["item.module.ts",{"_index":4174,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{}}}],["item/results",{"_index":4144,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["items",{"_index":93,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["iu",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":3763,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["json",{"_index":2837,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["jsondict",{"_index":4887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["jsonld",{"_index":3624,"title":{},"body":{"interfaces/OldRuiData.html":{},"dependencies.html":{}}}],["jsonontology",{"_index":3882,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsonontology.pipe",{"_index":3885,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsonontologynode",{"_index":2842,"title":{"interfaces/JsonOntologyNode.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["jsontoontologynode",{"_index":3830,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsontoontologynode(json",{"_index":2870,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["july",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3224,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["justify",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["keep",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keeping",{"_index":2231,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["keeps",{"_index":2627,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/StageNavComponent.html":{}}}],["key",{"_index":499,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["key/value",{"_index":2596,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["keyboard",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["keyboard_arrow_left",{"_index":4484,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["keyboard_arrow_right",{"_index":4483,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["keyboardevent",{"_index":2482,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["keyby",{"_index":3828,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keyby(nodes",{"_index":3889,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keyframes",{"_index":2394,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["keys",{"_index":1357,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["keys.reduce((configs",{"_index":1361,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["kidney",{"_index":1171,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["kind",{"_index":4859,"title":{},"body":{"license.html":{}}}],["known",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":822,"title":{},"body":{"classes/BodyUILayer.html":{},"components/SideSelectorComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["label",{"_index":15,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["label.length",{"_index":3915,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(0",{"_index":3912,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(index",{"_index":3913,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().includes(searchvalue",{"_index":3908,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().indexof(searchvalue",{"_index":3910,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["labeled",{"_index":1369,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["labelextractor",{"_index":2860,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelextractor(json",{"_index":2873,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelproperty",{"_index":2859,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labels",{"_index":1386,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OntologyNode.html":{}}}],["labs/data",{"_index":4378,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/data/decorators",{"_index":2248,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/repositories",{"_index":2249,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/typings",{"_index":3825,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/utils",{"_index":4618,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["last",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["lasthovered",{"_index":565,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["later",{"_index":3850,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["latest",{"_index":2219,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["launch",{"_index":1595,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher",{"_index":1582,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["launcher.component",{"_index":1604,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["launcher.component.html",{"_index":1584,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":1583,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":1574,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts:20",{"_index":1587,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts:25",{"_index":1588,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.module",{"_index":3071,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["launcher.module.ts",{"_index":1603,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["launcher/color",{"_index":1573,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["launchinfodialog",{"_index":3153,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["layer",{"_index":623,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer's",{"_index":1592,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["layer.color",{"_index":4635,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.colorscheme.colors.indexof(layer.color",{"_index":4644,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.customizedcolor",{"_index":4637,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.defaultorder",{"_index":4636,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.id",{"_index":3051,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ViewerComponent.html":{}}}],["layer.id.includes(getvivid(viewportid",{"_index":1364,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layer.label",{"_index":3058,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{}}}],["layer.selected",{"_index":3054,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.ts",{"_index":710,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["layer.ts:102",{"_index":3002,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:116",{"_index":719,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:24",{"_index":2993,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:25",{"_index":2994,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:27",{"_index":2991,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:28",{"_index":2990,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:29",{"_index":2989,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:30",{"_index":2997,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:32",{"_index":2995,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:33",{"_index":2992,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:34",{"_index":2996,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:35",{"_index":2986,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:47",{"_index":3007,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:70",{"_index":2998,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:75",{"_index":717,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:77",{"_index":720,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:85",{"_index":721,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:95",{"_index":3005,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layerchange",{"_index":1585,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["layerchange.emit(layer",{"_index":1788,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["layerchanged",{"_index":3030,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layerchanged(layer",{"_index":3044,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layerconfig",{"_index":1258,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["layerconfigs",{"_index":1286,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerconfigs.length",{"_index":1335,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layerconfigs[index",{"_index":1339,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layerfilter",{"_index":1351,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerfilter(undefined",{"_index":2898,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerfilterargs",{"_index":1254,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["layername",{"_index":713,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["layers",{"_index":640,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["layers'},{'name",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["layers(layers",{"_index":3083,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["layers.component",{"_index":3068,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["layers.component.html",{"_index":3028,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.scss",{"_index":3027,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts",{"_index":3023,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:21",{"_index":3033,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:26",{"_index":3032,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:31",{"_index":3037,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:36",{"_index":3039,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:44",{"_index":3047,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:54",{"_index":3041,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:67",{"_index":3045,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.filter(layer",{"_index":4607,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layers.length",{"_index":4576,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers.map(layer",{"_index":4612,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layers.module",{"_index":2958,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerModule.html":{}}}],["layers.module.ts",{"_index":3067,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["layers.reduce((result",{"_index":4577,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers/image",{"_index":2957,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerModule.html":{}}}],["layers].sort((v1",{"_index":3085,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["left",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["left.closeexpanded",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["left.open",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["left.px",{"_index":2006,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["left_kidney",{"_index":1175,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["leftmargin",{"_index":2041,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["leftsidebarcomponent",{"_index":369,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["leftsidebarmodule",{"_index":3474,"title":{"modules/LeftSidebarModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["legend'},{'name",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["legend.component",{"_index":3094,"title":{},"body":{"modules/ImageViewerLegendModule.html":{}}}],["legend.component.html",{"_index":3076,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.scss",{"_index":3075,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts",{"_index":3073,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:18",{"_index":3078,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:21",{"_index":3081,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:22",{"_index":3079,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.module",{"_index":3146,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{}}}],["legend.module.ts",{"_index":3093,"title":{},"body":{"modules/ImageViewerLegendModule.html":{}}}],["legend/image",{"_index":3072,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["length",{"_index":1334,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["level",{"_index":2661,"title":{},"body":{"classes/FlatNode.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"changelog.html":{}}}],["levels",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["lexically",{"_index":3738,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["liability",{"_index":4873,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4870,"title":{},"body":{"license.html":{}}}],["license",{"_index":4822,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":3727,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["light",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ImageViewerLayer.html":{}}}],["lighter",{"_index":2750,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["lightingeffect",{"_index":614,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["limitation",{"_index":4838,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4666,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":4289,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["line",{"_index":656,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["line:no",{"_index":1852,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["linear",{"_index":3017,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["link",{"_index":2709,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["linkage",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["linkchildren",{"_index":3856,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["linkchildren(nodemap",{"_index":3844,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["links",{"_index":3839,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["list",{"_index":24,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{}}}],["list')[0",{"_index":4000,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["listdata",{"_index":2191,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listdata(filter",{"_index":2203,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listdataquerystatus",{"_index":2192,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listen",{"_index":3496,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["listener",{"_index":2283,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["listeners",{"_index":1903,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["listens",{"_index":1832,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["listresult",{"_index":26,"title":{"interfaces/ListResult.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["literal",{"_index":597,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyStateModel.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["liver",{"_index":2347,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["load",{"_index":726,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Collision.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["load(model.scenegraph",{"_index":764,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["loaded",{"_index":931,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["loader",{"_index":1236,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{}}}],["loader.channelnames",{"_index":1360,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["loader.isrgb",{"_index":4573,"title":{},"body":{"components/ViewerComponent.html":{}}}],["loaderpromises",{"_index":1309,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["loaders",{"_index":1276,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders.gl/core",{"_index":728,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":731,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":733,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.length",{"_index":4089,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders[0",{"_index":4091,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders[0].isrgb",{"_index":4102,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaderselection",{"_index":4092,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaderselection.push",{"_index":4097,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loadertype",{"_index":1241,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loadertype.bftiff",{"_index":3585,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.covidtiff",{"_index":3586,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.omezarr",{"_index":3579,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.statictiff",{"_index":3587,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.staticzarr",{"_index":3577,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.tiff",{"_index":3583,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["loadertype.tiff2",{"_index":3584,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.zarr",{"_index":3576,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadgltf(model",{"_index":761,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["loading",{"_index":3123,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["loadoffsets(offsets",{"_index":3588,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadoffsets(url",{"_index":3591,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadontology",{"_index":3796,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["loads",{"_index":3819,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["local_link",{"_index":43,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["located",{"_index":3354,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["location",{"_index":3920,"title":{},"body":{"interfaces/OntologySelection.html":{}}}],["lodash",{"_index":2839,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"dependencies.html":{}}}],["log",{"_index":4816,"title":{},"body":{"index.html":{}}}],["logged",{"_index":2719,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loggedin",{"_index":2713,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logic",{"_index":3336,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["login",{"_index":2728,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logo",{"_index":2330,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{}}}],["logo.svg",{"_index":2332,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["logout",{"_index":2729,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lomap",{"_index":3829,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lomap(ontology",{"_index":3887,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["look",{"_index":2756,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["looks",{"_index":3823,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup",{"_index":3797,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["lookup(nodes",{"_index":3820,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["low",{"_index":1752,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["low/high",{"_index":2528,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lower",{"_index":2464,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lowerbound",{"_index":1464,"title":{},"body":{"interfaces/Collision.html":{}}}],["lowerbound[i",{"_index":1476,"title":{},"body":{"interfaces/Collision.html":{}}}],["lowvalue",{"_index":2442,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lr",{"_index":4275,"title":{},"body":{"components/SideSelectorComponent.html":{}}}],["luma.gl/core",{"_index":735,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["luma.gl/experimental",{"_index":737,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["lung",{"_index":2349,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["lymph",{"_index":3983,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["lymph_nodes",{"_index":2351,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["m",{"_index":4302,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["made",{"_index":1591,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["magma",{"_index":1687,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["main",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["make",{"_index":2172,"title":{},"body":{"injectables/DataSourceService.html":{},"components/ImageViewerLayersComponent.html":{}}}],["male",{"_index":61,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/GenderSelectorComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["malefemale",{"_index":2698,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["managed",{"_index":1925,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["manages",{"_index":4407,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["many",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map((s",{"_index":1035,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["map(createmodel",{"_index":3891,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(entities",{"_index":4610,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map(layers",{"_index":4606,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map(model",{"_index":1462,"title":{},"body":{"interfaces/Collision.html":{}}}],["map(nodes",{"_index":3888,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(ontology",{"_index":3886,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(partial(prunemodel",{"_index":3892,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(searchresults",{"_index":3758,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["map(state",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["map(states",{"_index":2237,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["mapping",{"_index":1611,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/InfoDialogComponent.html":{}}}],["maps",{"_index":3201,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["margin",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["margin2",{"_index":3333,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["mass",{"_index":3613,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["mat",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["mat.transformaspoint",{"_index":1465,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":1467,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat_dialog_data",{"_index":3189,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["matautocompletemodule",{"_index":3786,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matautocompleteselectedevent",{"_index":3729,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["matbuttonmodule",{"_index":2767,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["match",{"_index":2732,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["matcheckboxchange",{"_index":1394,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["matcheckboxmodule",{"_index":1426,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["matching",{"_index":99,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["matdialog",{"_index":3155,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["matdialogmodule",{"_index":3302,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":3179,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material",{"_index":2753,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["matexpansionmodule",{"_index":2954,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["matformfieldmodule",{"_index":2428,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["math.gl/core",{"_index":620,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":1504,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(...this.selection",{"_index":2532,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.max(n",{"_index":1475,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.min(...this.selection",{"_index":2530,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(math.max(1",{"_index":700,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["math.min(n",{"_index":1472,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.trunc(slider_max",{"_index":4547,"title":{},"body":{"components/ViewerComponent.html":{}}}],["maticonmodule",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/ViewerModule.html":{}}}],["maticonregistry",{"_index":2782,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["matinputmodule",{"_index":546,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/OntologySearchModule.html":{},"modules/SlicesInputModule.html":{}}}],["matprogressspinnermodule",{"_index":4340,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["matradiomodule",{"_index":4267,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"modules/StageNavModule.html":{}}}],["matrix",{"_index":677,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{}}}],["matrix.copy(scene.matrix",{"_index":1442,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.gettranslation",{"_index":680,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["matrix.identity",{"_index":1443,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.multiplyright(rotationmatrix",{"_index":1449,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.scale(scene.scale",{"_index":1451,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.translate(scene.translation",{"_index":1445,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4",{"_index":619,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["matrix4().fromquaternion(scene.rotation",{"_index":1448,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4().identity",{"_index":1440,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4().rotatex(toradians(90)).multiplyleft(transform",{"_index":1212,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["matrix4(model.transformmatrix",{"_index":1463,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(node.transformmatrix",{"_index":678,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["matrix4(worldmatrix).multiplyright(matrix",{"_index":1452,"title":{},"body":{"interfaces/Collision.html":{}}}],["matselectmodule",{"_index":2430,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["matslidetogglemodule",{"_index":2704,"title":{},"body":{"modules/GenderSelectorModule.html":{},"modules/SideSelectorModule.html":{},"modules/StageNavModule.html":{}}}],["mattoolbarmodule",{"_index":2769,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodule",{"_index":2771,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["mattreemodule",{"_index":3964,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["max",{"_index":2414,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["maxhits",{"_index":1503,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxrotationx",{"_index":663,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["maxselected",{"_index":4628,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["mc",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["measured",{"_index":3390,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["measuredmargin",{"_index":3392,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["measuredwidth",{"_index":3383,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["medicine",{"_index":3276,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["member",{"_index":3450,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["menu",{"_index":1710,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["merchantability",{"_index":4863,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4841,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":3492,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["mesh",{"_index":787,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer('cubes",{"_index":807,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer('wireframes",{"_index":808,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer(id",{"_index":777,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["message",{"_index":1894,"title":{"interfaces/Message.html":{},"interfaces/Message-1.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["message_service_config",{"_index":2368,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["message_service_default_config",{"_index":2369,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messagechannel",{"_index":1909,"title":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":3530,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messagechannel.counter",{"_index":3519,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messages",{"_index":1890,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":1874,"title":{"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice.connect(this",{"_index":1955,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["messageservice.connect(this).getmessages",{"_index":2044,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["messageserviceconfig",{"_index":3495,"title":{"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messagess",{"_index":2274,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["metadata",{"_index":55,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["meter",{"_index":1091,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["method",{"_index":1397,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["method.apply(registry",{"_index":2811,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["methodname",{"_index":2806,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["methods",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["millimeter",{"_index":1089,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["min",{"_index":2419,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["minor",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":661,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["miscellaneous",{"_index":4811,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":4823,"title":{},"body":{"license.html":{}}}],["mm",{"_index":525,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["mock",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":3174,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mode",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/StageNavComponent.html":{}}}],["model",{"_index":814,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["model._lighting",{"_index":816,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.color",{"_index":819,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.entityid",{"_index":1469,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.scenegraph",{"_index":815,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.scenegraphnode",{"_index":767,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.subscribe(ontology",{"_index":3894,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["model.tooltip",{"_index":1468,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":818,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.unpickable",{"_index":813,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.zoombasedopacity",{"_index":811,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model['@id",{"_index":810,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["modelmatrix",{"_index":1439,"title":{},"body":{"interfaces/Collision.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":1488,"title":{},"body":{"interfaces/Collision.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":1487,"title":{},"body":{"interfaces/Collision.html":{}}}],["models",{"_index":804,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["models.map((model",{"_index":809,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["models/color",{"_index":4619,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["models/image",{"_index":4620,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["models/json",{"_index":3831,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["models/ontology",{"_index":3832,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["modify",{"_index":4840,"title":{},"body":{"license.html":{}}}],["module",{"_index":402,"title":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["modules",{"_index":404,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/body/body.module",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/color",{"_index":4247,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["modules/filters/filters",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modules/image",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modules/info/info",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{}}}],["modules/ontology",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/results",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["molecular",{"_index":3196,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["more",{"_index":2266,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":2468,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mouseevent",{"_index":598,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorSchemePopupComponent.html":{}}}],["mouseevent?.srcevent?.ctrlkey",{"_index":694,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["moved",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["movement",{"_index":2469,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["moz",{"_index":4228,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["msg",{"_index":2020,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["msg.payload",{"_index":2056,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["msg.payload.drawers",{"_index":2049,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["msg.payload.opened",{"_index":4487,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["msg.payload.type",{"_index":2047,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["msg.source",{"_index":2054,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["multi",{"_index":4405,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":3237,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["n.name",{"_index":769,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["n3",{"_index":967,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["name",{"_index":53,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["namespace",{"_index":2323,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["nan",{"_index":4284,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["national",{"_index":3279,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["nativeelement",{"_index":1854,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ViewerComponent.html":{}}}],["nav",{"_index":4346,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav'},{'name",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["nav.component",{"_index":4375,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav.component.html",{"_index":4348,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.scss",{"_index":4347,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts",{"_index":4344,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["nav.component.ts:19",{"_index":4353,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:24",{"_index":4355,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:29",{"_index":4357,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:34",{"_index":4358,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:40",{"_index":4359,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:51",{"_index":4362,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.module",{"_index":2114,"title":{},"body":{"modules/ContentModule.html":{}}}],["nav.module.ts",{"_index":4374,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav/stage",{"_index":2113,"title":{},"body":{"modules/ContentModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"miscellaneous/typealiases.html":{}}}],["navigateto",{"_index":464,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["navigation",{"_index":3240,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["necessary",{"_index":2490,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["need",{"_index":1824,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/FiltersPopoverComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["needed",{"_index":3035,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["needs",{"_index":1899,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerLayersComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["nested",{"_index":2559,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["network",{"_index":4820,"title":{},"body":{"index.html":{}}}],["never",{"_index":1947,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["new",{"_index":504,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["newconfigs",{"_index":1319,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["newfilter",{"_index":888,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["newly",{"_index":1541,"title":{},"body":{"components/ColorBarComponent.html":{},"classes/FlatNode.html":{}}}],["newrotation",{"_index":4207,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["newvalue",{"_index":2551,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["next",{"_index":655,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["nextmessageid",{"_index":3518,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["ng",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ng5",{"_index":1764,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"dependencies.html":{}}}],["ng5slidermodule",{"_index":1811,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/DualSliderModule.html":{}}}],["ngacceptinputtype_expanded",{"_index":3453,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ngacceptinputtype_opened",{"_index":3452,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ngacceptinputtype_position",{"_index":3449,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ngafterviewinit",{"_index":832,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["ngfor",{"_index":3048,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["ngmodule",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{}}}],["ngonchanges",{"_index":2447,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ngonchanges(changes",{"_index":2474,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ngondestroy",{"_index":1882,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["ngoninit",{"_index":3467,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ngxs",{"_index":861,"title":{},"body":{"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":2250,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["ngxsdataentitycollectionsrepository",{"_index":4592,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ngxsdatapluginmodule",{"_index":4377,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":4392,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":2185,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["ngxsentitycollections",{"_index":4616,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ngxsmodule",{"_index":4379,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":4393,"title":{},"body":{"modules/StoreModule.html":{}}}],["niaid",{"_index":3284,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["niddk",{"_index":3274,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["nih",{"_index":3265,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["node",{"_index":612,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/Collision.html":{},"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"miscellaneous/typealiases.html":{}}}],["node's",{"_index":2669,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.children",{"_index":3918,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.entityid",{"_index":882,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["node.label.tolowercase().includes(searchvalue",{"_index":3902,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.mesh",{"_index":1481,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.mesh.primitives",{"_index":1482,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.mesh.primitives.length",{"_index":1483,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.name",{"_index":1490,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.parent",{"_index":3866,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.synonymlabels.find((label",{"_index":3907,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.ts",{"_index":2657,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OntologyNode.html":{}}}],["node.ts:11",{"_index":2668,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:16",{"_index":2671,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:27",{"_index":2666,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:29",{"_index":2662,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.zoomtoonload",{"_index":674,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["node['@id",{"_index":869,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["nodeattrs",{"_index":1153,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodeclick",{"_index":566,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodeclicksubject",{"_index":567,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstart",{"_index":568,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstartsubject",{"_index":569,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstop",{"_index":570,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstopsubject",{"_index":571,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodemap",{"_index":3841,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodemap[parent].children.push(id",{"_index":3852,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"miscellaneous/typealiases.html":{}}}],["nodes.concat",{"_index":1194,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodes.filter(s",{"_index":1198,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodes.foreach((node",{"_index":3900,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes.svg",{"_index":2353,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["nodes[id",{"_index":3877,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes[node.parent",{"_index":3943,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["none",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["noninfringement",{"_index":4867,"title":{},"body":{"license.html":{}}}],["normally",{"_index":841,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["not(:last",{"_index":534,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["not(hr",{"_index":3472,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["note",{"_index":742,"title":{},"body":{"classes/BodyUILayer.html":{},"components/DualSliderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{}}}],["notice",{"_index":4853,"title":{},"body":{"license.html":{}}}],["now",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":4169,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["null",{"_index":1028,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["null)?.getcontainerelement",{"_index":4451,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["num_layers_selected_on_creation",{"_index":4621,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["number((event.target",{"_index":2552,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(this.options.floor",{"_index":2555,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(value.slice(0",{"_index":3396,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["number.isnan(value",{"_index":4539,"title":{},"body":{"components/ViewerComponent.html":{}}}],["number.parseint(hex.slice(1",{"_index":4537,"title":{},"body":{"components/ViewerComponent.html":{}}}],["number[][]}).transformmatrix",{"_index":790,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["number]}).color",{"_index":792,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["numslices",{"_index":4281,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["o",{"_index":2285,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["object",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{}}}],["object.assign",{"_index":2303,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["object.assign(s",{"_index":1036,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["object.assign(this",{"_index":3010,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["object.entries(channelconfigs",{"_index":4096,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["object.entries(configs).reduce((result",{"_index":1320,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["object.entries(entities",{"_index":4643,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["object.keys(this.channelconfigs",{"_index":1280,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["object.values(entities",{"_index":4611,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["object.values(state.nodes",{"_index":3955,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["objects",{"_index":512,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["observable",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observableinput",{"_index":2202,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["observedvalueof",{"_index":2251,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["obtaining",{"_index":4832,"title":{},"body":{"license.html":{}}}],["occurencedata",{"_index":3925,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["occurences",{"_index":974,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["occurrences",{"_index":946,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["occurs",{"_index":2471,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["office",{"_index":3268,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["official",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":2058,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["offsets",{"_index":3573,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["old",{"_index":3616,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["oldruidata",{"_index":3597,"title":{"interfaces/OldRuiData.html":{}},"body":{"interfaces/OldRuiData.html":{}}}],["oldviewstate",{"_index":1365,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["ome",{"_index":3563,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["omezarr",{"_index":3562,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["omezarrinfo",{"_index":1242,"title":{"interfaces/OMEZarrInfo.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omezarrreader",{"_index":3559,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omezarrreader.fromurl(url",{"_index":3581,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omit",{"_index":4083,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":2132,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":2435,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onchannelschange",{"_index":3106,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["onchannelschange(channels",{"_index":3113,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["onclick",{"_index":644,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["ondestroy",{"_index":1871,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["one",{"_index":2265,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["ones",{"_index":3025,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["onhover",{"_index":642,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["oninit",{"_index":3464,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["onkeyhigh",{"_index":2448,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeyhigh(event",{"_index":2481,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow",{"_index":2449,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow(event",{"_index":2487,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onleft",{"_index":3972,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["online",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["onright",{"_index":3973,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["onscroll",{"_index":4115,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onscroll(event",{"_index":4126,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onselect",{"_index":3710,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onselect(event",{"_index":3728,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontolgyselection.foreach((selection",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["ontolgyselection.length",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["ontolgyselection[0].label",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["ontological",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":65,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["ontology.ts",{"_index":2836,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["ontology/ccf",{"_index":3641,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ontology/ontology.state",{"_index":4382,"title":{},"body":{"modules/StoreModule.html":{}}}],["ontologyexplorationmodule",{"_index":421,"title":{"modules/OntologyExplorationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyfilter",{"_index":3926,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologynode",{"_index":2660,"title":{"interfaces/OntologyNode.html":{}},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["ontologysearchcomponent",{"_index":371,"title":{"components/OntologySearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologysearchmodule",{"_index":3687,"title":{"modules/OntologySearchModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologysearchservice",{"_index":3714,"title":{"injectables/OntologySearchService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["ontologyselected(ontologyselection",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselection",{"_index":157,"title":{"interfaces/OntologySelection.html":{}},"body":{"components/AppComponent.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{}}}],["ontologyselection.map(selection",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselectioncomponent",{"_index":373,"title":{"components/OntologySelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologyselectionlabel",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselectionmodule",{"_index":3688,"title":{"modules/OntologySelectionModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyselections",{"_index":3934,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologyservice",{"_index":3708,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologystate",{"_index":3800,"title":{"injectables/OntologyState.html":{}},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["ontologystatemodel",{"_index":3833,"title":{"interfaces/OntologyStateModel.html":{}},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["ontologyterms",{"_index":67,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["ontologytermsdata",{"_index":2297,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ontologytermsfulldata",{"_index":2193,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ontologytreecomponent",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologytreemodule",{"_index":3689,"title":{"modules/OntologyTreeModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules.html":{},"overview.html":{}}}],["onviewstatechange",{"_index":646,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["onviewstatechange(undefined",{"_index":2900,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["onviewstatechangeargs",{"_index":1255,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["opacity",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/BodyUILayer.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{}}}],["open",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open(data",{"_index":3116,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["open(event",{"_index":1837,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["open/close",{"_index":3374,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["openapi",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["opened",{"_index":2026,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["opened(value",{"_index":3363,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["opened/closed",{"_index":3321,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":3370,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openedstate",{"_index":3322,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":3410,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openimageviewer",{"_index":4149,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["opening",{"_index":4125,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["opening/closing/expanding",{"_index":3337,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openresult",{"_index":4148,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["opens",{"_index":1728,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openviewer(viewer",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["operator",{"_index":2277,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["operatorfunction",{"_index":2252,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["opposite",{"_index":3326,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["ops",{"_index":1005,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addhubmapdatatostore",{"_index":1013,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addjsonldtostore(this.options.hubmapdataurl",{"_index":1012,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addn3tostore(this.options.ccfowlurl",{"_index":1008,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addrdfxmltostore(this.options.ccfowlurl",{"_index":1009,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["optimizations",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1395,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["option.displaylabel[0",{"_index":3769,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[1",{"_index":3770,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[2",{"_index":3771,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option:first",{"_index":4258,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["option:last",{"_index":4259,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["option?.displaylabel",{"_index":3762,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["optional",{"_index":87,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["options",{"_index":69,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{}}}],["options.ceil",{"_index":2557,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["options.floor",{"_index":2556,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionschanged",{"_index":2450,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionsvisible",{"_index":2377,"title":{},"body":{"components/DropdownComponent.html":{}}}],["orbitaxis",{"_index":626,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["orbitview",{"_index":615,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["order",{"_index":3202,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["order.length",{"_index":4650,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ordering",{"_index":3451,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["organ",{"_index":52,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["organchanged",{"_index":3970,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["organids",{"_index":3859,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organinfo",{"_index":3966,"title":{"interfaces/OrganInfo.html":{}},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["organization",{"_index":3209,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["organlist",{"_index":3974,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["organname",{"_index":54,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["organnodes",{"_index":3861,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organs",{"_index":954,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"injectables/OntologySearchService.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["organs_bladder.svg",{"_index":2339,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_brain.svg",{"_index":2341,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_colon.svg",{"_index":2343,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_heart.svg",{"_index":2345,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_kidney.svg",{"_index":2346,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_liver.svg",{"_index":2348,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_lung.svg",{"_index":2350,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_lymph",{"_index":2352,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_ovaries.svg",{"_index":2355,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_small",{"_index":2357,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_spleen.svg",{"_index":2359,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_stomach.svg",{"_index":2361,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_thymus.svg",{"_index":2363,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organselectorcomponent",{"_index":377,"title":{"components/OrganSelectorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["organselectormodule",{"_index":3479,"title":{"modules/OrganSelectorModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/OrganSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["organsid",{"_index":1162,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["original",{"_index":2664,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["originx",{"_index":2515,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["originy",{"_index":2516,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ot",{"_index":2320,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["ot2od026671",{"_index":3273,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["other.expanded",{"_index":3438,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.expandedstate2",{"_index":3439,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.margin2",{"_index":3444,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.measuredmargin",{"_index":3442,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.measuredwidth",{"_index":3441,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.opened",{"_index":3440,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.width",{"_index":3443,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["otherwise",{"_index":2796,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"license.html":{}}}],["out",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":4261,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["outline",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["output",{"_index":511,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["outputs",{"_index":486,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["outside",{"_index":838,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["ovaries",{"_index":2354,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["overall",{"_index":1380,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["overflow",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["overlay",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["overlay'},{'name",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["overlay.component",{"_index":4342,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.component.html",{"_index":4327,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":4326,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":4324,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:16",{"_index":4332,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:19",{"_index":4328,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:22",{"_index":4330,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.create",{"_index":2522,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.module",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.module.ts",{"_index":4339,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.position().flexibleconnectedto(element).withpositions([position",{"_index":2520,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay/spinner",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{}}}],["overlaycontainer",{"_index":4434,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["overlaymodule",{"_index":2577,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["overlayref",{"_index":2443,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.attach(popoverportal",{"_index":2549,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.updateposition",{"_index":2550,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlays",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["overlayx",{"_index":2517,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayy",{"_index":2518,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overview",{"_index":4084,"title":{"overview.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["overview_defaults",{"_index":4085,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["overviewargs",{"_index":4082,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["overviewview",{"_index":4080,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["overviewviewnewargs",{"_index":4081,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["owl",{"_index":3226,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["owner",{"_index":1818,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["owner?.contains(target",{"_index":1856,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["owning",{"_index":4471,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["p",{"_index":1085,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"changelog.html":{}}}],["p.translation_units",{"_index":1087,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_rotation",{"_index":1097,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_scaling",{"_index":1105,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_translation",{"_index":1093,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_rotation",{"_index":1098,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_scaling",{"_index":1106,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_translation",{"_index":1094,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_rotation].map(toradians",{"_index":1099,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_scaling",{"_index":1107,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_translation].map(t",{"_index":1095,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["package",{"_index":4771,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["page",{"_index":2710,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["pagestate",{"_index":2744,"title":{"injectables/PageState.html":{}},"body":{"components/HeaderComponent-1.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["pagestatemodel",{"_index":4042,"title":{"interfaces/PageStateModel.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["pair",{"_index":3446,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["pane",{"_index":2418,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["panel",{"_index":2409,"title":{},"body":{"components/DropdownComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["panelclass",{"_index":2523,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["param",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{}}}],["parameters",{"_index":502,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["parameters>[0",{"_index":1253,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["parameters[0",{"_index":3572,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["params",{"_index":3332,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["parent",{"_index":631,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/CheckboxComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"miscellaneous/typealiases.html":{}}}],["parent.messages.pipe(takewhile",{"_index":3524,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["parentextractor",{"_index":2856,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentextractor(json",{"_index":2872,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentproperty",{"_index":2855,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parents",{"_index":3840,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["parseint(element.style.left",{"_index":4002,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["parser",{"_index":4802,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":3257,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{}}}],["partial",{"_index":579,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{}}}],["partial.placeholder",{"_index":2866,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["partial[0",{"_index":1786,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["particular",{"_index":4865,"title":{},"body":{"license.html":{}}}],["partonomy",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":2816,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.join",{"_index":2821,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.push('innamespace",{"_index":2820,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.push('literal",{"_index":2819,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.push('set",{"_index":2818,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["pass",{"_index":2937,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["passed",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["passes",{"_index":1589,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["past",{"_index":3993,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["path",{"_index":1131,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"dependencies.html":{}}}],["path.length",{"_index":1133,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["path.reverse",{"_index":1134,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["path/unweighted",{"_index":1074,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["patient",{"_index":2607,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["payload",{"_index":2093,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"miscellaneous/typealiases.html":{}}}],["pbr",{"_index":817,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["permission",{"_index":4827,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4848,"title":{},"body":{"license.html":{}}}],["person",{"_index":4831,"title":{},"body":{"license.html":{}}}],["persons",{"_index":4849,"title":{},"body":{"license.html":{}}}],["physiologic",{"_index":3243,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["pick",{"_index":3009,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["pickable",{"_index":779,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["picked",{"_index":682,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["picker",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["picture",{"_index":4045,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["pictureinpictureviewer",{"_index":4043,"title":{"classes/PictureInPictureViewer.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["pictureinpictureviewerprops",{"_index":4046,"title":{"interfaces/PictureInPictureViewerProps.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["pipe",{"_index":2236,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["pipe(mergeall",{"_index":3526,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["placed",{"_index":4391,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":3061,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"changelog.html":{}}}],["placement",{"_index":1064,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["placement.target['@id",{"_index":1126,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["placement_date",{"_index":3661,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["placements",{"_index":1120,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["placementtarget",{"_index":3629,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["placementtarget?.endswith('kidney",{"_index":3636,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["places",{"_index":746,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["plasma",{"_index":1696,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["pluck",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["plugin",{"_index":4389,"title":{},"body":{"modules/StoreModule.html":{}}}],["point",{"_index":3612,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["pointer",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["popover",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover's",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["popover'},{'name",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["popover.component",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"modules/FiltersPopoverModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popover.component.html",{"_index":2621,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.scss",{"_index":2620,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts",{"_index":2619,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:15",{"_index":2629,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:21",{"_index":2626,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:26",{"_index":2630,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:31",{"_index":2636,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:36",{"_index":2635,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:37",{"_index":3121,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:42",{"_index":3125,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:43",{"_index":2634,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:47",{"_index":3126,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:51",{"_index":2632,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:52",{"_index":3122,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:57",{"_index":3110,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:70",{"_index":3111,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:79",{"_index":3117,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:88",{"_index":3114,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:99",{"_index":3119,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.module",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageViewerModule.html":{}}}],["popover.module.ts",{"_index":2653,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popover/filters",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{}}}],["popover/image",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popoverelement",{"_index":2444,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverelement.nativeelement.contains(target",{"_index":2543,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverportal",{"_index":2445,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popup",{"_index":1521,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"changelog.html":{}}}],["popup'},{'name",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["popup.component",{"_index":1868,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["popup.component.html",{"_index":1816,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.scss",{"_index":1815,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts",{"_index":1814,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:20",{"_index":1825,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:25",{"_index":1822,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:30",{"_index":1827,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:32",{"_index":1843,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:37",{"_index":1847,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:40",{"_index":1844,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:45",{"_index":1840,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:53",{"_index":1831,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:64",{"_index":1838,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.module",{"_index":1606,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["popup.module.ts",{"_index":1867,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["popup/color",{"_index":1605,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{}}}],["popupvisible",{"_index":1819,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["portal",{"_index":985,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["portalmodule",{"_index":2578,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["portions",{"_index":4857,"title":{},"body":{"license.html":{}}}],["position",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BodyUiComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OldRuiData.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["position(value",{"_index":3359,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["positions",{"_index":1557,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["positions[index",{"_index":3020,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["positionstrategy",{"_index":2519,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["posterior",{"_index":4363,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postprocess",{"_index":766,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["precision",{"_index":3275,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["prefix",{"_index":3812,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["preparation",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["preprint",{"_index":3231,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["presented",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":2486,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["prevents",{"_index":3992,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["preview",{"_index":4368,"title":{},"body":{"components/StageNavComponent.html":{}}}],["primitive",{"_index":1484,"title":{},"body":{"interfaces/Collision.html":{}}}],["primitive.attributes.position",{"_index":1485,"title":{},"body":{"interfaces/Collision.html":{}}}],["primitive.attributes.position.min",{"_index":1486,"title":{},"body":{"interfaces/Collision.html":{}}}],["private",{"_index":562,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["process",{"_index":2019,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["processed",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":1896,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["programmers",{"_index":741,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["progress",{"_index":4325,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["project",{"_index":3149,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["projected",{"_index":1904,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["projects/.../data.state.ts",{"_index":4813,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../drawer.component.ts",{"_index":4885,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../hubmap",{"_index":4888,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../image",{"_index":4884,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../loader.ts",{"_index":4814,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../messages.ts",{"_index":4883,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../ontology",{"_index":4886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../picture",{"_index":4890,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../stage",{"_index":4891,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["promise",{"_index":95,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["promise(r",{"_index":1022,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["promise(resolve",{"_index":3310,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["promise.all(loaderpromises",{"_index":1313,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["promise.all(ops",{"_index":1018,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["proof",{"_index":3245,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["prop",{"_index":2805,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["property",{"_index":1401,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/ValueObject.html":{}}}],["property(0",{"_index":2858,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(idproperty",{"_index":2851,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(labelproperty",{"_index":2861,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(parentproperty",{"_index":2857,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(synonymsproperty",{"_index":2864,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(valueproperty",{"_index":2854,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["props",{"_index":633,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["props.defaultchannelconfig",{"_index":1268,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["props.overview",{"_index":4088,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["protected",{"_index":1284,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["protractor",{"_index":468,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["provide",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":860,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":2158,"title":{},"body":{"injectables/DataSourceService.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["provider",{"_index":900,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["providers",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["provides",{"_index":3717,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["providing",{"_index":1999,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["prunednodes",{"_index":3863,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["prunemodel(model",{"_index":3860,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["public",{"_index":902,"title":{},"body":{"classes/CCFDatabase.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"changelog.html":{}}}],["publication",{"_index":3232,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["publish",{"_index":4842,"title":{},"body":{"license.html":{}}}],["publishreplay",{"_index":2254,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["publishreplay(1",{"_index":2289,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["pull",{"_index":1732,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{}}}],["pureimageviewerlayer",{"_index":2979,"title":{"interfaces/PureImageViewerLayer.html":{}},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["purplebrown",{"_index":1653,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["purplelightblue",{"_index":1669,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["purpose",{"_index":4866,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1549,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["px",{"_index":3351,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["quad",{"_index":935,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["qualitative",{"_index":1612,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"changelog.html":{}}}],["qualitative1",{"_index":1615,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["qualitative2",{"_index":1630,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["quaternion",{"_index":1076,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["queried",{"_index":21,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["queries",{"_index":72,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"components/ViewerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["queries/aggregate",{"_index":966,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/find",{"_index":969,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/image",{"_index":970,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/list",{"_index":972,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/ontology",{"_index":973,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/spatial",{"_index":976,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["query",{"_index":10,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["querydata",{"_index":2284,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["querying",{"_index":2279,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["querylist",{"_index":1912,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["querystatus",{"_index":2194,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["question",{"_index":1381,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["r",{"_index":1100,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{},"components/SideSelectorComponent.html":{}}}],["r.hits.length",{"_index":1505,"title":{},"body":{"interfaces/Collision.html":{}}}],["r.x",{"_index":3668,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r.y",{"_index":3670,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r.z",{"_index":3672,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r_rad",{"_index":1096,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["r_rad[0",{"_index":1102,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["r_rad[2",{"_index":1103,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["radio",{"_index":4260,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["radius",{"_index":1561,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["range",{"_index":75,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{}}}],["rangelabel",{"_index":2454,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ratio",{"_index":3666,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["rc.1",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1079,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["rdf.type",{"_index":1116,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["rdfjs/data",{"_index":4787,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":4800,"title":{},"body":{"dependencies.html":{}}}],["react",{"_index":4804,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":3785,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["read",{"_index":849,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ViewerComponent.html":{}}}],["reader",{"_index":3580,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["reader.loadomezarr",{"_index":3582,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["readonly",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ready",{"_index":2146,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["real",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":4388,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":2009,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["receiving",{"_index":3500,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["record",{"_index":1257,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["red",{"_index":4540,"title":{},"body":{"components/ViewerComponent.html":{}}}],["redtan",{"_index":1661,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ref",{"_index":1060,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["refcount",{"_index":2255,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["reference",{"_index":953,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialObjectReference.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["reference_organ_id",{"_index":3606,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["referencelayer",{"_index":3055,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["references",{"_index":1112,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["referencing",{"_index":3056,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["reforganid",{"_index":3626,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["refresh",{"_index":526,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["refreshblocksize",{"_index":484,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{}}}],["refreshclicked",{"_index":2715,"title":{},"body":{"components/HeaderComponent.html":{}}}],["refreshes",{"_index":495,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["refreshslices",{"_index":4293,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["region",{"_index":2971,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["regions",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2325,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/StageNavComponent.html":{}}}],["registered",{"_index":2328,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["registericon",{"_index":2800,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registericon(definition",{"_index":2797,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registericonimpl",{"_index":2825,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registericonimpl(definition",{"_index":2801,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registering",{"_index":2779,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registerloaders",{"_index":727,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["registerloaders([dracoworkerloader",{"_index":797,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["registers",{"_index":2794,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registration",{"_index":2319,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry",{"_index":2786,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state",{"_index":4381,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":2778,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:106",{"_index":2831,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:120",{"_index":2829,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:43",{"_index":2827,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:72",{"_index":2832,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:82",{"_index":2833,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry/default",{"_index":2313,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["registry/icon",{"_index":2777,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"modules/StoreModule.html":{}}}],["registry[methodname",{"_index":2808,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["relationship",{"_index":3208,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["relative",{"_index":891,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OrganSelectorComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relavant",{"_index":1544,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["release",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["remote",{"_index":2151,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["remove",{"_index":1400,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["removebox",{"_index":2623,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["removeclass",{"_index":4453,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["removes",{"_index":4418,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["render",{"_index":840,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["renderer",{"_index":4447,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["renderer2",{"_index":4435,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["renderer[methodname](overlay",{"_index":4455,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["renderer[methodname](root",{"_index":4454,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["rendering",{"_index":1731,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/StageNavComponent.html":{}}}],["renderlayers",{"_index":716,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["replace",{"_index":858,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["replay",{"_index":2281,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject",{"_index":2253,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject(1",{"_index":2210,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject>(1",{"_index":2298,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["report",{"_index":1491,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":1498,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":2184,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["represents",{"_index":3236,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["reqprops",{"_index":1289,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.height",{"_index":1292,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.sources.length",{"_index":1293,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.width",{"_index":1291,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["requested",{"_index":934,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["requests",{"_index":3803,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["require",{"_index":3004,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["required",{"_index":1265,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["res",{"_index":3592,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["res.json",{"_index":3596,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["res.status",{"_index":3594,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["research",{"_index":3263,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["reset",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["resetchannelconfigs",{"_index":1356,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["resetrotation",{"_index":4214,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["resets",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["resettheme",{"_index":4412,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["resizesensor",{"_index":4523,"title":{},"body":{"components/ViewerComponent.html":{}}}],["resizesensor(container",{"_index":4567,"title":{},"body":{"components/ViewerComponent.html":{}}}],["resizing",{"_index":4256,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["resolution",{"_index":3206,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["resolve",{"_index":3307,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["resolves",{"_index":1928,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataSourceService.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["resolving",{"_index":930,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["respond",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["responsetype",{"_index":3884,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["responsible",{"_index":3790,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["restriction",{"_index":4837,"title":{},"body":{"license.html":{}}}],["result",{"_index":11,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result's",{"_index":4157,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["result[key",{"_index":1322,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["resultclicked",{"_index":4118,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resulting",{"_index":2869,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["resultlabel",{"_index":4117,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["results",{"_index":100,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resultsbrowser",{"_index":4106,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsercomponent",{"_index":378,"title":{"components/ResultsBrowserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["resultsbrowseritemcomponent",{"_index":380,"title":{"components/ResultsBrowserItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["resultsbrowseritemmodule",{"_index":4170,"title":{"modules/ResultsBrowserItemModule.html":{}},"body":{"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["resultsbrowseritems",{"_index":4110,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsermodule",{"_index":422,"title":{"modules/ResultsBrowserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["resulttype",{"_index":41,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["resulturl",{"_index":40,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["return",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["returns",{"_index":466,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["reverse",{"_index":2602,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["rgb",{"_index":3001,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{}}}],["right",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["right.closeexpanded",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["right.expanded",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["right.open",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["right.px",{"_index":2007,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["right_kidney",{"_index":1173,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["rightmargin",{"_index":2042,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["rights",{"_index":4839,"title":{},"body":{"license.html":{}}}],["rightsidebarcomponent",{"_index":382,"title":{"components/RightSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["rightsidebarmodule",{"_index":4188,"title":{"modules/RightSidebarModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["root",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["root'},{'name",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["root_states",{"_index":4386,"title":{},"body":{"modules/StoreModule.html":{}}}],["rootnode",{"_index":3792,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["rotation",{"_index":384,"title":{"interfaces/Rotation.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["rotation.x",{"_index":4220,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.y",{"_index":4221,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.z",{"_index":4222,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation_order",{"_index":3673,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotation_units",{"_index":3675,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotationchange",{"_index":4206,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotationmatrix",{"_index":1447,"title":{},"body":{"interfaces/Collision.html":{}}}],["rotationorbit",{"_index":666,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["rotations",{"_index":4213,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotationslidercomponent",{"_index":383,"title":{"components/RotationSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["rotationslidermodule",{"_index":4193,"title":{"modules/RotationSliderModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules.html":{},"overview.html":{}}}],["rotationx",{"_index":665,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["row",{"_index":1416,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["rui",{"_index":1155,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["rui/e2e/src/app.po.ts",{"_index":472,"title":{},"body":{"classes/AppPage-1.html":{}}}],["rui/e2e/src/app.po.ts:4",{"_index":474,"title":{},"body":{"classes/AppPage-1.html":{}}}],["rui/e2e/src/app.po.ts:8",{"_index":473,"title":{},"body":{"classes/AppPage-1.html":{}}}],["rui/src/app/app.component.ts",{"_index":399,"title":{},"body":{"components/AppComponent-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts",{"_index":4456,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:13",{"_index":4464,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:15",{"_index":4465,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:17",{"_index":4466,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:20",{"_index":4460,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:23",{"_index":4457,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:37",{"_index":4459,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:46",{"_index":4463,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:56",{"_index":4462,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:67",{"_index":4461,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:82",{"_index":4458,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/store/icon",{"_index":2335,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState-1.html":{}}}],["rui/src/app/core/store/page/page.state.ts",{"_index":4035,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["rui/src/app/core/store/page/page.state.ts:25",{"_index":4039,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:26",{"_index":4041,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/modules/content/content.component.ts",{"_index":1994,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:10",{"_index":1997,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.module.ts",{"_index":2112,"title":{},"body":{"modules/ContentModule.html":{}}}],["rui/src/app/modules/content/stage",{"_index":4343,"title":{},"body":{"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/modules/header/header.component.ts",{"_index":2742,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["rui/src/app/modules/header/header.component.ts:17",{"_index":2745,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["rui/src/app/modules/left",{"_index":3461,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{}}}],["rui/src/app/modules/right",{"_index":4185,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{}}}],["rui/src/app/shared/components/block",{"_index":475,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts",{"_index":1981,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:101",{"_index":1986,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:111",{"_index":1984,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:120",{"_index":1987,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":1983,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":1991,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":1989,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":1990,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":1992,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":1993,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:58",{"_index":1988,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":1982,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:79",{"_index":1985,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts",{"_index":2072,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:100",{"_index":2082,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:113",{"_index":2081,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":2075,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":2076,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":2077,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":2078,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":2074,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":2083,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":2073,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:58",{"_index":2080,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:68",{"_index":2079,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":3454,"title":{},"body":{"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:33",{"_index":3456,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":3455,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":3457,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:42",{"_index":3458,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:52",{"_index":3460,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:59",{"_index":3459,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/messages.ts",{"_index":2105,"title":{},"body":{"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/shared/components/drawer/toggle",{"_index":4497,"title":{},"body":{"components/ToggleButtonComponent-1.html":{}}}],["rui/src/app/shared/components/gender",{"_index":2677,"title":{},"body":{"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{}}}],["rui/src/app/shared/components/organ",{"_index":3967,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{}}}],["rui/src/app/shared/components/rotation",{"_index":4201,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{}}}],["rui/src/app/shared/components/side",{"_index":4269,"title":{},"body":{"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{}}}],["rui/src/app/shared/components/slices",{"_index":4280,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{}}}],["rui/src/app/shared/services/message/message.service.ts",{"_index":3531,"title":{},"body":{"interfaces/Message-1.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:101",{"_index":3545,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:110",{"_index":3546,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:126",{"_index":3556,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:128",{"_index":3553,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:151",{"_index":3555,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:161",{"_index":3554,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:48",{"_index":3542,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:68",{"_index":3547,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:81",{"_index":3543,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:91",{"_index":3544,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["run",{"_index":1900,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["running",{"_index":2267,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["runtime",{"_index":2318,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["rxjs",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["s",{"_index":1032,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sad",{"_index":1492,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":1501,"title":{},"body":{"interfaces/Collision.html":{}}}],["safedef",{"_index":2790,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["safehtml",{"_index":2780,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["saferesourceurl",{"_index":2781,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sample",{"_index":2970,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"changelog.html":{}}}],["samples",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":2788,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sanitized",{"_index":2321,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["sanitizer",{"_index":2787,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sanitizer.bypasssecuritytrusthtml(html",{"_index":2792,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl(url",{"_index":2791,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sans",{"_index":2740,"title":{},"body":{"components/HeaderComponent.html":{}}}],["saved",{"_index":2597,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["scaffolding",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1213,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/HeaderComponent-1.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scale(1",{"_index":4027,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["scale(1,2",{"_index":4496,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["scales",{"_index":3238,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["scalex",{"_index":531,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["scaling",{"_index":4318,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["scaling_units",{"_index":3665,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["scene",{"_index":739,"title":{},"body":{"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scene.children",{"_index":1455,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.filter(d",{"_index":1478,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.matrix",{"_index":1441,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":1454,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.rotation",{"_index":1446,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.scale",{"_index":1450,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.translation",{"_index":1444,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.ts",{"_index":1136,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scene.ts:105",{"_index":1144,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:115",{"_index":1154,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:154",{"_index":1151,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:26",{"_index":1142,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:30",{"_index":1146,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:47",{"_index":1148,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:64",{"_index":1150,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scenegraph",{"_index":754,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphlayer",{"_index":723,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphnode",{"_index":736,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphnode.rotation",{"_index":770,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenes",{"_index":922,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["schema",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["schema#label",{"_index":2844,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["scheme",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme.colors[index",{"_index":4646,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme.ts",{"_index":1608,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["scheme.type",{"_index":4250,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["scheme/color",{"_index":1517,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme1",{"_index":1613,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme2",{"_index":1628,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme3",{"_index":1652,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme4",{"_index":1660,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme5",{"_index":1668,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme6",{"_index":1677,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme7",{"_index":1686,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme8",{"_index":1695,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["schemechange",{"_index":2931,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["schemechanged",{"_index":4237,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemechanged(idx",{"_index":4243,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemedropdowncomponent",{"_index":385,"title":{"components/SchemeDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["schemedropdownmodule",{"_index":3066,"title":{"modules/SchemeDropdownModule.html":{}},"body":{"modules/ImageViewerLayersModule.html":{},"modules/SchemeDropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["schemeidx",{"_index":4236,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemeoptions",{"_index":1721,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["schemes",{"_index":1556,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["schemes.ts",{"_index":1609,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["science",{"_index":4821,"title":{},"body":{"index.html":{}}}],["screen",{"_index":3173,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["scroll",{"_index":4129,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollbar",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrolled",{"_index":3995,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollheight",{"_index":4134,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrolling",{"_index":1979,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollingmodule",{"_index":4183,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["scrolls",{"_index":3991,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["scrolltop",{"_index":4135,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["search",{"_index":911,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["search'},{'name",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["search(filter",{"_index":957,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["search.component",{"_index":3787,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.component.html",{"_index":3704,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.scss",{"_index":3703,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts",{"_index":3700,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:25",{"_index":3718,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:30",{"_index":3741,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:36",{"_index":3739,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:41",{"_index":3715,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:47",{"_index":3744,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:54",{"_index":3725,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:72",{"_index":3722,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:81",{"_index":3734,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:90",{"_index":3737,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:98",{"_index":3730,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.detached",{"_index":3776,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.module",{"_index":3693,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["search.module.ts",{"_index":3783,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.service",{"_index":3749,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["search.service.ts",{"_index":3789,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["search.service.ts:107",{"_index":3801,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:124",{"_index":3818,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:142",{"_index":3804,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:154",{"_index":3822,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:190",{"_index":3817,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:200",{"_index":3808,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:216",{"_index":3814,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search/ontology",{"_index":3692,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["searchableitem",{"_index":58,"title":{"interfaces/SearchableItem.html":{}},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["searched",{"_index":57,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{}}}],["searches",{"_index":3805,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searching",{"_index":3702,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["searchresult",{"_index":3721,"title":{"interfaces/SearchResult.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults",{"_index":3899,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.get(node.id",{"_index":3903,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.set(node.id",{"_index":3904,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchservice",{"_index":3716,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["searchvalue",{"_index":3807,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchvalue.length",{"_index":3914,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["section",{"_index":4235,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["see",{"_index":3230,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["select",{"_index":2401,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selected",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/GenderSelectorComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/StageNavComponent.html":{}}}],["selected(ontologynode",{"_index":3935,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selectedcolor",{"_index":1528,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["selectedorgan",{"_index":3990,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["selectedresult",{"_index":4114,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["selecting",{"_index":2381,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["selection",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/GenderSelectorComponent.html":{},"components/OntologySelectionComponent.html":{},"components/SideSelectorComponent.html":{},"components/StageNavComponent.html":{}}}],["selection'},{'name",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["selection.component",{"_index":3949,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.component.html",{"_index":3924,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.scss",{"_index":3923,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts",{"_index":3921,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":3939,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":3930,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":3933,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:40",{"_index":3932,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":3929,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:53",{"_index":3937,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:61",{"_index":3936,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.id",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["selection.label",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["selection.module",{"_index":3695,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["selection.module.ts",{"_index":3948,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.ts",{"_index":3919,"title":{},"body":{"interfaces/OntologySelection.html":{}}}],["selection/ontology",{"_index":3694,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{}}}],["selectionchange",{"_index":1377,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selectionchanged",{"_index":2378,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionchanged(value",{"_index":2386,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectioncounter",{"_index":4627,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["selectionorder",{"_index":2981,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["selections",{"_index":1372,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["selectionstring",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["selector'},{'name",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["selector.component",{"_index":2706,"title":{},"body":{"modules/GenderSelectorModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SideSelectorModule.html":{}}}],["selector.component.html",{"_index":2681,"title":{},"body":{"components/GenderSelectorComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["selector.component.scss",{"_index":2680,"title":{},"body":{"components/GenderSelectorComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["selector.component.ts",{"_index":2679,"title":{},"body":{"components/GenderSelectorComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["selector.component.ts:100",{"_index":4018,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:16",{"_index":2686,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["selector.component.ts:21",{"_index":2690,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["selector.component.ts:26",{"_index":2692,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["selector.component.ts:29",{"_index":4017,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:32",{"_index":2694,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["selector.component.ts:34",{"_index":4021,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:39",{"_index":4022,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:44",{"_index":4023,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:63",{"_index":4024,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:71",{"_index":4020,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:89",{"_index":4019,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.module",{"_index":3485,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["selector.module.ts",{"_index":2703,"title":{},"body":{"modules/GenderSelectorModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SideSelectorModule.html":{}}}],["selector/gender",{"_index":2678,"title":{},"body":{"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"modules/LeftSidebarModule.html":{}}}],["selector/organ",{"_index":3488,"title":{},"body":{"modules/LeftSidebarModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{}}}],["selector/side",{"_index":3484,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{}}}],["selectorgan",{"_index":4015,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selectorgan(icon",{"_index":4007,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["selects",{"_index":2814,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["sell",{"_index":4846,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3219,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["semantically",{"_index":3215,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["send",{"_index":1889,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["sendcompletedto(subject",{"_index":2275,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._aggregatedataquerystatus",{"_index":2217,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._listdataquerystatus",{"_index":2226,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._termoccurencesdataquerystatus",{"_index":2243,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sender",{"_index":3490,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sending",{"_index":3428,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sending/receiving",{"_index":3398,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["sendmessage",{"_index":3535,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["sendmessage(payload",{"_index":3504,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sends",{"_index":2272,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{}}}],["sendtoggle",{"_index":3429,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["sensor",{"_index":4502,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sent",{"_index":2086,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"miscellaneous/typealiases.html":{}}}],["serif",{"_index":2741,"title":{},"body":{"components/HeaderComponent.html":{}}}],["server",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":981,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["service.initializeimpl(component",{"_index":4438,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["services",{"_index":3287,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["services/data",{"_index":2258,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["services/message/message.service",{"_index":2090,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["services/theming/theming.module",{"_index":2126,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":68,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["set(filter.highlightedentities",{"_index":1033,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["set(filter?.highlightedentities",{"_index":1199,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["setbrightnesshigh(value",{"_index":1758,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setbrightnesslow(value",{"_index":1753,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setdefaultscheme",{"_index":4596,"title":{},"body":{"injectables/ViewerState.html":{}}}],["setdefaultscheme(scheme",{"_index":4601,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["setlayers(layers",{"_index":3082,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["setontology",{"_index":3951,"title":{},"body":{"injectables/OntologyState.html":{}}}],["setontology(ontology",{"_index":3952,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["sets",{"_index":1902,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["setscene",{"_index":575,"title":{},"body":{"classes/BodyUI.html":{}}}],["setscene(data",{"_index":608,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["setsize",{"_index":2877,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsize(width",{"_index":1303,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources",{"_index":2878,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources(sources",{"_index":1308,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources(urls",{"_index":4526,"title":{},"body":{"components/ViewerComponent.html":{}}}],["setsourceurls",{"_index":3107,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["setsourceurls(result",{"_index":3118,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["settheme",{"_index":4413,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["settheme(theme",{"_index":4428,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["settimeout",{"_index":3400,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["settimeout(r",{"_index":1023,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["setting",{"_index":4203,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/StoreModule.html":{}}}],["settings",{"_index":1747,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{}}}],["settle",{"_index":1021,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["settransparency(value",{"_index":1762,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setup",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":60,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shadow",{"_index":1790,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["shall",{"_index":4854,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1578,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["share",{"_index":622,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["shared",{"_index":4384,"title":{},"body":{"modules/StoreModule.html":{}}}],["shared/components/block",{"_index":4195,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/checkbox/checkbox.module",{"_index":2616,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["shared/components/drawer/drawer/drawer.component",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/components/dropdown/dropdown.module",{"_index":2617,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/dual",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/FiltersContentModule.html":{}}}],["shared/components/gender",{"_index":3486,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/organ",{"_index":3487,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/rotation",{"_index":4197,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/side",{"_index":3483,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/slices",{"_index":4199,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/spinner",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["sharing",{"_index":2280,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["shift",{"_index":4016,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["shift(dir",{"_index":3996,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["short",{"_index":30,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shortest",{"_index":1073,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["shortestpath",{"_index":1072,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["shortestpath(this.graph",{"_index":1132,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["shortinfo",{"_index":31,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["show",{"_index":1862,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["showing",{"_index":4554,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["showm",{"_index":3026,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["shown",{"_index":2499,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["shows",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["showselectionbar",{"_index":1783,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["side",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["sidebar",{"_index":2960,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["sidebar.component",{"_index":3482,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar.component.html",{"_index":3466,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":3465,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":3463,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:12",{"_index":4187,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:13",{"_index":3469,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:9",{"_index":3468,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.module.ts",{"_index":3481,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar/left",{"_index":3462,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{}}}],["sidebar/right",{"_index":4186,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{}}}],["sidechanged",{"_index":4271,"title":{},"body":{"components/SideSelectorComponent.html":{},"components/StageNavComponent.html":{}}}],["sideselectorcomponent",{"_index":386,"title":{"components/SideSelectorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["sideselectormodule",{"_index":3480,"title":{"modules/SideSelectorModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/SideSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["silder",{"_index":2688,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["simplechanges",{"_index":2475,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["simplemeshlayer",{"_index":724,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["simplify",{"_index":3847,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["single",{"_index":859,"title":{},"body":{"components/BodyUiComponent.html":{},"interfaces/IdObject.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/ValueObject.html":{}}}],["site",{"_index":2708,"title":{},"body":{"components/HeaderComponent.html":{}}}],["size",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["skipself",{"_index":2124,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["slice",{"_index":4283,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["slices",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["slicesdata",{"_index":4279,"title":{"interfaces/SlicesData.html":{}},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["slicesinputcomponent",{"_index":388,"title":{"components/SlicesInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["slicesinputmodule",{"_index":4194,"title":{"modules/SlicesInputModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/SlicesInputModule.html":{},"modules.html":{},"overview.html":{}}}],["slide",{"_index":2697,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/SideSelectorComponent.html":{}}}],["slideinhorizontaldropdown",{"_index":2395,"title":{},"body":{"components/DropdownComponent.html":{}}}],["slideinhorizontalslider",{"_index":2562,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider",{"_index":1233,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/GenderSelectorComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/LeftSidebarComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SideSelectorComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["slider's",{"_index":2484,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider'},{'name",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["slider.component",{"_index":2579,"title":{},"body":{"modules/DualSliderModule.html":{},"modules/RotationSliderModule.html":{}}}],["slider.component.html",{"_index":2437,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.scss",{"_index":2436,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts",{"_index":2434,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts:102",{"_index":2456,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:125",{"_index":2476,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:139",{"_index":2489,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:155",{"_index":2478,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:168",{"_index":2467,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:187",{"_index":2493,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:204",{"_index":2491,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:214",{"_index":2472,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:227",{"_index":2488,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:243",{"_index":2483,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:25",{"_index":4217,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":2508,"title":{},"body":{"components/DualSliderComponent.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts:35",{"_index":4216,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:36",{"_index":2504,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:41",{"_index":2460,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:42",{"_index":4218,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:46",{"_index":2463,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:50",{"_index":4219,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:51",{"_index":2462,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:56",{"_index":2466,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:61",{"_index":2498,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:66",{"_index":2501,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:71",{"_index":2500,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:76",{"_index":2495,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:81",{"_index":2494,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:86",{"_index":2510,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:97",{"_index":2502,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.detached",{"_index":2564,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.module",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/FiltersContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["slider.module.ts",{"_index":2576,"title":{},"body":{"modules/DualSliderModule.html":{},"modules/RotationSliderModule.html":{}}}],["slider.wrapper",{"_index":2558,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider/dual",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider/rotation",{"_index":4198,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{}}}],["slider:hover",{"_index":4226,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider_max",{"_index":4546,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sliders",{"_index":1712,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slidervaluechanged",{"_index":2451,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slidervalues",{"_index":4095,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["slidervalues.push(slider",{"_index":4100,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["small",{"_index":32,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SearchableItem.html":{}}}],["small_intestine",{"_index":2356,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["software",{"_index":4834,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1565,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["sort((a",{"_index":1038,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["sortby",{"_index":3747,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortby(searchresults",{"_index":3759,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult",{"_index":3711,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult(this",{"_index":3733,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorted",{"_index":3038,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["sortlexically",{"_index":3712,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically(this",{"_index":3736,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorts",{"_index":3735,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/BlockSizes.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["source.dimension_units",{"_index":1216,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.entityid",{"_index":1223,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.getontologytermoccurences().subscribe(ontologytermsdata",{"_index":2299,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.info",{"_index":1312,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["source.label",{"_index":1226,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object",{"_index":1205,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object.file_format?.startswith('model/gltf",{"_index":1206,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object?.file",{"_index":1224,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object?.file_subpath",{"_index":1225,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object['@id",{"_index":1208,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.pipe",{"_index":2286,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.service",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.service.ts",{"_index":2139,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":2152,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:19",{"_index":2154,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":2143,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:53",{"_index":2145,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:67",{"_index":2148,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:77",{"_index":2144,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:87",{"_index":2149,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:97",{"_index":2147,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.subscribe(data",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["source.worker",{"_index":2162,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.x_dimension",{"_index":1217,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.y_dimension",{"_index":1218,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.z_dimension].map(dim",{"_index":1219,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source/data",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source['@id",{"_index":1209,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sourceboxes",{"_index":1460,"title":{},"body":{"interfaces/Collision.html":{}}}],["sourceid",{"_index":1207,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sourceiri",{"_index":1069,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["sources",{"_index":1261,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["sources(urls",{"_index":4550,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sources.includes(msg.source",{"_index":3517,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sources.map(source",{"_index":1310,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["sourcesfromurls",{"_index":4503,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sourcesfromurls(urls",{"_index":4514,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sourceurls",{"_index":3104,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["space",{"_index":2754,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{}}}],["span')).gettext",{"_index":471,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["spatial",{"_index":83,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spatialentity",{"_index":921,"title":{"interfaces/SpatialEntity.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spatially",{"_index":3217,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["spatialobjectreference",{"_index":1058,"title":{"interfaces/SpatialObjectReference.html":{}},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["spatialplacement",{"_index":1062,"title":{"interfaces/SpatialPlacement.html":{}},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["spatialscenenode",{"_index":585,"title":{"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spec",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":3849,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["specific",{"_index":97,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SearchableItem.html":{},"miscellaneous/typealiases.html":{}}}],["specified",{"_index":3515,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["specifying",{"_index":3498,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["spinner",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["spinneractive",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["spinneroverlaycomponent",{"_index":390,"title":{"components/SpinnerOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["spinneroverlaymodule",{"_index":423,"title":{"modules/SpinnerOverlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["spinning",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1177,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sprint",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1493,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":1494,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":1499,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":1500,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":690,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["stage",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["stagenavcomponent",{"_index":392,"title":{"components/StageNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["stagenavmodule",{"_index":2111,"title":{"modules/StageNavModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["standards",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1945,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["start?.expanded",{"_index":2063,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["start?.opened",{"_index":2062,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["startdrawers",{"_index":1969,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["startdrawers.length",{"_index":1973,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["startdrawers[0",{"_index":1977,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["started",{"_index":4651,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["startexpanded",{"_index":2061,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["starts",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":2316,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["startwith",{"_index":1933,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/OntologySearchComponent.html":{}}}],["stat",{"_index":4140,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.count",{"_index":4138,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.label",{"_index":4139,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["state",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"components/GenderSelectorComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state('closed",{"_index":3343,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('collapsed",{"_index":3348,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('extended",{"_index":3352,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('false",{"_index":2034,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["state('full",{"_index":3353,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('half",{"_index":3349,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('true",{"_index":2035,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["state(`open",{"_index":3342,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state.data.filter(d",{"_index":800,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["state.docollisions",{"_index":805,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["state.nodes[state.root",{"_index":3957,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["state.zoomopacity",{"_index":812,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["statechange",{"_index":3373,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["staterepository",{"_index":2247,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["states",{"_index":1287,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"modules/StoreModule.html":{}}}],["states.every(state",{"_index":2271,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["states[view.id",{"_index":1346,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["static",{"_index":712,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SpatialSceneNode.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["statictiff",{"_index":3571,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["staticzarr",{"_index":3564,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["stats",{"_index":4107,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["status",{"_index":2222,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["stay",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1777,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["step*(5",{"_index":4005,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["still",{"_index":839,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["stomach",{"_index":2360,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["store",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"modules/StoreModule.html":{}}}],["store.forsubjects((subject",{"_index":1113,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["store/ontology/ontology.state",{"_index":3834,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["store/store.module",{"_index":2127,"title":{},"body":{"modules/CoreModule.html":{}}}],["stored",{"_index":4202,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["storemodule",{"_index":2119,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":4387,"title":{},"body":{"modules/StoreModule.html":{}}}],["strategic",{"_index":3269,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["streaming",{"_index":4801,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["string[]>(map",{"_index":2865,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["stroke",{"_index":1412,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["structure",{"_index":2841,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["styilng",{"_index":3034,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["style",{"_index":1564,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["style.margin",{"_index":2005,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["styled",{"_index":2731,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":3395,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["styleurls",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["styling",{"_index":1554,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{}}}],["sub",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":588,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"license.html":{}}}],["subject.id",{"_index":1115,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["subject.next(dataquerystate.completed",{"_index":2276,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sublicense",{"_index":4844,"title":{},"body":{"license.html":{}}}],["subpath",{"_index":4315,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["subscription",{"_index":1924,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["subscriptions",{"_index":1880,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["substantial",{"_index":4856,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":3296,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["subtree",{"_index":3868,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["subtrees",{"_index":3858,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["successful",{"_index":2795,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["such",{"_index":2470,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["suffix",{"_index":3774,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{}}}],["suffix.show",{"_index":4304,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["super",{"_index":2292,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["support",{"_index":3289,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules.html":{}}}],["supported",{"_index":3590,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["supporting",{"_index":3239,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["svg",{"_index":2324,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules.html":{}}}],["swatch",{"_index":1800,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["switch",{"_index":868,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{}}}],["switchmap",{"_index":2256,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["switchmap(query",{"_index":2287,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["switchmap(value",{"_index":3756,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["syncexpanded(other",{"_index":3437,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["syncs",{"_index":3434,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["synonym",{"_index":3811,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["synonymlabels",{"_index":2874,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["synonyms",{"_index":2845,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"interfaces/ValueObject.html":{}}}],["synonymsextractor",{"_index":2863,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsextractor(json",{"_index":2875,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsproperty",{"_index":2862,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["systems",{"_index":3241,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["t",{"_index":1092,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"miscellaneous/typealiases.html":{}}}],["t.x",{"_index":3678,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["t.y",{"_index":3680,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["t.z",{"_index":3682,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tab",{"_index":4160,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["table",{"_index":3843,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["take",{"_index":4156,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["takes",{"_index":1739,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["takewhile",{"_index":3493,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["tap",{"_index":2257,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["tap(linkchildren",{"_index":3890,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["tap(next",{"_index":2288,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["target",{"_index":627,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["target.name",{"_index":1496,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":1211,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["targetboxes",{"_index":1477,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":1489,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetiri",{"_index":1067,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["tealgreen",{"_index":1629,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["team",{"_index":3261,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["technologies",{"_index":79,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["technology",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":1402,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["template",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["templateurl",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["temporary",{"_index":3845,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["term",{"_index":947,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["termdata",{"_index":3927,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["termoccurencesdata",{"_index":2195,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["termoccurencesdata(filter",{"_index":2205,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["termoccurencesdataquerystatus",{"_index":2196,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["terms",{"_index":66,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.body.id",{"_index":1170,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.kidney.id",{"_index":1172,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.left_kidney.id",{"_index":1176,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.right_kidney.id",{"_index":1174,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.spleen.id",{"_index":1178,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["test",{"_index":2270,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["testing",{"_index":2269,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["text",{"_index":537,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["theme",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["themes",{"_index":4431,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["theming",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["theming.gettheme",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["theming.service",{"_index":4403,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":2120,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":164,"title":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}},"body":{"components/AppComponent.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":4404,"title":{},"body":{"modules/ThemingModule.html":{}}}],["thickness",{"_index":4282,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["thin",{"_index":3779,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["this._afterconnected",{"_index":2176,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.completed",{"_index":2295,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.running",{"_index":2307,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.pipe(distinct",{"_index":2220,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._channelconfigs",{"_index":1282,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._expanded",{"_index":3366,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._height",{"_index":1272,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._layers",{"_index":3084,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["this._listdataquerystatus$.next(dataquerystate.completed",{"_index":2294,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._listdataquerystatus$.next(dataquerystate.running",{"_index":2305,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._listdataquerystatus$.pipe(distinct",{"_index":2228,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._loaders",{"_index":1277,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._measuredmargin",{"_index":3393,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._measuredwidth",{"_index":3384,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._onclick",{"_index":645,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this._onhover",{"_index":643,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this._onviewstatechange",{"_index":647,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this._opened",{"_index":3362,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._position",{"_index":3358,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._sources",{"_index":1275,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["this._sources.length",{"_index":4553,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this._sources.map(source",{"_index":4557,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this._termoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":2296,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._termoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":2309,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._termoccurencesdataquerystatus$.pipe(distinct",{"_index":2245,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._width",{"_index":1271,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.addentitiesmany(ids.map((id",{"_index":4632,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.addspatialentity(getspatialentity(store",{"_index":1118,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.addspatialobjectreference(getspatialobjectreference(store",{"_index":1114,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.addspatialplacement(getspatialplacement(store",{"_index":1121,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.aggregatedata",{"_index":2216,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.aggregatedataquerystatus",{"_index":2234,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.animationsenabled",{"_index":2052,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.applyfilter({highlightedentities",{"_index":886,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.applyfilter({ontologyterms",{"_index":872,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.applyfilters.emit(this.filters",{"_index":2600,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.applythemeclass(theme",{"_index":4443,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.applythemeclass(this.theme",{"_index":4442,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.atscrollbottom",{"_index":4137,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.blocksizes",{"_index":522,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{}}}],["this.bodycanvas.nativeelement",{"_index":852,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui",{"_index":853,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui.nodeclick$.subscribe(async",{"_index":867,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui.setscene(scene",{"_index":866,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyuilayer",{"_index":641,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.bodyuilayer.setstate({data",{"_index":676,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.bodyuilayer.state",{"_index":670,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.bottom",{"_index":1860,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["this.brightnesshigh",{"_index":1768,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.brightnesslow",{"_index":1771,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.brightnessslideroptions",{"_index":1780,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.cdr.markforcheck",{"_index":1963,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.channel",{"_index":1954,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.asobservable",{"_index":3523,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.closed",{"_index":3525,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.complete",{"_index":3528,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.next",{"_index":3505,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.sendmessage",{"_index":1961,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.channelconfigs",{"_index":1323,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.clear",{"_index":4555,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.closeviewer.emit",{"_index":2967,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["this.color",{"_index":3014,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme",{"_index":1558,"title":{},"body":{"components/ColorBarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["this.colorscheme.colors",{"_index":3015,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme.positions",{"_index":3016,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme.type",{"_index":3013,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.component",{"_index":4445,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.content",{"_index":1965,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":1964,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content1.first",{"_index":1951,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content1.length",{"_index":1953,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content2.first",{"_index":1952,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.contentsvisible",{"_index":2547,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.creategraph",{"_index":1110,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.createlayerconfigs",{"_index":1315,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.createselectionlabel(ontologyselection",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createvivviews",{"_index":1304,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.ctx.patchstate",{"_index":4641,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.ctx.setstate(ontology",{"_index":3959,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["this.cursor",{"_index":650,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.data",{"_index":3129,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.data.filter$.subscribe(async",{"_index":862,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.data.querystatus$.pipe",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.data.resulttype",{"_index":4158,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["this.data.updatefilter",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["this.datasource",{"_index":2163,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource.connect(this.dboptions",{"_index":2177,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasourceservice.datasource.connect",{"_index":864,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.datasourceservice.datasource.getscene(f",{"_index":865,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.datasourceservice.getimageviewerdata(result['@id",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["this.db.getspatialentities(filter).map((entity",{"_index":1200,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.db.graph.gettransformationmatrix(sourceid",{"_index":1210,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.db.store",{"_index":1111,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.dboptions",{"_index":2165,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.deck",{"_index":657,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.finalize",{"_index":1302,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.props.viewstate",{"_index":679,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.deck.redraw(true",{"_index":1307,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.setprops",{"_index":659,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.deck.setprops(props",{"_index":1349,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.setprops({viewstate",{"_index":708,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.defaulttheme",{"_index":4440,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.deferred",{"_index":3335,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":3163,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialogref.close",{"_index":3190,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.drawer",{"_index":4488,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.drawer.position",{"_index":4486,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.drawers",{"_index":2048,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":1959,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.drawers.toarray",{"_index":1968,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.element.nativeelement",{"_index":3385,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.entities$.pipe",{"_index":4609,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.entities[id",{"_index":4633,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.expanded",{"_index":3418,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":3426,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.expandedstate",{"_index":3406,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.expandedstate2",{"_index":3378,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.faded",{"_index":2067,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.filter",{"_index":889,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filter$.pipe(querydata",{"_index":2215,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.filter?.highlightedentities",{"_index":883,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filterchange.emit(newfilter",{"_index":890,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filteredresults",{"_index":3753,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.filters",{"_index":2598,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(filters",{"_index":2638,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(this.filters",{"_index":2599,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.filtersvisible",{"_index":2637,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.formatlabel(node.label",{"_index":3906,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.formcontrol.reset",{"_index":3768,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.formcontrol.valuechanges",{"_index":3752,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.genderchanged.emit(this.ismale",{"_index":2696,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["this.get(s",{"_index":1030,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.getarguments(definition",{"_index":2809,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.getautocolor(autocolorindex",{"_index":4640,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.getbrightness",{"_index":3022,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.getchildren",{"_index":3880,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getchildren.bind(this",{"_index":3881,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getentityscenenodes(filter",{"_index":1228,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getids(filter)].map((s",{"_index":1029,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.getindexofmatch(label",{"_index":3911,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getindexofmatch(node.label",{"_index":3905,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":3514,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.getmethodname(definition",{"_index":2807,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.getreferencebody(filter",{"_index":1167,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getreferenceorgans(filter).map((organ",{"_index":1181,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getreferencescenenodes(filter",{"_index":1227,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(body",{"_index":1179,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(entity",{"_index":1201,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(getspatialentity(store",{"_index":1183,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(organ",{"_index":1182,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getstate().filter",{"_index":2304,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.graph",{"_index":999,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{}}}],["this.graph.creategraph",{"_index":1025,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.graph.getedgeattribute(source",{"_index":1135,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.hasnode(sourceiri",{"_index":1128,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.hasnode(targetiri",{"_index":1129,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergedirectededge(placement.source['@id",{"_index":1125,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergenode(entity['@id",{"_index":1123,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergenode(ref['@id",{"_index":1124,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.handlemessage(msg",{"_index":1957,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.highvalue",{"_index":2531,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.http.get(environment.ontologyurl",{"_index":3883,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.initialized",{"_index":3334,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initialized.set",{"_index":3399,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initialized.valueof",{"_index":3407,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initialized.wait",{"_index":3430,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initializedeck(reqprops",{"_index":1290,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.initializesliderpopover",{"_index":2548,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isdemo",{"_index":4552,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.isloading",{"_index":3131,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.ismale",{"_index":2695,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["this.issliderinitialized",{"_index":2545,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isslideropen",{"_index":2546,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.lasthovered",{"_index":688,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.layer",{"_index":1787,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.brightness[0",{"_index":1765,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.brightness[1",{"_index":1769,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.transparency",{"_index":1772,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layerchange.emit(layer",{"_index":3057,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["this.layerchange.emit(new",{"_index":3053,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["this.layerchange.emit(this.layer",{"_index":1784,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layerconfigs",{"_index":1298,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layerfilter",{"_index":1352,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layers",{"_index":1297,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layers$.pipe",{"_index":4605,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.left",{"_index":4273,"title":{},"body":{"components/SideSelectorComponent.html":{}}}],["this.leftmargin",{"_index":2059,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.listdata",{"_index":2225,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.listdataquerystatus",{"_index":2233,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.loaders[0",{"_index":4103,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["this.lookup(nodes",{"_index":3897,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.lowvalue",{"_index":2529,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.margin2",{"_index":3381,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.measuredmargin",{"_index":3380,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.measuredwidth",{"_index":3431,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.messages",{"_index":3522,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.messages.pipe(filter(msg",{"_index":3511,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.nextmessageid",{"_index":3506,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.nodeclicksubject.next({node",{"_index":692,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":586,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":689,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":590,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":687,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":593,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.onleft",{"_index":3997,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["this.onright",{"_index":3998,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["this.ontologyselectionlabel",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ontologyservice.filter(value",{"_index":3757,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologyservice.loadontology",{"_index":3750,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologystate.nodes$.pipe",{"_index":3896,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologystate.rootnode",{"_index":3879,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologystate.setontology(ontology",{"_index":3895,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologyterms",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ontologytermsfulldata",{"_index":2300,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.onviewstatechange",{"_index":1353,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.opened",{"_index":3404,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.openedchange.emit(this.opened",{"_index":3422,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.openedstate",{"_index":3405,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.openimageviewer.emit",{"_index":4159,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["this.options",{"_index":1003,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DualSliderComponent.html":{}}}],["this.options.ccfowlurl",{"_index":1006,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.ceil",{"_index":2537,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.floor",{"_index":2536,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.hubmapassetsurl",{"_index":1016,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataservice",{"_index":1014,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataurl",{"_index":1010,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataurl.endswith('.jsonld",{"_index":1011,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapportalurl",{"_index":1017,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmaptoken",{"_index":1015,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.optionschanged",{"_index":2525,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionsvisible",{"_index":2392,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.organchanged.emit(icon.name",{"_index":4011,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["this.organlist.length",{"_index":4006,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["this.original.children.length",{"_index":2675,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.original.label",{"_index":2674,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.overlayref",{"_index":2521,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.detach",{"_index":2544,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.dispose",{"_index":2538,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.patchstate",{"_index":2301,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.popupvisible",{"_index":1857,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["this.position",{"_index":3357,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.props",{"_index":794,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.registericonimpl(definition",{"_index":2798,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.registericonimpl(safedef",{"_index":2793,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.registry",{"_index":2802,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.removebox",{"_index":2639,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.removeentitiesmany(this.ids",{"_index":4631,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.resetchannelconfigs",{"_index":1314,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.resolve",{"_index":3311,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.result",{"_index":3130,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.rightmargin",{"_index":2060,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.rootnode",{"_index":3878,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.rotation",{"_index":4210,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.rotationchange.emit(this.rotation",{"_index":4211,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.scene",{"_index":1001,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.scene.getscene(filter",{"_index":1044,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.schemechange.emit(this.colorscheme",{"_index":4254,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemechanged(0",{"_index":4251,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeidx",{"_index":4253,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions",{"_index":4248,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions.filter(scheme",{"_index":4249,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions[idx",{"_index":4252,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.selected.emit(node",{"_index":3767,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.selectedorgan",{"_index":4008,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["this.selection",{"_index":1406,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selection.filter(selection",{"_index":1407,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.selectionchange.emit(this.selection",{"_index":1408,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selectionchange.emit(value",{"_index":2393,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.sendtoggle",{"_index":3408,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.sensor",{"_index":4566,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.sensor.detach",{"_index":4569,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.setsources(reqprops.sources",{"_index":1294,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.setsourceurls(result",{"_index":3132,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.setstate({data",{"_index":795,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.settheme(this.defaulttheme",{"_index":4444,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.side",{"_index":4364,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.sidechanged.emit(this.left",{"_index":4274,"title":{},"body":{"components/SideSelectorComponent.html":{}}}],["this.sidechanged.emit(this.side",{"_index":4365,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.slicesdata",{"_index":4291,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["this.snapshot",{"_index":4629,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.sortbysynonymresult",{"_index":3760,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.sortlexically",{"_index":3761,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.source",{"_index":3507,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.source.getaggregateresults(filter",{"_index":2308,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.source.getlistresults(filter",{"_index":2306,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.source.getontologytermoccurences(filter",{"_index":2310,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.sourcesfromurls(urls",{"_index":4551,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.sourceurls",{"_index":3134,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.state",{"_index":798,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.state$.pipe(map(state",{"_index":3954,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["this.state$.pipe(pluck('embedded",{"_index":4038,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["this.state$.pipe(pluck('filter",{"_index":2223,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.state$.pipe(pluck('homeurl",{"_index":4040,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["this.state.createlayers(channels",{"_index":3133,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.statechange.emit",{"_index":3432,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.states",{"_index":1299,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.store",{"_index":998,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.store.getquads(datafactory.namednode(id",{"_index":1027,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.store.selectsnapshot(ontologystate",{"_index":3916,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.store.size",{"_index":1004,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":4485,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":2045,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":1956,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.subscriptions.unsubscribe",{"_index":1966,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.syncexpanded(other",{"_index":3433,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.termoccurencesdata",{"_index":2242,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.termoccurencesdataquerystatus",{"_index":2235,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.theme",{"_index":4441,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.theming.settheme(this.theming.gettheme",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":3364,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggle(false",{"_index":3402,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggle(true",{"_index":3401,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":3368,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggleexpanded(false",{"_index":3414,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggleexpanded(true",{"_index":3411,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.transparencyslideroptions",{"_index":1782,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.tree.expandandselect(ontologynode",{"_index":3942,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.update",{"_index":1300,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatedeckprops",{"_index":1328,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updateentitiesmany",{"_index":4642,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.updateentitiesmany(changes",{"_index":4647,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.updatefaded",{"_index":2050,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.updatelayer",{"_index":1767,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.updatelayers",{"_index":1327,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["this.updatemargin(position",{"_index":2057,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.updatesources",{"_index":4556,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.updatestate((_view",{"_index":1366,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatestate((view",{"_index":1305,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatestate(view",{"_index":1316,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updateviews",{"_index":1326,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.validatedrawers",{"_index":1960,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.valuerange",{"_index":2533,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[0",{"_index":2534,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[1",{"_index":2535,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valueschange.emit(this.blocksizes",{"_index":524,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{}}}],["this.valueschange.emit(this.slicesdata",{"_index":4292,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["this.view3d",{"_index":4366,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.view3dchanged.emit(this.view3d",{"_index":4367,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.viewer",{"_index":4560,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.finalize",{"_index":4570,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.setsize(width",{"_index":4568,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer?.clear",{"_index":4581,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewervisible",{"_index":3128,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.views",{"_index":1329,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews",{"_index":1296,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews.map(viv",{"_index":1331,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews.reduce((states",{"_index":1344,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.width",{"_index":3379,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.zoomto(node",{"_index":675,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["those",{"_index":3509,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["through",{"_index":3267,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["throw",{"_index":1948,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"modules/CoreModule.html":{},"interfaces/OMEZarrInfo.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{}}}],["throwduplicatedrawerserror('end",{"_index":1976,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["throwduplicatedrawerserror('start",{"_index":1974,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["throwduplicatedrawerserror(position",{"_index":1944,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["thrown",{"_index":1943,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["throws",{"_index":1939,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["thumb",{"_index":4227,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["thumbnails",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["thumbnailurl",{"_index":35,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["thymus",{"_index":2362,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["tiff",{"_index":3565,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["tiff2",{"_index":3566,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["tiffinfo",{"_index":1243,"title":{"interfaces/TiffInfo.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["tiffinfo).url",{"_index":4558,"title":{},"body":{"components/ViewerComponent.html":{}}}],["time",{"_index":1390,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/OldRuiData.html":{}}}],["timing",{"_index":2070,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["tissue",{"_index":29,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/Collision.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["tissue_object_rotation",{"_index":3607,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_object_size",{"_index":3608,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_position_mass_point",{"_index":3609,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_position_vertices",{"_index":3610,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissues",{"_index":25,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["title",{"_index":527,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["tmc",{"_index":78,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["todo",{"_index":857,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["toeuler",{"_index":1077,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["toeuler(fromeuler(r_rad[1",{"_index":1101,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["toggle",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"modules/SideSelectorModule.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["toggle(opened",{"_index":3403,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["togglebuttoncomponent",{"_index":395,"title":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["toggled",{"_index":2053,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["toggleexpanded(expanded",{"_index":3417,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["togglefiltervisible",{"_index":2624,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["toggleoptions",{"_index":2379,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggles",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["togglescheme",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["togglesliderpopover",{"_index":2452,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["toggling",{"_index":4356,"title":{},"body":{"components/StageNavComponent.html":{}}}],["token",{"_index":990,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["tool",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["tools",{"_index":3199,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["tooltip",{"_index":758,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["top",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["toradians",{"_index":1070,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["tort",{"_index":4874,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1980,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/DualSliderComponent.html":{}}}],["track",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/StageNavComponent.html":{}}}],["trackbyid",{"_index":3031,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["trackbyid(layer",{"_index":3046,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["tracks",{"_index":3742,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["transform",{"_index":530,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/CCFSpatialScene.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["transform.scale(scale",{"_index":1222,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["transformmatrix",{"_index":757,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["transition",{"_index":2030,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["transition('closed",{"_index":3344,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["transition('false",{"_index":2036,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["translated",{"_index":3627,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["translatey",{"_index":2421,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["translation",{"_index":4322,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["translation_units",{"_index":3683,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["transparency",{"_index":1724,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["transparency(value",{"_index":1773,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["transparencychanged",{"_index":1719,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["transparencyslideroptions",{"_index":1717,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["traversescene(child",{"_index":1456,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(gltfscene",{"_index":1480,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":1436,"title":{},"body":{"interfaces/Collision.html":{}}}],["tree",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tree'},{'name",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["tree.component",{"_index":3941,"title":{},"body":{"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{}}}],["tree.module",{"_index":3697,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["tree.module.ts",{"_index":3963,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["tree/ontology",{"_index":3696,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["trigger",{"_index":2031,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["trigger('expandcollapse",{"_index":3347,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["trigger('fadeinout",{"_index":2033,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["trigger('openclose",{"_index":3341,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["triggered",{"_index":3732,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["triple",{"_index":924,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["true",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/GenderSelectorComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["try",{"_index":2810,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["tslib",{"_index":4807,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":744,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tslint:disable",{"_index":654,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/Collision.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["tslint:enable",{"_index":776,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{}}}],["tuned",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":1967,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["two",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["tx",{"_index":1130,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["tx.translate(t).rotatexyz(r).scale(s",{"_index":1108,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":4881,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1342,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"interfaces/TiffInfo.html":{}}}],["types",{"_index":977,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/typealiases.html":{}}}],["types.ts",{"_index":4310,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["typing",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":749,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["u",{"_index":1249,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["u2cdk114886",{"_index":3278,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ui",{"_index":561,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["ui'},{'name",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["ui.component",{"_index":896,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":829,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.scss",{"_index":828,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts",{"_index":825,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:18",{"_index":836,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:23",{"_index":842,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:25",{"_index":850,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:27",{"_index":835,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:31",{"_index":846,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:71",{"_index":845,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.module",{"_index":555,"title":{},"body":{"modules/BodyModule.html":{}}}],["ui.module.ts",{"_index":895,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.ts",{"_index":558,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["ui.ts:103",{"_index":604,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:121",{"_index":601,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:128",{"_index":606,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:27",{"_index":584,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:28",{"_index":582,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:30",{"_index":589,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:31",{"_index":592,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:32",{"_index":595,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:34",{"_index":587,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:35",{"_index":591,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:36",{"_index":594,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:38",{"_index":583,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:39",{"_index":580,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:75",{"_index":609,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:89",{"_index":611,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui/body",{"_index":554,"title":{},"body":{"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{}}}],["ui/src/lib/body",{"_index":557,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ui/src/lib/spatial",{"_index":1429,"title":{},"body":{"interfaces/Collision.html":{}}}],["uievent",{"_index":4127,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["unchecked",{"_index":1403,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["undefined",{"_index":684,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["under",{"_index":2326,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent.html":{}}}],["underline",{"_index":2403,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["underlying",{"_index":2153,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["understanding",{"_index":3207,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["unique",{"_index":3050,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OntologyNode.html":{}}}],["units",{"_index":4313,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["university",{"_index":3256,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["unknown",{"_index":699,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{}}}],["unlike",{"_index":2317,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["unpickable",{"_index":751,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["unsafe",{"_index":759,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/Collision.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["unselected",{"_index":3052,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["unset",{"_index":2942,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["until",{"_index":2505,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"changelog.html":{}}}],["up",{"_index":1729,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["update",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["updateblocksizes",{"_index":485,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["updateblocksizes(input",{"_index":497,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{}}}],["updatechannelconfigs",{"_index":2879,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatechannelconfigs(configs",{"_index":1318,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updated",{"_index":506,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["updatedeckprops",{"_index":2880,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatedeckprops(props",{"_index":1348,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatefaded",{"_index":2001,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["updatefilter",{"_index":2197,"title":{},"body":{"injectables/DataState.html":{},"components/FiltersContentComponent.html":{}}}],["updatefilter(filter",{"_index":2207,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["updatefilter(value",{"_index":2594,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updategender",{"_index":2682,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["updategender(selection",{"_index":2693,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["updatelayer",{"_index":1720,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/ViewerState.html":{}}}],["updatelayer(id",{"_index":4603,"title":{},"body":{"injectables/ViewerState.html":{}}}],["updatelayer(updates",{"_index":1745,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["updatelayers",{"_index":1333,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["updatemargin",{"_index":2002,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["updatemargin(position",{"_index":2025,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["updates",{"_index":501,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/GenderSelectorComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["updateside",{"_index":4270,"title":{},"body":{"components/SideSelectorComponent.html":{},"components/StageNavComponent.html":{}}}],["updateside(selection",{"_index":4272,"title":{},"body":{"components/SideSelectorComponent.html":{},"components/StageNavComponent.html":{}}}],["updateslicesdata",{"_index":4294,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["updateslicesdata(input",{"_index":4290,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["updatesources",{"_index":4504,"title":{},"body":{"components/ViewerComponent.html":{}}}],["updatestate",{"_index":1340,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatestate(args",{"_index":2909,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updateview",{"_index":4349,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateview(selection",{"_index":4361,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateviews",{"_index":1330,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updating",{"_index":3043,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["upgraded",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":2465,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["upperbound",{"_index":1466,"title":{},"body":{"interfaces/Collision.html":{}}}],["upperbound[i",{"_index":1473,"title":{},"body":{"interfaces/Collision.html":{}}}],["url",{"_index":34,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["url).map(url",{"_index":4583,"title":{},"body":{"components/ViewerComponent.html":{}}}],["urls",{"_index":2789,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ViewerComponent.html":{}}}],["urls.filter(url",{"_index":4582,"title":{},"body":{"components/ViewerComponent.html":{}}}],["use",{"_index":1823,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"injectables/DataSourceService.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["used",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["useful",{"_index":1941,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["user",{"_index":1388,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/StageNavComponent.html":{},"changelog.html":{},"index.html":{}}}],["users",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["util/prefixes",{"_index":1080,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["utils",{"_index":963,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["utils.ts",{"_index":3599,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["uuid",{"_index":3631,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["v0.5.0",{"_index":3600,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["v1.0.0",{"_index":3222,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["v1.selectionorder",{"_index":3087,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["v2",{"_index":3086,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["v2.selectionorder",{"_index":3088,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["val",{"_index":4001,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["val+'px",{"_index":4004,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["valid",{"_index":4285,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["validatedrawers",{"_index":1883,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["validates",{"_index":1908,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["validation",{"_index":3743,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["value",{"_index":20,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"miscellaneous/enumerations.html":{}}}],["value.tolowercase",{"_index":3898,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["valuechanges",{"_index":3751,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valuechanges.pipe",{"_index":3754,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valueextractor",{"_index":2853,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valueobject",{"_index":2840,"title":{"interfaces/ValueObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valueof",{"_index":3308,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["valueorgenerator",{"_index":1247,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["valueproperty",{"_index":2852,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valuerange",{"_index":2453,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["values",{"_index":492,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["valueschange",{"_index":487,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["var",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["variable",{"_index":2104,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["variables",{"_index":1545,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["vec3",{"_index":1433,"title":{},"body":{"interfaces/Collision.html":{}}}],["vec3(...lowerbound.map((n",{"_index":1471,"title":{},"body":{"interfaces/Collision.html":{}}}],["vec3(...upperbound.map((n",{"_index":1474,"title":{},"body":{"interfaces/Collision.html":{}}}],["version",{"_index":3622,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["vertical",{"_index":4585,"title":{},"body":{"components/ViewerComponent.html":{}}}],["vertices",{"_index":3614,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["via",{"_index":4204,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/ViewerComponent.html":{}}}],["video",{"_index":3251,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["view",{"_index":1234,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchResult.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["view.filterviewstate(argsgenerator(view",{"_index":1347,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.getlayers",{"_index":1337,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.id",{"_index":1306,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.initialviewstate",{"_index":1317,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view3d",{"_index":4350,"title":{},"body":{"components/StageNavComponent.html":{}}}],["view3dchanged",{"_index":4351,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild",{"_index":851,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["viewchild('bodycanvas",{"_index":848,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["viewchild('canvas",{"_index":4520,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewchild('content",{"_index":1842,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["viewchild('popover",{"_index":2503,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(cdkportal",{"_index":2507,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(ontologytreecomponent",{"_index":3938,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["viewchildren",{"_index":1932,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["viewchildren(contentcomponent",{"_index":1918,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["viewed",{"_index":3969,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["viewer",{"_index":48,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["viewer.channelnames",{"_index":4575,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.close",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer.component",{"_index":4590,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewer.component.html",{"_index":4500,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.component.scss",{"_index":4499,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.loaders.some((loader",{"_index":4572,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.module",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.module.ts",{"_index":3100,"title":{},"body":{"modules/ImageViewerModule.html":{}}}],["viewer.open(data",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer.setsources(sources",{"_index":4571,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.ts",{"_index":1231,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer.ts:110",{"_index":2896,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:114",{"_index":2903,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:133",{"_index":2904,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:148",{"_index":2906,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:16",{"_index":4047,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:168",{"_index":2895,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:169",{"_index":2894,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:171",{"_index":2905,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:181",{"_index":2911,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:185",{"_index":2908,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:195",{"_index":2910,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:208",{"_index":2907,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:212",{"_index":2897,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:231",{"_index":2902,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:24",{"_index":4062,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:244",{"_index":2899,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:250",{"_index":2901,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:51",{"_index":4061,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:64",{"_index":2889,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:66",{"_index":2913,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:67",{"_index":2915,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:68",{"_index":2886,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:69",{"_index":2883,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:71",{"_index":2917,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:72",{"_index":2919,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:73",{"_index":2885,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:74",{"_index":2884,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:76",{"_index":2921,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:77",{"_index":2923,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:78",{"_index":2882,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:80",{"_index":2892,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:81",{"_index":2891,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:82",{"_index":2888,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:83",{"_index":2887,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:84",{"_index":2890,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:86",{"_index":2881,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:99",{"_index":2893,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.updatechannelconfigs(configs",{"_index":4580,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/image",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["viewer/src/lib/image",{"_index":1230,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/src/lib/loader.ts",{"_index":3557,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/src/lib/picture",{"_index":4044,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/viewer.module",{"_index":3101,"title":{},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["viewer/viewer.state",{"_index":4383,"title":{},"body":{"modules/StoreModule.html":{}}}],["viewer/viewer/viewer.component.ts",{"_index":4498,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:121",{"_index":4513,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:126",{"_index":4517,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:138",{"_index":4516,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:156",{"_index":4511,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:160",{"_index":4515,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:52",{"_index":4509,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:63",{"_index":4525,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:66",{"_index":4519,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:69",{"_index":4508,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:73",{"_index":4527,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:74",{"_index":4518,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:76",{"_index":4510,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:78",{"_index":4521,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:80",{"_index":4522,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:81",{"_index":4524,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:82",{"_index":4507,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:86",{"_index":4512,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.module.ts",{"_index":4589,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewercomponent",{"_index":396,"title":{"components/ViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SideSelectorComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["viewermodule",{"_index":3099,"title":{"modules/ViewerModule.html":{}},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["viewerstate",{"_index":3109,"title":{"injectables/ViewerState.html":{}},"body":{"components/ImageViewerPopoverComponent.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["viewerstatemodel",{"_index":4624,"title":{"interfaces/ViewerStateModel.html":{}},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["viewervisible",{"_index":3105,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["viewid",{"_index":1256,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewing",{"_index":3103,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"components/StageNavComponent.html":{}}}],["viewport",{"_index":1235,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ResultsBrowserComponent.html":{}}}],["viewportid",{"_index":1363,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["views",{"_index":638,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"changelog.html":{}}}],["viewstate",{"_index":660,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewstateprops",{"_index":617,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["viewstates",{"_index":1338,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viridis",{"_index":1678,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["virtual",{"_index":4108,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["visibility",{"_index":1848,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visible",{"_index":1214,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visitor",{"_index":1438,"title":{},"body":{"interfaces/Collision.html":{}}}],["visitor(scene",{"_index":1453,"title":{},"body":{"interfaces/Collision.html":{}}}],["visual",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["visualizing",{"_index":1610,"title":{},"body":{"interfaces/ColorScheme-1.html":{}}}],["vitessce",{"_index":3575,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"changelog.html":{}}}],["viv.getdeckglview",{"_index":1332,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["vivview",{"_index":1237,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["vivviews",{"_index":1285,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["void",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/GenderSelectorComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SideSelectorComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["vu",{"_index":3617,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["w",{"_index":4320,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["w_rotation",{"_index":4321,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["wait",{"_index":3309,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["waiting",{"_index":2933,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["waits",{"_index":3427,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["warning",{"_index":4584,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["warranties",{"_index":4862,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4858,"title":{},"body":{"license.html":{}}}],["way",{"_index":4131,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["webgl2",{"_index":1355,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["webkit",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/RotationSliderComponent.html":{}}}],["week",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":528,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["well",{"_index":3042,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["whenever",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["whether",{"_index":82,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"license.html":{}}}],["white",{"_index":1413,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["whole",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["wholebody",{"_index":1165,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["whose",{"_index":3719,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["width",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["widths",{"_index":3435,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["window",{"_index":3136,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["window.innerheight",{"_index":1861,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["window.open(this.data.resulturl",{"_index":4161,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["wireframe",{"_index":752,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["wireframes",{"_index":803,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["within",{"_index":3931,"title":{},"body":{"components/OntologySelectionComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["without",{"_index":1920,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["won't",{"_index":3848,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["work",{"_index":3254,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["workaround",{"_index":3445,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["worker",{"_index":2159,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["worker('./data",{"_index":2161,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["worldmatrix",{"_index":1437,"title":{},"body":{"interfaces/Collision.html":{}}}],["wrap",{"_index":1417,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/DataSourceService.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["wrap(worker",{"_index":2164,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["wrapped",{"_index":1917,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["wrapper",{"_index":560,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["wrapper/container",{"_index":2561,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["wrapping",{"_index":1921,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["x",{"_index":513,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"interfaces/OldRuiData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_dimension",{"_index":3653,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_rotation",{"_index":3667,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_scaling",{"_index":3662,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_translation",{"_index":3677,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["xyz",{"_index":3674,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["xyz').tovector",{"_index":1104,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["y",{"_index":514,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/OldRuiData.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_dimension",{"_index":3655,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_rotation",{"_index":3669,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_scaling",{"_index":3663,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_translation",{"_index":3679,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["yes",{"_index":928,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/OntologySearchComponent.html":{}}}],["youtube",{"_index":3252,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["z",{"_index":516,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/BlockSizes.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["z_dimension",{"_index":3657,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_rotation",{"_index":3671,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_scaling",{"_index":3664,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_translation",{"_index":3681,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["zarr",{"_index":3561,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["zarrinfo",{"_index":1244,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/typealiases.html":{}}}],["zone.js",{"_index":4809,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SideSelectorModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["zoombasedopacity",{"_index":755,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["zoomopacity",{"_index":669,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomto",{"_index":576,"title":{},"body":{"classes/BodyUI.html":{}}}],["zoomto(node",{"_index":610,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["zoomtoonload",{"_index":756,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AggregateResult.html":{"url":"interfaces/AggregateResult.html","title":"interface - AggregateResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AggregateResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Aggregate query result. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Aggregate value. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Queried field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main angular component that all the other components branch off from.\nIt is in charge of the header and drawer components who have many sub-components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelectionLabel\n                            \n                            \n                                    Readonly\n                                ontologyTerms$\n                            \n                            \n                                    Readonly\n                                spinnerActive$\n                            \n                            \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ontologySelectionLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'body'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                        Used to keep track of the ontology label to be passed down to the\nresults-browser component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ontologyTerms$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            spinnerActive$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        Emits true whenever the overlay spinner should activate. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            string\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ListResult } from 'ccf-database';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\n\nimport { OntologySelection } from './core/models/ontology-selection';\nimport { DataSourceService } from './core/services/data-source/data-source.service';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { DataQueryState, DataState } from './core/store/data/data.state';\nimport { FiltersPopoverComponent } from './modules/filters/filters-popover/filters-popover.component';\nimport { ImageViewerPopoverComponent } from './modules/image-viewer/image-viewer-popover/image-viewer-popover.component';\nimport { DrawerComponent } from './shared/components/drawer/drawer/drawer.component';\n\n/**\n * This is the main angular component that all the other components branch off from.\n * It is in charge of the header and drawer components who have many sub-components.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Used to keep track of the ontology label to be passed down to the\n   * results-browser component.\n   */\n  ontologySelectionLabel = 'body';\n\n  /** Emits true whenever the overlay spinner should activate. */\n  readonly spinnerActive$ = this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  );\n\n  readonly ontologyTerms$: Observable;\n\n  /**\n   * Creates an instance of app component.\n   *\n   * @param data The data state.\n   */\n  constructor(readonly data: DataState, readonly dataSourceService: DataSourceService, readonly theming: ThemingService) {\n    data.listData$.subscribe();\n    data.aggregateData$.subscribe();\n    data.termOccurencesData$.subscribe();\n    this.ontologyTerms$ = data.filter$.pipe(pluck('ontologyTerms'));\n  }\n\n  /**\n   * Resets the drawers and filter components to their default state.\n   * @param left The left drawer component gets passed in so we can call it's methods to control it's state\n   * @param right The right drawer component gets passed in so we can call it's methods to control it's state\n   * @param filterbox The filter's popover component gets passed in so we can control it's popover's state\n   */\n  reset(\n    left: DrawerComponent,\n    right: DrawerComponent,\n    filterbox: FiltersPopoverComponent,\n    viewer: ImageViewerPopoverComponent\n  ): void {\n    viewer.close();\n    left.open();\n    left.closeExpanded();\n    right.open();\n    right.closeExpanded();\n    filterbox.removeBox();\n  }\n\n  /**\n   * Fetches relevant data from the database and calls the open function on the image viewer with the data\n   * @param viewer The image viewer component\n   * @param iri URL containing the image data\n   */\n  openViewer(viewer: ImageViewerPopoverComponent, result: ListResult): void {\n    const source = this.dataSourceService.getImageViewerData(result['@id']);\n    source.subscribe(data => viewer.open(data, result));\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.theming.setTheme(this.theming.getTheme() === 'light-theme' ? 'dark-theme' : 'light-theme');\n  }\n\n  /**\n   * Captures changes in the ontologySelection and uses them to update the results-browser label\n   * and the filter object in the data store.\n   * @param ontologySelection the list of currently selected organ nodes\n   */\n  ontologySelected(ontologySelection: OntologySelection[]): void {\n    if (!!ontologySelection) {\n      this.data.updateFilter({ ontologyTerms: ontologySelection.map(selection => selection.id)});\n      this.ontologySelectionLabel = this.createSelectionLabel(ontologySelection);\n      return;\n    }\n\n    this.data.updateFilter({ ontologyTerms: [] });\n    this.ontologySelectionLabel = '';\n  }\n\n  /**\n   * Creates selection label for the results-browser to display based on an\n   * array of selected ontology nodes.\n   */\n  createSelectionLabel(ontolgySelection: OntologySelection[]): string{\n    if (ontolgySelection.length === 0){\n      return '';\n    }\n\n    if (ontolgySelection.length === 1){\n      return ontolgySelection[0].label;\n    }\n\n    let selectionString = '';\n    ontolgySelection.forEach((selection, index) => {\n      selectionString += selection.label;\n\n      // Don't add a comma if it's the last item in the array.\n      if (index  0;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n  \n    \n      \n      \n    \n    \n      \n        \n        \n          {{ right.expanded ? 'fullscreen_exit' : 'fullscreen' }}\n        \n        \n          {{ theming.getTheme() === 'light-theme' ? 'brightness_2' : 'brightness_5' }}\n        \n      \n      \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .ccf-app {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n\n  ccf-drawer-container {\n    flex-grow: 1;\n    position: fixed;\n    top: 4rem;\n    height: 100%;\n    width: 100%;\n    opacity: 1;\n\n    ccf-drawer-content {\n      overflow: hidden;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    ccf-drawer {\n      width: 28.5rem;\n\n      .drawer-icons {\n        display: flex;\n        padding-left: 1.5rem;\n\n        .scheme-toggle {\n          mat-icon {\n            font-size: 2rem !important;\n          }\n        }\n\n        .button {\n          width: 3rem;\n          height: 3rem;\n          padding: 0;\n          background: none;\n          border: none;\n          cursor: pointer;\n          outline: none;\n\n          mat-icon {\n            width: 100%;\n            height: 100%;\n            font-size: 2.5rem;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n        }\n      }\n    }\n\n    .left-drawer {\n      ::ng-deep .cff-drawer-inner-container {\n        height: calc(100% - 5.5rem);\n      }\n    }\n  }\n}\n\n::-webkit-scrollbar {\n  width: 7.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ right.expanded ? \\'fullscreen_exit\\' : \\'fullscreen\\' }}                          {{ theming.getTheme() === \\'light-theme\\' ? \\'brightness_2\\' : \\'brightness_5\\' }}                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent-1.html":{"url":"components/AppComponent-1.html","title":"component - AppComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n\n  \n    \n    \n  \n  \n    \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n\n  ccf-drawer-container {\n    flex-grow: 1;\n    position: fixed;\n    top: 4rem;\n    height: 100%;\n    width: 100%;\n    opacity: 1;\n\n    ccf-drawer-content {\n      overflow: hidden;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    ccf-drawer {\n      width: 25.5rem;\n    }\n  }\n}\n\n::-webkit-scrollbar {\n  width: 7.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBodyModule\n\nBodyModule\n\nAppModule -->\n\nBodyModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nAppModule -->\n\nImageViewerModule->AppModule\n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nAppModule -->\n\nInfoDialogModule->AppModule\n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BodyModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            FiltersPopoverModule\n                        \n                        \n                            ImageViewerModule\n                        \n                        \n                            InfoDialogModule\n                        \n                        \n                            OntologyExplorationModule\n                        \n                        \n                            ResultsBrowserModule\n                        \n                        \n                            SpinnerOverlayModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { BodyModule } from './modules/body/body.module';\nimport { FiltersPopoverModule } from './modules/filters/filters-popover/filters-popover.module';\nimport { ImageViewerModule } from './modules/image-viewer/image-viewer.module';\nimport { InfoDialogModule } from './modules/info/info-dialog/info-dialog.module';\nimport { OntologyExplorationModule } from './modules/ontology-exploration/ontology-exploration.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\nimport { DualSliderModule } from './shared/components/dual-slider/dual-slider.module';\nimport { ResultsBrowserModule } from './modules/results-browser/results-browser/results-browser.module';\nimport { SpinnerOverlayModule } from './shared/components/spinner-overlay/spinner-overlay.module';\n\nimport { DEFAULT_THEME } from '../app/core/services/theming/theming.service';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    DrawerModule,\n    FiltersPopoverModule,\n    OntologyExplorationModule,\n    InfoDialogModule,\n    MatIconModule,\n    DualSliderModule,\n    ResultsBrowserModule,\n    SpinnerOverlayModule,\n    ImageViewerModule,\n    BodyModule\n  ],\n  declarations: [AppComponent],\n  providers: [{provide: DEFAULT_THEME, useValue: 'light-theme'}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('ccf-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage-1.html":{"url":"classes/AppPage-1.html","title":"class - AppPage-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('ccf-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockSizeInputComponent.html":{"url":"components/BlockSizeInputComponent.html","title":"component - BlockSizeInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlockSizeInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n\n\n    \n        Description\n    \n    \n        Component for entering dimensions of the tissue block\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-block-size-input\n            \n\n            \n                styleUrls\n                ./block-size-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./block-size-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blockSizes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshBlockSize\n                            \n                            \n                                updateBlockSizes\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valuesChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valuesChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:42\n                            \n                        \n                \n                    \n                        Emitter for values\n\n                    \n                \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-block-size-input'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:32\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshBlockSize\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshBlockSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:58\n                \n            \n\n\n            \n                \n                    Refreshes all block size values to 10\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBlockSizes\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBlockSizes(input: InputEvent, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:49\n                \n            \n\n\n            \n                \n                    Updates values when an input changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        InputEvent from the input element which contains the new value\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the dimension to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blockSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BlockSizes\n\n                        \n                    \n                    \n                        \n                            Default value : DEFAULT_BLOCK_SIZES\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:37\n                            \n                        \n\n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Output } from '@angular/core';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSizes {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\nconst DEFAULT_BLOCK_SIZES: BlockSizes = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss']\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  blockSizes: BlockSizes = DEFAULT_BLOCK_SIZES;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly valuesChange = new EventEmitter();\n\n  /**\n   * Updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSizes = { ...this.blockSizes, [key]: +inputTarget.value };\n    this.valuesChange.emit(this.blockSizes);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSizes = DEFAULT_BLOCK_SIZES;\n    this.valuesChange.emit(this.blockSizes);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Size (mm)\n  \n  refresh\n\n\n\n  \n    Width (X)\n    \n  \n\n  \n    Height (Y)\n    \n  \n\n  \n    Depth (Z)\n    \n  \n\n\n    \n\n    \n                \n                    ./block-size-input.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    height: 1.5rem;\n    align-items: center;\n\n    .title {\n      font-weight: bold;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n    }\n  }\n\n  .size-inputs {\n    display: flex;\n\n    .field {\n      width: 33.33%;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Size (mm)    refresh      Width (X)            Height (Y)            Depth (Z)      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockSizeInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockSizeInputModule.html":{"url":"modules/BlockSizeInputModule.html","title":"module - BlockSizeInputModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockSizeInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { BlockSizeInputComponent } from './block-size-input.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatInputModule, MatIconModule],\n  declarations: [BlockSizeInputComponent],\n  exports: [BlockSizeInputComponent]\n})\nexport class BlockSizeInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockSizes.html":{"url":"interfaces/BlockSizes.html","title":"interface - BlockSizes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlockSizes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for objects containing tissue block dimensions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                                \n                                        z\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of block \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Height of block \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Depth of block \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, HostBinding, Output } from '@angular/core';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSizes {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\nconst DEFAULT_BLOCK_SIZES: BlockSizes = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss']\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  blockSizes: BlockSizes = DEFAULT_BLOCK_SIZES;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly valuesChange = new EventEmitter();\n\n  /**\n   * Updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSizes = { ...this.blockSizes, [key]: +inputTarget.value };\n    this.valuesChange.emit(this.blockSizes);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSizes = DEFAULT_BLOCK_SIZES;\n    this.valuesChange.emit(this.blockSizes);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyModule.html":{"url":"modules/BodyModule.html","title":"module - BodyModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_exports\n\n\n\n\nBodyUiModule\n\nBodyUiModule\n\n\n\nBodyModule\n\nBodyModule\n\nBodyModule -->\n\nBodyUiModule->BodyModule\n\n\n\n\n\nBodyUiModule \n\nBodyUiModule \n\nBodyUiModule  -->\n\nBodyModule->BodyUiModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/body/body.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BodyUiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BodyUiModule } from './body-ui/body-ui.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BodyUiModule\n  ],\n  exports: [\n    BodyUiModule\n  ]\n})\nexport class BodyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyUI.html":{"url":"classes/BodyUI.html","title":"class - BodyUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n            \n                Description\n            \n            \n                A convenience wrapper class for the CCF Body UI\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bodyUILayer\n                            \n                            \n                                    Private\n                                    Optional\n                                cursor\n                            \n                            \n                                deck\n                            \n                            \n                                    Private\n                                    Optional\n                                lastHovered\n                            \n                            \n                                    Readonly\n                                nodeClick$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeClickSubject\n                            \n                            \n                                    Readonly\n                                nodeHoverStart$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeHoverStartSubject\n                            \n                            \n                                    Readonly\n                                nodeHoverStop$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeHoverStopSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _onClick\n                            \n                            \n                                    Private\n                                _onHover\n                            \n                            \n                                    Private\n                                _onViewStateChange\n                            \n                            \n                                setScene\n                            \n                            \n                                zoomTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deckProps: Partial)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui/src/lib/body-ui.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deckProps\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bodyUILayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BodyUILayer({})\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            cursor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            lastHovered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpatialSceneNode\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeClick$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeClickSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeClickSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeHoverStart$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeHoverStartSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeHoverStartSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeHoverStop$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeHoverStopSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeHoverStopSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onClick(e: literal type, mouseEvent: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mouseEvent\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onHover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onHover(e: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onViewStateChange(event: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \nsetScene(data: SpatialSceneNode[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            zoomTo\n                        \n                        \n                    \n                \n            \n            \n                \nzoomTo(node: SpatialSceneNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n}\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: -15,\n        maxRotationX: 15,\n        target: [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 9.5\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            layerName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'BodyUILayer'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:75\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPickingInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeState\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderLayers\n                        \n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { load, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { CubeGeometry } from '@luma.gl/core';\nimport { ScenegraphNode } from '@luma.gl/experimental';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { doCollisions } from './spatial-scene-collider';\n\n\n// Programmers Note: had to disable tslint in a few places due to deficient typings.\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\n// tslint:disable: no-unsafe-any\nasync function loadGLTF(model: SpatialSceneNode): Promise {\n  const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n\n  const scenegraphNode = model.scenegraphNode ? gltf.nodes?.find((n) => n.name === model.scenegraphNode) : undefined;\n  if (scenegraphNode) {\n    if (!scenegraphNode.rotation && gltf.scene?.nodes?.length > 0) {\n      scenegraphNode.rotation = gltf.scene.nodes[gltf.scene.nodes.length-1].rotation;\n    }\n    gltf.scene = {\n      id: 'scene-1',\n      name: 'Scene',\n      nodes: [scenegraphNode]\n    };\n    gltf.scenes = [gltf.scene, ...gltf.scenes];\n  }\n  return gltf;\n}\n// tslint:enable: no-unsafe-any\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: {[key: string]: unknown}): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // tslint:disable-next-line: no-unsafe-any\n        mesh: new CubeGeometry(),\n        wireframe: false,\n        getTransformMatrix: (d) => (d as {transformMatrix: number[][]}).transformMatrix,\n        getColor: (d) => (d as {color: [number, number, number, number]}).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({data: data || [], zoomOpacity: 0.8, doCollisions: false});\n\n    // tslint:disable-next-line: no-unsafe-any\n    registerLoaders([DracoWorkerLoader, GLTFLoader]);\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as {data: SpatialSceneNode[], zoomOpacity: number, doCollisions: boolean};\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return [\n      meshLayer('cubes', cubes, {wireframe: false}),\n      meshLayer('wireframes', wireframes, {wireframe: true, pickable: false}),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          id: 'models-' + model['@id'],\n          opacity: model.zoomBasedOpacity ? state.zoomOpacity : 1.0,\n          pickable: !model.unpickable,\n          coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n          data: [model],\n          scenegraph: model.scenegraphNode ?\n            loadGLTF(model) as Promise :\n            model.scenegraph as unknown as ScenegraphNode,\n          _lighting: model._lighting,  // 'pbr' | undefined\n          getTransformMatrix: model.transformMatrix as unknown as number[][],\n          getColor: model.color || [0, 255, 0, 0.5*255],\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(e: {info: object}): unknown {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canvas\n                                \n                                \n                                        id\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n}\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: -15,\n        maxRotationX: 15,\n        target: [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 9.5\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        orbitAxis\n                                \n                                \n                                            Optional\n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n}\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: -15,\n        maxRotationX: 15,\n        target: [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 9.5\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BodyUiComponent.html":{"url":"components/BodyUiComponent.html","title":"component - BodyUiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BodyUiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-body-ui\n            \n\n            \n                styleUrls\n                ./body-ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./body-ui.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bodyCanvas\n                            \n                            \n                                bodyUI\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyFilter\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DataState, dataSourceService: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DataState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSourceService\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:18\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:23\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilter(filter: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyCanvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('bodyCanvas', {read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyUI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BodyUI\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { BodyUI } from 'ccf-body-ui';\nimport { Filter } from 'ccf-database';\n\nimport { DataSourceService } from './../../../core/services/data-source/data-source.service';\nimport { DataState } from './../../../core/store/data/data.state';\n\n\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss']\n})\nexport class BodyUiComponent implements AfterViewInit {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filter: Filter;\n\n  /**\n   * Emits the current filters\n   */\n  @Output() filterChange = new EventEmitter();\n\n  bodyUI: BodyUI;\n\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  constructor(readonly data: DataState, readonly dataSourceService: DataSourceService) { }\n\n  ngAfterViewInit(): void {\n    const canvas = this.bodyCanvas.nativeElement;\n    this.bodyUI = new BodyUI({ id: 'body-ui', canvas });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n\n    // TODO: Replace with a single @Input with scene provided by ngxs\n    this.data.filter$.subscribe(async (f: Filter) => {\n      await this.dataSourceService.dataSource.connect();\n      const scene = await this.dataSourceService.dataSource.getScene(f);\n      this.bodyUI.setScene(scene);\n    });\n\n    this.bodyUI.nodeClick$.subscribe(async ({node, ctrlClick}) => {\n      switch (node['@id']) {\n        case 'http://purl.org/ccf/latest/ccf.owl#VHRightKidney':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0004539']});\n          break;\n        case 'http://purl.org/ccf/latest/ccf.owl#VHLeftKidney':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0004538']});\n          break;\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleen':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC1':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC2':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC3':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0002106']});\n          break;\n        default:\n          if (node.entityId) {\n            const highlightedEntities = ctrlClick ? this.filter?.highlightedEntities ?? [] : [];\n            if (highlightedEntities.length === 1 && highlightedEntities[0] === node.entityId) {\n              this.applyFilter({highlightedEntities: []});\n            } else {\n              this.applyFilter({highlightedEntities: highlightedEntities.concat([node.entityId])});\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  private applyFilter(filter: Partial): void {\n    const newFilter = { ...this.filter, ...filter } as Filter;\n    this.filter = newFilter;\n    this.filterChange.emit(newFilter);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./body-ui.component.scss\n                \n                .body-ui {\n  position: relative !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BodyUiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/body/body-ui/body-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFDatabase.html":{"url":"classes/CCFDatabase.html","title":"class - CCFDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-database.ts\n        \n\n            \n                Description\n            \n            \n                Database provider. \n\n            \n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                scene\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connect\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                getAggregateResults\n                            \n                            \n                                getIds\n                            \n                            \n                                    Async\n                                getImageViewerData\n                            \n                            \n                                    Async\n                                getListResults\n                            \n                            \n                                    Async\n                                getOntologyTermOccurences\n                            \n                            \n                                    Async\n                                getScene\n                            \n                            \n                                getSpatialEntities\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: CCFDatabaseOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-database.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of ccfdatabase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        CCFDatabaseOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initialization options.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFSpatialGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:49\n                            \n                        \n\n                \n                    \n                        The spatial graph \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFDatabaseOptions\n\n                        \n                    \n                    \n                        \n                            Default value : DEFAULT_CCF_DB_OPTIONS\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:58\n                            \n                        \n\n                \n                    \n                        Initialization options.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFSpatialScene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:51\n                            \n                        \n\n                \n                    \n                        Creates SpatialEntity Scenes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:47\n                            \n                        \n\n                \n                    \n                        The triple store. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    connect(options?: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:70\n                \n            \n\n\n            \n                \n                    Connects the database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CCFDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options used to initialize.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise resolving to true if data has been loaded into the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:116\n                \n            \n\n\n            \n                \n                    Gets the data for an object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the requested object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Quad[]\n\n                    \n                    \n                        The object data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:161\n                \n            \n\n\n            \n                \n                    Gets all aggregate results for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A list of aggregate data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIds\n                        \n                        \n                    \n                \n            \n            \n                \ngetIds(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:106\n                \n            \n\n\n            \n                \n                    Gets all ids matching the filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {} as Filter\n                                    \n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Set\n\n                    \n                    \n                        A set of all matching ids.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageViewerData(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:181\n                \n            \n\n\n            \n                \n                    Gets image data for the associated id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The identifier.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The image data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:147\n                \n            \n\n\n            \n                \n                    Gets all list results for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A list of results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOntologyTermOccurences\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:171\n                \n            \n\n\n            \n                \n                    Get number of occurrences of ontology terms for a set of ids.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        Ontology term counts.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:190\n                \n            \n\n\n            \n                \n                    Get all nodes to form the 3D scene of reference body, organs, and tissues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A list of Spatial Scene Nodes for the 3D Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpatialEntities\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpatialEntities(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:136\n                \n            \n\n\n            \n                \n                    Gets all spatial entities for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity[]\n\n                    \n                    \n                        A list of spatial entities.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:126\n                \n            \n\n\n            \n                \n                    Gets the data for objects matching a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {} as Filter\n                                    \n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        An array of data.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, Quad, Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { addHubmapDataToStore } from './hubmap/hubmap-data';\nimport { AggregateResult, DataSource, Filter, ImageViewerData, ListResult } from './interfaces';\nimport { getAggregateResults } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getImageViewerData } from './queries/image-viewer-data-n3';\nimport { getListResult } from './queries/list-result-n3';\nimport { getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** An url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase implements DataSource {\n  /** The triple store. */\n  store: Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store();\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions): Promise {\n    if (options) {\n      this.options = options;\n    }\n    if (this.store.size === 0) {\n      const ops: Promise[] = [];\n      const ccfOwlUrl = this.options.ccfOwlUrl;\n      if (ccfOwlUrl.endsWith('.n3')) {\n        ops.push(addN3ToStore(this.options.ccfOwlUrl, this.store));\n      } else {\n        ops.push(addRdfXmlToStore(this.options.ccfOwlUrl, this.store));\n      }\n      if (this.options.hubmapDataUrl) {\n        if (this.options.hubmapDataUrl.endsWith('.jsonld')) {\n          ops.push(addJsonLdToStore(this.options.hubmapDataUrl, this.store));\n        } else {\n          ops.push(addHubmapDataToStore(\n            this.store, this.options.hubmapDataUrl, this.options.hubmapDataService, this.options.hubmapToken,\n            this.options.hubmapAssetsUrl, this.options.hubmapPortalUrl\n          ));\n        }\n      }\n      await Promise.all(ops);\n      // Add a small delay to allow the triple store to settle\n      await new Promise(r => setTimeout(r, 500));\n      this.graph.createGraph();\n    }\n    return this.store.size > 0;\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set {\n    return findIds(this.store, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  /**\n   * Gets all list results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getListResults(filter?: Filter): Promise {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    const highlighted = new Set(filter.highlightedEntities);\n    return [...this.getIds(filter)].map((s) => getListResult(this.store, s))\n      .map((s) => Object.assign(s, {highlighted: highlighted.has(s['@id'])}))\n      .sort((a, b) => (a.highlighted ? 0 : 1) - (b.highlighted ? 0 : 1));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Gets image data for the associated id.\n   *\n   * @param id The identifier.\n   * @returns The image data.\n   */\n  async getImageViewerData(id: string): Promise {\n    return getImageViewerData(id, this.store);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseOptions.html":{"url":"interfaces/CCFDatabaseOptions.html","title":"interface - CCFDatabaseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CCFDatabaseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-database.ts\n        \n\n            \n                Description\n            \n            \n                Database initialization options. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ccfContextUrl\n                                \n                                \n                                        ccfOwlUrl\n                                \n                                \n                                        hubmapAssetsUrl\n                                \n                                \n                                        hubmapDataService\n                                \n                                \n                                        hubmapDataUrl\n                                \n                                \n                                        hubmapPortalUrl\n                                \n                                \n                                            Optional\n                                        hubmapToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ccfContextUrl\n                                    \n                                \n                                \n                                    \n                                        ccfContextUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Context. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccfOwlUrl\n                                    \n                                \n                                \n                                    \n                                        ccfOwlUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An url to load data from. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapAssetsUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapAssetsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap assets api url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapDataService\n                                    \n                                \n                                \n                                    \n                                        hubmapDataService:     \"static\" | \"search-api\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"static\" | \"search-api\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data service type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapDataUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapDataUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap data url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapPortalUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapPortalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap Portal url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    HuBMAP Service Token. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, Quad, Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { addHubmapDataToStore } from './hubmap/hubmap-data';\nimport { AggregateResult, DataSource, Filter, ImageViewerData, ListResult } from './interfaces';\nimport { getAggregateResults } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getImageViewerData } from './queries/image-viewer-data-n3';\nimport { getListResult } from './queries/list-result-n3';\nimport { getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** An url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase implements DataSource {\n  /** The triple store. */\n  store: Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store();\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions): Promise {\n    if (options) {\n      this.options = options;\n    }\n    if (this.store.size === 0) {\n      const ops: Promise[] = [];\n      const ccfOwlUrl = this.options.ccfOwlUrl;\n      if (ccfOwlUrl.endsWith('.n3')) {\n        ops.push(addN3ToStore(this.options.ccfOwlUrl, this.store));\n      } else {\n        ops.push(addRdfXmlToStore(this.options.ccfOwlUrl, this.store));\n      }\n      if (this.options.hubmapDataUrl) {\n        if (this.options.hubmapDataUrl.endsWith('.jsonld')) {\n          ops.push(addJsonLdToStore(this.options.hubmapDataUrl, this.store));\n        } else {\n          ops.push(addHubmapDataToStore(\n            this.store, this.options.hubmapDataUrl, this.options.hubmapDataService, this.options.hubmapToken,\n            this.options.hubmapAssetsUrl, this.options.hubmapPortalUrl\n          ));\n        }\n      }\n      await Promise.all(ops);\n      // Add a small delay to allow the triple store to settle\n      await new Promise(r => setTimeout(r, 500));\n      this.graph.createGraph();\n    }\n    return this.store.size > 0;\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set {\n    return findIds(this.store, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  /**\n   * Gets all list results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getListResults(filter?: Filter): Promise {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    const highlighted = new Set(filter.highlightedEntities);\n    return [...this.getIds(filter)].map((s) => getListResult(this.store, s))\n      .map((s) => Object.assign(s, {highlighted: highlighted.has(s['@id'])}))\n      .sort((a, b) => (a.highlighted ? 0 : 1) - (b.highlighted ? 0 : 1));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Gets image data for the associated id.\n   *\n   * @param id The identifier.\n   * @returns The image data.\n   */\n  async getImageViewerData(id: string): Promise {\n    return getImageViewerData(id, this.store);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFSpatialGraph.html":{"url":"classes/CCFSpatialGraph.html","title":"class - CCFSpatialGraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFSpatialGraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-graph.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSpatialEntity\n                            \n                            \n                                addSpatialObjectReference\n                            \n                            \n                                addSpatialPlacement\n                            \n                            \n                                createGraph\n                            \n                            \n                                getTransformationMatrix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: CCFDatabase)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DirectedGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:38\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialEntity\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialEntity(entity: SpatialEntity)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialObjectReference\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialObjectReference(ref: SpatialObjectReference)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                SpatialObjectReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialPlacement\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialPlacement(placement: SpatialPlacement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    placement\n                                    \n                                                SpatialPlacement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGraph\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransformationMatrix\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransformationMatrix(sourceIRI: string, targetIRI: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIRI\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetIRI\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Matrix4 | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CCFDatabase } from './ccf-database';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { DirectedGraph } from 'graphology';\nimport shortestPath from 'graphology-shortest-path/unweighted';\nimport { fromEuler } from 'quaternion';\nimport toEuler from 'quaternion-to-euler';\n\nimport { SpatialEntity, SpatialObjectReference, SpatialPlacement } from './spatial-types';\nimport { rdf, ccf } from './util/prefixes';\nimport { getSpatialEntity, getSpatialObjectReference, getSpatialPlacement } from './queries/spatial-result-n3';\n\n\nexport function applySpatialPlacement(tx: Matrix4, placement: SpatialPlacement): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R_RAD = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians);\n  // tslint:disable-next-line: no-unsafe-any\n  const R = toEuler(fromEuler(R_RAD[1], R_RAD[0], R_RAD[2], 'XYZ').toVector()) as number[];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport class CCFSpatialGraph {\n  graph: DirectedGraph;\n\n  constructor(private db: CCFDatabase) {\n    this.createGraph();\n  }\n\n  createGraph(): void {\n    this.graph = new DirectedGraph();\n    const store = this.db.store;\n    // Add all Spatial Object References\n    store.forSubjects((subject) => {\n      this.addSpatialObjectReference(getSpatialObjectReference(store, subject.id));\n    }, rdf.type, ccf.SpatialObjectReference, null);\n\n    // Add all Spatial Entities\n    store.forSubjects((subject) => {\n      this.addSpatialEntity(getSpatialEntity(store, subject.id));\n    }, rdf.type, ccf.SpatialEntity, null);\n\n    // Add all Spatial Placements\n    store.forSubjects((subject) => {\n      this.addSpatialPlacement(getSpatialPlacement(store, subject.id));\n    }, rdf.type, ccf.SpatialPlacement, null);\n  }\n\n  addSpatialEntity(entity: SpatialEntity): void {\n    this.graph.mergeNode(entity['@id'], {type: 'SpatialEntity', object: entity});\n  }\n  addSpatialObjectReference(ref: SpatialObjectReference): void {\n    this.graph.mergeNode(ref['@id'], {type: 'SpatialObjectReference', object: ref});\n  }\n  addSpatialPlacement(placement: SpatialPlacement): void {\n    this.graph.mergeDirectedEdge(placement.source['@id'], placement.target['@id'], {type: 'SpatialPlacement', placement});\n  }\n\n  getTransformationMatrix(sourceIRI: string, targetIRI: string): Matrix4 | undefined {\n    if (sourceIRI === targetIRI) {\n      return new Matrix4(); // identity\n    }\n    if (!this.graph.hasNode(sourceIRI) || !this.graph.hasNode(targetIRI)) {\n      return undefined;\n    }\n\n    const tx = new Matrix4();\n    const path = shortestPath(this.graph, sourceIRI, targetIRI);\n    if (path && path.length > 0) {\n      path.reverse();\n      let target: string | number = '';\n      for (const source of path) {\n        if (target) {\n          const p = this.graph.getEdgeAttribute(source, target, 'placement') as SpatialPlacement;\n          applySpatialPlacement(tx, p);\n        }\n        target = source;\n      }\n      return tx;\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFSpatialScene.html":{"url":"classes/CCFSpatialScene.html","title":"class - CCFSpatialScene","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFSpatialScene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-scene.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEntitySceneNodes\n                            \n                            \n                                getReferenceBody\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceSceneNodes\n                            \n                            \n                                getScene\n                            \n                            \n                                getSceneNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: CCFDatabase)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEntitySceneNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetEntitySceneNodes(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceBody\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceBody(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceOrgans\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceSceneNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceSceneNodes(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSceneNode\n                        \n                        \n                    \n                \n            \n            \n                \ngetSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    nodeAttrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport { getSpatialEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { ccf, rui } from './util/prefixes';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': 'SpatialSceneNode';\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return getSpatialEntity(this.db.store, bodyId);\n  }\n\n  getReferenceOrgans(filter?: Filter): SpatialEntity[] {\n    let organsId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        organsId = ccf.spatial.MaleOrgans.id;\n        break;\n      case 'Female':\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n      case 'Both':\n      default:\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n    }\n    return [getSpatialEntity(this.db.store, organsId)];\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const wholeBody = getSpatialEntity(this.db.store, ccf.spatial.Body.id);\n    const body = this.getReferenceBody(filter);\n    const organs = getSpatialEntity(this.db.store, ccf.spatial.MaleOrgans.id);\n    const store = this.db.store;\n    const terms = filter?.ontologyTerms || [];\n    const hasTerm = {\n      body: terms.indexOf(rui.body.id) === 0,\n      kidney: terms.indexOf(rui.kidney.id) === 0,\n      right_kidney: terms.indexOf(rui.right_kidney.id) === 0,\n      left_kidney: terms.indexOf(rui.left_kidney.id) === 0,\n      spleen: terms.indexOf(rui.spleen.id) === 0,\n    };\n\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      this.getSceneNode(body, wholeBody, {unpickable: true, color: [255, 255, 255, 1*255]}),\n      ...this.getReferenceOrgans(filter).map((organ) =>\n        this.getSceneNode(organ, body, {unpickable: true, _lighting: 'pbr', zoomBasedOpacity: true,  color: [255, 0, 0, 1*255]})\n      ),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.right_kidney, zoomToOnLoad: hasTerm.right_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.left_kidney, zoomToOnLoad: hasTerm.left_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleen').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.spleen, zoomToOnLoad: hasTerm.spleen})\n    ];\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), wholeBody, {color: [0, 0, 255, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), wholeBody, {color: [255, 0, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC1').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC2').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC3').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true})\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const highlighted = new Set(filter?.highlightedEntities);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, {\n        color: highlighted.has(entity.entityId as string) ? [10, 10, 229, 0.9*255] : [255, 255, 255, 0.9*255]\n      })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial = {}): SpatialSceneNode | undefined {\n    const has3dObject = source.object && source.object.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4().rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId || undefined,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      } as SpatialSceneNode;\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChannelConfig.html":{"url":"interfaces/ChannelConfig.html","title":"interface - ChannelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChannelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        color\n                                \n                                \n                                        slider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slider\n                                    \n                                \n                                \n                                    \n                                        slider:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hms-dbmi/viv';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterOnChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:16\n                            \n                        \n                \n                    \n                        The label that describes the overall question the checkbox is asking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:21\n                            \n                        \n                \n                    \n                        Used to generate the individual checkboxes and their individual labels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:26\n                            \n                        \n                \n                    \n                        A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:31\n                            \n                        \n                \n                    \n                        Any time a checkbox changes we emit that value so the parent component has that information\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nfilterOnChange(event: MatCheckboxChange, option: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                \n            \n\n\n            \n                \n                    This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event object from the checkbox that contains the boolean property 'checked'\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tells us which option was checked or unchecked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\n\n/**\n * Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n */\n@Component({\n  selector: 'ccf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\n  /**\n   * The label that describes the overall question the checkbox is asking\n   */\n  @Input() label: string;\n\n  /**\n   * Used to generate the individual checkboxes and their individual labels\n   */\n  @Input() options: string[];\n\n  /**\n   * A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n   */\n  @Input() selection: string[] = [];\n\n  /**\n   * Any time a checkbox changes we emit that value so the parent component has that information\n   */\n  @Output() selectionChange = new EventEmitter();\n\n  /**\n   * This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n   * @param event Event object from the checkbox that contains the boolean property 'checked'\n   * @param option Tells us which option was checked or unchecked\n   */\n  filterOnChange(event: MatCheckboxChange, option: string): void {\n    const checked = event.checked;\n\n    if (checked) {\n      this.selection = [...this.selection, option];\n    } else {\n      this.selection = this.selection.filter(selection => selection !== option);\n    }\n\n    this.selectionChange.emit(this.selection);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n  \n    \n      \n        {{ option }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                ::ng-deep  .mat-checkbox.mat-accent {\n  .mat-checkbox-checkmark-path {\n    stroke: white !important;\n  }\n\n  .mat-checkbox-inner-container {\n    margin-right: 1rem;\n  }\n}\n\n.filter-label {\n  margin-bottom: 0.5em;\n  font-weight: bold;\n}\n\n.options-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.option {\n  margin-right: 1.5em;\n  width: 8em;\n  color: #fafafa;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ option }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckboxModule.html":{"url":"modules/CheckboxModule.html","title":"module - CheckboxModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/checkbox/checkbox.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CheckboxComponent } from './checkbox.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent]\n})\nexport class CheckboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/spatial-scene-collider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        hits\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from './body-ui-layer';\n\n\n// tslint:disable: no-unsafe-any\nfunction traverseScene(scene, worldMatrix = new Matrix4(), visitor: (child, modelMatrix: Matrix4) => void): void {\n  const matrix = new Matrix4().identity();\n  if (scene.matrix) {\n    matrix.copy(scene.matrix);\n  } else {\n    matrix.identity();\n\n    if (scene.translation) {\n      matrix.translate(scene.translation);\n    }\n\n    if (scene.rotation) {\n      const rotationMatrix = new Matrix4().fromQuaternion(scene.rotation);\n      matrix.multiplyRight(rotationMatrix);\n    }\n\n    if (scene.scale) {\n      matrix.scale(scene.scale);\n    }\n  }\n  const modelMatrix = new Matrix4(worldMatrix).multiplyRight(matrix);\n  visitor(scene, modelMatrix);\n\n  for (const child of (scene.nodes || scene.children || [])) {\n    traverseScene(child, modelMatrix, visitor);\n  }\n}\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: {'@id': string, name: string}[];\n}\n\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && !d.wireframe)\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n// tslint:enable: no-unsafe-any\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorBarComponent.html":{"url":"components/ColorBarComponent.html","title":"component - ColorBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Color bar component for the color scheme popup and color scheme selector\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-bar\n            \n\n            \n                styleUrls\n                ./color-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                colorChanged\n                            \n                            \n                                gradientHighlight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                enableSelection\n                            \n                            \n                                selected\n                            \n                            \n                                selectedColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gradientStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colorScheme\n                    \n                \n                \n                    \n                        Type :         ColorScheme\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Color scheme to be displayed in the color bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSelection\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:33\n                            \n                        \n                \n                    \n                        Determines if colors are able to be selected on the color bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:23\n                            \n                        \n                \n                    \n                        Whether or not the scheme is currently selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedColor\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:28\n                            \n                        \n                \n                    \n                        Currently selected color in colorScheme.colors\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        colorChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:38\n                            \n                        \n                \n                    \n                        Emits the newly selected color index\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncolorChanged(color: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:64\n                \n            \n\n\n            \n                \n                    When a color is selected, this updates relavant variables and emits the\nselected color\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the color the user selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gradientHighlight\n                        \n                        \n                    \n                \n            \n            \n                \ngradientHighlight()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:55\n                \n            \n\n\n            \n                \n                    Returns whether or not the scheme is a selected gradient (for highlighting purposes)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gradientStyle\n                    \n                \n\n                \n                    \n                        getgradientStyle()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:43\n                                \n                            \n                    \n                        \n                                Enables dynamic styling for gradient bars\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ColorScheme } from '../color-schemes';\n\n\n/**\n * Color bar component for the color scheme popup and color scheme selector\n */\n@Component({\n  selector: 'ccf-color-bar',\n  templateUrl: './color-bar.component.html',\n  styleUrls: ['./color-bar.component.scss']\n})\nexport class ColorBarComponent {\n  /**\n   * Color scheme to be displayed in the color bar\n   */\n  @Input() colorScheme: ColorScheme;\n\n  /**\n   * Whether or not the scheme is currently selected\n   */\n  @Input() selected = false;\n\n  /**\n   * Currently selected color in colorScheme.colors\n   */\n  @Input() selectedColor = '';\n\n  /**\n   * Determines if colors are able to be selected on the color bar\n   */\n  @Input() enableSelection = false;\n\n  /**\n   * Emits the newly selected color index\n   */\n  @Output() colorChange = new EventEmitter();\n\n  /**\n   * Enables dynamic styling for gradient bars\n   */\n  get gradientStyle(): string {\n    const { colors, positions } = this.colorScheme;\n    const result: string[] = [];\n    for (let i = 0; i \n    \n\n    \n        \n  \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./color-bar.component.scss\n                \n                .scheme-container {\n  width: 7rem;\n  height: 1rem;\n  display: flex;\n  .discrete {\n    width: 1rem;\n  }\n  .gradient {\n    width: 7rem;\n  }\n\n  &.selected-scheme {\n    .discrete {\n      &.selected-color {\n        border-radius: 10px;\n      }\n    }\n  }\n\n  &.highlighted {\n    outline-width: 1px;\n    outline-style: solid;\n  }\n\n  :hover {\n    cursor: pointer;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorBarModule.html":{"url":"modules/ColorBarModule.html","title":"module - ColorBarModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorBarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorBarModule\n\n\n\ncluster_ColorBarModule_declarations\n\n\n\ncluster_ColorBarModule_exports\n\n\n\n\nColorBarComponent\n\nColorBarComponent\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorBarModule -->\n\nColorBarComponent->ColorBarModule\n\n\n\n\n\nColorBarComponent \n\nColorBarComponent \n\nColorBarComponent  -->\n\nColorBarModule->ColorBarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorBarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorBarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ColorBarComponent } from './color-bar.component';\n\n\n@NgModule({\n  declarations: [ColorBarComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ColorBarComponent]\n})\nexport class ColorBarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorPickerLauncherComponent.html":{"url":"components/ColorPickerLauncherComponent.html","title":"component - ColorPickerLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorPickerLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts\n\n\n    \n        Description\n    \n    \n        Component dynamically displays a div with a shape and background that corresponds to the color scheme\nor color of the layer that it gets passed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-picker-launcher\n            \n\n            \n                styleUrls\n                ./color-picker-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-picker-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts:20\n                            \n                        \n                \n                    \n                        An image-viewer layer which contains the styling information required to render this component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts:25\n                            \n                        \n                \n                    \n                        Output that passes along changes made to the layer's properties from the color picker\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\n/**\n * Component dynamically displays a div with a shape and background that corresponds to the color scheme\n * or color of the layer that it gets passed.\n */\n@Component({\n  selector: 'ccf-color-picker-launcher',\n  templateUrl: './color-picker-launcher.component.html',\n  styleUrls: ['./color-picker-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPickerLauncherComponent {\n  /**\n   * An image-viewer layer which contains the styling information required to render this component.\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Output that passes along changes made to the layer's properties from the color picker\n   */\n  @Output() layerChange = new EventEmitter();\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./color-picker-launcher.component.scss\n                \n                .launch-button {\n  width: 1rem;\n  height: 1rem;\n  cursor: pointer;\n}\n\n.circle {\n  border-radius: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorPickerLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorPickerLauncherModule.html":{"url":"modules/ColorPickerLauncherModule.html","title":"module - ColorPickerLauncherModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorPickerLauncherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorPickerLauncherModule\n\n\n\ncluster_ColorPickerLauncherModule_declarations\n\n\n\ncluster_ColorPickerLauncherModule_imports\n\n\n\ncluster_ColorPickerLauncherModule_exports\n\n\n\n\nColorPickerLauncherComponent\n\nColorPickerLauncherComponent\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule -->\n\nColorPickerLauncherComponent->ColorPickerLauncherModule\n\n\n\n\n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent  -->\n\nColorPickerLauncherModule->ColorPickerLauncherComponent \n\n\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorPickerLauncherModule -->\n\nColorSchemePopupModule->ColorPickerLauncherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorPickerLauncherComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorSchemePopupModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorPickerLauncherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorPickerLauncherComponent } from './color-picker-launcher.component';\nimport { ColorSchemePopupModule } from '../color-scheme-popup/color-scheme-popup.module';\n\n\n@NgModule({\n  declarations: [ColorPickerLauncherComponent],\n  imports: [CommonModule, ColorSchemePopupModule],\n  exports: [ColorPickerLauncherComponent]\n})\nexport class ColorPickerLauncherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme.html":{"url":"interfaces/ColorScheme.html","title":"interface - ColorScheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/color-scheme.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colors\n                                \n                                \n                                        name\n                                \n                                \n                                        positions\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"discrete\" | \"gradient\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"discrete\" | \"gradient\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n    type: 'discrete' | 'gradient';\n    name: string;\n    colors: string[];\n    positions: number[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme-1.html":{"url":"interfaces/ColorScheme-1.html","title":"interface - ColorScheme-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-schemes.ts\n        \n\n            \n                Description\n            \n            \n                Color scheme to be used in visualizing layers of the image\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colors\n                                \n                                \n                                        name\n                                \n                                \n                                        positions\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Colors used in the scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions for mapping the data to colors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"discrete\" | \"gradient\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"discrete\" | \"gradient\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the scheme is discrete or gradient\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n\n  /**\n   * Whether the scheme is discrete or gradient\n   */\n  type: 'discrete' | 'gradient';\n\n  /**\n   * Name of scheme\n   */\n  name: string;\n\n  /**\n   * Colors used in the scheme\n   */\n  colors: string[];\n\n  /**\n   * Positions for mapping the data to colors\n   */\n  positions: number[];\n}\n\n/**\n * Default Qualitative Scheme1 (discrete)\n */\nexport const GREEENORANGE: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative1',\n  colors: ['#66BB6A', '#B39DDB', '#FFCC80', '#FFFF8D', '#1565C0', '#E91E63', '#E65100'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Qualitative Scheme2 (discrete)\n */\nexport const TEALGREEN: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative2',\n  colors: ['#80CBC4', '#FFFF8D', '#B39DDB', '#EF9A9A', '#64B5F6', '#FFB74D', '#AED581'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme1 (discrete)\n */\nexport const BLUERED: ColorScheme = {\n  type: 'discrete',\n  name: 'bluered',\n  colors: ['#2166AC', '#67A9CF', '#D1E5F0', '#F7F7F7', '#FDDBC7', '#EF8A62', '#B2182B'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme2 (discrete)\n */\nexport const GREENRED: ColorScheme = {\n  type: 'discrete',\n  name: 'greenred',\n  colors: ['#1A9850', '#91CF60', '#D9EF8B', '#FFFFBF', '#FEE08B', '#FC8D59', '#D73027'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme3 (discrete)\n */\nexport const PURPLEBROWN: ColorScheme = {\n  type: 'discrete',\n  name: 'purplebrown',\n  colors: ['#542788', '#998EC3', '#D8DAEB', '#F7F7F7', '#FEE0B6', '#F1A340', '#B35806'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme4 (discrete)\n */\nexport const REDTAN: ColorScheme = {\n  type: 'discrete',\n  name: 'redtan',\n  colors: ['#990000', '#D7301F', '#EF6548', '#FC8D59', '#FDBB84', '#FDD49E', '#FEF0D9'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme5 (discrete)\n */\nexport const PURPLELIGHTBLUE: ColorScheme = {\n  type: 'discrete',\n  name: 'purplelightblue',\n  colors: ['#6E016B', '#88419D', '#8C6BB1', '#8C96C6', '#9EBCDA', '#BFD3E6', '#EDF8FB'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme6 (gradient)\n */\nexport const VIRIDIS: ColorScheme = {\n  type: 'gradient',\n  name: 'viridis',\n  colors: ['#FFE31C', '#B5C740', '#6BAB65', '#21908A', '#2D6379', '#393768', '#450B57'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme7 (gradient)\n */\nexport const MAGMA: ColorScheme = {\n  type: 'gradient',\n  name: 'magma',\n  colors: ['#F8FC9D', '#E1B986', '#CA7670', '#B4335A', '#78223C', '#3D121F', '#020202'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme8 (gradient)\n */\nexport const PLASMA: ColorScheme = {\n  type: 'gradient',\n  name: 'plasma',\n  colors: ['#F2F424', '#E3B842', '#D47D60', '#C6427E', '#883381', '#4A2484', '#0C1687'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default scheme options\n */\nexport const DEFAULT_COLOR_SCHEMES = [\n  GREEENORANGE,\n  TEALGREEN,\n  BLUERED,\n  GREENRED,\n  PURPLEBROWN,\n  // REDTAN,\n  // PURPLELIGHTBLUE,\n  // VIRIDIS,\n  // MAGMA,\n  // PLASMA\n];\n\n/**\n * Object containing scheme and color index info to be emitted when a change is made\n */\nexport interface ColorSchemeSelection {\n\n  /**\n   * Current scheme selected\n   */\n  scheme: ColorScheme;\n\n  /**\n   * Index of the selected color in scheme\n   */\n  coloridx: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSchemeContentsComponent.html":{"url":"components/ColorSchemeContentsComponent.html","title":"component - ColorSchemeContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSchemeContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts\n\n\n    \n        Description\n    \n    \n        Contains the color menu and brightness/transparency sliders\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-scheme-contents\n            \n\n            \n                styleUrls\n                ./color-scheme-contents.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-scheme-contents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightnessSliderOptions\n                            \n                            \n                                transparencySliderOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                brightnessChanged\n                            \n                            \n                                colorChanged\n                            \n                            \n                                transparencyChanged\n                            \n                            \n                                    Private\n                                updateLayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                layer\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    brightnessLow\n                                \n                                \n                                    brightnessHigh\n                                \n                                \n                                    transparency\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:70\n                            \n                        \n\n                \n                    \n                            Initiates slider options\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:21\n                            \n                        \n                \n                    \n                        Determines if the popup opens up or down from the icon position\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:31\n                            \n                        \n                \n                    \n                        Layer that the component is currently rendering, used to pull relevant properties from.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:26\n                            \n                        \n                \n                    \n                        List of available schemes\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:36\n                            \n                        \n                \n                    \n                        Used to emit any changes made to the layer or its properties\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            brightnessChanged\n                        \n                        \n                    \n                \n            \n            \n                \nbrightnessChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:91\n                \n            \n\n\n            \n                \n                    Emits new brightness selection\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncolorChanged(color: string, scheme: ColorScheme)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:106\n                \n            \n\n\n            \n                \n                    Takes in the selected color and scheme and adds them to the Layer\nbefore emitting the changed layer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scheme\n                                    \n                                                ColorScheme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transparencyChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntransparencyChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:98\n                \n            \n\n\n            \n                \n                    Emits new transparency value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateLayer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayer(updates: Partial<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:118\n                \n            \n\n\n            \n                \n                    Updates layer with new layer settings\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    updates\n                                    \n                                            Partial<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains updated layer settings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brightnessSliderOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:41\n                            \n                        \n\n                \n                    \n                        Options for the brightness slider\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transparencySliderOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:46\n                            \n                        \n\n                \n                    \n                        Options for the transparency slider\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        brightnessLow\n                    \n                \n\n                \n                    \n                        getbrightnessLow()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:51\n                                \n                            \n                    \n                        \n                                Updates current low brightness value with new low brightness value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbrightnessLow(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        brightnessHigh\n                    \n                \n\n                \n                    \n                        getbrightnessHigh()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:59\n                                \n                            \n                    \n                        \n                                Updates current high brightness value with new high brightness value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbrightnessHigh(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        transparency\n                    \n                \n\n                \n                    \n                        gettransparency()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:67\n                                \n                            \n                    \n                        \n                                Updates current transparency value with new transparency value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settransparency(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:68\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Options } from 'ng5-slider';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../color-schemes';\n\n\n/**\n * Contains the color menu and brightness/transparency sliders\n */\n@Component({\n  selector: 'ccf-color-scheme-contents',\n  templateUrl: './color-scheme-contents.component.html',\n  styleUrls: ['./color-scheme-contents.component.scss']\n})\nexport class ColorSchemeContentsComponent {\n\n  /**\n   * Determines if the popup opens up or down from the icon position\n   */\n  @Input() bottom = false;\n\n  /**\n   * List of available schemes\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * Layer that the component is currently rendering, used to pull relevant properties from.\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Used to emit any changes made to the layer or its properties\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /**\n   * Options for the brightness slider\n   */\n  brightnessSliderOptions: Options;\n\n  /**\n   * Options for the transparency slider\n   */\n  transparencySliderOptions: Options;\n\n  /**\n   * Updates current low brightness value with new low brightness value\n   */\n  get brightnessLow(): number { return this.layer.brightness[0]; }\n  set brightnessLow(value: number) {\n    this.updateLayer({ brightness: [value, this.brightnessHigh] });\n  }\n\n  /**\n   * Updates current high brightness value with new high brightness value\n   */\n  get brightnessHigh(): number { return this.layer.brightness[1]; }\n  set brightnessHigh(value: number) {\n    this.updateLayer({ brightness: [this.brightnessLow, value] });\n  }\n\n  /**\n   * Updates current transparency value with new transparency value\n   */\n  get transparency(): number { return this.layer.transparency; }\n  set transparency(value: number) {\n    this.updateLayer({ transparency: value });\n  }\n\n  /**\n   * Initiates slider options\n   */\n  constructor() {\n    const COMMON_OPTIONS = {\n      floor: 0,\n      ceil: 100,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n\n    this.brightnessSliderOptions = { ...COMMON_OPTIONS, inputEventsInterval: 1000 };\n    this.transparencySliderOptions = { ...COMMON_OPTIONS, showSelectionBar: true };\n  }\n\n  /**\n   * Emits new brightness selection\n   */\n  brightnessChanged(): void {\n    this.layerChange.emit(this.layer);\n  }\n\n  /**\n   * Emits new transparency value\n   */\n  transparencyChanged(): void {\n    this.layerChange.emit(this.layer);\n  }\n\n  /**\n   * Takes in the selected color and scheme and adds them to the Layer\n   * before emitting the changed layer\n   */\n  colorChanged(color: string, scheme: ColorScheme): void {\n    this.updateLayer({\n      colorScheme: scheme,\n      color,\n      customizedColor: true\n    });\n  }\n\n  /**\n   * Updates layer with new layer settings\n   * @param updates Contains updated layer settings\n   */\n  private updateLayer(\n    updates: Partial[0]>\n  ): void {\n    const { layer: current, layerChange } = this;\n    const layer = new ImageViewerLayer({\n      ...current,\n      ...updates\n    });\n\n    this.layer = layer;\n    layerChange.emit(layer);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    Brightness\n    \n    \n\n    Transparency\n    \n     -->\n  \n\n\n    \n\n    \n                \n                    ./color-scheme-contents.component.scss\n                \n                .color-scheme-contents-container {\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 4px;\n  width: 10rem;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 1;\n  right: -1.125rem;\n  top: -1.125rem;\n\n  &.bottom {\n    top: auto;\n    bottom: 0rem;\n  }\n\n  .scheme-contents {\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .swatch {\n      display: flex;\n      width: 7rem;\n      height: 1rem;\n      margin-bottom: 0.5rem;\n\n      :hover {\n        cursor: pointer;\n      }\n    }\n\n    .brightness-slider-label {\n      margin-top: .5rem;\n    }\n  }\n\n  ::ng-deep .slider {\n    margin-top: 0.75rem;\n    margin-bottom: 1rem;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: 0.15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: -0.5rem;\n      border-width: 0.1rem;\n      border-style: solid;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Brightness            Transparency         -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSchemeContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorSchemeContentsModule.html":{"url":"modules/ColorSchemeContentsModule.html","title":"module - ColorSchemeContentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorSchemeContentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorSchemeContentsModule\n\n\n\ncluster_ColorSchemeContentsModule_declarations\n\n\n\ncluster_ColorSchemeContentsModule_imports\n\n\n\ncluster_ColorSchemeContentsModule_exports\n\n\n\n\nColorSchemeContentsComponent\n\nColorSchemeContentsComponent\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule -->\n\nColorSchemeContentsComponent->ColorSchemeContentsModule\n\n\n\n\n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent  -->\n\nColorSchemeContentsModule->ColorSchemeContentsComponent \n\n\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorSchemeContentsModule -->\n\nColorBarModule->ColorSchemeContentsModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nColorSchemeContentsModule -->\n\nDualSliderModule->ColorSchemeContentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorSchemeContentsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorBarModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorSchemeContentsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { ColorSchemeContentsComponent } from './color-scheme-contents.component';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { ColorBarModule } from '../color-bar/color-bar.module';\n\n\n@NgModule({\n  imports: [CommonModule, DualSliderModule, Ng5SliderModule, ColorBarModule],\n  declarations: [ColorSchemeContentsComponent],\n  exports: [ColorSchemeContentsComponent]\n})\n\nexport class ColorSchemeContentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSchemePopupComponent.html":{"url":"components/ColorSchemePopupComponent.html","title":"component - ColorSchemePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSchemePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the scheme selector popup\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-scheme-popup\n            \n\n            \n                styleUrls\n                ./color-scheme-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-scheme-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                contentElement\n                            \n                            \n                                    Private\n                                    Optional\n                                owner\n                            \n                            \n                                popupVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:25\n                            \n                        \n                \n                    \n                        The Layer which we use to pull the properties we need from\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:20\n                            \n                        \n                \n                    \n                        Schemes available to choose from\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:30\n                            \n                        \n                \n                    \n                        Output we use to emit any changes to the layer or its properties\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:53\n                \n            \n\n\n            \n                \n                    Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(event: MouseEvent, owner?: Element)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:64\n                \n            \n\n\n            \n                \n                    Opens popup and calculates which direction the popup opens based on click position\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    owner\n                                    \n                                            Element\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:45\n                            \n                        \n\n                \n                    \n                        Controls direction the popup opens\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content', {static: true, read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:40\n                            \n                        \n\n                \n                    \n                        Owner button element which when clicked will not close on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:37\n                            \n                        \n\n                \n                    \n                        Controls visibility of the popup\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostListener, Input, Output, ViewChild, ElementRef } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../color-schemes';\n\n\n/**\n * Component for the scheme selector popup\n */\n@Component({\n  selector: 'ccf-color-scheme-popup',\n  templateUrl: './color-scheme-popup.component.html',\n  styleUrls: ['./color-scheme-popup.component.scss']\n})\nexport class ColorSchemePopupComponent {\n\n  /**\n   * Schemes available to choose from\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * The Layer which we use to pull the properties we need from\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Output we use to emit any changes to the layer or its properties\n   */\n  @Output() layerChange = new EventEmitter();\n\n  @ViewChild('content', { static: true, read: ElementRef }) contentElement: ElementRef;\n\n  /**\n   * Controls visibility of the popup\n   */\n  popupVisible = false;\n\n  /** Owner button element which when clicked will not close on. */\n  private owner?: Element;\n\n  /**\n   * Controls direction the popup opens\n   */\n  bottom = false;\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  close(target: HTMLElement): void {\n    const { popupVisible, contentElement: { nativeElement: content } = { nativeElement: undefined }, owner } = this;\n    if (!popupVisible || content?.contains(target) || owner?.contains(target)) {\n      return;\n    }\n    this.popupVisible = !popupVisible;\n  }\n\n  /**\n   * Opens popup and calculates which direction the popup opens based on click position\n   */\n  open(event: MouseEvent, owner?: Element): void {\n    const clickPos = event.pageY;\n    this.bottom = window.innerHeight - clickPos \n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./color-scheme-popup.component.scss\n                \n                .hidden {\n  display: none;\n}\n\n.show {\n  display: block;\n  position: absolute;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSchemePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorSchemePopupModule.html":{"url":"modules/ColorSchemePopupModule.html","title":"module - ColorSchemePopupModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorSchemePopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorSchemePopupModule\n\n\n\ncluster_ColorSchemePopupModule_declarations\n\n\n\ncluster_ColorSchemePopupModule_imports\n\n\n\ncluster_ColorSchemePopupModule_exports\n\n\n\n\nColorSchemePopupComponent\n\nColorSchemePopupComponent\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorSchemePopupModule -->\n\nColorSchemePopupComponent->ColorSchemePopupModule\n\n\n\n\n\nColorSchemePopupComponent \n\nColorSchemePopupComponent \n\nColorSchemePopupComponent  -->\n\nColorSchemePopupModule->ColorSchemePopupComponent \n\n\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemePopupModule -->\n\nColorSchemeContentsModule->ColorSchemePopupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorSchemePopupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorSchemeContentsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorSchemePopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ColorSchemePopupComponent } from './color-scheme-popup.component';\nimport { ColorSchemeContentsModule } from '../color-scheme-contents/color-scheme-contents.module';\n\n\n@NgModule({\n  imports: [CommonModule, ColorSchemeContentsModule],\n  declarations: [ColorSchemePopupComponent],\n  exports: [ColorSchemePopupComponent]\n})\n\nexport class ColorSchemePopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorSchemeSelection.html":{"url":"interfaces/ColorSchemeSelection.html","title":"interface - ColorSchemeSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorSchemeSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-schemes.ts\n        \n\n            \n                Description\n            \n            \n                Object containing scheme and color index info to be emitted when a change is made\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coloridx\n                                \n                                \n                                        scheme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coloridx\n                                    \n                                \n                                \n                                    \n                                        coloridx:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Index of the selected color in scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheme\n                                    \n                                \n                                \n                                    \n                                        scheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current scheme selected\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n\n  /**\n   * Whether the scheme is discrete or gradient\n   */\n  type: 'discrete' | 'gradient';\n\n  /**\n   * Name of scheme\n   */\n  name: string;\n\n  /**\n   * Colors used in the scheme\n   */\n  colors: string[];\n\n  /**\n   * Positions for mapping the data to colors\n   */\n  positions: number[];\n}\n\n/**\n * Default Qualitative Scheme1 (discrete)\n */\nexport const GREEENORANGE: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative1',\n  colors: ['#66BB6A', '#B39DDB', '#FFCC80', '#FFFF8D', '#1565C0', '#E91E63', '#E65100'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Qualitative Scheme2 (discrete)\n */\nexport const TEALGREEN: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative2',\n  colors: ['#80CBC4', '#FFFF8D', '#B39DDB', '#EF9A9A', '#64B5F6', '#FFB74D', '#AED581'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme1 (discrete)\n */\nexport const BLUERED: ColorScheme = {\n  type: 'discrete',\n  name: 'bluered',\n  colors: ['#2166AC', '#67A9CF', '#D1E5F0', '#F7F7F7', '#FDDBC7', '#EF8A62', '#B2182B'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme2 (discrete)\n */\nexport const GREENRED: ColorScheme = {\n  type: 'discrete',\n  name: 'greenred',\n  colors: ['#1A9850', '#91CF60', '#D9EF8B', '#FFFFBF', '#FEE08B', '#FC8D59', '#D73027'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme3 (discrete)\n */\nexport const PURPLEBROWN: ColorScheme = {\n  type: 'discrete',\n  name: 'purplebrown',\n  colors: ['#542788', '#998EC3', '#D8DAEB', '#F7F7F7', '#FEE0B6', '#F1A340', '#B35806'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme4 (discrete)\n */\nexport const REDTAN: ColorScheme = {\n  type: 'discrete',\n  name: 'redtan',\n  colors: ['#990000', '#D7301F', '#EF6548', '#FC8D59', '#FDBB84', '#FDD49E', '#FEF0D9'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme5 (discrete)\n */\nexport const PURPLELIGHTBLUE: ColorScheme = {\n  type: 'discrete',\n  name: 'purplelightblue',\n  colors: ['#6E016B', '#88419D', '#8C6BB1', '#8C96C6', '#9EBCDA', '#BFD3E6', '#EDF8FB'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme6 (gradient)\n */\nexport const VIRIDIS: ColorScheme = {\n  type: 'gradient',\n  name: 'viridis',\n  colors: ['#FFE31C', '#B5C740', '#6BAB65', '#21908A', '#2D6379', '#393768', '#450B57'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme7 (gradient)\n */\nexport const MAGMA: ColorScheme = {\n  type: 'gradient',\n  name: 'magma',\n  colors: ['#F8FC9D', '#E1B986', '#CA7670', '#B4335A', '#78223C', '#3D121F', '#020202'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme8 (gradient)\n */\nexport const PLASMA: ColorScheme = {\n  type: 'gradient',\n  name: 'plasma',\n  colors: ['#F2F424', '#E3B842', '#D47D60', '#C6427E', '#883381', '#4A2484', '#0C1687'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default scheme options\n */\nexport const DEFAULT_COLOR_SCHEMES = [\n  GREEENORANGE,\n  TEALGREEN,\n  BLUERED,\n  GREENRED,\n  PURPLEBROWN,\n  // REDTAN,\n  // PURPLELIGHTBLUE,\n  // VIRIDIS,\n  // MAGMA,\n  // PLASMA\n];\n\n/**\n * Object containing scheme and color index info to be emitted when a change is made\n */\nexport interface ColorSchemeSelection {\n\n  /**\n   * Current scheme selected\n   */\n  scheme: ColorScheme;\n\n  /**\n   * Index of the selected color in scheme\n   */\n  coloridx: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-container'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:111\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:79\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:101\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateDrawers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:120\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessageChannel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:58\n                            \n                        \n\n                \n                    \n                        The connected message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(ContentComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:45\n                            \n                        \n\n                \n                    \n                        Content component if provided already wrapped. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(ContentComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:48\n                            \n                        \n\n                \n                    \n                        Content component if provided without wrapping. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DrawerComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:41\n                            \n                        \n\n                \n                    \n                        Drawer components in this container. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                        All subscriptions managed by the container. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component. \n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped. \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean { return this.content1.length !== 0; }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) { throwDuplicateDrawersError('start'); }\n    if (endDrawers.length > 1) { throwDuplicateDrawersError('end'); }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent-1.html":{"url":"components/ContainerComponent-1.html","title":"component - ContainerComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-container'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:111\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:79\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:101\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateDrawers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:120\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessageChannel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:58\n                            \n                        \n\n                \n                    \n                        The connected message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(ContentComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:45\n                            \n                        \n\n                \n                    \n                        Content component if provided already wrapped. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(ContentComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:48\n                            \n                        \n\n                \n                    \n                        Content component if provided without wrapping. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DrawerComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:41\n                            \n                        \n\n                \n                    \n                        Drawer components in this container. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                        All subscriptions managed by the container. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component. \n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped. \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean { return this.content1.length !== 0; }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) { throwDuplicateDrawersError('start'); }\n    if (endDrawers.length > 1) { throwDuplicateDrawersError('end'); }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/content.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n\n@Component({\n  selector: 'ccf-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./content.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-1.html":{"url":"components/ContentComponent-1.html","title":"component - ContentComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @fadeInOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the content is invisible. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.cff-drawer-content-animations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                            \n                        \n\n                \n                    \n                        Whether animations are enabled. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-left.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                            \n                        \n\n                \n                    \n                        Left margin size. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-right.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                            \n                        \n\n                \n                    \n                        Right margin size. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:68\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateFaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:113\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateMargin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:100\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DrawerComponent[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:39\n                            \n                        \n\n                \n                    \n                        References to the side drawers. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if(this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled':\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = startExpanded || endExpanded;\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 7rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: 1.5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-2.html":{"url":"components/ContentComponent-2.html","title":"component - ContentComponent-2","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @fadeInOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the content is invisible. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.cff-drawer-content-animations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                            \n                        \n\n                \n                    \n                        Whether animations are enabled. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-left.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                            \n                        \n\n                \n                    \n                        Left margin size. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-right.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                            \n                        \n\n                \n                    \n                        Right margin size. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:68\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateFaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:113\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateMargin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:100\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DrawerComponent[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:39\n                            \n                        \n\n                \n                    \n                        References to the side drawers. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if(this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled':\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = !!(startExpanded || endExpanded);\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 7rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: 1.5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-2'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when the content component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged-1.html":{"url":"interfaces/ContentContainerChanged-1.html","title":"interface - ContentContainerChanged-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when the content component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentModule.html":{"url":"modules/ContentModule.html","title":"module - ContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\n\nContentComponent\n\nContentComponent\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StageNavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ContentComponent } from '../content/content.component';\nimport { StageNavModule } from './stage-nav/stage-nav.module';\n\n\n@NgModule({\n  imports: [CommonModule, StageNavModule],\n  declarations: [ContentComponent],\n  exports: [ContentComponent]\n})\nexport class ContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHeaderModule\n\nHeaderModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { HeaderModule } from './header/header.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [HttpClientModule, HeaderModule, StoreModule, ThemingModule],\n  exports: [HeaderModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Backend query interface. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAggregateResults\n                                \n                                \n                                    getImageViewerData\n                                \n                                \n                                    getListResults\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:92\n                \n            \n\n\n            \n                \n                    Query aggregate items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageViewerData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:94\n                \n            \n\n\n            \n                \n                    Query a specific image. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:90\n                \n            \n\n\n            \n                \n                    Query list items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource-1.html":{"url":"interfaces/DataSource-1.html","title":"interface - DataSource-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         ZarrInfo | OMEZarrInfo | TiffInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZarrInfo | OMEZarrInfo | TiffInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         LoaderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoaderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hms-dbmi/viv';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n            \n                Description\n            \n            \n                Backend data queries.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _afterConnected\n                            \n                            \n                                dataSource\n                            \n                            \n                                dbOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAggregateResults\n                            \n                            \n                                    Private\n                                    Async\n                                getDB\n                            \n                            \n                                getImageViewerData\n                            \n                            \n                                getListResults\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of data source service.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:77\n                \n            \n\n\n            \n                \n                    Queries for aggregate values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getDB\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDB()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:53\n                \n            \n\n\n            \n                \n                    Gets a reference to the database.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise that resolves to the database when ready.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageViewerData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:97\n                \n            \n\n\n            \n                \n                    Queries data for a specific image.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The image identifier ('\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the result.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:67\n                \n            \n\n\n            \n                \n                    Queries for list values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOntologyTermOccurences\n                        \n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:87\n                \n            \n\n\n            \n                \n                    Queries for ontology term counts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _afterConnected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:21\n                            \n                        \n\n                \n                    \n                        Indicator of when the database is ready. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Remote | CCFDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:17\n                            \n                        \n\n                \n                    \n                        The underlying database. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFDatabaseOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:19\n                            \n                        \n\n                \n                    \n                        Database initialization options. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AggregateResult, CCFDatabase, CCFDatabaseOptions, Filter, ImageViewerData, ListResult } from 'ccf-database';\nimport { Remote, wrap } from 'comlink';\nimport { from, Observable } from 'rxjs';\n\nimport { environment } from './../../../../environments/environment';\n\n\n/**\n * Backend data queries.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceService {\n  /** The underlying database. */\n  dataSource: Remote | CCFDatabase;\n  /** Database initialization options. */\n  dbOptions: CCFDatabaseOptions;\n  /** Indicator of when the database is ready. */\n  private _afterConnected: Promise;\n\n  /**\n   * Creates an instance of data source service.\n   */\n  constructor() {\n    if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      const worker = new Worker('./data-source.worker', { type: 'module' });\n      this.dataSource = wrap(worker);\n    } else {\n      this.dataSource = new CCFDatabase();\n    }\n    this.dbOptions = environment.dbOptions as CCFDatabaseOptions;\n\n    if (typeof globalThis === 'object') {\n      // If a global dbOptions object is set, use this for connecting to the db\n      if (globalThis.dbOptions) {\n        this.dbOptions = { ...this.dbOptions, ...globalThis.dbOptions } as CCFDatabaseOptions;\n      }\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        ((globalThis as unknown) as { db: Remote | CCFDatabase }).db = this.dataSource;\n      }\n    }\n  }\n\n  /**\n   * Gets a reference to the database.\n   *\n   * @returns A promise that resolves to the database when ready.\n   */\n  private async getDB(): Promise | CCFDatabase> {\n    if (!this._afterConnected) {\n      this._afterConnected = this.dataSource.connect(this.dbOptions);\n    }\n    await this._afterConnected;\n    return this.dataSource;\n  }\n\n  /**\n   * Queries for list values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getListResults(filter?: Filter): Observable {\n    return from(this.getDB().then((db) => db.getListResults(filter)));\n  }\n\n  /**\n   * Queries for aggregate values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getAggregateResults(filter?: Filter): Observable {\n    return from(this.getDB().then((db) => db.getAggregateResults(filter)));\n  }\n\n  /**\n   * Queries for ontology term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return from(this.getDB().then((db) => db.getOntologyTermOccurences(filter)));\n  }\n\n  /**\n   * Queries data for a specific image.\n   *\n   * @param iri The image identifier ('@id').\n   * @returns An observable emitting the result.\n   */\n  getImageViewerData(iri: string): Observable {\n    return from(this.getDB().then((db) => db.getImageViewerData(iri)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataState.html":{"url":"injectables/DataState.html","title":"injectable - DataState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/data/data.state.ts\n        \n\n            \n                Description\n            \n            \n                Data state repository and service.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _aggregateDataQueryStatus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _listDataQueryStatus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _termOccurencesDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                aggregateData$\n                            \n                            \n                                    Readonly\n                                aggregateDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                filter$\n                            \n                            \n                                    Readonly\n                                listData$\n                            \n                            \n                                    Readonly\n                                listDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                ontologyTermsFullData$\n                            \n                            \n                                    Readonly\n                                queryStatus$\n                            \n                            \n                                    Readonly\n                                termOccurencesData$\n                            \n                            \n                                    Readonly\n                                termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aggregateData\n                            \n                            \n                                    Private\n                                listData\n                            \n                            \n                                    Private\n                                termOccurencesData\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of data state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data query service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            aggregateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregateData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:181\n                \n            \n\n\n            \n                \n                    Queries for aggregate data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ObservableInput\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            listData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:169\n                \n            \n\n\n            \n                \n                    Queries for list data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ObservableInput\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            termOccurencesData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    termOccurencesData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:193\n                \n            \n\n\n            \n                \n                    Queries for term occurences data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObservableInput>\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilter(filter: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:155\n                \n            \n\n\n            \n                \n                    Updates the current filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes to be made to the current filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _aggregateDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:94\n                            \n                        \n\n                \n                    \n                        Implementation subject for aggregateDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _listDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:92\n                            \n                        \n\n                \n                    \n                        Implementation subject for listDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:96\n                            \n                        \n\n                \n                    \n                        Implementation subject for termOccurencesDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            aggregateData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:107\n                            \n                        \n\n                \n                    \n                        Latest aggregate query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            aggregateDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._aggregateDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:118\n                            \n                        \n\n                \n                    \n                        Current status of queries in the aggregateData$ observable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('filter'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:101\n                            \n                        \n\n                \n                    \n                        Current filter. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            listData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:103\n                            \n                        \n\n                \n                    \n                        Latest list query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            listDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._listDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:116\n                            \n                        \n\n                \n                    \n                        Current status of queries in the listData$ observable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ontologyTermsFullData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:98\n                            \n                        \n\n                \n                    \n                        Keeping track of all ontology terms there is data for. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            queryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:123\n                            \n                        \n\n                \n                    \n                        Current status of all queries. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            termOccurencesData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:111\n                            \n                        \n\n                \n                    \n                        Latest term occurences query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._termOccurencesDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:120\n                            \n                        \n\n                \n                    \n                        Current status of queries in the aggregateData$ observable. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, Filter, ListResult } from 'ccf-database';\nimport { combineLatest, Observable, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { distinct, map, pluck, publishReplay, refCount, switchMap, tap } from 'rxjs/operators';\n\nimport { DataSourceService } from '../../services/data-source/data-source.service';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702']\n};\n\n/** Current state of data queries. */\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n}\n\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository {\n  /** Implementation subject for listDataQueryStatus$. */\n  private readonly _listDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for termOccurencesDataQueryStatus$. */\n  private readonly _termOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$: Observable>;\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest list query data. */\n  readonly listData$ = this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest term occurences query data. */\n  readonly termOccurencesData$ = this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ));\n\n  /** Current status of queries in the listData$ observable. */\n  readonly listDataQueryStatus$ = this._listDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly termOccurencesDataQueryStatus$ = this._termOccurencesDataQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._listDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n\n    const ontologyTermsData = new ReplaySubject>(1);\n    source.getOntologyTermOccurences().subscribe(ontologyTermsData);\n    this.ontologyTermsFullData$ = ontologyTermsData;\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: Object.assign({}, this.getState().filter, filter)\n    });\n  }\n\n  /**\n   * Queries for list data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private listData(filter: Filter): ObservableInput {\n    this._listDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getListResults(filter);\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getAggregateResults(filter);\n  }\n\n  /**\n   * Queries for term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private termOccurencesData(filter: Filter): ObservableInput> {\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getOntologyTermOccurences(filter);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataStateModel.html":{"url":"interfaces/DataStateModel.html","title":"interface - DataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/data/data.state.ts\n        \n\n            \n                Description\n            \n            \n                Store data state. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         Filter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current filter. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, Filter, ListResult } from 'ccf-database';\nimport { combineLatest, Observable, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { distinct, map, pluck, publishReplay, refCount, switchMap, tap } from 'rxjs/operators';\n\nimport { DataSourceService } from '../../services/data-source/data-source.service';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702']\n};\n\n/** Current state of data queries. */\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n}\n\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository {\n  /** Implementation subject for listDataQueryStatus$. */\n  private readonly _listDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for termOccurencesDataQueryStatus$. */\n  private readonly _termOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$: Observable>;\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest list query data. */\n  readonly listData$ = this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest term occurences query data. */\n  readonly termOccurencesData$ = this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ));\n\n  /** Current status of queries in the listData$ observable. */\n  readonly listDataQueryStatus$ = this._listDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly termOccurencesDataQueryStatus$ = this._termOccurencesDataQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._listDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n\n    const ontologyTermsData = new ReplaySubject>(1);\n    source.getOntologyTermOccurences().subscribe(ontologyTermsData);\n    this.ontologyTermsFullData$ = ontologyTermsData;\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: Object.assign({}, this.getState().filter, filter)\n    });\n  }\n\n  /**\n   * Queries for list data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private listData(filter: Filter): ObservableInput {\n    this._listDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getListResults(filter);\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getAggregateResults(filter);\n  }\n\n  /**\n   * Queries for term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private termOccurencesData(filter: Filter): ObservableInput> {\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getOntologyTermOccurences(filter);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  { name: 'logo', namespace: 'app', url: 'assets/icons/app/hubmap-logo.svg' },\n\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n\n  // Add default icons here!\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition-1.html":{"url":"interfaces/DefaultIconDefinition-1.html","title":"interface - DefaultIconDefinition-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  { name: 'logo', namespace: 'app', url: 'assets/icons/hubmap-logo.svg' },\n\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/icons-organs_bladder.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/icons-organs_brain.svg' },\n  { name: 'colon', namespace: 'app', url: 'assets/icons/icons-organs_colon.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/icons-organs_heart.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/icons-organs_kidney.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/icons-organs_liver.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/icons-organs_lung.svg' },\n  { name: 'lymph_nodes', namespace: 'app', url: 'assets/icons/icons-organs_lymph-nodes.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/icons-organs_ovaries.svg' },\n  { name: 'small_intestine', namespace: 'app', url: 'assets/icons/icons-organs_small intestine.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/icons-organs_spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/icons-organs_stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/icons-organs_thymus.svg' },\n\n  // Add default icons here!\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        drawers\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                    \n                                \n                                \n                                    \n                                        drawers:     [unknown, unknown]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [unknown, unknown]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged-1.html":{"url":"interfaces/DrawerContainersChanged-1.html","title":"interface - DrawerContainersChanged-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        drawers\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                    \n                                \n                                \n                                    \n                                        drawers:     [unknown, unknown]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [unknown, unknown]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized-1.html":{"url":"interfaces/DrawerInitialized-1.html","title":"interface - DrawerInitialized-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expanded\n                                \n                                \n                                        margin\n                                \n                                \n                                        opened\n                                \n                                \n                                        type\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled-1.html":{"url":"interfaces/DrawerToggled-1.html","title":"interface - DrawerToggled-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expanded\n                                \n                                \n                                        margin\n                                \n                                \n                                        opened\n                                \n                                \n                                        type\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n\n\n    \n        Description\n    \n    \n        Component for a dropdown menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                optionsVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChanged\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:16\n                            \n                        \n                \n                    \n                        What the component is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:21\n                            \n                        \n                \n                    \n                        Choices displayed in the dropdown menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:26\n                            \n                        \n                \n                    \n                        Current option selected.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the new selected option when selection is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:49\n                \n            \n\n\n            \n                \n                    Updates the selected value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value that has been selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleOptions\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:41\n                \n            \n\n\n            \n                \n                    Controls fade-in effect after dropdown menu opens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'invisible'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:36\n                            \n                        \n\n                \n                    \n                        Determines if menu contents are visible (used for fade-in effect).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Component for a dropdown menu.\n */\n@Component({\n  selector: 'ccf-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent {\n\n  /**\n   * What the component is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * Choices displayed in the dropdown menu.\n   */\n  @Input() options: string[];\n\n  /**\n   * Current option selected.\n   */\n  @Input() selection: string;\n\n  /**\n   * Emits the new selected option when selection is changed.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines if menu contents are visible (used for fade-in effect).\n   */\n  optionsVisible = 'invisible';\n\n  /**\n   * Controls fade-in effect after dropdown menu opens\n   */\n  toggleOptions(): void {\n    this.optionsVisible = this.optionsVisible === 'visible' ? 'invisible' : 'visible';\n  }\n\n  /**\n   * Updates the selected value.\n   * @param value The value that has been selected\n   */\n  selectionChanged(value: string): void {\n    this.selection = value;\n    this.selectionChange.emit(value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n      \n        \n          \n            {{ option }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dropdown.component.scss\n                \n                @keyframes slideInHorizontalDropdown {\n  from {\n    width: 0;\n  }\n  to {\n    width: 9.85rem;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.dropdown-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        font-size: 14px;\n        border: none;\n\n        mat-select {\n          font-size: 16px;\n          font-weight: bold;\n        }\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      background-color: black;\n      transform: none;\n      height: 2px;\n    }\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .option-panel {\n  animation: slideInHorizontalDropdown .3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  position: absolute !important;\n  top: 1.55rem;\n  max-width: 152px;\n  border-radius: 0px;\n  border-width: 1px;\n  border-style: solid;\n\n\n  .mat-option {\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    padding-left: 1em;\n  }\n\n  :last-child {\n    border-bottom: none;\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0px !important;\n}\n\n.dropdown-form-field {\n  height: 3rem;\n  width: 100%;\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n  }\n}\n\n::ng-deep .ccf-dropdown {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-.5em);\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}                                    {{ option }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dropdown/dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DropdownComponent } from './dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent]\n})\n\nexport class DropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualSliderComponent.html":{"url":"components/DualSliderComponent.html","title":"component - DualSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DualSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n\n\n    \n        Description\n    \n    \n        Component containing a button that when clicked will show a slider popover.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dual-slider\n            \n\n            \n                styleUrls\n                ./dual-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsVisible\n                            \n                            \n                                highValue\n                            \n                            \n                                    Private\n                                isSliderInitialized\n                            \n                            \n                                isSliderOpen\n                            \n                            \n                                lowValue\n                            \n                            \n                                options\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                popoverElement\n                            \n                            \n                                popoverPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeSliderPopover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onKeyHigh\n                            \n                            \n                                onKeyLow\n                            \n                            \n                                optionsChanged\n                            \n                            \n                                sliderValueChanged\n                            \n                            \n                                toggleSliderPopover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                selection\n                            \n                            \n                                valueRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rangeLabel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:102\n                            \n                        \n\n                \n                    \n                            Creates an instance of dual slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The overlay service used to create the slider popover.\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the component's element. Used during event handling.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:41\n                            \n                        \n                \n                    \n                        Which criteria the slider is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:51\n                            \n                        \n                \n                    \n                        The current range selected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueRange\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:46\n                            \n                        \n                \n                    \n                        The lower and upper range of the slider.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:56\n                            \n                        \n                \n                    \n                        Emits the new selection range when a change is made to it.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:168\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:214\n                \n            \n\n\n            \n                \n                    Creates and initializes the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:125\n                \n            \n\n\n            \n                \n                    Updates slider options (with optionsChanged) and selection when changes detected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes that have been made to the slider properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:155\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyHigh\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyHigh(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:243\n                \n            \n\n\n            \n                \n                    Updates the slider's high pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyLow\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyLow(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:227\n                \n            \n\n\n            \n                \n                    Updates the slider's low pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionsChanged\n                        \n                        \n                    \n                \n            \n            \n                \noptionsChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:139\n                \n            \n\n\n            \n                \n                    Updates the slider options, and the slider values if necessary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sliderValueChanged\n                        \n                        \n                    \n                \n            \n            \n                \nsliderValueChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:204\n                \n            \n\n\n            \n                \n                    Handler for updates to the slider values.\nEmits the updated selection value array.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:187\n                \n            \n\n\n            \n                \n                    Toggles the visibility of the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'invisible'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:81\n                            \n                        \n\n                \n                    \n                        Determines if slider contents are visible (used for fade-in effect).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:76\n                            \n                        \n\n                \n                    \n                        Value bound to the slider's high pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isSliderInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:102\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover has been created and initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSliderOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:61\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover is shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:71\n                            \n                        \n\n                \n                    \n                        Value bound to the slider's low pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:66\n                            \n                        \n\n                \n                    \n                        Slider options.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OverlayRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:97\n                            \n                        \n\n                \n                    \n                        Reference to the slider popover overlay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popover', {read: ElementRef, static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the popover element.\nThis is undefined until the slider popover is initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverPortal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CdkPortal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CdkPortal, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the template for the slider popover.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rangeLabel\n                    \n                \n\n                \n                    \n                        getrangeLabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:86\n                                \n                            \n                    \n                        \n                                Computes the current age range for display in the button.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { Options } from 'ng5-slider';\n\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-dual-slider',\n  templateUrl: './dual-slider.component.html',\n  styleUrls: ['./dual-slider.component.scss']\n})\nexport class DualSliderComponent implements OnDestroy, OnChanges {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement: ElementRef;\n\n  /**\n   * Which criteria the slider is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * The lower and upper range of the slider.\n   */\n  @Input() valueRange: number[];\n\n  /**\n   * The current range selected.\n   */\n  @Input() selection: number[];\n\n  /**\n   * Emits the new selection range when a change is made to it.\n   */\n  @Output() selectionChange = new EventEmitter();\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options: Options;\n\n  /**\n   * Value bound to the slider's low pointer value.\n   */\n  lowValue: number;\n\n  /**\n   * Value bound to the slider's high pointer value.\n   */\n  highValue: number;\n\n  /**\n   * Determines if slider contents are visible (used for fade-in effect).\n   */\n  contentsVisible = 'invisible';\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get rangeLabel(): string {\n    const { lowValue, highValue } = this;\n    if (lowValue === highValue) {\n      return `${lowValue}`;\n    }\n    return `${lowValue}-${highValue}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of dual slider component.\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   */\n  constructor(\n    overlay: Overlay,\n    private element: ElementRef,\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'slider-pane',\n      positionStrategy\n    });\n  }\n\n  /**\n   * Updates slider options (with optionsChanged) and selection when changes detected.\n   * @param changes Changes that have been made to the slider properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.valueRange) {\n      this.optionsChanged();\n    }\n    if (changes.selection) {\n      // Detect when selection is changed and update low/high value.\n      this.lowValue = Math.min(...this.selection);\n      this.highValue = Math.max(...this.selection);\n    }\n  }\n\n  /**\n   * Updates the slider options, and the slider values if necessary.\n   */\n  optionsChanged(): void {\n    this.options = {\n      floor: this.valueRange ? this.valueRange[0] : 0,\n      ceil: this.valueRange ? this.valueRange[1] : 0,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n    this.lowValue = this.options.floor ?? 0;\n    this.highValue = this.options.ceil ?? 0;\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy(): void {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click, mouse movement, and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  // @HostListener('document:mousemove', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  @HostListener('document:touchstart', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    if (!isSliderOpen) {\n      return;\n    } else if (element.nativeElement.contains(target)) {\n      return;\n    } else if (popoverElement && popoverElement.nativeElement.contains(target)) {\n      return;\n    }\n\n    this.overlayRef.detach();\n    this.isSliderInitialized = false;\n    this.isSliderOpen = false;\n    this.contentsVisible = 'invisible';\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (isSliderInitialized) {\n      this.overlayRef.detach();\n      this.isSliderInitialized = false;\n    } else if (!isSliderInitialized && !isSliderOpen) {\n      this.initializeSliderPopover();\n    }\n\n    this.contentsVisible = this.contentsVisible === 'visible' ? 'invisible' : 'visible';\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Emits the updated selection value array.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue } = this;\n\n    this.selection = [lowValue, highValue];\n    this.selectionChange.emit(this.selection);\n  }\n\n  /**\n   * Creates and initializes the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n\n  /**\n   * Updates the slider's low pointer value when Enter key is pressed.\n   * @param event Event passed into the component\n   */\n  onKeyLow(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue = Number(this.options.floor) && newValue \n    \n\n    \n        \n  \n    \n      \n         {{ options.floor }}> \n        \n      \n\n      \n      \n\n      \n         {{ options.ceil }} \n        \n      \n    \n\n    \n      \n        {{ label }}\n        {{ rangeLabel }}\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual-slider.component.scss\n                \n                .slider-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        border: none;\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      background-color: black;\n      transform: none;\n      height: 2px;\n    }\n  }\n}\n\n\n.slider-labels {\n  display: flex;\n  flex-direction: column;\n  .name-label {\n    font-size: 14px;\n  }\n\n  .range-label {\n    font-weight: bold;\n  }\n}\n\n::ng-deep .ccf-slider.wrapper {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-1.5em);\n  }\n}\n\n// Styles for the popover slider\n// NOTE: This must NOT be nested inside the wrapper/container!\n\n@keyframes slideInHorizontalSlider {\n  from {\n    width: 0;\n  }\n  to {\n    width: 20em;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .slider-pane {\n  border-width: 1px;\n  border-style: solid;\n  position: absolute !important;\n  top: -1px;\n}\n\n.ccf-slider.detached {\n  animation: slideInHorizontalSlider 0.3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 0rem;\n  height: 70px;\n  padding: .75rem; // NOTE: Use padding instead of margin!\n\n  .slider ::ng-deep {\n    visibility: hidden;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: .15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: 0.095rem - ($pointer-size / 2);\n      border-width: .1rem;\n      border-style: solid;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    width: 32px;\n    \n    &.min {\n      margin-right: 1rem;\n    }\n    \n    &.max {\n      margin-left: 1rem;\n      align-items: flex-end;\n\n      .ceil, input {\n        text-align: right;\n      }\n    }\n\n    .floor, .ceil {\n      font-size: 14px;\n    }\n\n    input {\n      border: none;\n      width: 28px;\n      font-size: 16px;\n      font-weight: bold;\n      padding: 0;\n    }\n\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{ options.floor }}>                                          {{ options.ceil }}                                     {{ label }}        {{ rangeLabel }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualSliderModule.html":{"url":"modules/DualSliderModule.html","title":"module - DualSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    DualSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { DualSliderComponent } from './dual-slider.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    Ng5SliderModule\n  ],\n  declarations: [DualSliderComponent],\n  exports: [DualSliderComponent]\n})\nexport class DualSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtDeckProps.html":{"url":"interfaces/ExtDeckProps.html","title":"interface - ExtDeckProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtDeckProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DeckProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canvas\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hms-dbmi/viv';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Options applied during queries. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ageRange\n                                \n                                \n                                        bmiRange\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        hasSpatialEntity\n                                \n                                \n                                            Optional\n                                        highlightedEntities\n                                \n                                \n                                        ontologyTerms\n                                \n                                \n                                        sex\n                                \n                                \n                                        technologies\n                                \n                                \n                                        tmc\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                    \n                                \n                                \n                                    \n                                        ageRange:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Age range. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                    \n                                \n                                \n                                    \n                                        bmiRange:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    BMI range. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Include optional debugging information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSpatialEntity\n                                    \n                                \n                                \n                                    \n                                        hasSpatialEntity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether it has a spatial entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedEntities\n                                    \n                                \n                                \n                                    \n                                        highlightedEntities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Entities to be highlighted \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ontology terms. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:     \"Both\" | \"Male\" | \"Female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Both\" | \"Male\" | \"Female\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gender. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technologies. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tmc\n                                    \n                                \n                                \n                                    \n                                        tmc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TMC. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersContentComponent.html":{"url":"components/FiltersContentComponent.html","title":"component - FiltersContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n\n\n    \n        Description\n    \n    \n        Contains components of the filters popup and handles changes in filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-content\n            \n\n            \n                styleUrls\n                ./filters-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyButtonClick\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:21\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:16\n                            \n                        \n                \n                    \n                        Determines if the filters are visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        applyFilters\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the filters to be applied\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the filter change when they happen\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \napplyButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:46\n                \n            \n\n\n            \n                \n                    Emits the current filters when the apply button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilter(value: unknown, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:38\n                \n            \n\n\n            \n                \n                    Updates the filter object with a new key/value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be saved for the filter\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the filter to be saved at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Contains components of the filters popup and handles changes in filter settings\n */\n@Component({\n  selector: 'ccf-filters-content',\n  templateUrl: './filters-content.component.html',\n  styleUrls: ['./filters-content.component.scss']\n})\nexport class FiltersContentComponent {\n\n  /**\n   * Determines if the filters are visible\n   */\n  @Input() hidden: boolean;\n\n  /**\n   * Allows the filters to be set from outside the component\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emits the filter change when they happen\n   */\n  @Output() filtersChange = new EventEmitter>();\n\n  /**\n   * Emits the filters to be applied\n   */\n  @Output() applyFilters = new EventEmitter>();\n\n  /**\n   * Updates the filter object with a new key/value\n   * @param value The value to be saved for the filter\n   * @param key The key for the filter to be saved at\n   */\n  updateFilter(value: unknown, key: string): void {\n    this.filters = { ...this.filters, [key]: value };\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits the current filters when the apply button is clicked\n   */\n  applyButtonClick(): void {\n    this.applyFilters.emit(this.filters);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n  \n\n\n\n  \n\n\n\n  APPLY FILTERS\n\n\n    \n\n    \n                \n                    ./filters-content.component.scss\n                \n                .filter {\n  &.hidden {\n    display: none !important;\n  }\n\n  margin-top: 2em;\n}\n\n.button-container {\n  &.hidden {\n    display: none !important;\n  }\n  \n  margin-top: 2em;\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.outline-button {\n  box-shadow: 0.1rem 0.1rem 0.2rem 0rem #000000;\n  border-radius: 4px;\n  background: none;\n  border-width: 1px;\n  border-style: solid;\n  padding: 0.4em;\n  cursor: pointer;\n}\n\n.outline-button:active {\n  background: #69f0ae;\n  color: black;\n}\n\n.patient-filters {\n  display: flex;\n  width: 90%;\n\n  &.hidden {\n    display: none !important;\n  }\n\n  ccf-dual-slider {\n    margin-left: .5em;\n    width: 33%;\n  }\n\n  ccf-dropdown {\n    width: 33%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            APPLY FILTERS'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersContentModule.html":{"url":"modules/FiltersContentModule.html","title":"module - FiltersContentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CheckboxModule\n                        \n                        \n                            DropdownModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CheckboxModule } from '../../../shared/components/checkbox/checkbox.module';\nimport { DropdownModule } from '../../../shared/components/dropdown/dropdown.module';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { FiltersContentComponent } from './filters-content.component';\n\n\n@NgModule({\n  imports: [CommonModule, CheckboxModule, DropdownModule, DualSliderModule],\n  declarations: [FiltersContentComponent],\n  exports: [FiltersContentComponent]\n})\nexport class FiltersContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersPopoverComponent.html":{"url":"components/FiltersPopoverComponent.html","title":"component - FiltersPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n\n\n    \n        Description\n    \n    \n        Popover box for filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-popover\n            \n\n            \n                styleUrls\n                ./filters-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                removeBox\n                            \n                            \n                                toggleFilterVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawerExpanded\n                            \n                            \n                                filters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawerExpanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:21\n                            \n                        \n                \n                    \n                        Keeps track of whether or not the containing drawer is expanded\nBecause the styles need to change accordingly\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:15\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilters(filters: Record)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:51\n                \n            \n\n\n            \n                \n                    Emits the current filters, and hides the popover box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object containing all the currently set filters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBox\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:43\n                \n            \n\n\n            \n                \n                    Hides the filters popover box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFilterVisible\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFilterVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:36\n                \n            \n\n\n            \n                \n                    Toggles filter visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:31\n                            \n                        \n\n                \n                    \n                        Keeps track of whether or not the filters popover box is visible or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Popover box for filter settings\n */\n@Component({\n  selector: 'ccf-filters-popover',\n  templateUrl: './filters-popover.component.html',\n  styleUrls: ['./filters-popover.component.scss']\n})\nexport class FiltersPopoverComponent {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filters: Record;\n\n  /**\n   * Keeps track of whether or not the containing drawer is expanded\n   * Because the styles need to change accordingly\n   */\n  @Input() drawerExpanded: boolean;\n\n  /**\n   * Emits the current filters\n   */\n  @Output() filtersChange = new EventEmitter>();\n\n  /**\n   * Keeps track of whether or not the filters popover box is visible or not\n   */\n  filtersVisible = false;\n\n  /**\n   * Toggles filter visible\n   */\n  toggleFilterVisible(): void {\n    this.filtersVisible = !this.filtersVisible;\n  }\n\n  /**\n   * Hides the filters popover box\n   */\n  removeBox(): void {\n    this.filtersVisible = false;\n  }\n\n  /**\n   * Emits the current filters, and hides the popover box\n   * @param filters The object containing all the currently set filters\n   */\n  applyFilters(filters: Record): void {\n    this.filters = filters;\n    this.filtersChange.emit(filters);\n    this.removeBox();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./filters-popover.component.scss\n                \n                .filters-popover {\n  position: inherit;\n\n  &.expanded {\n    position: relative;\n\n    .popup-container {\n      right: inherit;\n    }\n\n    .popup-body {\n      padding-left: 4em !important;\n    }\n  }\n}\n\n.popup-container {\n  position: absolute;\n  border-width: 0px;\n  border-style: solid;\n  width: 0em;\n  height: 16.5rem; // 22.5rem\n  z-index: 5;\n  top: 0;\n  right: 24rem;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  transition-property: width;\n  transition-duration: 0.3s;\n\n  .popup-body {\n    position: relative;\n    opacity: 0;\n    transition-property: opacity;\n    transition-duration: 0s;\n    transition-delay: 0s;\n  }\n\n  &.visible {\n    width: 35rem;\n    border-width: 1px;\n\n    .popup-body {\n      padding: 1.5rem;\n      opacity: 1;\n      transition-delay: 0.3s;\n      transition-duration: 0.3s;\n    }\n  }\n}\n\n.show-hide {\n  width: 3rem;\n  height: 3rem;\n  background: none;\n  border: none;\n  z-index: 10;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersPopoverModule.html":{"url":"modules/FiltersPopoverModule.html","title":"module - FiltersPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_imports\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FiltersContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FiltersContentModule } from '../filters-content/filters-content.module';\nimport { FiltersPopoverComponent } from './filters-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FiltersContentModule],\n  declarations: [FiltersPopoverComponent],\n  exports: [FiltersPopoverComponent]\n})\nexport class FiltersPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlatNode.html":{"url":"classes/FlatNode.html","title":"class - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/flat-node.ts\n        \n\n            \n                Description\n            \n            \n                Node type used by ontology tree component.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    expandable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(original: OntologyNode, level: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:29\n                            \n                        \n\n                \n                    \n                            Creates an instance of flat node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        original\n                                                  \n                                                        \n                                                                        OntologyNode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The original ontology node object.\n\n                                                        \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The level of the new flat node in the tree.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(original: OntologyNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:27\n                \n            \n\n\n            \n                \n                    Creates a flat node from a ontology node object and a level in the tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original ontology node object.\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The level of the new flat node in the tree.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlatNode\n\n                    \n                    \n                        The newly created flat node.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:11\n                                \n                            \n                    \n                        \n                                Gets this node's label.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expandable\n                    \n                \n\n                \n                    \n                        getexpandable()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:16\n                                \n                            \n                    \n                        \n                                Indicates whether this node has children.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { OntologyNode } from './ontology-node';\n\n\n/**\n * Node type used by ontology tree component.\n */\nexport class FlatNode {\n  /**\n   * Gets this node's label.\n   */\n  get label(): string { return this.original.label; }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean {\n    return this.original.children.length > 0;\n  }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(readonly original: OntologyNode, readonly level: number) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenderSelectorComponent.html":{"url":"components/GenderSelectorComponent.html","title":"component - GenderSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GenderSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/gender-selector/gender-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Slider for gender selection\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-gender-selector\n            \n\n            \n                styleUrls\n                ./gender-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./gender-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateGender\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isMale\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                genderChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/gender-selector/gender-selector.component.ts:16\n                            \n                        \n                \n                    \n                        Disables the silder if not applicable to currently selected organ\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isMale\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/gender-selector/gender-selector.component.ts:21\n                            \n                        \n                \n                    \n                        Input to determine if 'Male' is selected\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        genderChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/gender-selector/gender-selector.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the currently selected gender\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGender\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGender(selection: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/gender-selector/gender-selector.component.ts:32\n                \n            \n\n\n            \n                \n                    Updates and emits the currently selected gender\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current toggle state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Slider for gender selection\n */\n@Component({\n  selector: 'ccf-gender-selector',\n  templateUrl: './gender-selector.component.html',\n  styleUrls: ['./gender-selector.component.scss']\n})\nexport class GenderSelectorComponent {\n\n  /**\n   * Disables the silder if not applicable to currently selected organ\n   */\n  @Input() disabled = false;\n\n  /**\n   * Input to determine if 'Male' is selected\n   */\n  @Input() isMale = true;\n\n  /**\n   * Emits the currently selected gender\n   */\n  @Output() genderChanged = new EventEmitter();\n\n  /**\n   * Updates and emits the currently selected gender\n   * @param selection The current toggle state\n   */\n  updateGender(selection: boolean): void {\n    this.isMale = !selection;\n    this.genderChanged.emit(this.isMale ? 'male' : 'female');\n  }\n\n}\n\n    \n\n    \n        Male\n\n\nFemale\n    \n\n    \n                \n                    ./gender-selector.component.scss\n                \n                .slide-label {\n  margin: 0 1rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'MaleFemale'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenderSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GenderSelectorModule.html":{"url":"modules/GenderSelectorModule.html","title":"module - GenderSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    GenderSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GenderSelectorModule\n\n\n\ncluster_GenderSelectorModule_declarations\n\n\n\ncluster_GenderSelectorModule_exports\n\n\n\n\nGenderSelectorComponent\n\nGenderSelectorComponent\n\n\n\nGenderSelectorModule\n\nGenderSelectorModule\n\nGenderSelectorModule -->\n\nGenderSelectorComponent->GenderSelectorModule\n\n\n\n\n\nGenderSelectorComponent \n\nGenderSelectorComponent \n\nGenderSelectorComponent  -->\n\nGenderSelectorModule->GenderSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/gender-selector/gender-selector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GenderSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GenderSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { GenderSelectorComponent } from './gender-selector.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule],\n  declarations: [GenderSelectorComponent],\n  exports: [GenderSelectorComponent]\n})\nexport class GenderSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/core/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header which is always displayed on the site; contains current filter info,\na link to download data, and a logo which resets the page when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hubmapPortalUrl\n                            \n                            \n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                downloadClicked\n                            \n                            \n                                refreshClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:28\n                            \n                        \n                \n                    \n                        Current filter settings\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapPortalUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:18\n                            \n                        \n                \n                    \n                        URL to Hubmap Portal site\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedIn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:23\n                            \n                        \n                \n                    \n                        Is the user logged in?\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        downloadClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:38\n                            \n                        \n                \n                    \n                        Emitted when download button is clicked\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:33\n                            \n                        \n                \n                    \n                        Emitted when refresh button is clicked\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Header which is always displayed on the site; contains current filter info,\n * a link to download data, and a logo which resets the page when clicked.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n\n  /**\n   * URL to Hubmap Portal site\n   */\n  @Input() hubmapPortalUrl: string;\n\n  /**\n   * Is the user logged in?\n   */\n  @Input() loggedIn: boolean;\n\n  /**\n   * Current filter settings\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emitted when refresh button is clicked\n   */\n  @Output() refreshClicked = new EventEmitter();\n\n  /**\n   * Emitted when download button is clicked\n   */\n  @Output() downloadClicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n  \n    Sex: {{filters?.sex}}\n    Age: {{filters?.ageRange[0]}}-{{filters?.ageRange[1]}}\n    BMI: {{filters?.bmiRange[0]}}-{{filters?.bmiRange[1]}}\n  \n\n  refresh\n\n  \n    \n      cloud_download\n    \n  \n  \n\n  Login\n  Logout\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .ccf-header {\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  display: flex;\n\n  .logo {\n    width: 6rem;\n  }\n\n  .download {\n    height: 1.5rem;\n  }\n\n  // Styled to match the HuBMAP Portal\n  .authentication {\n    width: 8.25rem;\n    border-radius: 2px;\n  }\n\n  .logo, .download, .refresh {\n    display: flex;\n    align-items: center;\n    transition: color 1s;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  :not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n\n  .filter-labels {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    font: 400 16px/20px Inter, sans-serif;\n  }\n\n  ::ng-deep ccf-info-button {\n    height: 2rem;\n    width: 2rem;\n    display: flex;\n    justify-content: center;\n    .mat-icon {\n      height: 2rem;\n      width: 2rem;\n      font-size: 2rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Sex: {{filters?.sex}}    Age: {{filters?.ageRange[0]}}-{{filters?.ageRange[1]}}    BMI: {{filters?.bmiRange[0]}}-{{filters?.bmiRange[1]}}    refresh            cloud_download          Login  Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent-1.html":{"url":"components/HeaderComponent-1.html","title":"component - HeaderComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Page header\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of header component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-header'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\nimport { PageState } from '../../core/store/page/page.state';\n\n\n/**\n * Page header\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-header';\n\n  /**\n   * Creates an instance of header component.\n   *\n   * @param page Page data.\n   */\n  constructor(readonly page: PageState) { }\n}\n\n    \n\n    \n        \n\n\n\n  \n    chevron_left\n    BACK\n  \n\n\n\n  \n    \n  \n  CCF REGISTRATION USER INTERFACE\n\n\n\n\ninfo_outline\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n\n  .text {\n    font-size: 1.5rem;\n    font-weight: lighter;\n  }\n\n  .link {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  .home {\n    * {\n      transition: color 1s;\n    }\n\n    .backbutton {\n      // Material icons do not always fill the space given\n      // Scale up size for icon to look correct\n      font-size: 2.25rem;\n      width: 2.25rem;\n      height: 2.25rem;\n    }\n  }\n\n  .hubmap .logo {\n    width: 4.5rem;\n    height: 1.5rem;\n    margin-right: 1rem;\n  }\n\n  .info {\n    cursor: pointer;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      chevron_left    BACK            CCF REGISTRATION USER INTERFACEinfo_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoButtonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { InfoButtonModule } from '../../modules/info/info-button/info-button.module';\nimport { HeaderComponent } from './header.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule, MatTooltipModule, InfoButtonModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition-1.html":{"url":"interfaces/IconDefinition-1.html","title":"interface - IconDefinition-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getArguments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:120\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown[]\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMethodName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:106\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerIcon\n                        \n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:72\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerIconImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:82\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState-1.html":{"url":"injectables/IconRegistryState-1.html","title":"injectable - IconRegistryState-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getArguments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:120\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown[]\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMethodName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:106\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerIcon\n                        \n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:72\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerIconImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:82\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdObject.html":{"url":"interfaces/IdObject.html","title":"interface - IdObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IdObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@id' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@id' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageViewer.html":{"url":"classes/ImageViewer.html","title":"class - ImageViewer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageViewer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channelConfigs\n                            \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _loaders\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                deck\n                            \n                            \n                                    Protected\n                                layerConfigs\n                            \n                            \n                                    Protected\n                                layers\n                            \n                            \n                                    Readonly\n                                props\n                            \n                            \n                                    Protected\n                                states\n                            \n                            \n                                    Protected\n                                views\n                            \n                            \n                                    Protected\n                                vivViews\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createVivViews\n                            \n                            \n                                finalize\n                            \n                            \n                                    Private\n                                initializeDeck\n                            \n                            \n                                    Private\n                                layerFilter\n                            \n                            \n                                    Private\n                                onViewStateChange\n                            \n                            \n                                    Private\n                                resetChannelConfigs\n                            \n                            \n                                    Async\n                                setSize\n                            \n                            \n                                    Async\n                                setSources\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Async\n                                updateChannelConfigs\n                            \n                            \n                                    Protected\n                                updateDeckProps\n                            \n                            \n                                    Protected\n                                updateLayers\n                            \n                            \n                                    Protected\n                                updateState\n                            \n                            \n                                    Protected\n                                updateViews\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    sources\n                                \n                                \n                                    loaders\n                                \n                                \n                                    channelNames\n                                \n                                \n                                    channelConfigs\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Props)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:86\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    Props\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _channelConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Loader[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayerConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Layer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            props\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            vivViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VivView[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:80\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalize\n                        \n                        \n                    \n                \n            \n            \n                \nfinalize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeDeck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDeck(props)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Deck\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            layerFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerFilter(undefined: LayerFilterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LayerFilterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewStateChange(undefined: OnViewStateChangeArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OnViewStateChangeArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChannelConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize(width: number, height: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSources(sources: DataSource[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            DataSource[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChannelConfigs(configs: Record>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Record>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateDeckProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDeckProps(props: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(args: ValueOrGenerator | >)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ValueOrGenerator | >\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n\n                \n                    \n                        getsources()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loaders\n                    \n                \n\n                \n                    \n                        getloaders()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        channelNames\n                    \n                \n\n                \n                    \n                        getchannelNames()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        channelConfigs\n                    \n                \n\n                \n                    \n                        getchannelConfigs()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:77\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hms-dbmi/viv';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerAccordionComponent.html":{"url":"components/ImageViewerAccordionComponent.html","title":"component - ImageViewerAccordionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerAccordionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts\n\n\n    \n        Description\n    \n    \n        Expandable accordion panel for the image viewer\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-accordion\n            \n\n            \n                styleUrls\n                ./image-viewer-accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layers\n                            \n                            \n                                metadata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:30\n                            \n                        \n                \n                    \n                        Whether content is waiting to be loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:25\n                            \n                        \n                \n                    \n                        The list of layers used to render this and child components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metadata\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:20\n                            \n                        \n                \n                    \n                        Metadata of image to be displayed in the About panel\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:35\n                            \n                        \n                \n                    \n                        Output to pass up the changes made to the layers to parent components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:38\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.  \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme } from '../../color-scheme/color-schemes';\n\n\n/**\n * Expandable accordion panel for the image viewer\n */\n@Component({\n  selector: 'ccf-image-viewer-accordion',\n  templateUrl: './image-viewer-accordion.component.html',\n  styleUrls: ['./image-viewer-accordion.component.scss']\n})\nexport class ImageViewerAccordionComponent {\n\n  /**\n   * Metadata of image to be displayed in the About panel\n   */\n  @Input() metadata: { label: string; value: string; }[];\n\n  /**\n   * The list of layers used to render this and child components\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Whether content is waiting to be loaded.\n   */\n  @Input() isLoading: boolean;\n\n  /**\n   * Output to pass up the changes made to the layers to parent components\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /** Emits when the default scheme has changed.  */\n  @Output() schemeChange = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n      Layers\n    \n    \n  \n\n  \n    \n      About\n    \n    \n      \n        {{ entry.label }}:\n        {{ entry.value }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-accordion.component.scss\n                \n                .mat-expansion-panel {\n  margin-left: 1.5rem;\n  margin-right: 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  border-radius: 0 !important;\n  position: unset;\n\n  .mat-expansion-panel-header {\n    padding: 0;\n\n    mat-panel-title {\n      font-weight: bold;\n    }\n\n    ::ng-deep .mat-expansion-indicator {\n      position: relative;\n      right: 1em;\n    }\n  }\n\n  .data-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    font-size: 0.75rem;\n\n    .data-entry {\n      display: flex;\n      text-overflow: ellipsis;\n      justify-content: center;\n      margin-bottom: .25rem;\n\n      .label,\n      .value {\n        display: flex;\n        height: 1rem;\n        line-height: 1rem;\n      }\n\n      .label {\n        justify-content: flex-end;\n        width: 50%;\n      }\n\n      .value {\n        justify-content: flex-start;\n        margin-left: 1rem;\n        width: 50%;\n        flex-wrap: wrap;\n        height: 100%;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Layers                      About                      {{ entry.label }}:        {{ entry.value }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerAccordionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerAccordionModule.html":{"url":"modules/ImageViewerAccordionModule.html","title":"module - ImageViewerAccordionModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerAccordionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerAccordionModule\n\n\n\ncluster_ImageViewerAccordionModule_declarations\n\n\n\ncluster_ImageViewerAccordionModule_imports\n\n\n\ncluster_ImageViewerAccordionModule_exports\n\n\n\n\nImageViewerAccordionComponent\n\nImageViewerAccordionComponent\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule -->\n\nImageViewerAccordionComponent->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent  -->\n\nImageViewerAccordionModule->ImageViewerAccordionComponent \n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerAccordionModule -->\n\nImageViewerLayersModule->ImageViewerAccordionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerAccordionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImageViewerLayersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerAccordionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\nimport { ImageViewerAccordionComponent } from './image-viewer-accordion.component';\nimport { ImageViewerLayersModule } from '../image-viewer-layers/image-viewer-layers.module';\n\n\n@NgModule({\n  imports: [CommonModule, MatExpansionModule, ImageViewerLayersModule],\n  declarations: [ImageViewerAccordionComponent],\n  exports: [ImageViewerAccordionComponent]\n})\nexport class ImageViewerAccordionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerContentComponent.html":{"url":"components/ImageViewerContentComponent.html","title":"component - ImageViewerContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts\n\n\n    \n        Description\n    \n    \n        Content for the image viewer sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-content\n            \n\n            \n                styleUrls\n                ./image-viewer-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                isLoading\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeViewer\n                            \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ImageViewerData\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:21\n                            \n                        \n                \n                    \n                        Image data to be displayed in the sidebar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:31\n                            \n                        \n                \n                    \n                        Whether content is waiting to be loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:26\n                            \n                        \n                \n                    \n                        The list of layers used to render this and child components\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeViewer\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:36\n                            \n                        \n                \n                    \n                        Emits closeViewer on close button click\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:41\n                            \n                        \n                \n                    \n                        Output to pass up the changes made to the layers to parent components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:44\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.  \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:49\n                \n            \n\n\n            \n                \n                    Hides the viewer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ImageViewerData } from 'ccf-database';\n\nimport { ColorScheme } from '../../../core/models/color-scheme';\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\n/**\n * Content for the image viewer sidebar\n */\n@Component({\n  selector: 'ccf-image-viewer-content',\n  templateUrl: './image-viewer-content.component.html',\n  styleUrls: ['./image-viewer-content.component.scss']\n})\nexport class ImageViewerContentComponent {\n\n  /**\n   * Image data to be displayed in the sidebar\n   */\n  @Input() data: ImageViewerData;\n\n  /**\n   * The list of layers used to render this and child components\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Whether content is waiting to be loaded.\n   */\n  @Input() isLoading: boolean;\n\n  /**\n   * Emits closeViewer on close button click\n   */\n  @Output() closeViewer = new EventEmitter();\n\n  /**\n   * Output to pass up the changes made to the layers to parent components\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /** Emits when the default scheme has changed.  */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Hides the viewer\n   */\n  close(): void {\n    this.closeViewer.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n  \n  \n    {{ data.organName }}\n    {{ data.label }}\n  \n  \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-content.component.scss\n                \n                .viewer-sidebar {\n  .viewer-close-header {\n    display: flex;\n    justify-content: flex-end;\n    height: 3rem;\n    padding-right: 1.5rem;\n    padding-left: 1.5rem;\n    \n    .viewer-close-button {\n      border: none;\n      padding: 0;\n      background: inherit;\n      cursor: pointer;\n    }\n  }\n}\n  \n.sample-info {\n  padding-right: 1.5rem;\n  padding-left: 1.5rem;\n  padding-top: 1.5rem;\n  padding-bottom: 1rem;\n  \n  .sample-region {\n    font-weight: bold;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close            {{ data.organName }}    {{ data.label }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerContentModule.html":{"url":"modules/ImageViewerContentModule.html","title":"module - ImageViewerContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerContentModule\n\n\n\ncluster_ImageViewerContentModule_declarations\n\n\n\ncluster_ImageViewerContentModule_imports\n\n\n\ncluster_ImageViewerContentModule_exports\n\n\n\n\nImageViewerContentComponent\n\nImageViewerContentComponent\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerContentModule -->\n\nImageViewerContentComponent->ImageViewerContentModule\n\n\n\n\n\nImageViewerContentComponent \n\nImageViewerContentComponent \n\nImageViewerContentComponent  -->\n\nImageViewerContentModule->ImageViewerContentComponent \n\n\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerContentModule -->\n\nImageViewerAccordionModule->ImageViewerContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImageViewerAccordionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ImageViewerAccordionModule } from '../image-viewer-accordion/image-viewer-accordion.module';\nimport { ImageViewerContentComponent } from './image-viewer-content.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, ImageViewerAccordionModule],\n  declarations: [ImageViewerContentComponent],\n  exports: [ImageViewerContentComponent]\n})\nexport class ImageViewerContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageViewerData.html":{"url":"interfaces/ImageViewerData.html","title":"interface - ImageViewerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageViewerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Data for image viewer display. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        metadata\n                                \n                                \n                                        organName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Other metadata. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Containing organ name. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageViewerLayer.html":{"url":"classes/ImageViewerLayer.html","title":"class - ImageViewerLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageViewerLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/image-viewer-layer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PureImageViewerLayer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightness\n                            \n                            \n                                color\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customizedColor\n                            \n                            \n                                defaultOrder\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                selected\n                            \n                            \n                                selectionOrder\n                            \n                            \n                                transparency\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrightness\n                            \n                            \n                                isDark\n                            \n                            \n                                isLight\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    background\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ImageViewerLayerArgs)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ImageViewerLayerArgs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brightness\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [number, number]\n\n                        \n                    \n                    \n                        \n                            Default value : [20, 60]\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customizedColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectionOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transparency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrightness\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrightness()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:70\n                \n            \n\n\n            \n                \n                    Converts the layer's hex color code to RGB and calculates a value for the color brightness\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDark\n                        \n                        \n                    \n                \n            \n            \n                \nisDark()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:102\n                \n            \n\n\n            \n                \n                    Determines whether the color icon is dark enough to require a border (dark mode only)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLight\n                        \n                        \n                    \n                \n            \n            \n                \nisLight()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:95\n                \n            \n\n\n            \n                \n                    Determines whether the color icon is light enough to require a border (light mode only)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:47\n                                \n                            \n                    \n                        \n                                Dynamically creates a background style based on the layer's color or color scheme\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ColorScheme } from './color-scheme';\n\nexport interface PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number];\n  transparency: number;\n\n  selected: boolean;\n  customizedColor: boolean;\n  selectionOrder: number;\n  defaultOrder: number;\n}\n\nexport type ImageViewerLayerRequiredArgNames = 'id' | 'colorScheme';\nexport type ImageViewerLayerArgs =\n  Pick &\n  Partial>;\n\nexport class ImageViewerLayer implements PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number] = [20, 60];\n  transparency = 100;\n\n  selected = false;\n  customizedColor = false;\n  selectionOrder = 0;\n  defaultOrder = -1;\n\n  constructor(data: ImageViewerLayerArgs) {\n    Object.assign(this, {\n      label: data.id,\n      color: data.colorScheme.colors[0]\n    }, data);\n  }\n\n  /**\n   * Dynamically creates a background style based on the layer's color or color scheme\n   */\n  get background(): string {\n    if (this.colorScheme.type === 'discrete') {\n      return this.color;\n    }\n\n    const colors = this.colorScheme.colors;\n    const positions = this.colorScheme.positions;\n\n    let gradient = 'linear-gradient(to right, ';\n    colors.forEach((color, index) => {\n      gradient += `${color} ${positions[index] * 100}%`;\n      if (index  225 ? true : false;\n  }\n\n  /**\n   * Determines whether the color icon is dark enough to require a border (dark mode only)\n   */\n  isDark(): boolean {\n    return this.getBrightness() \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerLayersComponent.html":{"url":"components/ImageViewerLayersComponent.html","title":"component - ImageViewerLayersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerLayersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts\n\n\n    \n        Description\n    \n    \n        Component in charge of rendering list of the image layers along with the ability\nto choose which ones are to be showm and what display properties they have.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-layers\n            \n\n            \n                styleUrls\n                ./image-viewer-layers.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-layers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxOnChange\n                            \n                            \n                                layerChanged\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:26\n                            \n                        \n                \n                    \n                        Whether content is waiting to be loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:21\n                            \n                        \n                \n                    \n                        The list of layers to be displayed which contain the styilng properties needed\nto make rendering decisions.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:31\n                            \n                        \n                \n                    \n                        A sorted list of selected layers containing information such as selectionOrder and colorScheme.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:36\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkboxOnChange\n                        \n                        \n                    \n                \n            \n            \n                \ncheckboxOnChange(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:54\n                \n            \n\n\n            \n                \n                    Function in charge of handling the layers' checkbox change events.  It keeps track of layers' selected\nand selectionOrder properties as well as emitting the updated layer list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the layer that needs updating based on the event passed with it.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            layerChanged\n                        \n                        \n                    \n                \n            \n            \n                \nlayerChanged(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:67\n                \n            \n\n\n            \n                \n                    This method captures changes to a layer's color options and updates the layers list accordingly\nbefore emitting the new set of active layers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the updated layer object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackById\n                        \n                        \n                    \n                \n            \n            \n                \ntrackById(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:44\n                \n            \n\n\n            \n                \n                    Used by ngFor to track changes across ImageViewerLayer instances.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The layer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The layer's unique id.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme } from '../../color-scheme/color-schemes';\n\n\n/**\n * Component in charge of rendering list of the image layers along with the ability\n * to choose which ones are to be showm and what display properties they have.\n */\n@Component({\n  selector: 'ccf-image-viewer-layers',\n  templateUrl: './image-viewer-layers.component.html',\n  styleUrls: ['./image-viewer-layers.component.scss']\n})\nexport class ImageViewerLayersComponent {\n  /**\n   * The list of layers to be displayed which contain the styilng properties needed\n   * to make rendering decisions.\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Whether content is waiting to be loaded.\n   */\n  @Input() isLoading: boolean;\n\n  /**\n   * A sorted list of selected layers containing information such as selectionOrder and colorScheme.\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /**\n   * Emits when the default scheme has changed.\n   */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Used by ngFor to track changes across ImageViewerLayer instances.\n   *\n   * @param layer The layer.\n   * @returns The layer's unique id.\n   */\n  trackById(layer: ImageViewerLayer): string {\n    return layer.id;\n  }\n\n  /**\n   * Function in charge of handling the layers' checkbox change events.  It keeps track of layers' selected\n   * and selectionOrder properties as well as emitting the updated layer list.\n   * @param event contains whether or not the layer was selected or unselected.\n   * @param layer is the layer that needs updating based on the event passed with it.\n   */\n  checkboxOnChange(layer: ImageViewerLayer): void {\n    this.layerChange.emit(new ImageViewerLayer({\n      ...layer,\n      selected: !layer.selected\n    }));\n  }\n\n  /**\n   * This method captures changes to a layer's color options and updates the layers list accordingly\n   * before emitting the new set of active layers.\n   * @param layer the updated layer object.\n   * @param referenceLayer the layer object before the changes, used for referencing which layer in the list to update.\n   */\n  layerChanged(layer: ImageViewerLayer): void {\n    this.layerChange.emit(layer);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n\n    \n      \n        \n          {{ layer.label }}\n        \n        \n        \n      \n    \n  \n  \n    \n      RGB Images are not customizable.\n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-layers.component.scss\n                \n                :host {\n  .layer {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 1.5rem;\n  }\n\n  .hidden {\n    visibility: hidden !important;\n  }\n\n  .color-selector-placeholder {\n    height: 1rem;\n    width: 1rem;\n    border-radius: 100%;\n  }\n\n  .no-layers-text {\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ layer.label }}                                                RGB Images are not customizable.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerLayersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerLayersModule.html":{"url":"modules/ImageViewerLayersModule.html","title":"module - ImageViewerLayersModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerLayersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerLayersModule\n\n\n\ncluster_ImageViewerLayersModule_declarations\n\n\n\ncluster_ImageViewerLayersModule_imports\n\n\n\ncluster_ImageViewerLayersModule_exports\n\n\n\n\nImageViewerLayersComponent\n\nImageViewerLayersComponent\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerLayersModule -->\n\nImageViewerLayersComponent->ImageViewerLayersModule\n\n\n\n\n\nImageViewerLayersComponent \n\nImageViewerLayersComponent \n\nImageViewerLayersComponent  -->\n\nImageViewerLayersModule->ImageViewerLayersComponent \n\n\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nImageViewerLayersModule -->\n\nColorPickerLauncherModule->ImageViewerLayersModule\n\n\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nImageViewerLayersModule -->\n\nSchemeDropdownModule->ImageViewerLayersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerLayersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorPickerLauncherModule\n                        \n                        \n                            SchemeDropdownModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerLayersComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ImageViewerLayersComponent } from './image-viewer-layers.component';\nimport { SchemeDropdownModule } from '../../scheme-dropdown/scheme-dropdown.module';\nimport { ColorPickerLauncherModule } from '../../color-scheme/color-picker-launcher/color-picker-launcher.module';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule, ColorPickerLauncherModule, SchemeDropdownModule],\n  declarations: [ImageViewerLayersComponent],\n  exports: [ImageViewerLayersComponent]\n})\nexport class ImageViewerLayersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerLegendComponent.html":{"url":"components/ImageViewerLegendComponent.html","title":"component - ImageViewerLegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerLegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts\n\n\n    \n        Description\n    \n    \n        Legend in the image viewer displaying the selected layers and their colors\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-legend\n            \n\n            \n                styleUrls\n                ./image-viewer-legend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _layers\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layers\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:18\n                            \n                        \n                \n                    \n                        The list of layers used to render this components\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ImageViewerLayer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n\n                \n                    \n                        getlayers()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:21\n                                \n                            \n\n                \n                    \n                        setlayers(layers: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:18\n                                \n                            \n                    \n                        \n                                The list of layers used to render this components\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layers\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n/**\n * Legend in the image viewer displaying the selected layers and their colors\n */\n@Component({\n  selector: 'ccf-image-viewer-legend',\n  templateUrl: './image-viewer-legend.component.html',\n  styleUrls: ['./image-viewer-legend.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageViewerLegendComponent {\n  /**\n   * The list of layers used to render this components\n   */\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set layers(layers: ImageViewerLayer[]) {\n    this._layers = [...layers].sort((v1, v2) => v1.selectionOrder - v2.selectionOrder);\n  }\n  get layers(): ImageViewerLayer[] { return this._layers; }\n  private _layers: ImageViewerLayer[];\n}\n\n    \n\n    \n        \n  \n    \n    {{ layer.label }}\n  \n\n\n    \n\n    \n                \n                    ./image-viewer-legend.component.scss\n                \n                .legend {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  height: 3rem;\n\n  .legend-item {\n    margin-right: 1rem;\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .item-color {\n      margin-right: 1rem;\n      height: 1rem;\n      width: 1rem;\n    }\n\n    .item-title {\n      font-size: 14px;\n      display: flex;\n      align-items: center;\n    }\n  }\n}\n\n.circle {\n  border-radius: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ layer.label }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerLegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerLegendModule.html":{"url":"modules/ImageViewerLegendModule.html","title":"module - ImageViewerLegendModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerLegendModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerLegendModule\n\n\n\ncluster_ImageViewerLegendModule_declarations\n\n\n\ncluster_ImageViewerLegendModule_exports\n\n\n\n\nImageViewerLegendComponent\n\nImageViewerLegendComponent\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerLegendModule -->\n\nImageViewerLegendComponent->ImageViewerLegendModule\n\n\n\n\n\nImageViewerLegendComponent \n\nImageViewerLegendComponent \n\nImageViewerLegendComponent  -->\n\nImageViewerLegendModule->ImageViewerLegendComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerLegendComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerLegendComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageViewerLegendComponent } from './image-viewer-legend.component';\n\n\n\n@NgModule({\n  declarations: [ImageViewerLegendComponent],\n  imports: [CommonModule],\n  exports: [ImageViewerLegendComponent]\n})\nexport class ImageViewerLegendModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerModule.html":{"url":"modules/ImageViewerModule.html","title":"module - ImageViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerModule\n\n\n\ncluster_ImageViewerModule_imports\n\n\n\ncluster_ImageViewerModule_exports\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nImageViewerModule -->\n\nImageViewerContentModule->ImageViewerModule\n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerModule -->\n\nImageViewerLayersModule->ImageViewerModule\n\n\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerModule -->\n\nImageViewerPopoverModule->ImageViewerModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerModule -->\n\nViewerModule->ImageViewerModule\n\n\n\n\n\nImageViewerContentModule \n\nImageViewerContentModule \n\nImageViewerContentModule  -->\n\nImageViewerModule->ImageViewerContentModule \n\n\n\n\n\nImageViewerLayersModule \n\nImageViewerLayersModule \n\nImageViewerLayersModule  -->\n\nImageViewerModule->ImageViewerLayersModule \n\n\n\n\n\nImageViewerPopoverModule \n\nImageViewerPopoverModule \n\nImageViewerPopoverModule  -->\n\nImageViewerModule->ImageViewerPopoverModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLayersModule\n                        \n                        \n                            ImageViewerPopoverModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLayersModule\n                        \n                        \n                            ImageViewerPopoverModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { ImageViewerContentModule } from './image-viewer-content/image-viewer-content.module';\nimport { ImageViewerLayersModule } from './image-viewer-layers/image-viewer-layers.module';\nimport { ImageViewerPopoverModule } from './image-viewer-popover/image-viewer-popover.module';\nimport { ViewerModule } from './viewer/viewer.module';\n\n\n@NgModule({\n  imports: [ImageViewerPopoverModule, ImageViewerContentModule, ViewerModule, ImageViewerLayersModule],\n  providers: [],\n  declarations: [],\n  exports: [ImageViewerPopoverModule, ImageViewerContentModule, ImageViewerLayersModule]\n})\nexport class ImageViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerPopoverComponent.html":{"url":"components/ImageViewerPopoverComponent.html","title":"component - ImageViewerPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts\n\n\n    \n        Description\n    \n    \n        Popup that displays detailed information on a selected image along with viewing options\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-popover\n            \n\n            \n                styleUrls\n                ./image-viewer-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                isLoading\n                            \n                            \n                                result\n                            \n                            \n                                sourceUrls\n                            \n                            \n                                viewerVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                onChannelsChange\n                            \n                            \n                                open\n                            \n                            \n                                    Private\n                                setSourceUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: ViewerState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:57\n                            \n                        \n\n                \n                    \n                            Initializes the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        ViewerState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The image viewer state.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to this components change detector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:70\n                \n            \n\n\n            \n                \n                    Returns viewer to closed state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChannelsChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChannelsChange(channels: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channels\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(data: ImageViewerData, result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:79\n                \n            \n\n\n            \n                \n                    Changes viewer to opened state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ImageViewerData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data of the image to be passed into the viewer\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSourceUrls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSourceUrls(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:99\n                \n            \n\n\n            \n                \n                    Sets the source urls from the currently active data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EMPTY_DATA\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:37\n                            \n                        \n\n                \n                    \n                        Data of the image to be passed into the viewer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:52\n                            \n                        \n\n                \n                    \n                        Whether data is currently loading.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EMPTY_RESULT\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:42\n                            \n                        \n\n                \n                    \n                        Currently active result.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceUrls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:47\n                            \n                        \n\n                \n                    \n                        Urls to load image data from.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewerVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:57\n                            \n                        \n\n                \n                    \n                        Whether or not the image viewer is visible\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ImageViewerData, ListResult } from 'ccf-database';\n\nimport { ViewerState } from '../../../core/store/viewer/viewer.state';\n\n\nconst EMPTY_DATA: ImageViewerData = {\n  '@id': '',\n  '@type': 'ImageViewerData',\n  id: '',\n  label: '',\n  organName: '',\n  metadata: []\n};\n\nconst EMPTY_RESULT: ListResult = {\n  '@id': '',\n  '@type': 'ListResult',\n  id: '',\n  label: ''\n};\n\n\n/**\n * Popup that displays detailed information on a selected image along with viewing options\n */\n@Component({\n  selector: 'ccf-image-viewer-popover',\n  templateUrl: './image-viewer-popover.component.html',\n  styleUrls: ['./image-viewer-popover.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageViewerPopoverComponent {\n  /**\n   * Data of the image to be passed into the viewer\n   */\n  data = EMPTY_DATA;\n\n  /**\n   * Currently active result.\n   */\n  result = EMPTY_RESULT;\n\n  /**\n   * Urls to load image data from.\n   */\n  sourceUrls: string[] = [];\n\n  /**\n   * Whether data is currently loading.\n   */\n  isLoading = true;\n\n  /**\n   * Whether or not the image viewer is visible\n   */\n  viewerVisible = false;\n\n  /**\n   * Initializes the component.\n   *\n   * @param state The image viewer state.\n   * @param cdr Reference to this components change detector.\n   */\n  constructor(readonly state: ViewerState, private readonly cdr: ChangeDetectorRef) { }\n\n  /**\n   * Returns viewer to closed state\n   */\n  close(): void {\n    this.viewerVisible = false;\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Changes viewer to opened state\n   * @param data Data of the image to be passed into the viewer\n   */\n  open(data: ImageViewerData, result: ListResult): void {\n    this.viewerVisible = true;\n    this.data = data;\n    this.result = result;\n    this.isLoading = true;\n    this.setSourceUrls(result);\n    this.cdr.markForCheck();\n  }\n\n  onChannelsChange(channels: string[]): void {\n    this.isLoading = false;\n    this.state.createLayers(channels);\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Sets the source urls from the currently active data.\n   *\n   * @param result The active data.\n   */\n  private setSourceUrls(result: ListResult): void {\n    const { resultType, resultUrl } = result;\n    if (resultType !== 'image_viewer' || resultUrl === undefined) {\n      this.sourceUrls = [];\n    } else {\n      this.sourceUrls = [resultUrl];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n    \n  \n  \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-popover.component.scss\n                \n                .image-viewer-container {\n  position: fixed;\n  top: 4rem;\n  overflow: hidden;\n  z-index: 10;\n  flex-grow: 1;\n  height: calc(100% - 1.5rem);\n  width: 100%;\n  left: 100%;\n  transition-property: left;\n  transition-duration: .5s;\n  transition-timing-function: ease-in-out;\n\n  &.expanded {\n    left: 0%;\n  }\n\n  .image-viewer-window {\n    margin-top: 1.5rem;\n    height: calc(100% - 2rem);\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .viewer {\n      width: 100%;\n      height: calc(100% - 8rem);\n      margin-left: 1.5rem;\n    }\n\n    .legend {\n      width: 100%;\n      height: 3.5rem;\n      margin-top: 1.5rem;\n      margin-left: 1.5rem;\n    }\n  }\n\n  .image-viewer-drawer {\n    width: 25.5rem;\n    margin: 0 1.5rem;\n\n    .drawer-icons {\n      display: flex;\n\n      .button {\n        width: 3rem;\n        height: 3rem;\n        color: #9e9e9e;\n        background: none;\n        border: none;\n        cursor: pointer;\n        outline: none;\n\n        :hover {\n          color: #1e88e5;\n        }\n\n        mat-icon {\n          font-size: 2.2rem;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerPopoverModule.html":{"url":"modules/ImageViewerPopoverModule.html","title":"module - ImageViewerPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerPopoverModule\n\n\n\ncluster_ImageViewerPopoverModule_declarations\n\n\n\ncluster_ImageViewerPopoverModule_imports\n\n\n\ncluster_ImageViewerPopoverModule_exports\n\n\n\n\nImageViewerPopoverComponent\n\nImageViewerPopoverComponent\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule -->\n\nImageViewerPopoverComponent->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent  -->\n\nImageViewerPopoverModule->ImageViewerPopoverComponent \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nImageViewerPopoverModule -->\n\nDrawerModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerPopoverModule -->\n\nImageViewerContentModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerPopoverModule -->\n\nImageViewerLegendModule->ImageViewerPopoverModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerPopoverModule -->\n\nViewerModule->ImageViewerPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DrawerModule\n                        \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLegendModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DrawerModule } from '../../../shared/components/drawer/drawer.module';\nimport { ImageViewerContentModule } from '../image-viewer-content/image-viewer-content.module';\nimport { ImageViewerLegendModule } from '../image-viewer-legend/image-viewer-legend.module';\nimport { ViewerModule } from '../viewer/viewer.module';\nimport { ImageViewerPopoverComponent } from './image-viewer-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, ImageViewerContentModule, DrawerModule, ViewerModule, ImageViewerLegendModule],\n  declarations: [ImageViewerPopoverComponent],\n  exports: [ImageViewerPopoverComponent]\n})\nexport class ImageViewerPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageViewerProps.html":{"url":"interfaces/ImageViewerProps.html","title":"interface - ImageViewerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageViewerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canvas\n                                \n                                \n                                            Optional\n                                        channelNames\n                                \n                                \n                                            Optional\n                                        defaultChannelConfig\n                                \n                                \n                                            Optional\n                                        height\n                                \n                                \n                                        id\n                                \n                                \n                                        initialViewState\n                                \n                                \n                                            Optional\n                                        sources\n                                \n                                \n                                            Optional\n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLCanvasElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelNames\n                                    \n                                \n                                \n                                    \n                                        channelNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultChannelConfig\n                                    \n                                \n                                \n                                    \n                                        defaultChannelConfig:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialViewState\n                                    \n                                \n                                \n                                    \n                                        initialViewState:         State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sources\n                                    \n                                \n                                \n                                    \n                                        sources:     DataSource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DataSource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hms-dbmi/viv';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/info/info-button/info-button.component.ts\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/info/info-button/info-button.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            launchInfoDialog\n                        \n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/info/info-button/info-button.component.ts:26\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent {\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(): void {\n    this.dialog.open(InfoDialogComponent, {\n      width: '60em',\n      data: {}\n    });\n  }\n}\n\n    \n\n    \n        \n  info_outline\n\n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info {\n  cursor: pointer;\n  transition: color 1s;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  info_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/info/info-button/info-button.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: unknown)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:27\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                        Data being injected into the dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                        A reference to the dialog that this component creates, used to call the dialog's methods\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent {\n  /**\n   * Creates an instance of info dialog component.\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown\n  ) { }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      HuBMAP\n      The Human Biomolecular Atlas Project\n\n      \n        \n          The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis\n          technologies, computational tools, and generate foundational tissue maps in order to accelerate the\n          construction of an atlas of the human body at single-cell resolution for understanding the relationship\n          between tissue organization and function.\n          \n          https://hubmapconsortium.org\n        \n\n        Common Coordinate Framework (CCF)\n        \n          The HuBMAP common coordinate framework (CCF) is under active development. It aims to semantically annotate and\n          spatially index HuBMAP data for efficient spatial and semantic search, browsing, and filtering. The CCF v1.0.0\n          became available in June 2020. The CCF Ontology is available as an OWL file,\n          on GitHub, and\n          on BioPortal. For\n          documentation, see CCF Portal and preprint of CCF\n          Ontology publication on arxiv.\n        \n\n        CCF Exploration User Interface (EUI)\n        \n          The CCF Exploration User Interface (EUI) represents data across multiple scales, supporting navigation by\n          multiple coordinate systems, including spatial, physiologic, and organ-based browsing. The first\n          proof-of-concept user interface for the CCF v1.0.0 became available in June 2020. The EUI continues to evolve\n          as more data becomes available. The CCF EUI code is available\n          on GitHub.\n          A demo video is on YouTube.\n        \n\n        Acknowledgements\n        \n          The CCF work is under active development by the Indiana University Mapping Component as part of the HuBMAP\n          HIVE effort with expert input by the HuBMAP team. Data was provided by the HuBMAP Tissue Mapping Centers. This\n          research is funded by the NIH Common Fund through the Office of Strategic Coordination/Office of the NIH\n          Director under award OT2OD026671, by the NIDDK Kidney Precision Medicine Project grant U2CDK114886, and the\n          NIH National Institute of Allergy and Infectious Diseases (NIAID), Department of Health and Human Services\n          under BCBB Support Services Contract HHSN316201300006W/HHSN27200002.\n        \n      \n\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.ccf-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n      background-color: white;\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .heading {\n      margin-bottom: 0;\n      font-size: 0.875rem;\n      font-weight: bold;\n    }\n\n    .close {\n      .close-icon {\n        float: right;\n        margin-top: 1rem;\n        margin-right: 1rem;\n        cursor: pointer;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin-bottom: 0;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .footer {\n      padding-top: 1.5rem;\n      .nih-logo {\n        height: 2.25rem;\n        display: block;\n        margin: auto;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              HuBMAP      The Human Biomolecular Atlas Project                        The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis          technologies, computational tools, and generate foundational tissue maps in order to accelerate the          construction of an atlas of the human body at single-cell resolution for understanding the relationship          between tissue organization and function.                    https://hubmapconsortium.org                Common Coordinate Framework (CCF)                  The HuBMAP common coordinate framework (CCF) is under active development. It aims to semantically annotate and          spatially index HuBMAP data for efficient spatial and semantic search, browsing, and filtering. The CCF v1.0.0          became available in June 2020. The CCF Ontology is available as an OWL file,          on GitHub, and          on BioPortal. For          documentation, see CCF Portal and preprint of CCF          Ontology publication on arxiv.                CCF Exploration User Interface (EUI)                  The CCF Exploration User Interface (EUI) represents data across multiple scales, supporting navigation by          multiple coordinate systems, including spatial, physiologic, and organ-based browsing. The first          proof-of-concept user interface for the CCF v1.0.0 became available in June 2020. The EUI continues to evolve          as more data becomes available. The CCF EUI code is available          on GitHub.          A demo video is on YouTube.                Acknowledgements                  The CCF work is under active development by the Indiana University Mapping Component as part of the HuBMAP          HIVE effort with expert input by the HuBMAP team. Data was provided by the HuBMAP Tissue Mapping Centers. This          research is funded by the NIH Common Fund through the Office of Strategic Coordination/Office of the NIH          Director under award OT2OD026671, by the NIDDK Kidney Precision Medicine Project grant U2CDK114886, and the          NIH National Institute of Allergy and Infectious Diseases (NIAID), Department of Health and Human Services          under BCBB Support Services Contract HHSN316201300006W/HHSN27200002.                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deferred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Promise(resolve => this.resolve = resolve)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                            \n                        \n\n                \n                    \n                        Promise used to await on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:33\n                            \n                        \n\n                \n                    \n                        Whether this state is true or false. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                            \n                        \n\n                \n                    \n                        Resolve function for the promise. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:42\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueOf\n                        \n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:59\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:52\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => this.resolve = resolve);\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise { return this.deferred; }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean { return this.initialized; }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(`open, open-instant`, style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('1.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('1.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// tslint:disable-line: no-unsafe-any\n  get position(): 'start' | 'end' { return this._position; }\n  set position(value: 'start' | 'end') { this._position = value || 'start'; }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-opened') // tslint:disable-line: no-unsafe-any\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { this.toggle(coerceBooleanProperty(value)); }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-expanded') // tslint:disable-line: no-unsafe-any\n  get expanded(): boolean { return this._expanded; }\n  set expanded(value: boolean) { this.toggleExpanded(coerceBooleanProperty(value)); }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // tslint:disable-line: no-unsafe-any\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    }};\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) { return this._measuredWidth; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) { return 0; }\n\n    return this._measuredWidth = width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) { return this._measuredMargin; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    return this._measuredMargin = margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void { this.toggle(true); }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void { this.toggle(false); }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) { return; }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void { this.toggleExpanded(true); }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void { this.toggleExpanded(false); }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) { return; }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // tslint:disable-line: no-unsafe-any\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // tslint:disable-line: no-unsafe-any\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled':\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_position: '' | 'start' | 'end'; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_opened: BooleanInput; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_expanded: BooleanInput; // tslint:disable-line: variable-name member-ordering\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState-1.html":{"url":"classes/InitializationState-1.html","title":"class - InitializationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deferred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Promise(resolve => this.resolve = resolve)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                            \n                        \n\n                \n                    \n                        Promise used to await on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:33\n                            \n                        \n\n                \n                    \n                        Whether this state is true or false. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                            \n                        \n\n                \n                    \n                        Resolve function for the promise. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:42\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueOf\n                        \n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:59\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:52\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => this.resolve = resolve);\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise { return this.deferred; }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean { return this.initialized; }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(`open, open-instant`, style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('1.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('1.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// tslint:disable-line: no-unsafe-any\n  get position(): 'start' | 'end' { return this._position; }\n  set position(value: 'start' | 'end') { this._position = value || 'start'; }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-opened') // tslint:disable-line: no-unsafe-any\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { this.toggle(coerceBooleanProperty(value)); }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-expanded') // tslint:disable-line: no-unsafe-any\n  get expanded(): boolean { return this._expanded; }\n  set expanded(value: boolean) { this.toggleExpanded(coerceBooleanProperty(value)); }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // tslint:disable-line: no-unsafe-any\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    }};\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) { return this._measuredWidth; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) { return 0; }\n\n    return this._measuredWidth = width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) { return this._measuredMargin; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    return this._measuredMargin = margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void { this.toggle(true); }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void { this.toggle(false); }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) { return; }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void { this.toggleExpanded(true); }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void { this.toggleExpanded(false); }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) { return; }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // tslint:disable-line: no-unsafe-any\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // tslint:disable-line: no-unsafe-any\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled':\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_position: '' | 'start' | 'end'; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_opened: BooleanInput; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_expanded: BooleanInput; // tslint:disable-line: variable-name member-ordering\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JsonOntologyNode.html":{"url":"interfaces/JsonOntologyNode.html","title":"interface - JsonOntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JsonOntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Structure of a single json ontology node.\n\n            \n\n            \n                Extends\n            \n            \n                        IdObject\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                \n                                \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                    \n                                \n                                \n                                    \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym:         ValueObject[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValueObject[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Json synonyms property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                    \n                                \n                                \n                                    \n                                        http://www.w3.org/2000/01/rdf-schema#label:         [ValueObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [ValueObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json label property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         [IdObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [IdObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json parent property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-left-sidebar\n            \n\n            \n                styleUrls\n                ./left-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./left-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ccf-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LeftSidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./left-sidebar.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  hr {\n    width: 100%;\n    margin-top: 0.75rem;\n    margin-bottom: 1.5rem;\n    border-style: solid;\n    border-width: 1.5px;\n  }\n\n  :not(hr) {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n\n  *:first-child {\n    margin-top: 1.5rem;\n  }\n}\n\n.organ-sliders {\n  height: 3rem;\n  margin-left: 0 !important;\n  display: flex;\n  align-items: center;\n\n  .side-slider, .gender-slider {\n    margin: 0 !important;\n  }\n\n  .side-slider {\n    width: 40%;\n  }\n\n  .gender-slider  {\n    width: 60%;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeftSidebarModule.html":{"url":"modules/LeftSidebarModule.html","title":"module - LeftSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    LeftSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nGenderSelectorModule\n\nGenderSelectorModule\n\nLeftSidebarModule -->\n\nGenderSelectorModule->LeftSidebarModule\n\n\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nLeftSidebarModule -->\n\nOrganSelectorModule->LeftSidebarModule\n\n\n\n\n\nSideSelectorModule\n\nSideSelectorModule\n\nLeftSidebarModule -->\n\nSideSelectorModule->LeftSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GenderSelectorModule\n                        \n                        \n                            OrganSelectorModule\n                        \n                        \n                            SideSelectorModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { LeftSidebarComponent } from './left-sidebar.component';\nimport { SideSelectorModule } from '../../shared/components/side-selector/side-selector.module';\nimport { GenderSelectorModule } from '../../shared/components/gender-selector/gender-selector.module';\nimport { OrganSelectorModule } from '../../shared/components/organ-selector/organ-selector.module';\n\n\n@NgModule({\n  declarations: [LeftSidebarComponent],\n  imports: [CommonModule, SideSelectorModule, GenderSelectorModule, OrganSelectorModule],\n  exports: [LeftSidebarComponent]\n})\nexport class LeftSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResult.html":{"url":"interfaces/ListResult.html","title":"interface - ListResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Result for list of tissues. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        downloadTooltip\n                                \n                                \n                                            Optional\n                                        downloadUrl\n                                \n                                \n                                            Optional\n                                        highlighted\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        resultType\n                                \n                                \n                                            Optional\n                                        resultUrl\n                                \n                                \n                                            Optional\n                                        shortInfo\n                                \n                                \n                                            Optional\n                                        thumbnailUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadTooltip\n                                    \n                                \n                                \n                                    \n                                        downloadTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of data download. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadUrl\n                                    \n                                \n                                \n                                    \n                                        downloadUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url for data download. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlighted\n                                    \n                                \n                                \n                                    \n                                        highlighted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the result should be highlighted \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultType\n                                    \n                                \n                                \n                                    \n                                        resultType:     \"external_link\" | \"local_link\" | \"image_viewer\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"external_link\" | \"local_link\" | \"image_viewer\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of result url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultUrl\n                                    \n                                \n                                \n                                    \n                                        resultUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Result url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortInfo\n                                    \n                                \n                                \n                                    \n                                        shortInfo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Short description. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnailUrl\n                                    \n                                \n                                \n                                    \n                                        thumbnailUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Small icon url. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        payload\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sender of the message. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message-1.html":{"url":"interfaces/Message-1.html","title":"interface - Message-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        payload\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sender of the message. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: unknown, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                    Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                    Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                        Counter used to give each message a unique id. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:81\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:91\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSources\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:101\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            nextMessageId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel-1.html":{"url":"classes/MessageChannel-1.html","title":"class - MessageChannel-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: unknown, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                    Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                    Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                        Counter used to give each message a unique id. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:81\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:91\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSources\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:101\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            nextMessageId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:161\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:151\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:126\n                            \n                        \n\n                \n                    \n                        The message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                        The message listener. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService-1.html":{"url":"injectables/MessageService-1.html","title":"injectable - MessageService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:161\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:151\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:126\n                            \n                        \n\n                \n                    \n                        The message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                        The message listener. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isolated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig-1.html":{"url":"interfaces/MessageServiceConfig-1.html","title":"interface - MessageServiceConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isolated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OMEZarrInfo.html":{"url":"interfaces/OMEZarrInfo.html","title":"interface - OMEZarrInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OMEZarrInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Loader, createZarrLoader, OMEZarrReader, createOMETiffLoader } from '@hms-dbmi/viv';\n\nexport enum LoaderType {\n  Zarr = 'zarr',\n  OMEZarr = 'ome-zarr',\n  StaticZarr = 'static',\n\n  Tiff = 'tiff',\n  Tiff2 = 'tiff 2',\n  BFTiff = 'bf tiff',\n  CovidTiff = 'covid tiff',\n  StaticTiff = 'static tiff'\n}\n\n// createLoader info argument types\nexport type ZarrInfo = Parameters[0];\nexport interface OMEZarrInfo {\n  url: string;\n}\nexport interface TiffInfo {\n  url: string;\n  offsets?: string | number[];\n}\n\n// Copied from vitessce-image-viewer demo source\nexport async function createLoader(\n  type: LoaderType,\n  info: ZarrInfo | OMEZarrInfo | TiffInfo\n): Promise {\n  switch (type) {\n    case LoaderType.Zarr:\n    case LoaderType.StaticZarr:\n      return createZarrLoader(info as ZarrInfo);\n\n    case LoaderType.OMEZarr: {\n      const { url } = info as OMEZarrInfo;\n      const reader = await OMEZarrReader.fromUrl(url);\n      const { loader } = await reader.loadOMEZarr();\n      return loader;\n    }\n\n    case LoaderType.Tiff:\n    case LoaderType.Tiff2:\n    case LoaderType.BFTiff:\n    case LoaderType.CovidTiff:\n    case LoaderType.StaticTiff: {\n      const { url, offsets = [] } = info as TiffInfo;\n      return createOMETiffLoader({ url, offsets: await loadOffsets(offsets) });\n    }\n\n    default:\n      throw Error(`Pyramid type (${type}) is not supported`);\n  }\n}\n\nasync function loadOffsets(url: string | number[]): Promise {\n  if (typeof url !== 'string') { return url; }\n  const res = await fetch(url);\n  return res.status !== 404 ? await res.json() as number[] : [];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OldRuiData.html":{"url":"interfaces/OldRuiData.html","title":"interface - OldRuiData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OldRuiData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/hubmap/old-rui-utils.ts\n        \n\n            \n                Description\n            \n            \n                RUI v0.5.0 format \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alignment_datetime\n                                \n                                \n                                        alignment_id\n                                \n                                \n                                        alignment_operator_first_name\n                                \n                                \n                                        alignment_operator_last_name\n                                \n                                \n                                        reference_organ_id\n                                \n                                \n                                        tissue_object_rotation\n                                \n                                \n                                        tissue_object_size\n                                \n                                \n                                        tissue_position_mass_point\n                                \n                                \n                                        tissue_position_vertices\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_datetime\n                                    \n                                \n                                \n                                    \n                                        alignment_datetime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creation time. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_id\n                                    \n                                \n                                \n                                    \n                                        alignment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_operator_first_name\n                                    \n                                \n                                \n                                    \n                                        alignment_operator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creator first name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_operator_last_name\n                                    \n                                \n                                \n                                    \n                                        alignment_operator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creator last name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ_id\n                                    \n                                \n                                \n                                    \n                                        reference_organ_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organ reference identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_object_rotation\n                                    \n                                \n                                \n                                    \n                                        tissue_object_rotation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue object rotation. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_object_size\n                                    \n                                \n                                \n                                    \n                                        tissue_object_size:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue object size. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_position_mass_point\n                                    \n                                \n                                \n                                    \n                                        tissue_position_mass_point:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue point of mass. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_position_vertices\n                                    \n                                \n                                \n                                    \n                                        tissue_position_vertices:     unknown[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Position vertices. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ccf } from '../util/prefixes';\n\n/** RUI v0.5.0 format */\nexport interface OldRuiData {\n  /** Identifier. */\n  alignment_id: string;\n  /** Creator first name. */\n  alignment_operator_first_name: string;\n  /** Creator last name. */\n  alignment_operator_last_name: string;\n  /** Creation time. */\n  alignment_datetime: string;\n  /** Organ reference identifier. */\n  reference_organ_id: string;\n  /** Position vertices. */\n  tissue_position_vertices: unknown[];\n  /** Tissue point of mass. */\n  tissue_position_mass_point: {\n    x: number,\n    y: number,\n    z: number\n  };\n  /** Tissue object rotation. */\n  tissue_object_rotation: {\n    x: number,\n    y: number,\n    z: number\n  };\n  /** Tissue object size. */\n  tissue_object_size: {\n    x: number,\n    y: number,\n    z: number\n  };\n}\n\n/**\n * Fixes old RUI data from VU.\n *\n * @param data The original RUI data\n * @returns The fixed RUI data\n */\nfunction fixOldRuiKidneyData(data: OldRuiData): OldRuiData {\n  return {\n    ...data,\n    tissue_position_mass_point: {\n      x: data.tissue_position_mass_point.x - 60 / 2,\n      y: data.tissue_position_mass_point.y - 100 / 2,\n      z: data.tissue_position_mass_point.z - 60 / 2\n    }\n  };\n}\n\n/**\n * Converts version 0.5.0 RUI data to new JSONLD format.\n * @param data The old data.\n * @param [externalId] An optional label.\n * @param [refOrganId] The organ id.\n * @returns The translated JSONLD data.\n */\nexport function convertOldRuiToJsonLd(data: OldRuiData, label?: string, refOrganId?: string): object {\n  let placementTarget: string | undefined;\n  if (refOrganId) {\n    placementTarget = refOrganId;\n  } else if (data.reference_organ_id === 'uuid-1234-5678') {\n    placementTarget = ccf.x('VHKidney').id;\n  } else if(data.reference_organ_id) {\n    placementTarget = data.reference_organ_id;\n  }\n\n  if (placementTarget?.endsWith('Kidney')) {\n    data = fixOldRuiKidneyData(data);\n  }\n\n  const D = data.tissue_object_size;\n  const R = data.tissue_object_rotation;\n  const T = data.tissue_position_mass_point;\n\n  return {\n    '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n    '@id': 'http://purl.org/ccf/0.5/' + data.alignment_id,\n    '@type': 'SpatialEntity',\n    label: label || undefined,\n    creator: `${data.alignment_operator_first_name} ${data.alignment_operator_last_name}`,\n    creator_first_name: data.alignment_operator_first_name,\n    creator_last_name: data.alignment_operator_last_name,\n    // creator_orcid: data.alignment_operator_orcid,\n    creation_date: data.alignment_datetime,\n    ccf_annotations: [],\n    x_dimension: D.x, y_dimension: D.y, z_dimension: D.z, dimension_units: 'millimeter',\n\n    placement: {\n      '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n      '@id': 'http://purl.org/ccf/0.5/' + data.alignment_id + '_placement',\n      '@type': 'SpatialPlacement',\n      target: placementTarget,\n      placement_date: data.alignment_datetime,\n\n      x_scaling: 1, y_scaling: 1, z_scaling: 1, scaling_units: 'ratio',\n      x_rotation: R.x, y_rotation: R.y, z_rotation: R.z, rotation_order: 'XYZ', rotation_units: 'degree',\n      x_translation: T.x, y_translation: T.y, z_translation: T.z, translation_units: 'millimeter'\n    }\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyExplorationModule.html":{"url":"modules/OntologyExplorationModule.html","title":"module - OntologyExplorationModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyExplorationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-exploration.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from './ontology-search/ontology-search.module';\nimport { OntologySelectionModule } from './ontology-selection/ontology-selection.module';\nimport { OntologyTreeModule } from './ontology-tree/ontology-tree.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule,\n    OntologySelectionModule\n  ],\n  exports: [OntologySearchModule, OntologyTreeModule, OntologySelectionModule]\n})\nexport class OntologyExplorationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyNode.html":{"url":"interfaces/OntologyNode.html","title":"interface - OntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/ontology-node.ts\n        \n\n            \n                Description\n            \n            \n                A node in the ontology tree.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        parent\n                                \n                                \n                                        synonymLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of child identifiers.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of this node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for this ontology node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The identifier of the parent node. undefined if this is the root node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synonymLabels\n                                    \n                                \n                                \n                                    \n                                        synonymLabels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Labels for the synonyms of the label of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface OntologyNode {\n  /**\n   * The unique identifier of this node.\n   */\n  id: string;\n\n  /**\n   * Label for this ontology node.\n   */\n  label: string;\n\n  /**\n   * The identifier of the parent node. `undefined` if this is the root node.\n   */\n  parent: string;\n\n  /**\n   * An array of child identifiers.\n   */\n  children: string[];\n\n  /**\n   * Labels for the synonyms of the label of this node.\n   */\n  synonymLabels: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySearchComponent.html":{"url":"components/OntologySearchComponent.html","title":"component - OntologySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n\n\n    \n        Description\n    \n    \n        Componenet for searching the Ontology nodes.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-search\n            \n\n            \n                styleUrls\n                ./ontology-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleteOpen\n                            \n                            \n                                filteredResults$\n                            \n                            \n                                formControl\n                            \n                            \n                                    Public\n                                ontologyService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFormatter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                sortBySynonymResult\n                            \n                            \n                                sortLexically\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologyService: OntologySearchService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologyService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of searchService which provides all the search functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:25\n                            \n                        \n                \n                    \n                        Output event-emitter which emits the id of the OntologyNode whose label was\nselected by the user in the search-results\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFormatter\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFormatter(option?: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:72\n                \n            \n\n\n            \n                \n                    A formatter function to enable different display and selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a part of the search result entry to be displayed as a display value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:54\n                \n            \n\n\n            \n                \n                    on-init lifecycle hook for this component -\ngets the searched value from the view, sends it to the filter function in the OntologyService,\nand gets the search results from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:98\n                \n            \n\n\n            \n                \n                    Callback function triggered when the user selects a value from search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of MatAutocompleteSelectedEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortBySynonymResult\n                        \n                        \n                    \n                \n            \n            \n                \nsortBySynonymResult(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:81\n                \n            \n\n\n            \n                \n                    Sorts by results which have synonyms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 or -1\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortLexically\n                        \n                        \n                    \n                \n            \n            \n                \nsortLexically(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:90\n                \n            \n\n\n            \n                \n                    Sorts lexically\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        lower case value of node label\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoCompleteOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:36\n                            \n                        \n\n                \n                    \n                        Determines if autocomplete is open or close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredResults$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:41\n                            \n                        \n\n                \n                    \n                        Observable which provides the filtered search results\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('')\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:30\n                            \n                        \n\n                \n                    \n                        Instance of FormControl - tracks the value and validation status of an individual form control\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ontologyService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologySearchService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:47\n                            \n                        \n\n                \n                    \n                        instance of searchService which provides all the search functionality\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { get, sortBy } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../../core/models/ontology-node';\nimport { OntologySearchService, SearchResult } from '../../../core/services/ontology-search/ontology-search.service';\n\n\n/**\n * Componenet for searching the Ontology nodes.\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss']\n})\nexport class OntologySearchComponent implements OnInit {\n  /**\n   * Output event-emitter which emits the id of the OntologyNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() selected = new EventEmitter();\n\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new FormControl('');\n\n\n  /**\n   * Determines if autocomplete is open or close.\n   */\n  autoCompleteOpen = false;\n\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$: Observable;\n\n  /**\n   * Creates an instance of ontology search component.\n   * @param ontologyService instance of searchService which provides all the search functionality\n   */\n  constructor(public ontologyService: OntologySearchService) { }\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit(): void {\n    this.ontologyService.loadOntology();\n    const valueChanges = this.formControl.valueChanges as Observable;\n    this.filteredResults$ = valueChanges.pipe(\n      filter(value => typeof value === 'string'),\n      startWith(''),\n      switchMap(value => this.ontologyService.filter(value)),\n      map(searchResults => sortBy(searchResults, [\n        this.sortBySynonymResult, 'index', this.sortLexically\n      ]))\n    );\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option?: SearchResult): string {\n    return (option?.displayLabel ?? []).join('');\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Sorts lexically\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, ['option', 'value', 'node']) as OntologyNode;\n    if (node) {\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        \n          {{option.displayLabel[0]}}\n          {{option.displayLabel[1]}}\n          {{option.displayLabel[2]}}\n        \n      \n    \n\n    search\n  \n\n\n    \n\n    \n                \n                    ./ontology-search.component.scss\n                \n                .ccf-ontology-search {\n  width: 25rem;\n  margin-top: 1.5rem;\n\n  .field {\n    margin-left: 1.5rem;\n    width: 100%;\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-end {\n      border-radius: 0 500px 500px 0;\n      margin: 0;\n    }\n\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n          height: 3rem;\n\n          input {\n            margin-left: .4rem;\n          }\n        }\n        .mat-form-field-suffix {\n          top: .5rem;\n          border: none;\n        }\n      }\n    }\n\n    .mat-form-field-outline-start {\n      border-radius: 500px 0 0 500px;\n      min-width: 40px;\n\t  }\n  }\n}\n\n::ng-deep .ccf-ontology-search.detached {\n  border: 2px solid;\n  border-top: none;\n  border-radius: 0 0 1rem 1rem;\n  max-height: 18rem;\n\n  .results-container {\n    width: 380px;\n    margin-bottom: 1rem;\n    overflow: auto;\n    max-height: 15rem;\n    scrollbar-width: thin;\n\n    mat-option {\n      height: 1.5rem;\n      width: 380px;\n      \n      .search-term {\n        text-decoration: underline;\n      }\n    }\n  }\n\n}\n\n.autocomplete-open {\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-start {\n      border-radius: 50% 0 0 0;\n      border-bottom: none;\n    }\n\n    .mat-form-field-outline-end {\n      border-radius: 0 1rem 0 0;\n      border-bottom: none;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{option.displayLabel[0]}}          {{option.displayLabel[1]}}          {{option.displayLabel[2]}}                      search  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySearchModule.html":{"url":"modules/OntologySearchModule.html","title":"module - OntologySearchModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OntologySearchComponent } from './ontology-search.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  declarations: [OntologySearchComponent],\n  exports: [OntologySearchComponent]\n})\nexport class OntologySearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologySearchService.html":{"url":"injectables/OntologySearchService.html","title":"injectable - OntologySearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologySearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable OntologySearchService responsible for search result computations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootNode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                formatLabel\n                            \n                            \n                                getChildren\n                            \n                            \n                                getIndexOfMatch\n                            \n                            \n                                loadOntology\n                            \n                            \n                                    Private\n                                lookup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, store: Store, ontologyState: OntologyState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:107\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http requests service.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global data store.\n\n                                                        \n                                                \n                                                \n                                                        ontologyState\n                                                  \n                                                        \n                                                                        OntologyState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global ontology state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:142\n                \n            \n\n\n            \n                \n                    Searches the ontology with the search-term\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an array of search-results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatLabel\n                        \n                        \n                    \n                \n            \n            \n                \nformatLabel(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:200\n                \n            \n\n\n            \n                \n                    Formats label based on where the search-term was found in the OntologyNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        label or first synonym-label of OntologyNode which has the search-term\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search-term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        an array in the form of [prefix, search-term, suffix]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChildren\n                        \n                        \n                    \n                \n            \n            \n                \ngetChildren(node: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:216\n                \n            \n\n\n            \n                \n                    Fetches the children of an ontology node.\nNote: This can be called without a reference to this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node for which to get children.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyNode[]\n\n                    \n                    \n                        An array of children, empty if the node has no children.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIndexOfMatch\n                        \n                        \n                    \n                \n            \n            \n                \ngetIndexOfMatch(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:190\n                \n            \n\n\n            \n                \n                    Gets index of match in the ontology label\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the provided ontology node label or synonym label\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the searched text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the index of the match in the label\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadOntology\n                        \n                        \n                    \n                \n            \n            \n                \nloadOntology()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:124\n                \n            \n\n\n            \n                \n                    Loads ontology.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lookup(nodes: Immutable[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:154\n                \n            \n\n\n            \n                \n                    looks up ontology nodes and composes search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                Immutable[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ontology nodes\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SearchResult[]\n\n                    \n                    \n                        search results\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:107\n                            \n                        \n\n                \n                    \n                        Root node in ontology. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Immutable } from '@ngxs-labs/data/typings';\nimport { Store } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { JsonOntologyNode, jsonToOntologyNode } from '../../models/json-ontology';\nimport { OntologyNode } from '../../models/ontology-node';\nimport { OntologyState, OntologyStateModel } from '../../store/ontology/ontology.state';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/** Type of function for getting child nodes from a parent node. */\nexport type GetChildrenFunc = (o: OntologyNode) => OntologyNode[];\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[''] = { parent: '', children: [] } as unknown as OntologyNode;\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[''].children) as string;\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[''];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = {\n    id: 'http://purl.obolibrary.org/obo/UBERON_0013702',\n    label: 'body',\n    parent: '',\n    children: organIds,\n    synonymLabels: []\n  };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /** Root node in ontology. */\n  rootNode: Observable>;\n\n  /**\n   * Creates an instance of ontology search service.\n   *\n   * @param http The http requests service.\n   * @param store The global data store.\n   * @param ontologyState The global ontology state.\n   */\n  constructor(private http: HttpClient, private store: Store, private ontologyState: OntologyState) {\n    this.rootNode = this.ontologyState.rootNode$;\n    this.getChildren = this.getChildren.bind(this) as GetChildrenFunc;\n  }\n\n  /**\n   * Loads ontology.\n   */\n  loadOntology(): void {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => this.ontologyState.setOntology(ontology));\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.ontologyState.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologySelection.html":{"url":"interfaces/OntologySelection.html","title":"interface - OntologySelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologySelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/ontology-selection.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         OntologyNode | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OntologyNode } from './ontology-node';\n\nexport interface OntologySelection {\n  location: OntologyNode | undefined;\n  id: string;\n  label: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySelectionComponent.html":{"url":"components/OntologySelectionComponent.html","title":"component - OntologySelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Ontology selection component that encapsulates ontology search and tree components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-selection\n            \n\n            \n                styleUrls\n                ./ontology-selection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ontologySearchService\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                occurenceData\n                            \n                            \n                                ontologyFilter\n                            \n                            \n                                termData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologySearchService: OntologySearchService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology selection component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologySearchService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for searching the ontology.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global state store.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        occurenceData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:28\n                            \n                        \n                \n                    \n                        A record of terms within the current filter.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ontologyFilter\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:40\n                            \n                        \n                \n                    \n                        Input list of selected ontology terms passed down to ontology-tree.\nUsed to change display of ontology tree when selection is made from\noutside the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        termData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:33\n                            \n                        \n                \n                    \n                        A record of terms the app currently has data for.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ontologySelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n                \n                    \n                        Captures and passes along the change in ontologySelections.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(ontologyNode: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:61\n                \n            \n\n\n            \n                \n                    Ontology selection event when node is selected from the search results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontologyNode\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected ontology node.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ontologySearchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologySearchService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n\n                \n                    \n                        Service for searching the ontology.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tree\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologyTreeComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(OntologyTreeComponent, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        View child of search component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Output, EventEmitter, Input } from '@angular/core';\nimport { Store } from '@ngxs/store';\n\nimport { OntologyNode } from '../../../core/models/ontology-node';\nimport { OntologySearchService } from '../../../core/services/ontology-search/ontology-search.service';\nimport { OntologyState, OntologyStateModel } from '../../../core/store/ontology/ontology.state';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\nimport { OntologySelection } from '../../../core/models/ontology-selection';\n\n\n/**\n * Ontology selection component that encapsulates ontology search and tree components.\n */\n@Component({\n  selector: 'ccf-ontology-selection',\n  templateUrl: './ontology-selection.component.html',\n  styleUrls: ['./ontology-selection.component.scss']\n})\nexport class OntologySelectionComponent {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree: OntologyTreeComponent;\n\n  /**\n   * A record of terms within the current filter.  To be passed on to ontology-tree\n   */\n  @Input() occurenceData: Record;\n\n  /**\n   * A record of terms the app currently has data for.  To be passed on to ontology-tree\n   */\n  @Input() termData: Record;\n\n  /**\n   * Input list of selected ontology terms passed down to ontology-tree.\n   * Used to change display of ontology tree when selection is made from\n   * outside the component.\n   */\n  @Input() ontologyFilter: string[];\n\n  /**\n   * Captures and passes along the change in ontologySelections.\n   */\n  @Output() ontologySelection = new EventEmitter();\n\n  /**\n   * Creates an instance of ontology selection component.\n   * @param ontologySearchService Service for searching the ontology.\n   * @param store The global state store.\n   */\n  constructor(\n    public ontologySearchService: OntologySearchService,\n    private readonly store: Store\n  ) { }\n\n  /**\n   * Ontology selection event when node is selected from the search results.\n   * @param ontologyNode selected ontology node.\n   */\n  selected(ontologyNode: OntologyNode): void {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    this.tree.expandAndSelect(ontologyNode, node => nodes[node.parent]);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ontology-selection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySelectionModule.html":{"url":"modules/OntologySelectionModule.html","title":"module - OntologySelectionModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySelectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_imports\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { OntologySelectionComponent } from './ontology-selection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule\n  ],\n  declarations: [OntologySelectionComponent],\n  exports: [OntologySelectionComponent],\n})\nexport class OntologySelectionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologyState.html":{"url":"injectables/OntologyState.html","title":"injectable - OntologyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologyState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Ontology tree state.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                nodes$\n                            \n                            \n                                    Public\n                                    Readonly\n                                rootNode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setOntology\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOntology\n                        \n                        \n                    \n                \n            \n            \n                \nsetOntology(ontology: OntologyStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts:50\n                \n            \n\n\n            \n                \n                    Sets the ontology state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontology\n                                    \n                                                OntologyStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new state.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            nodes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(map(state => Object.values(state.nodes)))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts:39\n                            \n                        \n\n                \n                    \n                        All nodes in the ontology tree. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            rootNode$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(map(state => state.nodes[state.root]))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts:42\n                            \n                        \n\n                \n                    \n                        Root node of the ontology tree. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../models/ontology-node';\n\n\n/**\n * Data model for the ontology state.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n/**\n * Ontology tree state.\n */\n@StateRepository()\n@State({\n  name: 'ontology',\n  defaults: {\n    root: '',\n    nodes: {}\n  }\n})\n@Injectable()\nexport class OntologyState extends NgxsDataRepository {\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.state$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.state$.pipe(map(state => state.nodes[state.root]));\n\n  /**\n   * Sets the ontology state.\n   *\n   * @param ontology The new state.\n   */\n  @DataAction()\n  setOntology(ontology: OntologyStateModel): void {\n    this.ctx.setState(ontology);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyStateModel.html":{"url":"interfaces/OntologyStateModel.html","title":"interface - OntologyStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Data model for the ontology state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        nodes\n                                \n                                \n                                        root\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hash table of nodes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier of the root node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../models/ontology-node';\n\n\n/**\n * Data model for the ontology state.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n/**\n * Ontology tree state.\n */\n@StateRepository()\n@State({\n  name: 'ontology',\n  defaults: {\n    root: '',\n    nodes: {}\n  }\n})\n@Injectable()\nexport class OntologyState extends NgxsDataRepository {\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.state$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.state$.pipe(map(state => state.nodes[state.root]));\n\n  /**\n   * Sets the ontology state.\n   *\n   * @param ontology The new state.\n   */\n  @DataAction()\n  setOntology(ontology: OntologyStateModel): void {\n    this.ctx.setState(ontology);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyTreeModule.html":{"url":"modules/OntologyTreeModule.html","title":"module - OntologyTreeModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyTreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganInfo.html":{"url":"interfaces/OrganInfo.html","title":"interface - OrganInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrganInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts\n        \n\n            \n                Description\n            \n            \n                Contains the organ name and url of the icon svg\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        src\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Output, EventEmitter } from '@angular/core';\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n\n  src: string;\n\n  /**\n   * Name of the organ\n   */\n  name: string;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss']\n})\nexport class OrganSelectorComponent {\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() organChanged = new EventEmitter();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  organList: OrganInfo[] = [\n    {src: 'app:bladder', name: 'Bladder'},\n    {src: 'app:brain', name: 'Brain'},\n    {src: 'app:colon', name: 'Colon'},\n    {src: 'app:heart', name: 'Heart'},\n    {src: 'app:kidney', name: 'Kidney'},\n    {src: 'app:liver', name: 'Liver'},\n    {src: 'app:lung', name: 'Lung'},\n    {src: 'app:lymph_nodes', name: 'Lymph Nodes'},\n    {src: 'app:ovaries', name: 'Ovaries'},\n    {src: 'app:small_intestine', name: 'Small Intestine'},\n    {src: 'app:spleen', name: 'Spleen'},\n    {src: 'app:stomach', name: 'Stomach'},\n    {src: 'app:thymus', name: 'Thymus'}\n  ];\n\n  /**\n   * Currently selected organ\n   */\n  selectedOrgan: string;\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   * @param dir Direction to be scrolled\n   * @param step Size of step (px)\n   */\n  shift(dir: string, step: number): void {\n    if (this.onLeft && dir === 'left') {\n      return;\n    } else if (this.onRight && dir === 'right') {\n      return;\n    }\n    const element = document.getElementsByClassName('carousel-item-list')[0] as HTMLElement;\n    let val = parseInt(element.style.left, 10) || 0;\n    val = dir === 'right' ? val -= step : val += step;\n    element.style.left = val+'px';\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val === step*(5 - this.organList.length) ? true : false;\n  }\n\n  /**\n   * Sets currently selected organ and emits the organ name\n   * @param icon The icon selected\n   */\n  selectOrgan(icon: OrganInfo): void {\n    this.selectedOrgan = icon.name;\n    console.log(this.selectedOrgan);\n    this.organChanged.emit(icon.name);\n  }\n\n  /**\n   * Determines whether an icon represents the currently selected organ\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(icon: OrganInfo): boolean {\n    return this.selectedOrgan === icon.name;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganSelectorComponent.html":{"url":"components/OrganSelectorComponent.html","title":"component - OrganSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Organ carousel for selecting the organ to be viewed\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-organ-selector\n            \n\n            \n                styleUrls\n                ./organ-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organ-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onLeft\n                            \n                            \n                                onRight\n                            \n                            \n                                organList\n                            \n                            \n                                selectedOrgan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                selectOrgan\n                            \n                            \n                                shift\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                organChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        organChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:29\n                            \n                        \n                \n                    \n                        Emits the name of the organ when selected\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisSelected(icon: OrganInfo)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:100\n                \n            \n\n\n            \n                \n                    Determines whether an icon represents the currently selected organ\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                OrganInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The icon of interest\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if selected\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOrgan\n                        \n                        \n                    \n                \n            \n            \n                \nselectOrgan(icon: OrganInfo)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:89\n                \n            \n\n\n            \n                \n                    Sets currently selected organ and emits the organ name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                OrganInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The icon selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shift\n                        \n                        \n                    \n                \n            \n            \n                \nshift(dir: string, step: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:71\n                \n            \n\n\n            \n                \n                    Scrolls the carousel left or right by one step.\nPrevents scrolling past the beginning or end of the carousel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Direction to be scrolled\n\n                                    \n                                \n                                \n                                    step\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Size of step (px)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLeft\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:34\n                            \n                        \n\n                \n                    \n                        Determines whether the carousel is at the beginning\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onRight\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:39\n                            \n                        \n\n                \n                    \n                        Determines whether the carousel is at the end\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OrganInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {src: 'app:bladder', name: 'Bladder'},\n    {src: 'app:brain', name: 'Brain'},\n    {src: 'app:colon', name: 'Colon'},\n    {src: 'app:heart', name: 'Heart'},\n    {src: 'app:kidney', name: 'Kidney'},\n    {src: 'app:liver', name: 'Liver'},\n    {src: 'app:lung', name: 'Lung'},\n    {src: 'app:lymph_nodes', name: 'Lymph Nodes'},\n    {src: 'app:ovaries', name: 'Ovaries'},\n    {src: 'app:small_intestine', name: 'Small Intestine'},\n    {src: 'app:spleen', name: 'Spleen'},\n    {src: 'app:stomach', name: 'Stomach'},\n    {src: 'app:thymus', name: 'Thymus'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:44\n                            \n                        \n\n                \n                    \n                        List of organs in the carousel\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedOrgan\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:63\n                            \n                        \n\n                \n                    \n                        Currently selected organ\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter } from '@angular/core';\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n\n  src: string;\n\n  /**\n   * Name of the organ\n   */\n  name: string;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss']\n})\nexport class OrganSelectorComponent {\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() organChanged = new EventEmitter();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  organList: OrganInfo[] = [\n    {src: 'app:bladder', name: 'Bladder'},\n    {src: 'app:brain', name: 'Brain'},\n    {src: 'app:colon', name: 'Colon'},\n    {src: 'app:heart', name: 'Heart'},\n    {src: 'app:kidney', name: 'Kidney'},\n    {src: 'app:liver', name: 'Liver'},\n    {src: 'app:lung', name: 'Lung'},\n    {src: 'app:lymph_nodes', name: 'Lymph Nodes'},\n    {src: 'app:ovaries', name: 'Ovaries'},\n    {src: 'app:small_intestine', name: 'Small Intestine'},\n    {src: 'app:spleen', name: 'Spleen'},\n    {src: 'app:stomach', name: 'Stomach'},\n    {src: 'app:thymus', name: 'Thymus'}\n  ];\n\n  /**\n   * Currently selected organ\n   */\n  selectedOrgan: string;\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   * @param dir Direction to be scrolled\n   * @param step Size of step (px)\n   */\n  shift(dir: string, step: number): void {\n    if (this.onLeft && dir === 'left') {\n      return;\n    } else if (this.onRight && dir === 'right') {\n      return;\n    }\n    const element = document.getElementsByClassName('carousel-item-list')[0] as HTMLElement;\n    let val = parseInt(element.style.left, 10) || 0;\n    val = dir === 'right' ? val -= step : val += step;\n    element.style.left = val+'px';\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val === step*(5 - this.organList.length) ? true : false;\n  }\n\n  /**\n   * Sets currently selected organ and emits the organ name\n   * @param icon The icon selected\n   */\n  selectOrgan(icon: OrganInfo): void {\n    this.selectedOrgan = icon.name;\n    console.log(this.selectedOrgan);\n    this.organChanged.emit(icon.name);\n  }\n\n  /**\n   * Determines whether an icon represents the currently selected organ\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(icon: OrganInfo): boolean {\n    return this.selectedOrgan === icon.name;\n  }\n}\n\n    \n\n    \n        \n  chevron_left\n  \n    \n      \n        \n        {{icon.name}}\n      \n    \n  \n  chevron_right\n\n\n    \n\n    \n                \n                    ./organ-selector.component.scss\n                \n                .carousel {\n  display: flex;\n  align-items: center;\n  height: 4.5rem;\n  justify-content: space-between;\n  border-radius: 3px;\n\n  .carousel-left-icon,\n  .carousel-right-icon {\n    font-size: 32px;\n    transform: scale(1, 1.2);\n    height: 2rem;\n    width: 2rem;\n    cursor: pointer;\n\n    &.disabled {\n      cursor: default;\n    }\n  }\n\n  .carousel-left-icon {\n    text-align: right;\n  }\n\n  .carousel-right-icon {\n    text-align: left;\n  }\n\n  .carousel-item-container {\n    overflow: hidden;\n\n    .carousel-item-list {\n      position: relative;\n      left: 0px;\n      display: flex;\n      transition: all 0.25s ease-in-out;\n      width: 17.5rem;\n\n      .carousel-item {\n        display: flex;\n        flex-direction: column;\n        cursor: pointer;\n        justify-content: center;\n\n        .carousel-icon {\n          text-align: center;\n          width: 3.5rem;\n          height: 2.75rem;\n        }\n\n        .carousel-text {\n          text-align: center;\n          font-size: 10px;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  chevron_left                            {{icon.name}}              chevron_right'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganSelectorModule.html":{"url":"modules/OrganSelectorModule.html","title":"module - OrganSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrganSelectorComponent } from './organ-selector.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [OrganSelectorComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [OrganSelectorComponent]\n})\nexport class OrganSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageState.html":{"url":"injectables/PageState.html","title":"injectable - PageState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                embedded$\n                            \n                            \n                                    Readonly\n                                homeUrl$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            embedded$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('embedded'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            homeUrl$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('homeUrl'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { pluck } from 'rxjs/operators';\n\n\n\nexport interface PageStateModel {\n  embedded: boolean;\n  homeUrl: string;\n}\n\n\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    embedded: false,\n    homeUrl: ''\n  }\n})\n@Injectable()\nexport class PageState extends NgxsDataRepository {\n  readonly embedded$ = this.state$.pipe(pluck('embedded'));\n  readonly homeUrl$ = this.state$.pipe(pluck('homeUrl'));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageStateModel.html":{"url":"interfaces/PageStateModel.html","title":"interface - PageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        embedded\n                                \n                                \n                                        homeUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        embedded\n                                    \n                                \n                                \n                                    \n                                        embedded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { pluck } from 'rxjs/operators';\n\n\n\nexport interface PageStateModel {\n  embedded: boolean;\n  homeUrl: string;\n}\n\n\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    embedded: false,\n    homeUrl: ''\n  }\n})\n@Injectable()\nexport class PageState extends NgxsDataRepository {\n  readonly embedded$ = this.state$.pipe(pluck('embedded'));\n  readonly homeUrl$ = this.state$.pipe(pluck('homeUrl'));\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PictureInPictureViewer.html":{"url":"classes/PictureInPictureViewer.html","title":"class - PictureInPictureViewer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PictureInPictureViewer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ImageViewer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channelConfigs\n                            \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _loaders\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                deck\n                            \n                            \n                                    Protected\n                                layerConfigs\n                            \n                            \n                                    Protected\n                                layers\n                            \n                            \n                                    Readonly\n                                props\n                            \n                            \n                                    Protected\n                                states\n                            \n                            \n                                    Protected\n                                views\n                            \n                            \n                                    Protected\n                                vivViews\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Async\n                                createVivViews\n                            \n                            \n                                clear\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createVivViews\n                            \n                            \n                                finalize\n                            \n                            \n                                    Private\n                                initializeDeck\n                            \n                            \n                                    Private\n                                layerFilter\n                            \n                            \n                                    Private\n                                onViewStateChange\n                            \n                            \n                                    Private\n                                resetChannelConfigs\n                            \n                            \n                                    Async\n                                setSize\n                            \n                            \n                                    Async\n                                setSources\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Async\n                                updateChannelConfigs\n                            \n                            \n                                    Protected\n                                updateDeckProps\n                            \n                            \n                                    Protected\n                                updateLayers\n                            \n                            \n                                    Protected\n                                updateState\n                            \n                            \n                                    Protected\n                                updateViews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: PictureInPictureViewerProps)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        PictureInPictureViewerProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _channelConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:78\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:69\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Loader[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:74\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:73\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:68\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:86\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayerConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:83\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Layer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:82\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            props\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:84\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:81\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            vivViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VivView[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:80\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:169\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:168\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalize\n                        \n                        \n                    \n                \n            \n            \n                \nfinalize()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:110\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeDeck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDeck(props)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:212\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Deck\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            layerFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerFilter(undefined: LayerFilterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:244\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LayerFilterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewStateChange(undefined: OnViewStateChangeArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:250\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OnViewStateChangeArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChannelConfigs()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:231\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize(width: number, height: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:114\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSources(sources: DataSource[])\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:133\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            DataSource[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:171\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChannelConfigs(configs: Record>)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:148\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Record>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateDeckProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDeckProps(props: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:208\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(args: ValueOrGenerator | >)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:195\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ValueOrGenerator | >\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViews()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DetailView, OverviewView, OverviewViewNewArgs, VivView } from '@hms-dbmi/viv';\n\nimport { ImageViewer, ImageViewerProps, LayerConfig } from './image-viewer';\n\nexport type OverviewArgs = Omit;\nexport interface PictureInPictureViewerProps extends ImageViewerProps {\n  overview: OverviewArgs;\n}\n\nconst OVERVIEW_DEFAULTS: Partial = {\n  margin: 25,\n  scale: 0.15,\n  position: 'bottom-left'\n};\n\nexport class PictureInPictureViewer extends ImageViewer {\n  constructor(props: PictureInPictureViewerProps) {\n    super({\n      ...props,\n      overview: { ...OVERVIEW_DEFAULTS, ...props.overview }\n    });\n  }\n\n  protected async createVivViews(): Promise {\n    const { loaders, width, height, props: { initialViewState, overview } } = this;\n    if (loaders.length === 0) { return []; }\n\n    const detailView = new DetailView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'detail',\n        width,\n        height\n      }\n    });\n\n    const overviewView = new OverviewView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'overview',\n        width,\n        height\n      },\n      loader: loaders[0],\n      ...overview\n    });\n\n    return [detailView, overviewView];\n  }\n\n  protected async createLayerConfigs(): Promise {\n    const { loaders, channelConfigs } = this;\n    if (loaders.length === 0) { return []; }\n\n    const loaderSelection: { channel: string }[] = [];\n    const channelIsOn: boolean[] = [];\n    const colorValues: [number, number, number][] = [];\n    const sliderValues: [number, number][] = [];\n    for (const [key, { active, color, slider }] of Object.entries(channelConfigs)) {\n      loaderSelection.push({ channel: key });\n      channelIsOn.push(active);\n      colorValues.push(color);\n      sliderValues.push(slider);\n    }\n\n    const isRgb = loaders[0].isRgb;\n    return [\n      {\n        loader: this.loaders[0],\n        loaderSelection,\n        channelIsOn: isRgb ? [true, true, true] : channelIsOn,\n        colorValues: isRgb ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]] : colorValues,\n        sliderValues: isRgb ? [[0, 255], [0, 255], [0, 255]] : sliderValues\n      }\n    ];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PictureInPictureViewerProps.html":{"url":"interfaces/PictureInPictureViewerProps.html","title":"interface - PictureInPictureViewerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PictureInPictureViewerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ImageViewerProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        overview\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                    \n                                \n                                \n                                    \n                                        overview:         OverviewArgs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OverviewArgs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DetailView, OverviewView, OverviewViewNewArgs, VivView } from '@hms-dbmi/viv';\n\nimport { ImageViewer, ImageViewerProps, LayerConfig } from './image-viewer';\n\nexport type OverviewArgs = Omit;\nexport interface PictureInPictureViewerProps extends ImageViewerProps {\n  overview: OverviewArgs;\n}\n\nconst OVERVIEW_DEFAULTS: Partial = {\n  margin: 25,\n  scale: 0.15,\n  position: 'bottom-left'\n};\n\nexport class PictureInPictureViewer extends ImageViewer {\n  constructor(props: PictureInPictureViewerProps) {\n    super({\n      ...props,\n      overview: { ...OVERVIEW_DEFAULTS, ...props.overview }\n    });\n  }\n\n  protected async createVivViews(): Promise {\n    const { loaders, width, height, props: { initialViewState, overview } } = this;\n    if (loaders.length === 0) { return []; }\n\n    const detailView = new DetailView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'detail',\n        width,\n        height\n      }\n    });\n\n    const overviewView = new OverviewView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'overview',\n        width,\n        height\n      },\n      loader: loaders[0],\n      ...overview\n    });\n\n    return [detailView, overviewView];\n  }\n\n  protected async createLayerConfigs(): Promise {\n    const { loaders, channelConfigs } = this;\n    if (loaders.length === 0) { return []; }\n\n    const loaderSelection: { channel: string }[] = [];\n    const channelIsOn: boolean[] = [];\n    const colorValues: [number, number, number][] = [];\n    const sliderValues: [number, number][] = [];\n    for (const [key, { active, color, slider }] of Object.entries(channelConfigs)) {\n      loaderSelection.push({ channel: key });\n      channelIsOn.push(active);\n      colorValues.push(color);\n      sliderValues.push(slider);\n    }\n\n    const isRgb = loaders[0].isRgb;\n    return [\n      {\n        loader: this.loaders[0],\n        loaderSelection,\n        channelIsOn: isRgb ? [true, true, true] : channelIsOn,\n        colorValues: isRgb ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]] : colorValues,\n        sliderValues: isRgb ? [[0, 255], [0, 255], [0, 255]] : sliderValues\n      }\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PureImageViewerLayer.html":{"url":"interfaces/PureImageViewerLayer.html","title":"interface - PureImageViewerLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PureImageViewerLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/image-viewer-layer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        brightness\n                                \n                                \n                                        color\n                                \n                                \n                                        colorScheme\n                                \n                                \n                                        customizedColor\n                                \n                                \n                                        defaultOrder\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        selected\n                                \n                                \n                                        selectionOrder\n                                \n                                \n                                        transparency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brightness\n                                    \n                                \n                                \n                                    \n                                        brightness:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                    \n                                \n                                \n                                    \n                                        colorScheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customizedColor\n                                    \n                                \n                                \n                                    \n                                        customizedColor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOrder\n                                    \n                                \n                                \n                                    \n                                        defaultOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionOrder\n                                    \n                                \n                                \n                                    \n                                        selectionOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transparency\n                                    \n                                \n                                \n                                    \n                                        transparency:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColorScheme } from './color-scheme';\n\nexport interface PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number];\n  transparency: number;\n\n  selected: boolean;\n  customizedColor: boolean;\n  selectionOrder: number;\n  defaultOrder: number;\n}\n\nexport type ImageViewerLayerRequiredArgNames = 'id' | 'colorScheme';\nexport type ImageViewerLayerArgs =\n  Pick &\n  Partial>;\n\nexport class ImageViewerLayer implements PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number] = [20, 60];\n  transparency = 100;\n\n  selected = false;\n  customizedColor = false;\n  selectionOrder = 0;\n  defaultOrder = -1;\n\n  constructor(data: ImageViewerLayerArgs) {\n    Object.assign(this, {\n      label: data.id,\n      color: data.colorScheme.colors[0]\n    }, data);\n  }\n\n  /**\n   * Dynamically creates a background style based on the layer's color or color scheme\n   */\n  get background(): string {\n    if (this.colorScheme.type === 'discrete') {\n      return this.color;\n    }\n\n    const colors = this.colorScheme.colors;\n    const positions = this.colorScheme.positions;\n\n    let gradient = 'linear-gradient(to right, ';\n    colors.forEach((color, index) => {\n      gradient += `${color} ${positions[index] * 100}%`;\n      if (index  225 ? true : false;\n  }\n\n  /**\n   * Determines whether the color icon is dark enough to require a border (dark mode only)\n   */\n  isDark(): boolean {\n    return this.getBrightness() \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserComponent.html":{"url":"components/ResultsBrowserComponent.html","title":"component - ResultsBrowserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsBrowserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n\n\n    \n        Description\n    \n    \n        ResultsBrowser is the container component in charge of rendering the label and stats of\nthe results as well as handling the virtual scrolling and click emitters of\nResultsBrowserItems.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser\n            \n\n            \n                styleUrls\n                ./results-browser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atScrollBottom\n                            \n                            \n                                selectedResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aggregateData\n                            \n                            \n                                data\n                            \n                            \n                                dataLoading\n                            \n                            \n                                resultLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resultClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aggregateData\n                    \n                \n                \n                    \n                        Type :         AggregateResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:25\n                            \n                        \n                \n                    \n                        Input used to add a list of stats at the top the results browser.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ListResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:20\n                            \n                        \n                \n                    \n                        Input array of items used to generate the list of results in the results browser.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dataLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:35\n                            \n                        \n                \n                    \n                        Whether or not the state is currently loading in data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resultLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:30\n                            \n                        \n                \n                    \n                        Input allowing the title of the result browser to be set outside of the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resultClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:41\n                            \n                        \n                \n                    \n                        Output emitting the result that was clicked on and its relevant information.\nUsed for opening and rendering the result viewer.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScroll\n                        \n                        \n                    \n                \n            \n            \n                \nonScroll(event: UIEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:59\n                \n            \n\n\n            \n                \n                    Handles the scroll event to detect when scroll is at the bottom.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            UIEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scroll event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            atScrollBottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:47\n                            \n                        \n\n                \n                    \n                        Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\nUsed to determine whether or not to render the gradient at the bottom.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListResult\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:52\n                            \n                        \n\n                \n                    \n                        Keeps track of the selected result for highlighting\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AggregateResult, ListResult } from 'ccf-database';\n\n\n/**\n * ResultsBrowser is the container component in charge of rendering the label and stats of\n * the results as well as handling the virtual scrolling and click emitters of\n * ResultsBrowserItems.\n */\n@Component({\n  selector: 'ccf-results-browser',\n  templateUrl: './results-browser.component.html',\n  styleUrls: ['./results-browser.component.scss']\n})\nexport class ResultsBrowserComponent {\n\n  /**\n   * Input array of items used to generate the list of results in the results browser.\n   */\n  @Input() data: ListResult[];\n\n  /**\n   * Input used to add a list of stats at the top the results browser.\n   */\n  @Input() aggregateData: AggregateResult[];\n\n  /**\n   * Input allowing the title of the result browser to be set outside of the component.\n   */\n  @Input() resultLabel: string;\n\n  /**\n   * Whether or not the state is currently loading in data.\n   */\n  @Input() dataLoading: boolean;\n\n  /**\n   * Output emitting the result that was clicked on and its relevant information.\n   * Used for opening and rendering the result viewer.\n   */\n  @Output() resultClicked = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\n   * Used to determine whether or not to render the gradient at the bottom.\n   */\n  atScrollBottom = false;\n\n  /**\n   * Keeps track of the selected result for highlighting\n   */\n  selectedResult: ListResult;\n\n  /**\n   * Handles the scroll event to detect when scroll is at the bottom.\n   *\n   * @param event The scroll event.\n   */\n  onScroll(event: UIEvent): void {\n    if (!event.target) {\n      return;\n    }\n\n    const { clientHeight, scrollHeight, scrollTop } = event.target as Element;\n    const diff = scrollHeight - scrollTop - clientHeight;\n    this.atScrollBottom = diff \n    \n\n    \n        \n  \n    {{ resultLabel }}\n    \n      {{stat.count}}\n      {{stat.label}}\n    \n  \n\n  \n    \n      \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./results-browser.component.scss\n                \n                .results-browser-container {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 7rem);\n  padding: 0.75rem 1.5rem 1.5rem 1.5rem;\n\n  .stat-box {\n    margin-bottom: 1.5rem;\n    line-height: 1.25;\n\n    #title {\n      margin-bottom: 0.75rem;\n      font-weight: bold;\n    }\n\n    .stat-row {\n      display: flex;\n      flex-direction: row;\n\n      .stat-value {\n        margin-right: 1rem;\n        width: 5.5rem;\n        text-align: right;\n      }\n    }\n  }\n\n  .results-browser-list {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    overflow-y: scroll;\n    scrollbar-width: thin;\n  }\n\n  .scroll-gradient {\n    position: absolute;\n    height: 9rem;\n    width: 95%;\n    bottom: 0;\n    pointer-events: none;\n\n    &.hidden {\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ resultLabel }}          {{stat.count}}      {{stat.label}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserItemComponent.html":{"url":"components/ResultsBrowserItemComponent.html","title":"component - ResultsBrowserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsBrowserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts\n\n\n    \n        Description\n    \n    \n        Component in charge of rendering the individual result browser items that are\nused in the ResultsBrowserComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser-item\n            \n\n            \n                styleUrls\n                ./results-browser-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                openImageViewer\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ListResult\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:19\n                            \n                        \n                \n                    \n                        Input object containing the label, download, click action,\nand image information for the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        openImageViewer\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:24\n                            \n                        \n                \n                    \n                        Output used to pass up the intent to open the ImageViewer\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openResult\n                        \n                        \n                    \n                \n            \n            \n                \nopenResult()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:30\n                \n            \n\n\n            \n                \n                    Decided which action to take based on the result's resultType property\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ListResult } from 'ccf-database';\n\n\n/**\n * Component in charge of rendering the individual result browser items that are\n * used in the ResultsBrowserComponent.\n */\n@Component({\n  selector: 'ccf-results-browser-item',\n  templateUrl: './results-browser-item.component.html',\n  styleUrls: ['./results-browser-item.component.scss']\n})\nexport class ResultsBrowserItemComponent {\n  /**\n   * Input object containing the label, download, click action,\n   * and image information for the component.\n   */\n  @Input() data: ListResult;\n\n  /**\n   * Output used to pass up the intent to open the ImageViewer\n   */\n  @Output() openImageViewer = new EventEmitter();\n\n  /**\n   * Decided which action to take based on the result's resultType property\n   * @param result the result which was clicked on\n   */\n  openResult(): void {\n    switch (this.data.resultType) {\n      case ('image_viewer'): {\n        // Open the image-viewer\n        this.openImageViewer.emit();\n        break;\n      }\n      case ('external_link'): {\n        // Open link in new tab\n        window.open(this.data.resultUrl, '_blank');\n        break;\n      }\n      case ('local_link'): {\n        // Open link in current tab\n        window.open(this.data.resultUrl, '_self');\n        break;\n      }\n      default: {\n        // When no resultType is set, image viewer is the default\n        this.openImageViewer.emit();\n        break;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n\n    \n      {{ data.label }}\n      {{ info }}\n    \n  \n\n  \n    \n      cloud_download\n    \n  \n  \n    \n      cloud_download\n    \n  \n\n\n    \n\n    \n                \n                    ./results-browser-item.component.scss\n                \n                @use '~@angular/material/theming' as *;\n\n.result-item {\n    border-top: 1px solid;\n    padding: .5rem;\n    display: flex;\n    flex-direction: row;\n    height: 4rem;\n\n    .result-item-click-area {\n        display: flex;\n        cursor: pointer;\n\n        .result-image {\n            width: 5rem;\n            height: 100%;\n            object-fit: cover;\n        }\n\n        .result-image-placeholder {\n            width: 5rem;\n        }\n\n        .result-description {\n            width: 15rem;\n            font-size: .625rem;\n            margin-left: 1rem;\n            margin-right: 1rem;\n            line-height: 1.25;\n\n            div {\n                width: 10rem;\n            }\n\n            .description-label {\n                font-weight: bold !important;\n            }\n\n            .description-data {\n                text-overflow: ellipsis;\n                overflow: hidden;\n                white-space: nowrap;\n                font-weight: lighter;\n            }\n        }\n    }\n\n    .result-download {\n        width: 1.5rem;\n\n        .download {\n            cursor: pointer;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ data.label }}      {{ info }}                  cloud_download                  cloud_download      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserItemModule.html":{"url":"modules/ResultsBrowserItemModule.html","title":"module - ResultsBrowserItemModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResultsBrowserItemModule\n\n\n\ncluster_ResultsBrowserItemModule_declarations\n\n\n\ncluster_ResultsBrowserItemModule_exports\n\n\n\n\nResultsBrowserItemComponent\n\nResultsBrowserItemComponent\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule -->\n\nResultsBrowserItemComponent->ResultsBrowserItemModule\n\n\n\n\n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent  -->\n\nResultsBrowserItemModule->ResultsBrowserItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResultsBrowserItemComponent } from './results-browser-item.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [ResultsBrowserItemComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [ResultsBrowserItemComponent]\n})\nexport class ResultsBrowserItemModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserModule.html":{"url":"modules/ResultsBrowserModule.html","title":"module - ResultsBrowserModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_imports\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserModule -->\n\nResultsBrowserItemModule->ResultsBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResultsBrowserItemModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResultsBrowserItemModule } from '../results-browser-item/results-browser-item.module';\nimport { ResultsBrowserComponent } from './results-browser.component';\n\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\n\n@NgModule({\n  declarations: [ResultsBrowserComponent],\n  imports: [\n    CommonModule,\n    ResultsBrowserItemModule,\n    ScrollingModule\n  ],\n  exports: [ResultsBrowserComponent]\n})\nexport class ResultsBrowserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RightSidebarComponent.html":{"url":"components/RightSidebarComponent.html","title":"component - RightSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RightSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-right-sidebar\n            \n\n            \n                styleUrls\n                ./right-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./right-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-right-sidebar'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:12\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\n\n@Component({\n  selector: 'ccf-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RightSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-right-sidebar';\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n                \n                    ./right-sidebar.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  hr {\n    width: 100%;\n    margin-top: 0.75rem;\n    margin-bottom: 1.5rem;\n    border-style: solid;\n    border-width: 1.5px;\n  }\n\n  :not(hr) {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n\n  *:first-child {\n    margin-top: 1.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RightSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RightSidebarModule.html":{"url":"modules/RightSidebarModule.html","title":"module - RightSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    RightSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockSizeInputModule\n                        \n                        \n                            RotationSliderModule\n                        \n                        \n                            SlicesInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BlockSizeInputModule } from '../../shared/components/block-size-input/block-size-input.module';\nimport { RotationSliderModule } from '../../shared/components/rotation-slider/rotation-slider.module';\nimport { SlicesInputModule } from '../../shared/components/slices-input/slices-input.module';\nimport { RightSidebarComponent } from './right-sidebar.component';\n\n\n@NgModule({\n  imports: [CommonModule, BlockSizeInputModule, RotationSliderModule, SlicesInputModule],\n  declarations: [RightSidebarComponent],\n  exports: [RightSidebarComponent]\n})\nexport class RightSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rotation.html":{"url":"interfaces/Rotation.html","title":"interface - Rotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n        \n\n            \n                Description\n            \n            \n                Type in which the values of the sliders are stored. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                                \n                                        z\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X slider value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y slider value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z slider value \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Output, EventEmitter, Input, HostBinding } from '@angular/core';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss']\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation: Rotation = { x: 0, y: 0, z: 0 };\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    this.rotation = { ... this.rotation, [axis]: +newRotation };\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(): void {\n    this.rotation = { x: 0, y: 0, z: 0 };\n    this.rotationChange.emit(this.rotation);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RotationSliderComponent.html":{"url":"components/RotationSliderComponent.html","title":"component - RotationSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RotationSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n\n\n    \n        Description\n    \n    \n        Component that enables the setting of a Rotation object via either 3 draggable sliders\nor through an Input method.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-rotation-slider\n            \n\n            \n                styleUrls\n                ./rotation-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rotation-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRotation\n                            \n                            \n                                resetRotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotationChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotation\n                    \n                \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0, z: 0 }\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:30\n                            \n                        \n                \n                    \n                        Input that allows the rotation to be changed from outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rotationChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:35\n                            \n                        \n                \n                    \n                        Output that emits the new rotation whenever it is changed from within the component\n\n                    \n                \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-rotation-slider'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:25\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeRotation\n                        \n                        \n                    \n                \n            \n            \n                \nchangeRotation(newRotation: number | string, axis: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:42\n                \n            \n\n\n            \n                \n                    Function that handles updating the rotation and emitting the new value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newRotation\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new value for one of the axis to be set to\n\n                                    \n                                \n                                \n                                    axis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        which axis to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetRotation\n                        \n                        \n                    \n                \n            \n            \n                \nresetRotation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:50\n                \n            \n\n\n            \n                \n                    Function to easily reset the rotations to 0 and emit this change.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Input, HostBinding } from '@angular/core';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss']\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation: Rotation = { x: 0, y: 0, z: 0 };\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    this.rotation = { ... this.rotation, [axis]: +newRotation };\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(): void {\n    this.rotation = { x: 0, y: 0, z: 0 };\n    this.rotationChange.emit(this.rotation);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Rotation\n  \n  refresh\n\n\n\n  X\n  \n    \n  \n  {{ rotation.x }}\n\n\n\n  Y\n  \n    \n  \n  {{ rotation.y }}\n\n\n\n  Z\n  \n    \n  \n  {{ rotation.z }}\n\n\n    \n\n    \n                \n                    ./rotation-slider.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .title {\n      font-weight: bold;\n    }\n\n    .reset {\n      transform: scaleX(-1);\n      cursor: pointer;\n    }\n  }\n\n  .slider-box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 4rem;\n    padding-left: 0.5rem;\n\n    .value {\n      width: 1.5rem;\n      text-align: center;\n    }\n\n    .slider-container {\n      width: 100%;\n      padding-left: 3rem;\n      padding-right: 3rem;\n      padding-bottom: 0.5rem;\n\n      .slider {\n        -webkit-appearance: none;\n        width: 100%;\n        height: 2px;\n        border-radius: 5px;\n        outline: none;\n        opacity: 0.7;\n        -webkit-transition: 0.2s;\n        transition: opacity 0.2s;\n      }\n\n      .slider:hover {\n        opacity: 1;\n      }\n\n      .slider::-webkit-slider-thumb {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 15px;\n        height: 15px;\n        border-radius: 50%;\n        cursor: pointer;\n      }\n\n      .slider::-moz-range-thumb {\n        width: 15x;\n        height: 15px;\n        border-radius: 50%;\n        cursor: pointer;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Rotation    refresh  X          {{ rotation.x }}  Y          {{ rotation.y }}  Z          {{ rotation.z }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RotationSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RotationSliderModule.html":{"url":"modules/RotationSliderModule.html","title":"module - RotationSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    RotationSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RotationSliderComponent } from './rotation-slider.component';\n\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [RotationSliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [RotationSliderComponent]\n})\nexport class RotationSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchemeDropdownComponent.html":{"url":"components/SchemeDropdownComponent.html","title":"component - SchemeDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SchemeDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts\n\n\n    \n        Description\n    \n    \n        Scheme dropdown menu (for the Layers section)\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-scheme-dropdown\n            \n\n            \n                styleUrls\n                ./scheme-dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scheme-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                schemeIdx\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                schemeChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colorScheme\n                    \n                \n                \n                    \n                        Type :         ColorScheme\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES[0]\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Current color scheme\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:18\n                            \n                        \n                \n                    \n                        All scheme options available\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Emits ColorSchemeSelection of a selected scheme\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:38\n                \n            \n\n\n            \n                \n                    Filters out scheme options to include only discrete schemes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            schemeChanged\n                        \n                        \n                    \n                \n            \n            \n                \nschemeChanged(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:46\n                \n            \n\n\n            \n                \n                    Updates the current scheme index and emits the currently selected scheme\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeIdx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:33\n                            \n                        \n\n                \n                    \n                        Index of the currently selected scheme\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../../modules/color-scheme/color-schemes';\n\n/**\n * Scheme dropdown menu (for the Layers section)\n */\n@Component({\n  selector: 'ccf-scheme-dropdown',\n  templateUrl: './scheme-dropdown.component.html',\n  styleUrls: ['./scheme-dropdown.component.scss']\n})\nexport class SchemeDropdownComponent implements OnInit {\n\n  /**\n   * All scheme options available\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * Current color scheme\n   */\n  @Input() colorScheme: ColorScheme = DEFAULT_COLOR_SCHEMES[0];\n\n  /**\n   * Emits ColorSchemeSelection of a selected scheme\n   */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Index of the currently selected scheme\n   */\n  schemeIdx = 0;\n\n  /**\n   * Filters out scheme options to include only discrete schemes\n   */\n  ngOnInit(): void {\n    this.schemeOptions = this.schemeOptions.filter(scheme => scheme.type === 'discrete');\n    this.schemeChanged(0);\n  }\n\n  /**\n   * Updates the current scheme index and emits the currently selected scheme\n   */\n  schemeChanged(idx: number): void {\n    this.colorScheme = this.schemeOptions[idx];\n    this.schemeIdx = idx;\n    this.schemeChange.emit(this.colorScheme);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./scheme-dropdown.component.scss\n                \n                .container {\n  display: flex;\n  justify-content: flex-end;\n  width: 104%;\n  height: 3rem;\n\n  mat-form-field {\n    width: 9rem;\n\n    ::ng-deep .mat-form-field-wrapper {\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n// Disable label resizing effect\n::ng-deep .mat-form-field-label {\n  transform: none !important;\n}\n\n::ng-deep .scheme-option-panel {\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  border-width: 1px;\n  border-style: solid;\n  position: absolute;\n  right: -10rem;\n  top: -1rem;\n  display: flex;\n  flex-direction: column;\n  width: 12rem;\n  height: 9rem;\n\n  mat-option:first-child {\n    margin-top: 0.75rem;\n  }\n  mat-option:last-of-type {\n    margin-bottom: 0.75rem;\n  }\n\n  mat-option {\n    .mat-option-text {\n      display: flex;\n      justify-content: center;\n\n      .mat-radio-checked {\n        .mat-radio-label {\n          .mat-radio-container {\n            .mat-radio-outer-circle {\n              border-width: 0 !important;\n            }\n          }\n        }\n      }\n\n      .scheme-radio-button {\n        .mat-radio-label {\n          .mat-radio-container {\n            width: 1rem;\n            height: 1rem;\n            .mat-radio-outer-circle {\n              width: 1rem;\n              height: 1rem;\n              border-width: 1px; \n              border-style: solid;\n            }\n            .mat-radio-inner-circle {\n              width: 1rem;\n              height: 1rem;\n            }\n          }\n          .mat-radio-label-content {\n            padding-left: 1rem;\n          }\n        }\n\n        .swatch {\n          display: flex;\n          width: 7rem;\n          height: 1rem;\n\n          :hover {\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SchemeDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchemeDropdownModule.html":{"url":"modules/SchemeDropdownModule.html","title":"module - SchemeDropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    SchemeDropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchemeDropdownModule\n\n\n\ncluster_SchemeDropdownModule_declarations\n\n\n\ncluster_SchemeDropdownModule_imports\n\n\n\ncluster_SchemeDropdownModule_exports\n\n\n\n\nSchemeDropdownComponent\n\nSchemeDropdownComponent\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nSchemeDropdownModule -->\n\nSchemeDropdownComponent->SchemeDropdownModule\n\n\n\n\n\nSchemeDropdownComponent \n\nSchemeDropdownComponent \n\nSchemeDropdownComponent  -->\n\nSchemeDropdownModule->SchemeDropdownComponent \n\n\n\n\n\nColorBarModule\n\nColorBarModule\n\nSchemeDropdownModule -->\n\nColorBarModule->SchemeDropdownModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SchemeDropdownComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorBarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SchemeDropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ColorBarModule } from '../../modules/color-scheme/color-bar/color-bar.module';\nimport { SchemeDropdownComponent } from './scheme-dropdown.component';\n\n@NgModule({\n  declarations: [SchemeDropdownComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRadioModule,\n    ColorBarModule\n  ],\n  exports: [SchemeDropdownComponent]\n})\nexport class SchemeDropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Search result interface type for the search results\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayLabel\n                                \n                                \n                                        index\n                                \n                                \n                                        node\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayLabel\n                                    \n                                \n                                \n                                    \n                                        displayLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label to be displayed in the view \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ensures order of search-results \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:         OntologyNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    instance of OntologyNode, provides data associated with a search result \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Immutable } from '@ngxs-labs/data/typings';\nimport { Store } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { JsonOntologyNode, jsonToOntologyNode } from '../../models/json-ontology';\nimport { OntologyNode } from '../../models/ontology-node';\nimport { OntologyState, OntologyStateModel } from '../../store/ontology/ontology.state';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/** Type of function for getting child nodes from a parent node. */\nexport type GetChildrenFunc = (o: OntologyNode) => OntologyNode[];\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[''] = { parent: '', children: [] } as unknown as OntologyNode;\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[''].children) as string;\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[''];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = {\n    id: 'http://purl.obolibrary.org/obo/UBERON_0013702',\n    label: 'body',\n    parent: '',\n    children: organIds,\n    synonymLabels: []\n  };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /** Root node in ontology. */\n  rootNode: Observable>;\n\n  /**\n   * Creates an instance of ontology search service.\n   *\n   * @param http The http requests service.\n   * @param store The global data store.\n   * @param ontologyState The global ontology state.\n   */\n  constructor(private http: HttpClient, private store: Store, private ontologyState: OntologyState) {\n    this.rootNode = this.ontologyState.rootNode$;\n    this.getChildren = this.getChildren.bind(this) as GetChildrenFunc;\n  }\n\n  /**\n   * Loads ontology.\n   */\n  loadOntology(): void {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => this.ontologyState.setOntology(ontology));\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.ontologyState.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchableItem.html":{"url":"interfaces/SearchableItem.html","title":"interface - SearchableItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchableItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Item that can be searched for. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        age\n                                \n                                \n                                            Optional\n                                        bmi\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        ontologyTerms\n                                \n                                \n                                            Optional\n                                        sex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Age. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                    \n                                \n                                \n                                    \n                                        bmi:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    BMI. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ontology terms. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Gender. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideSelectorComponent.html":{"url":"components/SideSelectorComponent.html","title":"component - SideSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SideSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/side-selector/side-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Slider for side selection (if applicable)\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-side-selector\n            \n\n            \n                styleUrls\n                ./side-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateSide\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                left\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sideChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/side-selector/side-selector.component.ts:16\n                            \n                        \n                \n                    \n                        Disables the silder if not applicable to currently selected organ\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        left\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/side-selector/side-selector.component.ts:21\n                            \n                        \n                \n                    \n                        Input to determine if 'L' is selected\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sideChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/side-selector/side-selector.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the currently selected side\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSide\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSide(selection: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/side-selector/side-selector.component.ts:32\n                \n            \n\n\n            \n                \n                    Updates and emits the currently selected side\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current toggle state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Slider for side selection (if applicable)\n */\n@Component({\n  selector: 'ccf-side-selector',\n  templateUrl: './side-selector.component.html',\n  styleUrls: ['./side-selector.component.scss']\n})\nexport class SideSelectorComponent {\n\n  /**\n   * Disables the silder if not applicable to currently selected organ\n   */\n  @Input() disabled = false;\n\n  /**\n   * Input to determine if 'L' is selected\n   */\n  @Input() left = false;\n\n  /**\n   * Emits the currently selected side\n   */\n  @Output() sideChanged = new EventEmitter();\n\n  /**\n   * Updates and emits the currently selected side\n   * @param selection The current toggle state\n   */\n  updateSide(selection: boolean): void {\n    this.left = selection;\n    this.sideChanged.emit(this.left ? 'left' : 'right');\n  }\n}\n\n    \n\n    \n        L\n\n\nR\n    \n\n    \n                \n                    ./side-selector.component.scss\n                \n                .slide-label {\n  margin: 0 1rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'LR'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SideSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SideSelectorModule.html":{"url":"modules/SideSelectorModule.html","title":"module - SideSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    SideSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SideSelectorModule\n\n\n\ncluster_SideSelectorModule_declarations\n\n\n\ncluster_SideSelectorModule_exports\n\n\n\n\nSideSelectorComponent\n\nSideSelectorComponent\n\n\n\nSideSelectorModule\n\nSideSelectorModule\n\nSideSelectorModule -->\n\nSideSelectorComponent->SideSelectorModule\n\n\n\n\n\nSideSelectorComponent \n\nSideSelectorComponent \n\nSideSelectorComponent  -->\n\nSideSelectorModule->SideSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/side-selector/side-selector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SideSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SideSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { SideSelectorComponent } from './side-selector.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule],\n  declarations: [SideSelectorComponent],\n  exports: [SideSelectorComponent]\n})\nexport class SideSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesData.html":{"url":"interfaces/SlicesData.html","title":"interface - SlicesData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SlicesData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing slices data of the tissue block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        numSlices\n                                \n                                \n                                        thickness\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices in the block \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of each tissue slice \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, HostBinding, Output } from '@angular/core';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesData {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss']\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly valuesChange = new EventEmitter();\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  slicesData: SlicesData = {\n    thickness: NaN,\n    numSlices: NaN\n  };\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesData.thickness);\n  }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.slicesData = { ...this.slicesData, [key]: +inputTarget.value };\n    this.valuesChange.emit(this.slicesData);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesData = { thickness: NaN, numSlices: NaN };\n    this.valuesChange.emit(this.slicesData);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlicesInputComponent.html":{"url":"components/SlicesInputComponent.html","title":"component - SlicesInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SlicesInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n\n\n    \n        Description\n    \n    \n        Component for entering data on block slices\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-slices-input\n            \n\n            \n                styleUrls\n                ./slices-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slices-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                slicesData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshSlices\n                            \n                            \n                                updateSlicesData\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valuesChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasThicknessValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valuesChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:28\n                            \n                        \n                \n                    \n                        Emitter for slice data values\n\n                    \n                \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-slices-input'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:23\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshSlices\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshSlices()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:59\n                \n            \n\n\n            \n                \n                    Refreshes all slice data values to empty values\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSlicesData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSlicesData(input: InputEvent, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:50\n                \n            \n\n\n            \n                \n                    Limits the length of the input if needed and updates values when an input changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        InputEvent from the input element which contains the new value\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the dimension to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slicesData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SlicesData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    thickness: NaN,\n    numSlices: NaN\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:33\n                            \n                        \n\n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasThicknessValue\n                    \n                \n\n                \n                    \n                        gethasThicknessValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:41\n                                \n                            \n                    \n                        \n                                Returns whether a valid thickness value has been entered.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Output } from '@angular/core';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesData {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss']\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly valuesChange = new EventEmitter();\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  slicesData: SlicesData = {\n    thickness: NaN,\n    numSlices: NaN\n  };\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesData.thickness);\n  }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.slicesData = { ...this.slicesData, [key]: +inputTarget.value };\n    this.valuesChange.emit(this.slicesData);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesData = { thickness: NaN, numSlices: NaN };\n    this.valuesChange.emit(this.slicesData);\n  }\n}\n\n    \n\n    \n        \n  Tissue Slices\n  \n  refresh\n\n\n\n  \n    Thickness\n    \n    μm\n  \n\n  \n    # Slices\n    \n  \n\n\n    \n\n    \n                \n                    ./slices-input.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .title {\n      font-weight: bold;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n    }\n  }\n\n  .slices-inputs {\n    display: flex;\n\n    .field {\n      width: 33.33%;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      &.mat-focused .suffix, .suffix.show {\n        display: initial;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Slices    refresh      Thickness        μm        # Slices      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlicesInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SlicesInputModule.html":{"url":"modules/SlicesInputModule.html","title":"module - SlicesInputModule","body":"\n                   \n\n\n\n\n    Modules\n    SlicesInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { SlicesInputComponent } from './slices-input.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatInputModule, MatIconModule],\n  declarations: [SlicesInputComponent],\n  exports: [SlicesInputComponent]\n})\nexport class SlicesInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntity.html":{"url":"interfaces/SpatialEntity.html","title":"interface - SpatialEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                A spatial entity. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        creation_date\n                                \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                            Optional\n                                        creator_first_name\n                                \n                                \n                                            Optional\n                                        creator_last_name\n                                \n                                \n                                            Optional\n                                        creator_orcid\n                                \n                                \n                                        dimension_units\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        object\n                                \n                                \n                                        x_dimension\n                                \n                                \n                                        y_dimension\n                                \n                                \n                                        z_dimension\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Coloring. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creation date. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator first name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator last name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_orcid\n                                    \n                                \n                                \n                                    \n                                        creator_orcid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units dimensions are in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    IRI of the Entity this Spatial Entity represents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Entity label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Data references. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z-dimension. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReference.html":{"url":"interfaces/SpatialObjectReference.html","title":"interface - SpatialObjectReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialObjectReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                A reference to a spatial object. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        file\n                                \n                                \n                                        file_format\n                                \n                                \n                                            Optional\n                                        file_subpath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data file name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data format. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_subpath\n                                    \n                                \n                                \n                                    \n                                        file_subpath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File subpath. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacement.html":{"url":"interfaces/SpatialPlacement.html","title":"interface - SpatialPlacement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialPlacement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                Object describing the placement of an entity. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        placement_date\n                                \n                                \n                                            Optional\n                                        rotation_order\n                                \n                                \n                                        rotation_units\n                                \n                                \n                                        scaling_units\n                                \n                                \n                                        source\n                                \n                                \n                                        target\n                                \n                                \n                                        translation_units\n                                \n                                \n                                            Optional\n                                        w_rotation\n                                \n                                \n                                        x_rotation\n                                \n                                \n                                        x_scaling\n                                \n                                \n                                        x_translation\n                                \n                                \n                                        y_rotation\n                                \n                                \n                                        y_scaling\n                                \n                                \n                                        y_translation\n                                \n                                \n                                        z_rotation\n                                \n                                \n                                        z_scaling\n                                \n                                \n                                        z_translation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date placement was made. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_order\n                                    \n                                \n                                \n                                    \n                                        rotation_order:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Order rotations should be applied in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units rotation is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units scaling is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     SpatialEntity | SpatialObjectReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialEntity | SpatialObjectReference\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Source entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         SpatialEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialEntity\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Target entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units translation is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        w_rotation\n                                    \n                                \n                                \n                                    \n                                        w_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Rotation in w-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in z-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in z-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in z-dimension. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _lighting\n                                \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        scenegraph\n                                \n                                \n                                            Optional\n                                        scenegraphNode\n                                \n                                \n                                        tooltip\n                                \n                                \n                                        transformMatrix\n                                \n                                \n                                            Optional\n                                        unpickable\n                                \n                                \n                                            Optional\n                                        wireframe\n                                \n                                \n                                            Optional\n                                        zoomBasedOpacity\n                                \n                                \n                                            Optional\n                                        zoomToOnLoad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { load, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { CubeGeometry } from '@luma.gl/core';\nimport { ScenegraphNode } from '@luma.gl/experimental';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { doCollisions } from './spatial-scene-collider';\n\n\n// Programmers Note: had to disable tslint in a few places due to deficient typings.\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\n// tslint:disable: no-unsafe-any\nasync function loadGLTF(model: SpatialSceneNode): Promise {\n  const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n\n  const scenegraphNode = model.scenegraphNode ? gltf.nodes?.find((n) => n.name === model.scenegraphNode) : undefined;\n  if (scenegraphNode) {\n    if (!scenegraphNode.rotation && gltf.scene?.nodes?.length > 0) {\n      scenegraphNode.rotation = gltf.scene.nodes[gltf.scene.nodes.length-1].rotation;\n    }\n    gltf.scene = {\n      id: 'scene-1',\n      name: 'Scene',\n      nodes: [scenegraphNode]\n    };\n    gltf.scenes = [gltf.scene, ...gltf.scenes];\n  }\n  return gltf;\n}\n// tslint:enable: no-unsafe-any\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: {[key: string]: unknown}): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // tslint:disable-next-line: no-unsafe-any\n        mesh: new CubeGeometry(),\n        wireframe: false,\n        getTransformMatrix: (d) => (d as {transformMatrix: number[][]}).transformMatrix,\n        getColor: (d) => (d as {color: [number, number, number, number]}).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({data: data || [], zoomOpacity: 0.8, doCollisions: false});\n\n    // tslint:disable-next-line: no-unsafe-any\n    registerLoaders([DracoWorkerLoader, GLTFLoader]);\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as {data: SpatialSceneNode[], zoomOpacity: number, doCollisions: boolean};\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return [\n      meshLayer('cubes', cubes, {wireframe: false}),\n      meshLayer('wireframes', wireframes, {wireframe: true, pickable: false}),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          id: 'models-' + model['@id'],\n          opacity: model.zoomBasedOpacity ? state.zoomOpacity : 1.0,\n          pickable: !model.unpickable,\n          coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n          data: [model],\n          scenegraph: model.scenegraphNode ?\n            loadGLTF(model) as Promise :\n            model.scenegraph as unknown as ScenegraphNode,\n          _lighting: model._lighting,  // 'pbr' | undefined\n          getTransformMatrix: model.transformMatrix as unknown as number[][],\n          getColor: model.color || [0, 255, 0, 0.5*255],\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(e: {info: object}): unknown {\n    return e.info;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode-1.html":{"url":"interfaces/SpatialSceneNode-1.html","title":"interface - SpatialSceneNode-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-scene.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _lighting\n                                \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        scenegraph\n                                \n                                \n                                            Optional\n                                        scenegraphNode\n                                \n                                \n                                        tooltip\n                                \n                                \n                                        transformMatrix\n                                \n                                \n                                            Optional\n                                        unpickable\n                                \n                                \n                                            Optional\n                                        wireframe\n                                \n                                \n                                            Optional\n                                        zoomBasedOpacity\n                                \n                                \n                                            Optional\n                                        zoomToOnLoad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport { getSpatialEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { ccf, rui } from './util/prefixes';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': 'SpatialSceneNode';\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return getSpatialEntity(this.db.store, bodyId);\n  }\n\n  getReferenceOrgans(filter?: Filter): SpatialEntity[] {\n    let organsId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        organsId = ccf.spatial.MaleOrgans.id;\n        break;\n      case 'Female':\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n      case 'Both':\n      default:\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n    }\n    return [getSpatialEntity(this.db.store, organsId)];\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const wholeBody = getSpatialEntity(this.db.store, ccf.spatial.Body.id);\n    const body = this.getReferenceBody(filter);\n    const organs = getSpatialEntity(this.db.store, ccf.spatial.MaleOrgans.id);\n    const store = this.db.store;\n    const terms = filter?.ontologyTerms || [];\n    const hasTerm = {\n      body: terms.indexOf(rui.body.id) === 0,\n      kidney: terms.indexOf(rui.kidney.id) === 0,\n      right_kidney: terms.indexOf(rui.right_kidney.id) === 0,\n      left_kidney: terms.indexOf(rui.left_kidney.id) === 0,\n      spleen: terms.indexOf(rui.spleen.id) === 0,\n    };\n\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      this.getSceneNode(body, wholeBody, {unpickable: true, color: [255, 255, 255, 1*255]}),\n      ...this.getReferenceOrgans(filter).map((organ) =>\n        this.getSceneNode(organ, body, {unpickable: true, _lighting: 'pbr', zoomBasedOpacity: true,  color: [255, 0, 0, 1*255]})\n      ),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.right_kidney, zoomToOnLoad: hasTerm.right_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.left_kidney, zoomToOnLoad: hasTerm.left_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleen').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.spleen, zoomToOnLoad: hasTerm.spleen})\n    ];\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), wholeBody, {color: [0, 0, 255, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), wholeBody, {color: [255, 0, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC1').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC2').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC3').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true})\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const highlighted = new Set(filter?.highlightedEntities);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, {\n        color: highlighted.has(entity.entityId as string) ? [10, 10, 229, 0.9*255] : [255, 255, 255, 0.9*255]\n      })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial = {}): SpatialSceneNode | undefined {\n    const has3dObject = source.object && source.object.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4().rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId || undefined,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      } as SpatialSceneNode;\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerOverlayComponent.html":{"url":"components/SpinnerOverlayComponent.html","title":"component - SpinnerOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n\n\n    \n        Description\n    \n    \n        Overlay component that displays a progress spinner and\nan optional text description.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spinner-overlay\n            \n\n            \n                styleUrls\n                ./spinner-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:19\n                            \n                        \n                \n                    \n                        Whether the overlay is active/showing. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:22\n                            \n                        \n                \n                    \n                        Optional text description displayed alongside the spinner. \n\n                    \n                \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-spinner-overlay'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Overlay component that displays a progress spinner and\n * an optional text description.\n */\n@Component({\n  selector: 'ccf-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerOverlayComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spinner-overlay';\n\n  /** Whether the overlay is active/showing. */\n  @Input() @HostBinding('class.active') active = false;\n\n  /** Optional text description displayed alongside the spinner. */\n  @Input() text: string;\n}\n\n    \n\n    \n        \n{{ text }}\n\n    \n\n    \n                \n                    ./spinner-overlay.component.scss\n                \n                :host {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 4rem);\n  top: 4rem;\n  z-index: 100;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.6s, opacity 0.4s ease-in-out;\n\n  mat-spinner {\n    margin-bottom: 1rem;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out 0.3s;\n  }\n\n  &.active {\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n\n    mat-spinner {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpinnerOverlayModule.html":{"url":"modules/SpinnerOverlayModule.html","title":"module - SpinnerOverlayModule","body":"\n                   \n\n\n\n\n    Modules\n    SpinnerOverlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerOverlayComponent],\n  exports: [SpinnerOverlayComponent]\n})\nexport class SpinnerOverlayModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StageNavComponent.html":{"url":"components/StageNavComponent.html","title":"component - StageNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StageNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Component that allows the user to change the viewing angle and rendering mode of the stage.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-stage-nav\n            \n\n            \n                styleUrls\n                ./stage-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stage-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateSide\n                            \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                view3D\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sideChanged\n                            \n                            \n                                view3DChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :         Side\n\n                    \n                \n                \n                    \n                        Default value : 'anterior'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:19\n                            \n                        \n                \n                    \n                        Input that allows changing the current side from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3D\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:24\n                            \n                        \n                \n                    \n                        Input that allows toggling of 3D view on / off from outside the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sideChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:29\n                            \n                        \n                \n                    \n                        Output that emits whenever the current side selection changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3DChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:34\n                            \n                        \n                \n                    \n                        Output that emits whenever the 3D view is toggled on / off\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSide\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSide(selection: Side)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:40\n                \n            \n\n\n            \n                \n                    Handles the updating of the side selection and calling the event emitter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                Side\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new selected side\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateView\n                        \n                        \n                    \n                \n            \n            \n                \nupdateView(selection: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:51\n                \n            \n\n\n            \n                \n                    Handles updating of the boolean that keeps track of current view\nand calling the event emitter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        3D (true) or Register (false)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n\n/** Valid values for side. */\nexport type Side = 'left' | 'right' | 'anterior' | 'posterior';\n\n/**\n * Component that allows the user to change the viewing angle and rendering mode of the stage.\n */\n@Component({\n  selector: 'ccf-stage-nav',\n  templateUrl: './stage-nav.component.html',\n  styleUrls: ['./stage-nav.component.scss']\n})\nexport class StageNavComponent {\n  /**\n   * Input that allows changing the current side from outside the component\n   */\n  @Input() side: Side = 'anterior';\n\n  /**\n   * Input that allows toggling of 3D view on / off from outside the component\n   */\n  @Input() view3D = false;\n\n  /**\n   * Output that emits whenever the current side selection changes\n   */\n  @Output() sideChanged = new EventEmitter();\n\n  /**\n   * Output that emits whenever the 3D view is toggled on / off\n   */\n  @Output() view3DChanged = new EventEmitter();\n\n  /**\n   * Handles the updating of the side selection and calling the event emitter\n   * @param selection the new selected side\n   */\n  updateSide(selection: Side): void {\n    this.side = selection;\n    this.sideChanged.emit(this.side);\n  }\n\n\n  /**\n   * Handles updating of the boolean that keeps track of current view\n   * and calling the event emitter.\n   * @param selection 3D (true) or Register (false)\n   */\n  updateView(selection: boolean): void {\n    this.view3D = selection;\n    this.view3DChanged.emit(this.view3D);\n  }\n}\n\n    \n\n    \n        \n  \n    Left\n    Right\n    Anterior\n    Posterior\n  \n\n  \n    Register\n    \n    \n    3D Preview\n  \n\n\n    \n\n    \n                \n                    ./stage-nav.component.scss\n                \n                .nav-container {\n  height: 4.5rem;\n  margin-right: 1.5rem;\n  padding-left: 1.5rem;\n  display: flex;\n  align-items: center;\n\n  .input-group {\n    height: 1.5rem;\n\n    .nav-input {\n      margin-right: 1.5rem;\n    }\n  }\n\n  .slider-container {\n    padding-bottom: 1.8rem;\n\n    .view-slider {\n      margin-left: 0.75rem;\n      margin-right: 0.75rem;\n    }\n  }\n}\n\n.highlighted {\n  color: #3542b8;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Left    Right    Anterior    Posterior        Register            3D Preview  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StageNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StageNavModule.html":{"url":"modules/StageNavModule.html","title":"module - StageNavModule","body":"\n                   \n\n\n\n\n    Modules\n    StageNavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_exports\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\n\n\nStageNavModule\n\nStageNavModule\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { StageNavComponent } from './stage-nav.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatRadioModule, MatSlideToggleModule],\n  declarations: [StageNavComponent],\n  exports: [StageNavComponent]\n})\nexport class StageNavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { environment } from '../../../environments/environment';\nimport { DataState } from './data/data.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { OntologyState } from './ontology/ontology.state';\nimport { ViewerState } from './viewer/viewer.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  IconRegistryState,\n  DataState,\n  OntologyState,\n  ViewerState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                component\n                            \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                    Private\n                                initializeImpl\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyThemeClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:82\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:37\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:20\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeImpl(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:67\n                \n            \n\n\n            \n                \n                    Implementation of initialize.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The top level component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetTheme\n                        \n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:56\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:46\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:13\n                            \n                        \n\n                \n                    \n                        Top level component on which themes are applied. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:15\n                            \n                        \n\n                \n                    \n                        Default theme class. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:17\n                            \n                        \n\n                \n                    \n                        Currently active theme class. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, Inject, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  /** Top level component on which themes are applied. */\n  private component?: ComponentRef;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const service = component.injector.get(ThemingService);\n    service.initializeImpl(component);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme || '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) { return; }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Implementation of initialize.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  private initializeImpl(component: ComponentRef): void {\n    if (this.component) {\n      throw new Error('Theming service has already been initialized!');\n    }\n\n    this.component = component;\n    this.applyThemeClass(this.theme);\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const component = this.component;\n    if (!cls || !component) { return; }\n\n    const renderer = component.injector.get(Renderer2, null);\n    if (!renderer) { return; }\n\n    const root = component.location.nativeElement as HTMLElement;\n    const overlay = component.injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) { renderer[methodName](overlay, cls); }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService-1.html":{"url":"injectables/ThemingService-1.html","title":"injectable - ThemingService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                component\n                            \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                    Private\n                                initializeImpl\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyThemeClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:82\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:37\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:20\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeImpl(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:67\n                \n            \n\n\n            \n                \n                    Implementation of initialize.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The top level component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetTheme\n                        \n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:56\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:46\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:13\n                            \n                        \n\n                \n                    \n                        Top level component on which themes are applied. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:15\n                            \n                        \n\n                \n                    \n                        Default theme class. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:17\n                            \n                        \n\n                \n                    \n                        Currently active theme class. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, Inject, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  /** Top level component on which themes are applied. */\n  private component?: ComponentRef;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const service = component.injector.get(ThemingService);\n    service.initializeImpl(component);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme || '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) { return; }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Implementation of initialize.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  private initializeImpl(component: ComponentRef): void {\n    if (this.component) {\n      throw new Error('Theming service has already been initialized!');\n    }\n\n    this.component = component;\n    this.applyThemeClass(this.theme);\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const component = this.component;\n    if (!cls || !component) { return; }\n\n    const renderer = component.injector.get(Renderer2, null);\n    if (!renderer) { return; }\n\n    const root = component.location.nativeElement as HTMLElement;\n    const overlay = component.injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) { renderer[methodName](overlay, cls); }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TiffInfo.html":{"url":"interfaces/TiffInfo.html","title":"interface - TiffInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TiffInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        offsets\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offsets\n                                    \n                                \n                                \n                                    \n                                        offsets:     string | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Loader, createZarrLoader, OMEZarrReader, createOMETiffLoader } from '@hms-dbmi/viv';\n\nexport enum LoaderType {\n  Zarr = 'zarr',\n  OMEZarr = 'ome-zarr',\n  StaticZarr = 'static',\n\n  Tiff = 'tiff',\n  Tiff2 = 'tiff 2',\n  BFTiff = 'bf tiff',\n  CovidTiff = 'covid tiff',\n  StaticTiff = 'static tiff'\n}\n\n// createLoader info argument types\nexport type ZarrInfo = Parameters[0];\nexport interface OMEZarrInfo {\n  url: string;\n}\nexport interface TiffInfo {\n  url: string;\n  offsets?: string | number[];\n}\n\n// Copied from vitessce-image-viewer demo source\nexport async function createLoader(\n  type: LoaderType,\n  info: ZarrInfo | OMEZarrInfo | TiffInfo\n): Promise {\n  switch (type) {\n    case LoaderType.Zarr:\n    case LoaderType.StaticZarr:\n      return createZarrLoader(info as ZarrInfo);\n\n    case LoaderType.OMEZarr: {\n      const { url } = info as OMEZarrInfo;\n      const reader = await OMEZarrReader.fromUrl(url);\n      const { loader } = await reader.loadOMEZarr();\n      return loader;\n    }\n\n    case LoaderType.Tiff:\n    case LoaderType.Tiff2:\n    case LoaderType.BFTiff:\n    case LoaderType.CovidTiff:\n    case LoaderType.StaticTiff: {\n      const { url, offsets = [] } = info as TiffInfo;\n      return createOMETiffLoader({ url, offsets: await loadOffsets(offsets) });\n    }\n\n    default:\n      throw Error(`Pyramid type (${type}) is not supported`);\n  }\n}\n\nasync function loadOffsets(url: string | number[]): Promise {\n  if (typeof url !== 'string') { return url; }\n  const res = await fetch(url);\n  return res.status !== 404 ? await res.json() as number[] : [];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-toggle-button'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether this button is attach to a drawer in position 'end'. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:79\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:59\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:69\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:91\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the owning drawer is opened. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"start\" | \"end\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'start'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:34\n                            \n                        \n\n                \n                    \n                        Position of the owning side drawer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:25\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'keyboard_arrow_right';\n    let collapse = 'keyboard_arrow_left';\n    if (this.position === 'end') { ([expand, collapse] = [collapse, expand]); }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0px 4px 4px 0px;\n  cursor: pointer;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 4px 0px 0px 4px;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  transform: scale(1,2);\n  top: .6rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent-1.html":{"url":"components/ToggleButtonComponent-1.html","title":"component - ToggleButtonComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-toggle-button'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether this button is attach to a drawer in position 'end'. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:79\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:59\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:69\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:91\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the owning drawer is opened. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"start\" | \"end\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'start'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:34\n                            \n                        \n\n                \n                    \n                        Position of the owning side drawer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:25\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'keyboard_arrow_right';\n    let collapse = 'keyboard_arrow_left';\n    if (this.position === 'end') { ([expand, collapse] = [collapse, expand]); }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0px 4px 4px 0px;\n  cursor: pointer;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 4px 0px 0px 4px;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  transform: scale(1,2);\n  top: .6rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValueObject.html":{"url":"interfaces/ValueObject.html","title":"interface - ValueObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValueObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@value' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @value\n                                    \n                                \n                                \n                                    \n                                        @value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@value' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerComponent.html":{"url":"components/ViewerComponent.html","title":"component - ViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-viewer\n            \n\n            \n                styleUrls\n                ./viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _layers\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                canvas\n                            \n                            \n                                isDemo\n                            \n                            \n                                    Private\n                                sensor\n                            \n                            \n                                    Private\n                                viewer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                sourcesFromUrls\n                            \n                            \n                                    Private\n                                    Async\n                                updateLayers\n                            \n                            \n                                    Private\n                                    Async\n                                updateSources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                            \n                                sources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                channelsChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sources\n                                \n                                \n                                    layers\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(container: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        channelsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:76\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sourcesFromUrls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sourcesFromUrls(urls: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urls\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DataSource[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            updateSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSources()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ImageViewerLayer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDemo\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sensor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResizeSensor\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageViewer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:81\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n\n                \n                    \n                        getsources()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:63\n                                \n                            \n\n                \n                    \n                        setsources(urls: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            urls\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n\n                \n                    \n                        getlayers()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:73\n                                \n                            \n\n                \n                    \n                        setlayers(layers: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:69\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layers\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { ChannelConfig, DataSource, ImageViewer, LoaderType, PictureInPictureViewer, TiffInfo } from 'ccf-image-viewer';\nimport { ResizeSensor } from 'css-element-queries';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\nconst DEMO_SOURCE: DataSource = {\n  type: LoaderType.Tiff,\n  info: {\n    url: 'https://vitessce-demo-data.storage.googleapis.com/test-data/hubmap/pyramid_0.0.2/spraggins.ome.tif'\n  }\n};\n\nfunction hexToRgbTriple(hex: string): [number, number, number] {\n  // tslint:disable: no-bitwise\n  if (hex === undefined || hex.length !== 7) {\n    return [255, 255, 255];\n  }\n\n  const value = Number.parseInt(hex.slice(1), 16) | 0;\n  if (Number.isNaN(value)) {\n    return [255, 255, 255];\n  }\n\n  const red = (value >> 16) & 0xff;\n  const green = (value >> 8) & 0xff;\n  const blue = value & 0xff;\n\n  return [red, green, blue];\n  // tslint:enable: no-bitwise\n}\n\nfunction brightnessToSlider(brightness: [number, number]): [number, number] {\n  const SLIDER_MAX = 2 ** 16 - 1;\n  return [\n    Math.trunc(SLIDER_MAX * brightness[0] / 100),\n    Math.trunc(SLIDER_MAX * brightness[1] / 100)\n  ];\n}\n\n@Component({\n  selector: 'ccf-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewerComponent implements AfterViewInit, OnDestroy {\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set sources(urls: string[]) {\n    this._sources = this.sourcesFromUrls(urls);\n    this.isDemo = false;\n    if (this._sources.length === 0) {\n      this._sources = []; // Disabled showing demo image via [DEMO_SOURCE]\n      this.isDemo = true;\n    }\n\n    this.clear();\n    this.updateSources();\n  }\n  get sources(): string[] {\n    return this._sources.map(source => (source.info as TiffInfo).url);\n  }\n  private _sources: DataSource[] = []; // Disabled showing demo image via [DEMO_SOURCE]\n\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set layers(layers: ImageViewerLayer[]) {\n    this._layers = layers;\n    this.updateLayers();\n  }\n  get layers(): ImageViewerLayer[] { return this._layers; }\n  private _layers: ImageViewerLayer[] = [];\n\n  @Output() channelsChange = new EventEmitter();\n\n  @ViewChild('canvas', { read: ElementRef }) canvas: ElementRef;\n\n  isDemo = true;\n  private viewer: ImageViewer;\n  private sensor: ResizeSensor;\n\n  constructor(private readonly container: ElementRef) { }\n\n  ngAfterViewInit(): void {\n    const {\n      container: { nativeElement: container },\n      canvas: { nativeElement: element }\n    } = this;\n    const { clientWidth, clientHeight } = element;\n\n    this.viewer = new PictureInPictureViewer({\n      id: 'image-viewer',\n      initialViewState: {\n        zoom: -6,\n        target: [25000, 10000, 0]\n      },\n      canvas: element,\n      width: clientWidth,\n      height: clientHeight,\n      overview: {\n        detailWidth: clientWidth,\n        detailHeight: clientHeight\n      },\n      defaultChannelConfig: {\n        active: false\n      }\n    });\n\n    this.sensor = new ResizeSensor(container, ({ width, height }) => {\n      this.viewer.setSize(width, height);\n    });\n\n    (async () => {\n      await this.updateSources();\n      await this.updateLayers();\n    })();\n  }\n\n  ngOnDestroy(): void {\n    this.sensor.detach();\n    this.viewer.finalize();\n  }\n\n  private async updateSources(): Promise {\n    const { _sources: sources, viewer, channelsChange } = this;\n    if (!viewer) {\n      return;\n    }\n\n    await viewer.setSources(sources);\n\n    const isRgb = viewer.loaders.some((loader: { isRgb: boolean }) => loader.isRgb);\n    channelsChange.emit(!isRgb ? viewer.channelNames : []);\n  }\n\n  private async updateLayers(): Promise {\n    const { layers, viewer } = this;\n    if (!viewer || layers.length === 0) {\n      return;\n    }\n\n    const configs: Record> = layers.reduce((result, layer) => ({\n      ...result,\n      [layer.id]: {\n        active: layer.selected,\n        color: hexToRgbTriple(layer.color),\n        slider: brightnessToSlider(layer.brightness)\n      }\n    }), {});\n\n    await viewer.updateChannelConfigs(configs);\n  }\n\n  private clear(): void {\n    this.viewer?.clear();\n  }\n\n  private sourcesFromUrls(urls: string[]): DataSource[] {\n    return urls.filter(url => !!url).map(url => ({\n      type: LoaderType.Tiff,\n      info: { url }\n    }));\n  }\n}\n\n    \n\n    \n        \n  warning\n  This is a demo image\n\n\n\n    \n\n    \n                \n                    ./viewer.component.scss\n                \n                :host {\n  .demo-warning {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n    text-align: center;\n\n    .text {\n      vertical-align: top;\n    }\n  }\n\n  canvas {\n    position: relative !important;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  warning  This is a demo image'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SideSelectorComponent', 'selector': 'ccf-side-selector'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewerModule.html":{"url":"modules/ViewerModule.html","title":"module - ViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nViewerComponent\n\nViewerComponent\n\n\n\nViewerModule\n\nViewerModule\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ViewerComponent } from './viewer.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [ViewerComponent],\n  exports: [ViewerComponent]\n})\nexport class ViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewerState.html":{"url":"injectables/ViewerState.html","title":"injectable - ViewerState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ViewerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsDataEntityCollectionsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                activeLayers$\n                            \n                            \n                                    Readonly\n                                layers$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLayers\n                            \n                            \n                                    Private\n                                getAutoColor\n                            \n                            \n                                setDefaultScheme\n                            \n                            \n                                updateLayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createLayers\n                        \n                        \n                    \n                \n            \n            \n                \ncreateLayers(ids: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAutoColor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAutoColor(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDefaultScheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetDefaultScheme(scheme: ColorScheme)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scheme\n                                    \n                                                ColorScheme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLayer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLayer(id: string, changes: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changes\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            activeLayers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            layers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { EntityUpdate, NgxsEntityCollections } from '@ngxs-labs/data/typings';\nimport { createEntityCollections } from '@ngxs-labs/data/utils';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { DEFAULT_COLOR_SCHEMES } from '../../../modules/color-scheme/color-schemes';\nimport { ColorScheme } from '../../models/color-scheme';\nimport { ImageViewerLayer, PureImageViewerLayer } from '../../models/image-viewer-layer';\n\n\nconst NUM_LAYERS_SELECTED_ON_CREATION = 3;\nconst IMAGE_VIEWER_LAYER_DEFAULTS = {\n  brightness: [2, 31] as [number, number],\n  transparency: 100,\n  customizedColor: false,\n  defaultOrder: -1\n};\n\nexport interface ViewerStateModel extends NgxsEntityCollections {\n  defaultScheme: ColorScheme;\n  autoColorIndex: number;\n  selectionCounter: number;\n}\n\n@StateRepository()\n@State({\n  name: 'viewer',\n  defaults: {\n    ...createEntityCollections(),\n    defaultScheme: DEFAULT_COLOR_SCHEMES[0],\n    autoColorIndex: 0,\n    selectionCounter: 0\n  }\n})\n@Injectable()\nexport class ViewerState extends NgxsDataEntityCollectionsRepository {\n  readonly layers$ = this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  );\n  readonly activeLayers$ = this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  );\n\n  @DataAction()\n  createLayers(ids: string[]): void {\n    const maxSelected = NUM_LAYERS_SELECTED_ON_CREATION;\n    const { defaultScheme } = this.snapshot;\n    const length = ids.length;\n\n    this.removeEntitiesMany(this.ids);\n    this.addEntitiesMany(ids.map((id, index) => ({\n      id,\n      label: id,\n      colorScheme: defaultScheme,\n      color: index ): void {\n    const { autoColorIndex, selectionCounter } = this.snapshot;\n    const layer = this.entities[id];\n    let color = changes.color || layer.color;\n    let defaultOrder = layer.defaultOrder;\n    if (!layer.customizedColor && !changes.customizedColor &&\n        changes.selected && layer.defaultOrder === -1) {\n      color = this.getAutoColor(autoColorIndex);\n      defaultOrder = autoColorIndex;\n      this.ctx.patchState({ autoColorIndex: autoColorIndex + 1 });\n    }\n\n    this.updateEntitiesMany([{\n      id,\n      changes: {\n        ...changes,\n        color,\n        selectionOrder: selectionCounter,\n        defaultOrder\n      }\n    }]);\n    this.ctx.patchState({ selectionCounter: selectionCounter + 1 });\n  }\n\n  @DataAction()\n  setDefaultScheme(scheme: ColorScheme): void {\n    const { entities } = this;\n    const changes: EntityUpdate[] = [];\n    for (const [id, layer] of Object.entries(entities)) {\n      if (!layer.customizedColor) {\n        const index = layer.colorScheme.colors.indexOf(layer.color);\n        changes.push({\n          id,\n          changes: {\n            colorScheme: scheme,\n            color: scheme.colors[index]\n          }\n        });\n      }\n    }\n\n    this.updateEntitiesMany(changes);\n    this.ctx.patchState({ defaultScheme: scheme });\n  }\n\n  private getAutoColor(index: number): string {\n    const { defaultScheme: { colors } } = this.snapshot;\n    const order = [0, 6, 3, 1, 5, 2, 4];\n    return colors[order[index % order.length]];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewerStateModel.html":{"url":"interfaces/ViewerStateModel.html","title":"interface - ViewerStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewerStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsEntityCollections\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        autoColorIndex\n                                \n                                \n                                        defaultScheme\n                                \n                                \n                                        selectionCounter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoColorIndex\n                                    \n                                \n                                \n                                    \n                                        autoColorIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultScheme\n                                    \n                                \n                                \n                                    \n                                        defaultScheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionCounter\n                                    \n                                \n                                \n                                    \n                                        selectionCounter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { EntityUpdate, NgxsEntityCollections } from '@ngxs-labs/data/typings';\nimport { createEntityCollections } from '@ngxs-labs/data/utils';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { DEFAULT_COLOR_SCHEMES } from '../../../modules/color-scheme/color-schemes';\nimport { ColorScheme } from '../../models/color-scheme';\nimport { ImageViewerLayer, PureImageViewerLayer } from '../../models/image-viewer-layer';\n\n\nconst NUM_LAYERS_SELECTED_ON_CREATION = 3;\nconst IMAGE_VIEWER_LAYER_DEFAULTS = {\n  brightness: [2, 31] as [number, number],\n  transparency: 100,\n  customizedColor: false,\n  defaultOrder: -1\n};\n\nexport interface ViewerStateModel extends NgxsEntityCollections {\n  defaultScheme: ColorScheme;\n  autoColorIndex: number;\n  selectionCounter: number;\n}\n\n@StateRepository()\n@State({\n  name: 'viewer',\n  defaults: {\n    ...createEntityCollections(),\n    defaultScheme: DEFAULT_COLOR_SCHEMES[0],\n    autoColorIndex: 0,\n    selectionCounter: 0\n  }\n})\n@Injectable()\nexport class ViewerState extends NgxsDataEntityCollectionsRepository {\n  readonly layers$ = this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  );\n  readonly activeLayers$ = this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  );\n\n  @DataAction()\n  createLayers(ids: string[]): void {\n    const maxSelected = NUM_LAYERS_SELECTED_ON_CREATION;\n    const { defaultScheme } = this.snapshot;\n    const length = ids.length;\n\n    this.removeEntitiesMany(this.ids);\n    this.addEntitiesMany(ids.map((id, index) => ({\n      id,\n      label: id,\n      colorScheme: defaultScheme,\n      color: index ): void {\n    const { autoColorIndex, selectionCounter } = this.snapshot;\n    const layer = this.entities[id];\n    let color = changes.color || layer.color;\n    let defaultOrder = layer.defaultOrder;\n    if (!layer.customizedColor && !changes.customizedColor &&\n        changes.selected && layer.defaultOrder === -1) {\n      color = this.getAutoColor(autoColorIndex);\n      defaultOrder = autoColorIndex;\n      this.ctx.patchState({ autoColorIndex: autoColorIndex + 1 });\n    }\n\n    this.updateEntitiesMany([{\n      id,\n      changes: {\n        ...changes,\n        color,\n        selectionOrder: selectionCounter,\n        defaultOrder\n      }\n    }]);\n    this.ctx.patchState({ selectionCounter: selectionCounter + 1 });\n  }\n\n  @DataAction()\n  setDefaultScheme(scheme: ColorScheme): void {\n    const { entities } = this;\n    const changes: EntityUpdate[] = [];\n    for (const [id, layer] of Object.entries(entities)) {\n      if (!layer.customizedColor) {\n        const index = layer.colorScheme.colors.indexOf(layer.color);\n        changes.push({\n          id,\n          changes: {\n            colorScheme: scheme,\n            color: scheme.colors[index]\n          }\n        });\n      }\n    }\n\n    this.updateEntitiesMany(changes);\n    this.ctx.patchState({ defaultScheme: scheme });\n  }\n\n  private getAutoColor(index: number): string {\n    const { defaultScheme: { colors } } = this.snapshot;\n    const order = [0, 6, 3, 1, 5, 2, 4];\n    return colors[order[index % order.length]];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) - Exploration User Interface (EUI).\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, gender, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.7\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.7\n        \n            @angular/compiler : ^10.0.7\n        \n            @angular/core : ^10.0.7\n        \n            @angular/forms : ^10.0.7\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.7\n        \n            @angular/platform-browser-dynamic : ^10.0.7\n        \n            @angular/router : ^10.0.7\n        \n            @deck.gl/core : ^8.2.4\n        \n            @deck.gl/geo-layers : ^8.2.4\n        \n            @deck.gl/layers : ^8.2.4\n        \n            @deck.gl/mesh-layers : ^8.2.4\n        \n            @hms-dbmi/viv : ^0.4.2\n        \n            @loaders.gl/core : ^2.2.8\n        \n            @loaders.gl/draco : ^2.2.8\n        \n            @loaders.gl/gltf : ^2.2.8\n        \n            @luma.gl/core : ^8.2.0\n        \n            @math.gl/core : ^3.2.2\n        \n            @ngxs-labs/data : ^3.0.6\n        \n            @ngxs/store : ^3.6.2\n        \n            @rdfjs/data-model : ^1.1.2\n        \n            bind-decorator : ^1.0.11\n        \n            cannon-es : ^0.15.1\n        \n            comlink : ^4.3.0\n        \n            css-element-queries : ^1.2.3\n        \n            graphology : ^0.17.1\n        \n            graphology-shortest-path : ^1.3.4\n        \n            jsonld : ^3.1.1\n        \n            lodash : ^4.17.19\n        \n            n3 : ^1.6.1\n        \n            ng5-slider : ^1.2.4\n        \n            quaternion : ^1.1.0\n        \n            quaternion-to-euler : ^0.5.0\n        \n            rdf-literal : ^1.1.1\n        \n            rdfxml-streaming-parser : ^1.3.6\n        \n            react : ^16.13.1\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataQueryState   (projects/.../data.state.ts)\n                        \n                        \n                            LoaderType   (projects/.../loader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n            \n                \n                    \n                        \n                        DataQueryState\n                    \n                \n                    \n                        \n                            Current state of data queries. \n\n                        \n                    \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : running\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    projects/ccf-image-viewer/src/lib/loader.ts\n    \n        \n            \n                \n                    \n                        \n                        LoaderType\n                    \n                \n                        \n                            \n                                 Zarr\n                            \n                        \n                        \n                            \n                                Value : zarr\n                            \n                        \n                        \n                            \n                                 OMEZarr\n                            \n                        \n                        \n                            \n                                Value : ome-zarr\n                            \n                        \n                        \n                            \n                                 StaticZarr\n                            \n                        \n                        \n                            \n                                Value : static\n                            \n                        \n                        \n                            \n                                 Tiff\n                            \n                        \n                        \n                            \n                                Value : tiff\n                            \n                        \n                        \n                            \n                                 Tiff2\n                            \n                        \n                        \n                            \n                                Value : tiff 2\n                            \n                        \n                        \n                            \n                                 BFTiff\n                            \n                        \n                        \n                            \n                                Value : bf tiff\n                            \n                        \n                        \n                            \n                                 CovidTiff\n                            \n                        \n                        \n                            \n                                Value : covid tiff\n                            \n                        \n                        \n                            \n                                 StaticTiff\n                            \n                        \n                        \n                            \n                                Value : static tiff\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - Exploration User Interface (EUI)\n\n\n\n\n\n\n\n\nCCF-EUI: Common Coordinate Framework (CCF) - Exploration User Interface (EUI)\nBackground and More Information\nFor more information, see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nCCF-EUI is developed at the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockSizeInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorBarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorPickerLauncherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorSchemeContentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorSchemePopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GenderSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerAccordionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerLayersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerLegendModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeftSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyExplorationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySelectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyTreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RightSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RotationSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchemeDropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SideSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SlicesInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpinnerOverlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StageNavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_exports\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\ncluster_ColorBarModule\n\n\n\ncluster_ColorBarModule_declarations\n\n\n\ncluster_ColorBarModule_exports\n\n\n\ncluster_ColorPickerLauncherModule\n\n\n\ncluster_ColorPickerLauncherModule_declarations\n\n\n\ncluster_ColorPickerLauncherModule_imports\n\n\n\ncluster_ColorPickerLauncherModule_exports\n\n\n\ncluster_ColorSchemeContentsModule\n\n\n\ncluster_ColorSchemeContentsModule_declarations\n\n\n\ncluster_ColorSchemeContentsModule_exports\n\n\n\ncluster_ColorSchemePopupModule\n\n\n\ncluster_ColorSchemePopupModule_declarations\n\n\n\ncluster_ColorSchemePopupModule_exports\n\n\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_GenderSelectorModule\n\n\n\ncluster_GenderSelectorModule_declarations\n\n\n\ncluster_GenderSelectorModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_ImageViewerAccordionModule\n\n\n\ncluster_ImageViewerAccordionModule_declarations\n\n\n\ncluster_ImageViewerAccordionModule_imports\n\n\n\ncluster_ImageViewerAccordionModule_exports\n\n\n\ncluster_ImageViewerContentModule\n\n\n\ncluster_ImageViewerContentModule_declarations\n\n\n\ncluster_ImageViewerContentModule_exports\n\n\n\ncluster_ImageViewerLayersModule\n\n\n\ncluster_ImageViewerLayersModule_declarations\n\n\n\ncluster_ImageViewerLayersModule_imports\n\n\n\ncluster_ImageViewerLayersModule_exports\n\n\n\ncluster_ImageViewerLegendModule\n\n\n\ncluster_ImageViewerLegendModule_declarations\n\n\n\ncluster_ImageViewerLegendModule_exports\n\n\n\ncluster_ImageViewerModule\n\n\n\ncluster_ImageViewerModule_imports\n\n\n\ncluster_ImageViewerModule_exports\n\n\n\ncluster_ImageViewerPopoverModule\n\n\n\ncluster_ImageViewerPopoverModule_declarations\n\n\n\ncluster_ImageViewerPopoverModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\ncluster_ResultsBrowserItemModule\n\n\n\ncluster_ResultsBrowserItemModule_declarations\n\n\n\ncluster_ResultsBrowserItemModule_exports\n\n\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_SchemeDropdownModule\n\n\n\ncluster_SchemeDropdownModule_declarations\n\n\n\ncluster_SchemeDropdownModule_exports\n\n\n\ncluster_SideSelectorModule\n\n\n\ncluster_SideSelectorModule_declarations\n\n\n\ncluster_SideSelectorModule_exports\n\n\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBodyModule\n\nBodyModule\n\nAppModule -->\n\nBodyModule->AppModule\n\n\n\n\n\nBodyUiModule \n\nBodyUiModule \n\nBodyUiModule  -->\n\nBodyModule->BodyUiModule \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule -->\n\nDrawerModule->ImageViewerPopoverModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule -->\n\nDualSliderModule->ColorSchemeContentsModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nAppModule -->\n\nImageViewerModule->AppModule\n\n\n\n\n\nImageViewerContentModule \n\nImageViewerContentModule \n\nImageViewerContentModule  -->\n\nImageViewerModule->ImageViewerContentModule \n\n\n\n\n\nImageViewerLayersModule \n\nImageViewerLayersModule \n\nImageViewerLayersModule  -->\n\nImageViewerModule->ImageViewerLayersModule \n\n\n\n\n\nImageViewerPopoverModule \n\nImageViewerPopoverModule \n\nImageViewerPopoverModule  -->\n\nImageViewerModule->ImageViewerPopoverModule \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nAppModule -->\n\nInfoDialogModule->AppModule\n\n\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyModule -->\n\nBodyUiModule->BodyModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nColorBarComponent\n\nColorBarComponent\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorBarModule -->\n\nColorBarComponent->ColorBarModule\n\n\n\n\n\nColorBarComponent \n\nColorBarComponent \n\nColorBarComponent  -->\n\nColorBarModule->ColorBarComponent \n\n\n\nColorSchemeContentsModule -->\n\nColorBarModule->ColorSchemeContentsModule\n\n\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nSchemeDropdownModule -->\n\nColorBarModule->SchemeDropdownModule\n\n\n\n\n\nColorPickerLauncherComponent\n\nColorPickerLauncherComponent\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule -->\n\nColorPickerLauncherComponent->ColorPickerLauncherModule\n\n\n\n\n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent  -->\n\nColorPickerLauncherModule->ColorPickerLauncherComponent \n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerLayersModule -->\n\nColorPickerLauncherModule->ImageViewerLayersModule\n\n\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorPickerLauncherModule -->\n\nColorSchemePopupModule->ColorPickerLauncherModule\n\n\n\n\n\nColorSchemePopupComponent \n\nColorSchemePopupComponent \n\nColorSchemePopupComponent  -->\n\nColorSchemePopupModule->ColorSchemePopupComponent \n\n\n\n\n\nColorSchemeContentsComponent\n\nColorSchemeContentsComponent\n\nColorSchemeContentsModule -->\n\nColorSchemeContentsComponent->ColorSchemeContentsModule\n\n\n\nColorSchemePopupModule -->\n\nColorSchemeContentsModule->ColorSchemePopupModule\n\n\n\n\n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent  -->\n\nColorSchemeContentsModule->ColorSchemeContentsComponent \n\n\n\n\n\nColorSchemePopupComponent\n\nColorSchemePopupComponent\n\nColorSchemePopupModule -->\n\nColorSchemePopupComponent->ColorSchemePopupModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nGenderSelectorComponent\n\nGenderSelectorComponent\n\n\n\nGenderSelectorModule\n\nGenderSelectorModule\n\nGenderSelectorModule -->\n\nGenderSelectorComponent->GenderSelectorModule\n\n\n\nLeftSidebarModule -->\n\nGenderSelectorModule->LeftSidebarModule\n\n\n\n\n\nGenderSelectorComponent \n\nGenderSelectorComponent \n\nGenderSelectorComponent  -->\n\nGenderSelectorModule->GenderSelectorComponent \n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nImageViewerAccordionComponent\n\nImageViewerAccordionComponent\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule -->\n\nImageViewerAccordionComponent->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent  -->\n\nImageViewerAccordionModule->ImageViewerAccordionComponent \n\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerContentModule -->\n\nImageViewerAccordionModule->ImageViewerContentModule\n\n\n\nImageViewerModule -->\n\nImageViewerLayersModule->ImageViewerModule\n\n\n\nImageViewerAccordionModule -->\n\nImageViewerLayersModule->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerLayersComponent \n\nImageViewerLayersComponent \n\nImageViewerLayersComponent  -->\n\nImageViewerLayersModule->ImageViewerLayersComponent \n\n\n\n\n\nImageViewerContentComponent\n\nImageViewerContentComponent\n\nImageViewerContentModule -->\n\nImageViewerContentComponent->ImageViewerContentModule\n\n\n\nImageViewerModule -->\n\nImageViewerContentModule->ImageViewerModule\n\n\n\n\n\nImageViewerContentComponent \n\nImageViewerContentComponent \n\nImageViewerContentComponent  -->\n\nImageViewerContentModule->ImageViewerContentComponent \n\n\n\nImageViewerPopoverModule -->\n\nImageViewerContentModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerLayersComponent\n\nImageViewerLayersComponent\n\nImageViewerLayersModule -->\n\nImageViewerLayersComponent->ImageViewerLayersModule\n\n\n\nImageViewerLayersModule -->\n\nSchemeDropdownModule->ImageViewerLayersModule\n\n\n\n\n\nSchemeDropdownComponent \n\nSchemeDropdownComponent \n\nSchemeDropdownComponent  -->\n\nSchemeDropdownModule->SchemeDropdownComponent \n\n\n\n\n\nImageViewerLegendComponent\n\nImageViewerLegendComponent\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerLegendModule -->\n\nImageViewerLegendComponent->ImageViewerLegendModule\n\n\n\n\n\nImageViewerLegendComponent \n\nImageViewerLegendComponent \n\nImageViewerLegendComponent  -->\n\nImageViewerLegendModule->ImageViewerLegendComponent \n\n\n\nImageViewerPopoverModule -->\n\nImageViewerLegendModule->ImageViewerPopoverModule\n\n\n\nImageViewerModule -->\n\nImageViewerPopoverModule->ImageViewerModule\n\n\n\n\n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent  -->\n\nImageViewerPopoverModule->ImageViewerPopoverComponent \n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerModule -->\n\nViewerModule->ImageViewerModule\n\n\n\nImageViewerPopoverModule -->\n\nViewerModule->ImageViewerPopoverModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\nImageViewerPopoverComponent\n\nImageViewerPopoverComponent\n\nImageViewerPopoverModule -->\n\nImageViewerPopoverComponent->ImageViewerPopoverModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nLeftSidebarModule -->\n\nOrganSelectorModule->LeftSidebarModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\nSideSelectorModule\n\nSideSelectorModule\n\nLeftSidebarModule -->\n\nSideSelectorModule->LeftSidebarModule\n\n\n\n\n\nSideSelectorComponent \n\nSideSelectorComponent \n\nSideSelectorComponent  -->\n\nSideSelectorModule->SideSelectorComponent \n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nResultsBrowserItemComponent\n\nResultsBrowserItemComponent\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule -->\n\nResultsBrowserItemComponent->ResultsBrowserItemModule\n\n\n\nResultsBrowserModule -->\n\nResultsBrowserItemModule->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent  -->\n\nResultsBrowserItemModule->ResultsBrowserItemComponent \n\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nSchemeDropdownComponent\n\nSchemeDropdownComponent\n\nSchemeDropdownModule -->\n\nSchemeDropdownComponent->SchemeDropdownModule\n\n\n\n\n\nSideSelectorComponent\n\nSideSelectorComponent\n\nSideSelectorModule -->\n\nSideSelectorComponent->SideSelectorModule\n\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        50 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    47 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    57 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DeckCallbackArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            DeckProps   (projects/.../image-viewer.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            GetChildrenFunc   (projects/.../ontology-search.service.ts)\n                        \n                        \n                            ImageViewerLayerArgs   (projects/.../image-viewer-layer.ts)\n                        \n                        \n                            ImageViewerLayerRequiredArgNames   (projects/.../image-viewer-layer.ts)\n                        \n                        \n                            JsonDict   (projects/.../hubmap-data.ts)\n                        \n                        \n                            LayerConfig   (projects/.../image-viewer.ts)\n                        \n                        \n                            LayerFilterArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            OnViewStateChangeArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            OverviewArgs   (projects/.../picture-in-picture-viewer.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            Side   (projects/.../stage-nav.component.ts)\n                        \n                        \n                            State   (projects/.../image-viewer.ts)\n                        \n                        \n                            ValueOrGenerator   (projects/.../image-viewer.ts)\n                        \n                        \n                            ZarrInfo   (projects/.../loader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container. \n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers. \n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type. \n\n                \n            \n            \n                \n                        GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type. \n\n                \n            \n            \n                \n                        GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type. \n\n                \n            \n            \n                \n                        GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components. \n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container. \n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers. \n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type. \n\n                \n            \n            \n                \n                        GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type. \n\n                \n            \n            \n                \n                        GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type. \n\n                \n            \n            \n                \n                        GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components. \n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/image-viewer.ts\n    \n    \n        \n            \n                \n                    \n                    DeckCallbackArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeckProps\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerConfig\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerFilterArgs\n                \n            \n            \n                \n                            DeckCallbackArgs\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OnViewStateChangeArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    State\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValueOrGenerator\n                \n            \n            \n                \n                        T | \n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer. \n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer. \n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n    \n    \n        \n            \n                \n                    \n                    GetChildrenFunc\n                \n            \n            \n                \n                    Type of function for getting child nodes from a parent node. \n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/core/models/image-viewer-layer.ts\n    \n    \n        \n            \n                \n                    \n                    ImageViewerLayerArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ImageViewerLayerRequiredArgNames\n                \n            \n            \n                \n                        \"id\" | \"colorScheme\"\n\n                \n            \n        \n    \n    projects/ccf-database/src/lib/hubmap/hubmap-data.ts\n    \n    \n        \n            \n                \n                    \n                    JsonDict\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n    \n    \n        \n            \n                \n                    \n                    OverviewArgs\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n    \n    \n        \n            \n                \n                    \n                    Side\n                \n            \n            \n                \n                    Valid values for side. \n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\"\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/loader.ts\n    \n    \n        \n            \n                \n                    \n                    ZarrInfo\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
