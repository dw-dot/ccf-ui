var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AggregateResult.html",[0,0.282,1,2.326]],["body/interfaces/AggregateResult.html",[0,0.535,1,3.373,2,1.192,3,0.072,4,0.072,5,0.072,6,1.598,7,3.339,8,1.109,9,4.327,10,4.673,11,0.007,12,0.385,13,0.786,14,5.332,15,2.688,16,1.426,17,0.008,18,1.676,19,0.714,20,1.646,21,4.447,22,2.91,23,0.124,24,2.759,25,2.92,26,3.078,27,3.358,28,1.791,29,2.81,30,3.339,31,3.339,32,2.92,33,2.072,34,3.587,35,3.181,36,1.749,37,3.89,38,3.181,39,3.181,40,3.043,41,2.92,42,3.043,43,3.181,44,2.92,45,4.058,46,1.749,47,1.342,48,0.877,49,1.598,50,3.486,51,2.072,52,2.709,53,0.633,54,3.043,55,1.872,56,2.81,57,2.92,58,3.181,59,4.053,60,3.743,61,3.89,62,3.89,63,4.208,64,4.557,65,1.295,66,3.373,67,3.743,68,1.875,69,1.875,70,2.617,71,2.81,72,2.617,73,2.501,74,2.81,75,4.237,76,3.043,77,3.043,78,3.743,79,3.743,80,2.709,81,3.181,82,1.53,83,2.311,84,2.709,85,3.043,86,3.181,87,0.79,88,3.339,89,2.38,90,3.043,91,3.181,92,2.185,93,3.17,94,2.92,95,2.877,96,2.92,97,2.311,98,3.181,99,0.005,100,0.004]],["title/components/AppComponent.html",[101,0.726,102,1.436]],["body/components/AppComponent.html",[3,0.086,4,0.071,5,0.047,8,0.485,11,0.005,12,0.457,13,0.582,15,1.976,16,0.977,17,0.008,19,0.403,20,1.084,23,0.047,24,1.358,26,2.28,33,2.044,34,1.472,36,1.803,47,1.423,48,1.495,49,2.109,51,1.358,52,1.776,53,0.625,55,0.921,56,1.842,65,1.447,67,3.978,73,1.648,93,1.56,99,0.004,100,0.006,101,1.346,102,2.063,103,2.284,104,1.003,105,1.047,106,1.095,107,0.941,108,3.249,109,4.334,110,4.334,111,4.89,112,3.476,113,3.695,114,2.526,115,4.89,116,3.294,117,3.067,118,2.302,119,2.499,120,1.611,121,5.881,122,1.648,123,4.89,124,5.881,125,2.43,126,5.881,127,1.277,128,1.473,129,1.393,130,3.249,131,1.386,132,3.968,133,3.294,134,4.727,135,3.968,136,1.948,137,3.214,138,4.89,139,4.89,140,4.89,141,2.521,142,3.968,143,3.249,144,2.421,145,1.386,146,3.476,147,3.294,148,1.938,149,4.89,150,0.341,151,0.36,152,2.348,153,1.432,154,1.608,155,2.636,156,1.472,157,5.571,158,2.636,159,3.294,160,3.961,161,2.88,162,2.309,163,2.455,164,3.476,165,3.249,166,2.455,167,3.294,168,2.88,169,1.854,170,2.88,171,2.455,172,3.968,173,2.063,174,2.88,175,1.66,176,2.455,177,2.063,178,3.249,179,0.101,180,1.685,181,1.229,182,3.695,183,1.996,184,2.455,185,2.88,186,3.249,187,3.249,188,3.249,189,2.88,190,3.249,191,2.636,192,1.914,193,3.093,194,2.824,195,3.695,196,7.374,197,1.176,198,5.212,199,2.336,200,4.89,201,3.249,202,2.455,203,3.249,204,0.961,205,1.365,206,3.249,207,3.249,208,3.249,209,3.249,210,3.249,211,3.249,212,2.636,213,2.636,214,3.249,215,1.776,216,1.047,217,2.085,218,3.249,219,0.552,220,3.249,221,3.249,222,3.249,223,2.455,224,1.869,225,2.309,226,5.694,227,3.968,228,2.309,229,3.249,230,3.249,231,5.694,232,2.455,233,1.323,234,3.249,235,1.914,236,1.12,237,1.66,238,1.776,239,2.28,240,2.421,241,3.249,242,4.89,243,3.249,244,3.249,245,4.89,246,3.249,247,1.277,248,1.776,249,2.582,250,3.249,251,4.89,252,1.358,253,1.739,254,3.249,255,4.89,256,3.249,257,3.249,258,3.249,259,1.842,260,3.249,261,2.189,262,4.89,263,4.89,264,4.334,265,4.89,266,4.89,267,4.89,268,3.093,269,1.608,270,1.914,271,2.364,272,2.719,273,3.138,274,2.772,275,2.098,276,2.455,277,1.358,278,2.636,279,2.216,280,2.189,281,2.075,282,1.914,283,2.156,284,1.895,285,3.105,286,1.515,287,3.249,288,2.309,289,2.582,290,1.416,291,2.421,292,2.582,293,2.499,294,2.636,295,1.716,296,1.515,297,2.673,298,1.66,299,2.824,300,1.358,301,1.515,302,1.432,303,2.189,304,3.249,305,1.914,306,2.582,307,1.995,308,1.842,309,1.716,310,2.88,311,2.636,312,2.189,313,2.88,314,2.88,315,2.636,316,3.249,317,0.54,318,1.509,319,1.576,320,1.095,321,2.204,322,1.095,323,1.095,324,1.025,325,1.095,326,1.025,327,1.095,328,1.025,329,1.232,330,1.095,331,1.025,332,1.047,333,1.095,334,1.025,335,1.095,336,1.025,337,1.095,338,1.025,339,1.095,340,1.025,341,1.981,342,1.095,343,1.025,344,1.648,345,1.025,346,1.07,347,1.095,348,1.025,349,1.509,350,1.648,351,1.025,352,1.095,353,1.025,354,1.095,355,1.025,356,1.025,357,1.095,358,1.025,359,1.095,360,1.025,361,1.648,362,1.025,363,1.095,364,1.025,365,1.095,366,1.025,367,1.095,368,1.047,369,1.095,370,1.025,371,1.095,372,1.025,373,1.095,374,1.025,375,1.025,376,1.095,377,1.025,378,1.025,379,1.095,380,1.095]],["title/modules/AppModule.html",[381,0.651,382,3.44]],["body/modules/AppModule.html",[3,0.08,4,0.08,5,0.08,11,0.005,17,0.008,23,0.08,99,0.006,100,0.005,102,2.92,136,1.516,150,0.385,151,0.605,170,4.841,171,4.126,174,4.841,175,2.79,179,0.17,204,1.615,226,4.432,231,4.432,317,0.908,381,0.781,382,7.249,383,1.548,384,1.548,385,2.351,386,2.301,387,2.08,388,1.65,389,4.841,390,4.841,391,4.841,392,4.841,393,6.19,394,6.19,395,5.866,396,5.588,397,6.19,398,6.19,399,5.866,400,6.19,401,6.19,402,6.19,403,1.994,404,1.455,405,5.462,406,2.171,407,2.125,408,3.846,409,2.79,410,6.236,411,5.001,412,6.236,413,4.841,414,5.462,415,5.462,416,5.462,417,4.841,418,5.462,419,4.841,420,3.882,421,4.841,422,5.462,423,3.505,424,5.462,425,4.841,426,4.432,427,3.882,428,4.432,429,5.462,430,5.001,431,5.462,432,5.462,433,4.432,434,5.462,435,6.236,436,5.462,437,4.432,438,4.432]],["title/modules/BodyModule.html",[381,0.651,393,3.236]],["body/modules/BodyModule.html",[3,0.099,4,0.099,5,0.099,11,0.006,17,0.008,23,0.099,99,0.007,100,0.006,128,1.691,150,0.35,151,0.747,179,0.21,204,1.997,317,1.123,381,0.965,383,1.914,384,1.914,385,2.423,386,1.997,387,1.997,388,2.586,393,6.588,403,2.274,404,1.799,406,2.476,407,2.423,439,5.985,440,5.985,441,5.985,442,6.763,443,6.753,444,2.765,445,2.275,446,5.479,447,6.753]],["title/classes/BodyUI.html",[179,0.142,448,3.44]],["body/classes/BodyUI.html",[0,0.225,3,0.053,4,0.053,5,0.053,6,2.892,8,0.543,11,0.003,12,0.282,13,0.632,16,1.032,17,0.008,18,1,19,0.74,20,1.759,23,0.077,28,0.789,36,1.48,46,1.732,53,0.981,87,1.344,99,0.004,100,0.003,118,1.304,125,2.819,127,1.723,128,2.279,129,1.899,145,1.506,150,0.314,153,1.601,156,1.646,179,0.196,197,1.277,205,1.759,219,1.347,236,1.831,252,1.773,301,2.928,302,1.601,329,0.684,403,1.78,448,4.013,449,1.856,450,6.78,451,3.219,452,4.708,453,3.578,454,4.231,455,2.806,456,5.459,457,4.715,458,7.031,459,5.566,460,5.566,461,5.566,462,5.566,463,5.566,464,5.566,465,5.312,466,5.312,467,5.312,468,5.312,469,5.312,470,1.197,471,4.708,472,2.434,473,5.312,474,1.924,475,3.261,476,1.391,477,3.632,478,3.632,479,3.632,480,4.844,481,4.708,482,3.632,483,4.674,484,3.632,485,4.708,486,3.632,487,3.632,488,4.708,489,3.632,490,3.632,491,4.708,492,4.993,493,5.096,494,3.016,495,4.446,496,3.632,497,4.745,498,1.443,499,4.708,500,3.632,501,4.708,502,3.632,503,1.918,504,4.708,505,3.632,506,4.708,507,3.632,508,2.407,509,5.566,510,4.708,511,4.708,512,2.059,513,2.331,514,2.23,515,2.059,516,3.219,517,1.601,518,2.947,519,2.14,520,2.331,521,1.694,522,2.059,523,2.14,524,2.331,525,3.109,526,3.219,527,3.219,528,2.14,529,3.219,530,1.518,531,3.219,532,3.219,533,3.219,534,3.219,535,3.219,536,2.23,537,3.219,538,3.219,539,3.219,540,4.708,541,3.219,542,3.219,543,3.219,544,1.744,545,1.985,546,1.646,547,2.331,548,3.219,549,4.708,550,3.219,551,2.447,552,3.219,553,4.708,554,3.219,555,2.805,556,5.566,557,4.708,558,4.708,559,3.219,560,3.219,561,6.145,562,4.708,563,3.219,564,5.566,565,1.342,566,3.219,567,3.219,568,4.708,569,3.219,570,3.219,571,3.219,572,3.409,573,3.219,574,3.219,575,3.219,576,4.708,577,5.566,578,2.558,579,6.517,580,4.708,581,4.708,582,4.708,583,3.219,584,3.219,585,3.219,586,3.219,587,2.947,588,3.219,589,3.219,590,3.219,591,3.219,592,3.219,593,1.443,594,3.219,595,3.219,596,3.219,597,2.447,598,3.219,599,2.744,600,3.219,601,3.219,602,3.219]],["title/classes/BodyUILayer.html",[179,0.142,456,3.236]],["body/classes/BodyUILayer.html",[0,0.273,3,0.089,4,0.064,5,0.064,6,2.553,11,0.004,12,0.343,13,0.727,16,1.327,17,0.008,18,1.612,19,0.654,20,0.979,23,0.089,28,1.639,36,1.978,46,1.778,53,0.78,69,2.309,87,0.704,95,1.711,99,0.005,100,0.004,125,2.159,127,0.959,128,1.984,129,1.606,141,1.455,145,2.246,150,0.344,179,0.138,197,1.468,205,1.273,216,1.967,219,1.426,236,1.522,240,2.186,247,1.721,252,1.742,253,1.306,282,2.601,329,1.15,449,2.256,450,5.984,454,5.336,456,5.364,474,1.106,476,1.115,480,4.278,492,3.747,497,3.336,498,1.373,512,2.503,513,3.917,514,2.711,525,3.921,530,1.845,544,3.359,545,3.336,546,2.766,561,4.611,565,2.584,578,3.074,593,3.146,599,3.336,603,3.139,604,2.551,605,6.2,606,3.083,607,6.2,608,6.104,609,6.689,610,6.689,611,4.416,612,5.41,613,4.416,614,4.416,615,4.416,616,3.914,617,5.41,618,6.2,619,3.583,620,2.974,621,3.914,622,3.583,623,5.41,624,3.914,625,3.583,626,6.2,627,3.583,628,5.41,629,3.583,630,3.914,631,3.139,632,3.583,633,3.914,634,3.914,635,3.914,636,3.914,637,3.914,638,3.914,639,2.834,640,3.336,641,5.701,642,4.611,643,4.611,644,5.701,645,3.336,646,3.336,647,4.611,648,3.336,649,4.446,650,2.001,651,5.41,652,5.41,653,2.059,654,3.914,655,3.914,656,3.914,657,6.2,658,3.914,659,3.914,660,5.41,661,3.914,662,3.914,663,3.914,664,5.41,665,4.339,666,5.41,667,3.583,668,3.914,669,2.332,670,3.914,671,6.2,672,3.914,673,3.914,674,3.914,675,3.914,676,3.336,677,5.41,678,5.41,679,3.914,680,5.41,681,5.701,682,3.914,683,5.41,684,3.914,685,3.336,686,2.834,687,3.914,688,3.914,689,3.914,690,3.914,691,5.41,692,6.2,693,6.2,694,5.41,695,5.41,696,5.41,697,3.914,698,3.914,699,3.914,700,3.914,701,3.914,702,3.914,703,3.914,704,2.834,705,3.914,706,3.914,707,3.336,708,3.914,709,3.914,710,3.336,711,3.914,712,3.914,713,3.914]],["title/interfaces/BodyUIProps.html",[0,0.282,518,3.695]],["body/interfaces/BodyUIProps.html",[0,0.281,2,1.091,3,0.066,4,0.066,5,0.066,6,1.462,11,0.004,12,0.353,13,0.74,16,1.264,17,0.008,18,1.171,19,0.585,23,0.091,28,1.658,36,1.465,46,1.884,99,0.005,100,0.004,118,1.113,125,2.61,128,1.777,145,1.763,150,0.338,153,2,156,2.056,179,0.194,205,1.668,219,1.436,236,2.143,252,1.907,301,2.115,302,2,329,0.855,403,2.012,448,3.428,450,3.428,451,4.021,452,4.021,453,3.056,454,4.189,455,2.64,456,5.044,457,4.356,458,7.089,459,4.021,460,4.021,461,4.021,462,4.021,463,4.021,464,4.021,471,4.021,472,1.758,475,2.785,476,1.392,480,4.683,481,4.021,483,4.498,485,4.021,488,4.021,491,4.021,493,3.682,495,4.372,497,3.428,499,4.021,501,4.021,504,4.021,506,4.021,508,2.056,509,6.289,510,5.512,511,5.512,512,2.572,513,2.912,514,2.785,515,2.572,516,4.021,517,2,518,5.046,519,4.498,520,4.554,521,3.559,522,4.023,523,2.673,524,2.912,525,3.513,526,4.021,527,4.021,528,2.673,529,4.021,530,1.896,531,4.021,532,4.021,533,4.021,534,4.021,535,4.021,536,2.785,537,4.021,538,4.021,539,4.021,540,5.512,541,4.021,542,4.021,543,4.021,544,2.179,545,2.48,546,2.056,547,2.912,548,4.021,549,5.512,550,4.021,551,3.056,552,4.021,553,5.512,554,4.021,555,3.284,556,6.289,557,5.512,558,5.512,559,4.021,560,4.021,561,6.508,562,5.512,563,4.021,564,6.289,565,1.676,566,4.021,567,4.021,568,5.512,569,4.021,570,4.021,571,4.021,572,3.991,573,4.021,574,4.021,575,4.021,576,5.512,577,6.289,578,2.89,579,7.089,580,5.512,581,5.512,582,5.512,583,4.021,584,4.021,585,4.021,586,4.021,587,3.682,588,4.021,589,4.021,590,4.021,591,4.021,592,4.021,593,1.802,594,4.021,595,4.021,596,4.021,597,3.056,598,4.021,599,3.428,600,4.021,601,4.021,602,4.021]],["title/components/BodyUiComponent.html",[101,0.726,324,1.436]],["body/components/BodyUiComponent.html",[3,0.097,4,0.059,5,0.059,11,0.003,12,0.314,13,0.682,17,0.008,19,0.657,23,0.059,28,0.876,36,1.35,47,1.385,48,1.409,53,0.926,55,1.144,65,1.307,68,2.167,73,2.908,81,2.589,87,0.913,99,0.005,100,0.006,101,1.221,102,1.272,103,1.624,104,1.245,105,1.3,106,1.359,107,1.168,114,1.97,117,3.119,118,2.329,120,1.888,122,1.93,125,1.245,127,0.876,128,2.187,129,1.743,136,1.12,144,2.836,148,1.329,150,0.314,151,0.447,152,1.937,160,5.515,161,3.576,162,2.868,163,3.048,167,4.887,168,3.576,169,1.272,173,1.272,177,1.272,179,0.126,184,3.048,197,1.378,205,1.513,216,1.847,219,1.232,224,1.775,253,1.193,277,1.686,290,1.168,295,2.131,317,0.671,318,1.768,319,1.847,320,1.359,321,2.444,322,1.359,323,1.359,324,2.288,325,1.359,326,1.272,327,1.359,328,1.272,329,1.366,330,1.359,331,1.272,332,1.3,333,1.359,334,1.272,335,1.359,336,1.272,337,1.359,338,1.272,339,1.359,340,1.272,341,2.245,342,1.359,343,1.272,344,1.93,345,1.272,346,1.329,347,1.359,348,1.272,349,2.456,350,1.93,351,1.272,352,1.359,353,1.272,354,1.359,355,1.272,356,1.272,357,1.359,358,1.272,359,1.359,360,1.272,361,1.93,362,1.272,363,1.359,364,1.272,365,1.359,366,1.272,367,1.359,368,1.3,369,1.359,370,1.272,371,1.359,372,1.272,373,1.359,374,1.272,375,1.272,376,1.359,377,1.272,378,1.272,379,1.359,380,1.359,446,6.789,448,6.185,454,5.161,455,2.013,470,1.329,472,2.582,474,1.435,476,0.913,494,1.937,498,1.124,508,1.828,519,3.376,587,4.65,653,2.672,665,4.073,714,7.416,715,4.035,716,2.526,717,4.489,718,6.664,719,5.73,720,6.664,721,5.73,722,4.887,723,2.334,724,2.395,725,6.664,726,3.048,727,5.73,728,4.035,729,4.65,730,3.677,731,5.079,732,3.677,733,5.079,734,2.714,735,4.035,736,2.116,737,5.73,738,4.035,739,4.035,740,5.446,741,5.73,742,4.329,743,4.035,744,2.718,745,2.52,746,2.334,747,4.035,748,4.035,749,4.035,750,4.035,751,4.035,752,4.035,753,4.035,754,2.377,755,2.589,756,2.061,757,4.035,758,4.035,759,4.035,760,4.035,761,4.035,762,4.035,763,2.377,764,4.035,765,4.203,766,4.035,767,6.664,768,4.035,769,5.156,770,4.035,771,4.035,772,4.035,773,4.035,774,4.035,775,4.035,776,4.035,777,5.73,778,4.035,779,4.035,780,4.035,781,5.73,782,4.035,783,5.73,784,5.73,785,4.035,786,2.477]],["title/modules/BodyUiModule.html",[381,0.651,442,3.236]],["body/modules/BodyUiModule.html",[3,0.099,4,0.099,5,0.099,11,0.006,17,0.008,23,0.099,99,0.007,100,0.006,128,1.696,150,0.351,151,0.75,179,0.211,204,2.002,317,1.126,324,3.002,381,0.968,383,1.92,384,1.92,385,2.589,386,2.002,387,2.002,388,2.589,403,2.278,404,1.804,406,2.09,407,2.427,442,6.592,444,2.769,445,2.281,446,5.495,714,6.002,787,6.002,788,6.002,789,6.002,790,6.772,791,6.772]],["title/classes/CCFDatabase.html",[179,0.142,792,2.922]],["body/classes/CCFDatabase.html",[0,0.179,1,1.48,2,0.696,3,0.042,4,0.042,5,0.042,6,2.768,8,1.229,9,3.37,11,0.005,12,0.225,13,0.533,16,1.229,17,0.008,18,0.844,19,0.709,20,1.214,23,0.08,24,3.328,25,2.639,26,1.35,27,1.825,28,1.649,32,1.706,34,2.794,36,2.089,45,2.449,47,1.114,48,0.513,50,1.529,53,1.035,65,1.21,66,2.289,68,2.666,69,3.248,73,3.22,80,3.37,83,3.779,85,2.75,87,1.291,92,2.414,94,2.639,95,3.299,96,2.639,99,0.006,100,0.006,118,1.099,127,1.339,128,1.122,129,1.812,131,1.27,145,1.748,150,0.337,152,3.529,179,0.09,180,2.124,181,1.694,183,2.115,194,4.048,197,1.077,219,1.047,236,2.429,237,3.982,240,3.052,247,1.73,249,2.365,252,1.423,253,1.325,259,1.642,449,1.48,470,0.954,474,2.03,476,1.062,480,1.642,498,1.73,606,1.974,620,1.951,650,3.949,653,2.089,665,5.659,716,1.974,792,3.956,793,6.104,794,2.567,795,3.97,796,5.01,797,2.75,798,3.97,799,4.138,800,4.48,801,4.138,802,3.635,803,4.445,804,3.97,805,4.48,806,3.227,807,2.896,808,5.888,809,4.48,810,5.036,811,4.138,812,2.896,813,4.855,814,2.896,815,3.894,816,3.853,817,3.97,818,4.445,819,2.896,820,5.002,821,3.97,822,2.896,823,3.017,824,4.524,825,3.635,826,3.97,827,3.384,828,3.97,829,2.896,830,3.97,831,5.464,832,2.896,833,3.97,834,2.896,835,5.964,836,4.855,837,2.896,838,2.639,839,2.896,840,3.635,841,2.896,842,3.97,843,3.363,844,3.635,845,3.384,846,2.896,847,2.75,848,5.002,849,1.922,850,2.875,851,3.97,852,2.896,853,3.97,854,2.896,855,3.97,856,2.35,857,2.567,858,2.567,859,2.567,860,1.778,861,2.35,862,2.567,863,2.567,864,4.748,865,2.567,866,2.567,867,2.567,868,2.567,869,2.567,870,2.567,871,2.059,872,1.48,873,2.567,874,2.188,875,4.855,876,2.188,877,3.97,878,1.544,879,3.97,880,3.384,881,3.785,882,1.859,883,3.635,884,3.97,885,2.567,886,3.97,887,1.859,888,2.567,889,2.567,890,2.567,891,2.35,892,2.567,893,2.567,894,2.188,895,6.73,896,2.35,897,2.567,898,2.567,899,2.567,900,2.35,901,3.97,902,2.567,903,2.567,904,2.567,905,2.567,906,2.567,907,3.97,908,2.567,909,2.567,910,2.567,911,2.567,912,2.567,913,2.567,914,2.567,915,2.567,916,2.059,917,2.567,918,2.567,919,2.567,920,2.567,921,2.567,922,3.97,923,2.567,924,2.567,925,2.63,926,4.855,927,2.567,928,2.567,929,3.184,930,2.567,931,2.567,932,2.567,933,2.567,934,2.567,935,2.567,936,2.567,937,2.567,938,2.567,939,2.567,940,2.567,941,2.567]],["title/interfaces/CCFDatabaseOptions.html",[0,0.282,808,3.44]],["body/interfaces/CCFDatabaseOptions.html",[0,0.219,1,1.812,2,1.255,3,0.052,4,0.052,5,0.052,6,1.143,8,0.53,9,2.853,11,0.005,12,0.276,13,0.621,16,1.355,17,0.008,18,0.668,19,0.68,23,0.09,24,3.043,25,2.089,26,1.653,27,1.444,28,1.484,32,2.089,34,3.661,36,2.095,45,2.853,47,0.943,48,0.628,50,1.872,65,1.024,66,1.812,68,2.343,69,3.171,73,3.172,80,2.853,83,3.671,85,3.204,87,0.832,92,2.301,94,2.089,95,3.131,96,2.089,99,0.006,100,0.006,118,1.281,127,0.77,128,0.888,131,1.005,145,1.756,150,0.352,152,3.496,179,0.11,180,1.798,181,1.341,183,2.218,194,3.78,219,1.16,236,2.134,237,3.891,240,2.584,247,1.821,249,1.872,252,1.577,253,1.543,259,2.01,476,1.16,480,2.01,498,1.645,606,3.011,620,3.516,650,3.451,653,2.433,665,5.175,716,1.563,792,3.35,793,2.521,794,3.143,795,3.143,796,4.402,799,2.679,801,2.679,803,2.877,806,3.649,808,5.5,810,5.161,811,3.943,813,4.626,815,3.71,816,3.734,817,3.143,818,4.235,820,5.026,821,3.143,823,2.389,825,2.877,826,3.143,827,2.679,828,3.143,830,3.143,831,5.489,833,3.143,835,5.543,836,4.626,838,2.089,840,2.877,842,3.143,843,3.204,844,2.877,845,2.679,847,2.177,848,4.235,849,1.521,850,2.276,851,3.143,853,3.143,855,3.143,856,2.877,857,3.143,858,3.143,859,3.143,860,2.177,861,2.877,862,3.143,863,3.143,864,5.129,865,3.143,866,3.143,867,3.143,868,3.143,869,3.143,870,3.143,871,2.521,872,1.812,873,3.143,874,2.679,875,6.749,876,3.943,877,6.453,878,2.354,879,6.453,880,5.5,881,4.959,882,3.35,883,5.908,884,6.453,885,4.626,886,6.453,887,3.35,888,6.054,889,3.143,890,3.143,891,2.877,892,3.143,893,3.143,894,2.679,895,7.16,896,2.877,897,3.143,898,3.143,899,3.143,900,2.877,901,4.626,902,3.143,903,3.143,904,3.143,905,3.143,906,3.143,907,4.626,908,3.143,909,3.143,910,3.143,911,3.143,912,3.143,913,3.143,914,3.143,915,3.143,916,2.521,917,3.143,918,3.143,919,3.143,920,3.143,921,3.143,922,4.626,923,3.143,924,3.143,925,2.974,926,5.489,927,3.143,928,3.143,929,3.71,930,3.143,931,3.143,932,3.143,933,3.143,934,3.143,935,3.143,936,3.143,937,3.143,938,3.143,939,3.143,940,3.143,941,3.143]],["title/classes/CCFSpatialGraph.html",[179,0.142,811,3.44]],["body/classes/CCFSpatialGraph.html",[3,0.065,4,0.103,5,0.065,6,2.765,11,0.005,12,0.346,13,0.731,16,1.257,17,0.008,18,1.324,19,0.718,23,0.09,53,1.015,80,2.436,83,4.183,84,3.358,87,1.266,99,0.005,100,0.004,118,1.507,127,0.968,129,1.792,150,0.356,152,2.14,179,0.139,197,1.477,205,1.789,216,1.436,219,1.496,236,2.422,237,2.277,247,1.727,252,1.029,253,2.079,259,3.985,272,1.727,449,2.277,470,1.468,474,1.99,476,1.12,498,1.559,513,5.403,514,2.736,544,2.14,545,2.436,546,2.02,555,4.001,578,3.086,649,2.626,763,2.626,765,3.712,769,4.997,792,4.862,793,6.097,796,4.997,811,4.641,816,4.344,864,3.002,871,3.168,872,2.277,896,3.616,925,3.376,929,3.168,942,4.457,943,6.143,944,6.143,945,6.143,946,7.577,947,6.143,948,3.95,949,6.143,950,4.641,951,7.577,952,6.143,953,4.457,954,6.143,955,5.649,956,4.457,957,6.143,958,6.143,959,5.671,960,4.457,961,5.649,962,4.457,963,6.143,964,7.948,965,4.457,966,7.03,967,3.616,968,5.445,969,4.457,970,3.95,971,4.457,972,4.457,973,5.445,974,4.457,975,3.95,976,3.95,977,3.168,978,3.616,979,4.457,980,4.457,981,6.143,982,6.231,983,6.449,984,4.457,985,3.616,986,3.367,987,3.367,988,3.616,989,3.041,990,4.457,991,4.457,992,4.457,993,4.457,994,4.457,995,4.457,996,4.457,997,3.95,998,4.457,999,4.457,1000,4.457,1001,4.457,1002,4.457,1003,4.457,1004,4.457,1005,4.457,1006,2.526,1007,4.457,1008,3.616,1009,2.626,1010,7.03,1011,4.457,1012,7.03,1013,7.03,1014,4.457,1015,4.457,1016,4.457,1017,4.457,1018,4.457,1019,4.457,1020,4.457,1021,4.457,1022,4.457,1023,4.457,1024,4.457,1025,4.457,1026,4.457,1027,6.143,1028,5.704,1029,4.457,1030,4.457,1031,4.457,1032,4.457]],["title/classes/CCFSpatialScene.html",[179,0.142,815,3.236]],["body/classes/CCFSpatialScene.html",[0,0.225,2,0.877,3,0.053,4,0.078,5,0.053,6,2.624,11,0.004,12,0.283,16,1.24,17,0.008,18,1.387,19,0.685,20,0.808,23,0.078,28,1.157,45,1.993,46,1.631,53,1.014,61,3.138,62,3.138,66,1.863,73,3.079,74,3.02,83,3.872,87,1.266,90,2.238,99,0.004,100,0.003,118,1.307,127,1.504,128,2.039,129,1.691,145,2.308,150,0.315,152,1.751,179,0.114,197,1.281,219,1.452,237,1.863,240,2.637,247,1.725,252,2.073,253,2.274,272,1.413,329,1.629,449,1.863,470,1.201,472,2.439,474,1.989,476,0.849,480,5.029,498,1.509,513,3.419,514,2.238,525,4.524,555,3.324,578,3.383,639,3.419,640,5.81,641,5.81,642,4.024,643,4.024,644,4.024,645,4.024,646,5.23,647,4.024,648,4.024,676,2.755,685,4.024,707,2.755,710,5.563,763,3.708,765,4.385,769,5.903,792,4.443,793,5.787,804,4.722,815,3.787,816,4.675,824,4.726,845,4.024,850,2.34,864,2.456,871,2.592,872,1.863,929,3.787,948,3.232,950,4.024,967,2.959,977,2.592,978,2.959,983,5.975,985,2.959,986,2.755,987,2.755,988,2.959,1006,2.067,1008,2.959,1033,3.232,1034,5.327,1035,5.327,1036,5.327,1037,5.327,1038,5.327,1039,3.646,1040,4.722,1041,3.646,1042,4.722,1043,3.646,1044,4.722,1045,3.646,1046,4.722,1047,3.646,1048,3.646,1049,4.722,1050,6.136,1051,3.646,1052,2.592,1053,6.527,1054,4.722,1055,3.232,1056,3.232,1057,3.232,1058,6.136,1059,6.527,1060,4.722,1061,4.722,1062,7.039,1063,3.232,1064,4.722,1065,3.232,1066,3.232,1067,3.232,1068,2.755,1069,3.232,1070,3.232,1071,3.232,1072,3.232,1073,3.232,1074,2.959,1075,3.232,1076,3.232,1077,4.722,1078,3.232,1079,3.232,1080,7.216,1081,4.323,1082,4.722,1083,4.722,1084,4.323,1085,4.722,1086,3.232,1087,4.722,1088,3.232,1089,4.722,1090,4.722,1091,3.232,1092,3.232,1093,3.232,1094,3.232,1095,3.232,1096,3.232,1097,3.232,1098,3.232,1099,3.232,1100,3.787,1101,3.232,1102,6.527,1103,4.722,1104,3.232,1105,3.232,1106,3.232,1107,4.722,1108,4.443,1109,3.232,1110,3.232,1111,3.232,1112,4.024,1113,2.238,1114,3.232,1115,2.592,1116,3.232,1117,3.232,1118,3.232,1119,3.232,1120,3.232,1121,1.751,1122,3.232,1123,3.232,1124,3.232,1125,3.232,1126,3.232,1127,3.232,1128,3.232]],["title/interfaces/ChannelConfig.html",[0,0.282,1129,2.922]],["body/interfaces/ChannelConfig.html",[0,0.418,2,0.835,3,0.075,4,0.051,5,0.051,6,1.12,11,0.006,12,0.4,13,0.612,16,1.129,17,0.008,18,1.723,19,0.698,23,0.11,28,1.699,46,1.593,47,0.929,48,0.615,92,3.182,95,2.798,99,0.004,100,0.003,125,1.072,141,2.016,145,1.457,150,0.295,179,0.108,205,1.711,216,1.657,219,1.469,235,2.047,247,1.912,252,1.561,271,2.706,281,2.313,329,1.36,455,2.52,457,4.432,472,1.992,475,3.156,476,0.554,495,3.697,512,1.969,515,1.969,517,2.697,519,4.253,520,2.229,522,1.969,523,4.915,524,2.229,525,3.029,528,3.605,530,2.557,536,3.156,547,2.229,572,5.019,604,1.452,650,3.271,653,3.366,669,3.812,686,2.229,736,2.792,860,2.133,925,1.668,989,2.545,1129,3.927,1130,2.34,1131,2.133,1132,3.688,1133,3.573,1134,3.455,1135,4.556,1136,4.253,1137,3.927,1138,1.969,1139,2.229,1140,3.029,1141,3.156,1142,3.029,1143,3.156,1144,2.469,1145,2.469,1146,3.299,1147,4.432,1148,2.469,1149,2.469,1150,3.463,1151,4.122,1152,2.469,1153,3.299,1154,3.299,1155,4.35,1156,4.103,1157,3.156,1158,2.133,1159,2.133,1160,3.697,1161,5.131,1162,4.556,1163,3.654,1164,4.122,1165,2.469,1166,2.469,1167,2.469,1168,4.122,1169,1.969,1170,4.35,1171,4.35,1172,2.34,1173,2.34,1174,4.122,1175,4.34,1176,4.35,1177,2.229,1178,2.34,1179,2.469,1180,2.229,1181,4.807,1182,2.34,1183,5.497,1184,3.463,1185,3.463,1186,3.834,1187,2.229,1188,2.469,1189,2.469,1190,2.469,1191,2.469,1192,2.469,1193,2.469,1194,2.133,1195,4.35,1196,4.35,1197,4.35,1198,4.807,1199,5.131,1200,2.34,1201,2.469,1202,2.34,1203,3.654,1204,2.469,1205,2.469,1206,2.469,1207,2.34,1208,2.469,1209,2.469,1210,2.469,1211,2.34,1212,2.469,1213,2.469,1214,3.654,1215,2.469,1216,2.469,1217,2.34,1218,4.35,1219,2.469,1220,3.029,1221,2.469,1222,3.654,1223,2.229,1224,2.229,1225,2.469,1226,2.34,1227,2.469,1228,3.654,1229,2.34,1230,2.469,1231,2.469,1232,2.229,1233,3.299,1234,2.469,1235,2.469,1236,2.469,1237,2.469,1238,2.469,1239,2.34,1240,2.469,1241,1.969,1242,2.469,1243,2.469,1244,2.469,1245,2.469,1246,2.469,1247,2.34,1248,2.469,1249,2.34,1250,3.463,1251,2.469,1252,2.469,1253,2.469,1254,2.469,1255,2.34,1256,2.469,1257,2.469,1258,2.469,1259,2.469,1260,2.469,1261,2.229,1262,2.469,1263,2.469,1264,3.654,1265,2.469,1266,2.469]],["title/components/CheckboxComponent.html",[101,0.726,326,1.436]],["body/components/CheckboxComponent.html",[3,0.097,4,0.059,5,0.059,8,0.853,11,0.003,12,0.312,15,2.524,16,1.27,17,0.008,19,0.631,20,1.474,23,0.059,24,3.026,46,1.346,47,1.382,48,1.407,49,1.295,53,0.849,55,1.139,65,1.304,69,2.739,73,2.24,82,1.763,87,0.64,89,2.743,99,0.005,100,0.006,101,1.219,102,1.267,103,1.62,104,1.24,105,1.295,106,1.354,107,1.163,114,1.966,117,3.118,118,2.322,120,1.882,122,1.925,127,0.873,128,1.006,129,1.628,131,1.62,136,1.115,144,2.828,146,4.061,148,1.324,150,0.234,151,0.445,159,5.63,169,1.267,173,1.267,177,1.267,179,0.125,180,1.969,183,1.491,197,1.374,199,2.269,205,1.192,219,0.682,224,1.771,232,4.316,233,3.238,236,1.969,248,3.123,259,3.238,268,2.93,269,1.989,275,2.451,281,1.188,284,2.576,286,1.873,290,1.163,291,3.291,292,2.122,295,2.122,308,2.277,309,2.122,311,3.26,317,0.668,318,1.763,319,1.841,320,1.354,321,2.439,322,1.354,323,1.354,324,1.267,325,1.354,326,2.283,327,1.354,328,1.267,329,1.441,330,1.354,331,1.267,332,1.295,333,1.354,334,1.267,335,1.354,336,1.267,337,1.354,338,1.267,339,1.354,340,1.267,341,2.24,342,1.354,343,1.267,344,1.925,345,1.267,346,1.324,347,1.354,348,1.267,349,1.763,350,1.925,351,1.267,352,1.354,353,1.267,354,1.354,355,1.267,356,1.267,357,1.354,358,1.267,359,1.354,360,1.267,361,1.925,362,1.267,363,1.354,364,1.267,365,1.354,366,1.267,367,1.354,368,1.295,369,1.354,370,1.267,371,1.354,372,1.267,373,1.354,374,1.267,375,1.267,376,1.354,377,1.267,378,1.267,379,1.354,380,1.354,474,1.006,476,0.64,498,0.788,503,3.823,521,2.664,723,2.327,724,2.388,734,2.708,736,2.11,745,2.739,746,2.327,1028,3.26,1267,4.018,1268,5.713,1269,5.063,1270,7.949,1271,5.713,1272,7.932,1273,6.648,1274,5.713,1275,5.713,1276,5.394,1277,4.018,1278,5.713,1279,5.713,1280,5.713,1281,5.713,1282,4.018,1283,4.636,1284,5.875,1285,4.316,1286,4.018,1287,3.366,1288,7.644,1289,4.061,1290,6.417,1291,4.018,1292,4.636,1293,5.713,1294,7.241,1295,6.592,1296,4.018,1297,3.848,1298,4.316,1299,5.713,1300,4.316,1301,4.266,1302,3.666,1303,5.713,1304,5.713,1305,3.26,1306,4.018,1307,5.394,1308,4.018,1309,3.561,1310,4.018,1311,4.018,1312,4.018,1313,4.018,1314,3.26,1315,1.873,1316,4.018,1317,2.466,1318,2.466,1319,2.856,1320,4.061,1321,3.561,1322,4.018,1323,4.018]],["title/modules/CheckboxModule.html",[381,0.651,1324,3.236]],["body/modules/CheckboxModule.html",[3,0.099,4,0.099,5,0.099,11,0.006,17,0.008,23,0.099,99,0.007,100,0.006,150,0.363,151,0.748,179,0.211,204,1.999,317,1.124,326,3.001,381,0.967,383,1.917,384,1.917,385,2.587,386,1.999,387,1.999,388,2.587,403,2.276,404,1.801,406,2.087,407,2.425,444,2.767,445,2.278,1305,5.487,1324,6.59,1325,5.993,1326,5.993,1327,5.993,1328,6.762,1329,7.117,1330,6.762]],["title/components/ColorBarComponent.html",[101,0.726,328,1.436]],["body/components/ColorBarComponent.html",[3,0.097,4,0.059,5,0.059,8,0.859,11,0.005,12,0.519,16,1.147,17,0.008,19,0.551,20,1.481,23,0.059,45,2.217,46,0.955,47,1.387,48,1.411,49,1.307,53,0.853,55,1.15,65,1.311,82,2.062,87,0.646,99,0.005,100,0.006,101,1.223,102,1.279,103,1.63,104,1.251,105,1.307,106,1.366,107,1.174,114,1.976,117,3.128,118,2.324,120,1.895,122,1.937,127,1.452,128,1.016,129,1.783,136,1.126,144,3.308,148,1.336,150,0.235,151,0.449,169,1.279,173,1.279,177,1.279,179,0.126,197,1.383,205,0.846,219,0.976,224,2.387,238,3.974,239,4.249,252,0.936,268,1.787,271,1.366,275,1.74,281,2.15,290,1.174,300,1.695,301,1.891,302,1.787,303,3.874,317,0.674,318,1.775,319,1.853,320,1.366,321,2.45,322,1.366,323,1.366,324,1.279,325,1.366,326,1.279,327,1.366,328,2.293,329,1.784,330,1.366,331,1.279,332,1.307,333,1.366,334,1.279,335,1.366,336,1.279,337,1.366,338,1.279,339,1.366,340,1.279,341,2.251,342,1.366,343,1.279,344,1.937,345,1.279,346,1.336,347,1.366,348,1.279,349,1.775,350,1.937,351,1.279,352,1.366,353,1.279,354,1.366,355,1.279,356,1.279,357,1.366,358,1.279,359,1.366,360,1.279,361,1.937,362,1.279,363,1.366,364,1.279,365,1.366,366,1.279,367,1.366,368,1.307,369,1.366,370,1.279,371,1.366,372,1.279,373,1.366,374,1.279,375,1.279,376,1.366,377,1.279,378,1.279,379,1.366,380,1.366,474,1.016,476,0.646,498,1.427,565,2.685,723,2.342,724,2.403,734,2.722,745,2.904,746,2.342,1287,2.389,1315,2.681,1331,4.831,1332,3.862,1333,6.438,1334,4.055,1335,6.798,1336,3.691,1337,6.682,1338,5.751,1339,5.097,1340,6.682,1341,3.613,1342,6.682,1343,6.682,1344,6.682,1345,3.26,1346,6.682,1347,4.055,1348,3.037,1349,4.055,1350,3.53,1351,3.937,1352,4.055,1353,4.055,1354,5.751,1355,4.055,1356,5.097,1357,3.594,1358,4.055,1359,2.141,1360,4.055,1361,4.055,1362,4.055,1363,4.666,1364,3.594,1365,4.055,1366,4.055,1367,4.055,1368,5.751,1369,5.097,1370,5.097,1371,5.751,1372,2.49,1373,2.603,1374,3.594,1375,4.088,1376,3.691,1377,2.217,1378,4.055,1379,2.217,1380,2.072,1381,2.217,1382,3.064]],["title/modules/ColorBarModule.html",[381,0.651,1383,3.067]],["body/modules/ColorBarModule.html",[3,0.099,4,0.099,5,0.099,11,0.006,17,0.008,23,0.099,99,0.007,100,0.006,150,0.35,151,0.748,179,0.211,204,1.999,317,1.124,328,3.001,329,1.274,381,0.967,383,1.917,384,1.917,385,2.587,386,1.999,387,1.999,388,2.587,403,2.276,404,1.801,406,2.087,407,2.425,444,2.767,445,2.278,1331,3.833,1332,3.064,1333,5.108,1383,6.245,1384,5.993,1385,5.993,1386,5.993,1387,6.762,1388,6.762]],["title/components/ColorPickerLauncherComponent.html",[101,0.726,331,1.436]],["body/components/ColorPickerLauncherComponent.html",[3,0.105,4,0.069,5,0.069,8,0.702,11,0.004,12,0.366,13,0.759,17,0.008,19,0.526,23,0.069,47,1.543,48,1.559,53,0.814,55,1.333,65,1.418,89,3.06,99,0.005,100,0.006,101,1.361,102,1.483,103,1.807,104,1.451,105,1.516,106,1.584,107,1.361,114,2.137,117,3.151,118,2.347,120,2.1,122,2.147,128,1.178,129,1.357,134,4.293,136,1.306,148,1.549,150,0.261,151,0.521,169,1.483,173,1.483,177,1.483,179,0.147,194,3.06,224,2.157,233,2.596,271,1.584,272,1.822,281,1.391,290,1.361,296,2.193,298,3.256,300,1.965,301,2.193,302,2.073,317,0.782,318,1.967,319,2.054,320,1.584,321,2.611,322,1.584,323,1.584,324,1.483,325,1.584,326,1.483,327,1.584,328,1.483,329,1.748,330,1.584,331,2.444,332,2.98,333,1.584,334,1.483,335,1.584,336,1.483,337,1.584,338,1.483,339,1.584,340,1.483,341,2.435,342,1.584,343,1.483,344,2.147,345,1.483,346,1.549,347,1.584,348,1.483,349,1.967,350,2.147,351,1.483,352,1.584,353,1.483,354,1.584,355,1.483,356,1.483,357,1.584,358,1.483,359,1.584,360,1.483,361,2.147,362,1.483,363,1.584,364,1.483,365,1.584,366,1.483,367,1.584,368,1.516,369,1.584,370,1.483,371,1.584,372,1.483,373,1.584,374,1.483,375,1.483,376,1.584,377,1.483,378,1.483,379,1.584,380,1.584,476,0.749,517,3.829,723,2.596,724,2.663,732,4.09,734,2.944,745,2.411,746,3.156,1164,4.293,1302,4.09,1315,2.971,1331,4.098,1332,3.276,1370,5.648,1377,2.571,1389,5.866,1390,4.703,1391,5.171,1392,4.53,1393,5.648,1394,6.373,1395,6.373,1396,3.613,1397,3.613,1398,6.373,1399,7.229,1400,6.373,1401,4.869,1402,3.693,1403,4.703,1404,4.703,1405,5.648,1406,4.815,1407,3.256,1408,4.815,1409,2.666,1410,2.887,1411,4.703,1412,3.816]],["title/modules/ColorPickerLauncherModule.html",[381,0.651,1413,3.236]],["body/modules/ColorPickerLauncherModule.html",[3,0.096,4,0.096,5,0.096,11,0.005,17,0.008,23,0.096,99,0.007,100,0.005,150,0.359,151,0.728,179,0.205,204,1.944,224,2.103,317,1.093,329,1.487,331,2.991,332,2.728,381,0.94,383,1.864,384,1.864,385,2.557,386,1.944,387,1.944,388,2.557,403,2.239,404,1.751,406,2.437,407,2.385,444,2.721,445,2.215,1331,3.727,1332,2.98,1389,5.336,1413,6.653,1414,5.828,1415,5.828,1416,5.828,1417,5.828,1418,6.481,1419,6.576,1420,6.576,1421,5.336,1422,6.576]],["title/interfaces/ColorScheme.html",[0,0.282,1341,2.063]],["body/interfaces/ColorScheme.html",[0,0.427,2,1.661,3,0.101,4,0.101,5,0.101,11,0.006,12,0.537,13,0.968,16,1.377,17,0.008,18,1.628,19,0.774,23,0.101,53,1.14,99,0.007,100,0.006,1341,3.685,1351,5.257,1363,5.547,1373,5.726,1376,5.547,1423,6.909,1424,6.909]],["title/interfaces/ColorScheme-1.html",[0,0.235,253,1.121,1341,1.719]],["body/interfaces/ColorScheme-1.html",[0,0.366,2,1.016,3,0.086,4,0.062,5,0.062,8,0.631,11,0.004,12,0.531,13,0.705,16,1.207,17,0.008,18,1.394,19,0.759,23,0.131,36,1.394,47,0.763,51,1.765,53,1.165,69,1.598,82,1.826,99,0.005,100,0.004,127,1.914,131,1.937,219,1.496,224,2.368,236,1.456,239,2.759,252,2.012,253,2.577,329,1.287,530,1.765,736,1.56,1331,2.394,1332,1.914,1341,4.06,1351,5.419,1363,5.654,1373,5.852,1376,5.925,1407,2.158,1425,3.744,1426,4.224,1427,4.471,1428,5.246,1429,5.246,1430,5.246,1431,3.744,1432,3.744,1433,5.246,1434,3.744,1435,5.246,1436,3.744,1437,3.744,1438,3.744,1439,7.725,1440,7.725,1441,6.195,1442,7.725,1443,7.725,1444,5.246,1445,5.246,1446,3.744,1447,3.744,1448,3.744,1449,3.744,1450,3.744,1451,3.744,1452,6.055,1453,3.744,1454,3.744,1455,3.744,1456,5.246,1457,3.744,1458,3.744,1459,3.744,1460,6.055,1461,3.744,1462,3.744,1463,3.744,1464,3.744,1465,3.744,1466,5.246,1467,3.744,1468,3.744,1469,6.055,1470,3.744,1471,3.744,1472,3.744,1473,3.744,1474,3.744,1475,3.744,1476,3.744,1477,6.055,1478,3.744,1479,3.744,1480,3.744,1481,3.744,1482,3.744,1483,3.744,1484,3.744,1485,6.055,1486,3.744,1487,3.744,1488,3.744,1489,3.744,1490,3.744,1491,3.744,1492,3.744,1493,3.744,1494,6.055,1495,3.744,1496,3.744,1497,3.744,1498,3.744,1499,3.744,1500,3.744,1501,3.744,1502,3.744,1503,6.055,1504,3.744,1505,3.744,1506,3.744,1507,3.744,1508,3.744,1509,3.744,1510,3.744,1511,3.744,1512,6.055,1513,3.744,1514,3.744,1515,3.744,1516,3.744,1517,3.744,1518,3.744,1519,3.744,1520,2.711,1521,3.002,1522,2.158,1523,3.191,1524,3.744]],["title/components/ColorSchemeContentsComponent.html",[101,0.726,334,1.436]],["body/components/ColorSchemeContentsComponent.html",[3,0.079,4,0.041,5,0.041,8,0.656,11,0.002,12,0.342,13,0.83,15,0.853,16,0.805,17,0.008,18,1.595,19,0.652,20,1.967,23,0.041,24,1.836,33,1.836,47,1.191,48,1.289,49,1.96,53,0.93,55,0.801,65,1.058,68,2.039,69,3.046,87,1.05,93,1.356,99,0.004,100,0.004,101,1.05,102,0.891,103,1.245,104,0.872,105,0.91,106,0.951,107,0.818,114,1.594,117,3.027,118,2.254,120,1.447,122,1.48,127,0.954,128,0.707,129,1.834,131,1.724,135,3.564,136,0.784,144,3.011,145,1.724,148,0.93,150,0.249,151,0.313,159,3.632,169,0.891,173,0.891,177,0.891,179,0.088,183,0.737,197,1.056,199,1.122,205,1.68,213,3.564,219,0.915,224,2.516,233,1.789,238,2.401,239,2.048,247,1.171,252,0.652,253,1.594,268,2.904,269,2.175,270,2.588,271,1.816,272,1.094,275,1.212,277,2.253,279,2.986,281,1.948,282,2.588,284,2.553,286,3.395,290,0.818,293,2.754,299,1.356,300,2.754,301,1.317,302,2.904,305,1.664,306,1.491,308,1.601,309,1.491,317,0.469,318,1.356,319,1.416,320,0.951,321,2.049,322,0.951,323,0.951,324,0.891,325,0.951,326,0.891,327,0.951,328,0.891,329,1.645,330,0.951,331,0.891,332,0.91,333,0.951,334,1.918,335,0.951,336,0.891,337,0.951,338,0.891,339,0.951,340,0.891,341,1.816,342,0.951,343,0.891,344,1.48,345,0.891,346,0.93,347,0.951,348,0.891,349,1.356,350,1.48,351,0.891,352,0.951,353,0.891,354,0.951,355,0.891,356,0.891,357,0.951,358,0.891,359,0.951,360,0.891,361,1.48,362,0.891,363,0.951,364,0.891,365,0.951,366,0.891,367,0.951,368,0.91,369,0.951,370,0.891,371,0.951,372,0.891,373,0.951,374,0.891,375,0.891,376,0.951,377,0.891,378,0.891,379,0.951,380,0.951,455,1.628,470,1.776,472,1.702,474,1.65,476,1.336,498,1.551,517,3.893,565,1.622,723,1.789,724,1.836,734,2.196,736,2.781,745,2.301,746,1.789,987,2.134,1121,1.356,1133,4.049,1289,3.122,1292,3.564,1302,3.903,1315,2.836,1331,4.919,1332,3.932,1335,2.292,1336,2.819,1339,3.893,1341,3.3,1345,2.49,1350,2.697,1357,3.893,1359,4.319,1372,3.31,1375,2.007,1377,1.544,1379,1.544,1380,2.244,1381,2.401,1382,2.134,1401,4.097,1402,3.108,1407,2.244,1410,1.734,1520,3.46,1525,7.041,1526,2.824,1527,3.564,1528,4.393,1529,4.393,1530,4.935,1531,5.391,1532,4.393,1533,5.391,1534,5.391,1535,6.082,1536,6.082,1537,4.778,1538,4.374,1539,5.391,1540,5.391,1541,5.961,1542,2.824,1543,4.393,1544,2.824,1545,3.122,1546,1.991,1547,2.824,1548,3.319,1549,3.893,1550,2.824,1551,3.122,1552,2.824,1553,2.824,1554,6.124,1555,2.824,1556,4.393,1557,3.122,1558,3.319,1559,2.588,1560,2.244,1561,2.824,1562,2.824,1563,2.824,1564,4.595,1565,2.824,1566,2.824,1567,2.824,1568,2.824,1569,5.391,1570,2.824,1571,2.824,1572,2.824,1573,2.824,1574,5.391,1575,2.824,1576,2.824,1577,2.824,1578,2.824,1579,2.824,1580,2.824,1581,4.323,1582,2.824,1583,2.824,1584,6.082,1585,2.824,1586,2.824,1587,2.824,1588,2.824,1589,2.824,1590,2.824,1591,5.391,1592,2.503,1593,2.503,1594,2.503,1595,2.503,1596,2.503,1597,2.824,1598,2.824,1599,2.824,1600,2.824,1601,4.393,1602,2.007,1603,2.824,1604,2.824,1605,2.824,1606,1.734,1607,1.902,1608,3.122,1609,2.007,1610,2.959,1611,1.902,1612,2.292,1613,2.292,1614,1.601,1615,1.544,1616,4.393,1617,2.007,1618,2.503,1619,3.893,1620,2.292,1621,2.292,1622,2.824,1623,2.503]],["title/modules/ColorSchemeContentsModule.html",[381,0.651,1624,3.236]],["body/modules/ColorSchemeContentsModule.html",[3,0.093,4,0.093,5,0.093,11,0.005,17,0.008,23,0.093,99,0.006,100,0.005,150,0.371,151,0.708,179,0.199,204,1.892,224,2.228,317,1.064,329,1.463,334,2.981,381,0.915,383,1.814,384,1.814,385,2.527,386,1.892,387,1.892,388,2.527,396,5.815,403,2.202,404,1.704,406,2.397,407,2.346,426,5.192,427,4.549,428,5.192,444,2.677,445,2.156,1133,3.168,1331,3.627,1332,2.9,1333,4.834,1383,6.104,1525,5.192,1581,4.549,1624,6.694,1625,5.672,1626,5.672,1627,6.399,1628,5.672,1629,6.399,1630,6.885,1631,6.399,1632,5.672]],["title/components/ColorSchemePopupComponent.html",[101,0.726,336,1.436]],["body/components/ColorSchemePopupComponent.html",[3,0.093,4,0.055,5,0.055,8,0.56,11,0.003,12,0.292,13,0.925,17,0.008,19,0.641,20,1.418,23,0.055,47,1.346,48,1.418,49,1.753,53,0.817,55,1.064,65,1.255,87,1.02,99,0.005,100,0.005,101,1.187,102,1.183,103,1.542,104,1.158,105,1.209,106,1.264,107,1.086,114,1.892,117,3.111,118,2.311,120,1.792,122,1.833,127,1.39,128,0.94,129,1.781,136,1.042,145,1.542,148,1.236,150,0.262,151,0.415,169,1.183,173,1.183,177,1.183,179,0.117,183,0.979,197,1.308,205,1.335,215,2.973,219,0.923,224,2.505,233,2.216,247,0.815,248,2.973,269,3.473,274,2.127,277,2.674,283,1.654,286,2.983,290,1.086,296,2.536,299,1.802,317,0.624,318,1.679,319,2.738,320,1.264,321,2.364,322,1.264,323,1.264,324,1.183,325,1.264,326,1.183,327,1.264,328,1.183,329,1.638,330,1.264,331,1.183,332,1.209,333,1.264,334,1.183,335,1.264,336,2.213,337,1.264,338,1.183,339,1.264,340,1.183,341,2.156,342,1.264,343,1.183,344,1.833,345,1.183,346,1.236,347,1.264,348,1.183,349,1.679,350,1.833,351,1.183,352,1.264,353,1.183,354,1.264,355,1.183,356,1.183,357,1.264,358,1.183,359,1.264,360,1.183,361,1.833,362,1.183,363,1.264,364,1.183,365,1.264,366,1.183,367,1.264,368,1.209,369,1.264,370,1.183,371,1.264,372,1.183,373,1.264,374,1.183,375,1.183,376,1.264,377,1.183,378,1.183,379,1.264,380,1.264,455,1.933,474,0.94,476,0.598,493,5.192,494,1.802,498,0.736,503,3.705,517,3.617,522,3.083,544,1.802,555,1.981,565,2.592,578,1.528,606,2.398,649,2.211,723,2.216,724,2.273,730,3.491,734,2.606,740,5.295,742,4.109,744,2.528,745,2.42,746,2.858,824,2.408,1287,3.205,1292,4.414,1331,4.815,1332,3.849,1336,5.755,1341,2.899,1372,3.928,1401,4.31,1402,3.269,1410,2.304,1421,6.893,1520,4.106,1538,5.192,1545,5.521,1549,4.821,1551,3.866,1614,2.127,1633,3.752,1634,6.399,1635,5.44,1636,7.017,1637,8.365,1638,7.768,1639,4.821,1640,4.821,1641,3.752,1642,4.308,1643,3.339,1644,3.752,1645,4.821,1646,3.752,1647,2.835,1648,4.821,1649,3.326,1650,3.752,1651,4.821,1652,4.821,1653,4.988,1654,4.109,1655,5.44,1656,5.44,1657,3.752,1658,4.821,1659,3.752,1660,6.219,1661,5.44,1662,3.752,1663,3.752,1664,3.491,1665,3.491,1666,3.752,1667,4.109,1668,3.045,1669,3.326,1670,3.326,1671,3.326,1672,3.752,1673,4.821,1674,3.752,1675,3.752,1676,3.752,1677,5.44,1678,3.752,1679,3.752,1680,3.752,1681,3.045,1682,2.835]],["title/modules/ColorSchemePopupModule.html",[381,0.651,1418,3.236]],["body/modules/ColorSchemePopupModule.html",[3,0.096,4,0.096,5,0.096,11,0.005,17,0.008,23,0.096,99,0.007,100,0.005,150,0.359,151,0.728,179,0.205,204,1.944,224,2.392,317,1.093,329,1.487,336,2.991,381,0.94,383,1.864,384,1.864,385,2.557,386,1.944,387,1.944,388,2.557,403,2.239,404,1.751,406,2.437,407,2.385,444,2.721,445,2.215,1331,3.727,1332,2.98,1418,6.653,1421,5.336,1525,5.336,1624,6.481,1683,5.828,1684,5.828,1685,6.576,1686,5.828,1687,6.576,1688,6.576,1689,6.576]],["title/interfaces/ColorSchemeSelection.html",[0,0.282,1523,3.44]],["body/interfaces/ColorSchemeSelection.html",[0,0.371,2,1.035,3,0.101,4,0.063,5,0.063,8,0.643,11,0.004,12,0.61,13,0.714,16,0.896,17,0.008,18,1.406,19,0.741,23,0.131,36,1.014,51,2.506,53,1.139,69,1.628,82,1.328,99,0.005,100,0.004,127,1.921,131,1.22,219,1.501,224,2.409,236,2.066,239,3.48,252,2.02,253,2.587,329,1.406,736,2.215,1331,2.44,1332,1.95,1341,4.099,1351,5.295,1363,5.458,1373,5.724,1376,5.867,1407,3.064,1425,3.815,1427,3.252,1428,5.315,1429,5.315,1430,5.315,1431,3.815,1432,3.815,1433,5.315,1434,3.815,1435,5.315,1436,3.815,1437,3.815,1438,3.815,1439,7.754,1440,7.754,1441,6.219,1442,7.754,1443,7.754,1444,5.315,1445,5.315,1446,3.815,1447,3.815,1448,3.815,1449,3.815,1450,3.815,1451,3.815,1452,6.117,1453,3.815,1454,3.815,1455,3.815,1456,5.315,1457,3.815,1458,3.815,1459,3.815,1460,6.117,1461,3.815,1462,3.815,1463,3.815,1464,3.815,1465,3.815,1466,5.315,1467,3.815,1468,3.815,1469,6.117,1470,3.815,1471,3.815,1472,3.815,1473,3.815,1474,3.815,1475,3.815,1476,3.815,1477,6.117,1478,3.815,1479,3.815,1480,3.815,1481,3.815,1482,3.815,1483,3.815,1484,3.815,1485,6.117,1486,3.815,1487,3.815,1488,3.815,1489,3.815,1490,3.815,1491,3.815,1492,3.815,1493,3.815,1494,6.117,1495,3.815,1496,3.815,1497,3.815,1498,3.815,1499,3.815,1500,3.815,1501,3.815,1502,3.815,1503,6.117,1504,3.815,1505,3.815,1506,3.815,1507,3.815,1508,3.815,1509,3.815,1510,3.815,1511,3.815,1512,6.117,1513,3.815,1514,3.815,1515,3.815,1516,3.815,1517,3.815,1518,3.815,1519,3.815,1520,2.762,1521,4.262,1522,3.064,1523,4.53,1524,6.616]],["title/components/ContainerComponent.html",[101,0.726,338,1.436]],["body/components/ContainerComponent.html",[3,0.086,4,0.048,5,0.048,8,0.881,11,0.003,12,0.382,13,0.584,17,0.008,18,0.924,19,0.651,20,1.088,23,0.048,46,1.545,47,1.271,48,1.308,49,1.052,51,1.364,53,0.838,55,0.925,65,1.157,82,1.515,87,0.782,99,0.004,100,0.005,101,1.33,102,1.029,103,2.094,104,1.007,105,1.052,106,1.1,107,0.945,109,4.35,114,2.553,117,3.068,118,2.292,120,1.617,122,1.654,125,1.007,127,1.066,128,0.818,129,1.82,131,1.391,136,0.906,145,2.173,148,1.076,150,0.302,151,0.361,153,1.439,156,1.479,169,1.029,173,1.029,177,2.068,179,0.219,180,1.691,181,1.856,183,1.711,192,4.841,197,1.18,205,1.368,216,1.582,219,1.114,224,1.571,247,1.425,252,0.754,253,1.744,273,3.15,274,1.851,275,3.668,277,2.939,283,3.837,290,0.945,314,2.893,317,0.543,318,2.024,319,1.582,320,1.1,321,2.21,322,1.1,323,1.1,324,1.029,325,1.1,326,1.029,327,1.1,328,1.029,329,1.235,330,1.1,331,1.029,332,1.052,333,1.1,334,1.029,335,1.1,336,1.029,337,1.1,338,2.068,339,1.1,340,2.068,341,1.987,342,1.1,343,1.029,344,1.654,345,1.029,346,1.076,347,1.1,348,1.029,349,1.515,350,1.654,351,1.029,352,1.1,353,1.029,354,1.1,355,1.029,356,1.029,357,1.1,358,1.029,359,1.1,360,1.029,361,1.654,362,1.029,363,1.1,364,1.029,365,1.1,366,1.029,367,1.1,368,1.052,369,1.1,370,1.029,371,1.1,372,1.029,373,1.1,374,1.029,375,1.029,376,1.1,377,1.029,378,1.029,379,1.1,380,1.1,387,1.451,455,2.743,470,1.076,474,1.229,476,0.94,494,2.832,498,1.504,503,3.901,578,1.999,716,2.163,717,3.973,722,4.418,755,4.209,786,2.004,849,2.106,878,1.691,1345,2.782,1373,3.15,1396,2.782,1397,2.782,1409,1.851,1522,3.351,1546,2.972,1560,2.508,1615,1.784,1682,2.466,1690,3.265,1691,3.343,1692,4.35,1693,4.908,1694,3.903,1695,5.898,1696,4.908,1697,3.481,1698,5.898,1699,5.898,1700,5.79,1701,3.982,1702,3.718,1703,6.559,1704,3.708,1705,5.898,1706,3.982,1707,4.662,1708,4.662,1709,4.908,1710,2.508,1711,3.593,1712,3.489,1713,3.265,1714,4.908,1715,3.793,1716,3.265,1717,4.35,1718,4.908,1719,3.708,1720,3.708,1721,3.708,1722,3.265,1723,3.489,1724,4.908,1725,4.908,1726,3.265,1727,3.489,1728,3.265,1729,4.908,1730,3.114,1731,3.265,1732,3.306,1733,7.664,1734,4.908,1735,5.813,1736,3.265,1737,4.35,1738,6.559,1739,4.908,1740,3.265,1741,3.708,1742,4.35,1743,4.908,1744,3.265,1745,4.455,1746,3.708,1747,3.265,1748,3.265,1749,3.982,1750,3.265,1751,3.265,1752,3.265,1753,2.32,1754,3.265,1755,2.893,1756,2.893,1757,2.466,1758,2.649,1759,2.095,1760,3.265,1761,2.893,1762,4.35,1763,3.265,1764,2.893,1765,3.265,1766,3.265,1767,3.474,1768,3.474,1769,3.265,1770,2.32,1771,3.265,1772,2.32,1773,2.32,1774,3.265,1775,3.265,1776,3.265,1777,2.199,1778,2.649,1779,2.893,1780,2.649,1781,2.466,1782,3.265,1783,3.265,1784,4.35,1785,2.199,1786,3.982,1787,3.265,1788,3.265,1789,2.466,1790,3.265,1791,3.265,1792,3.265,1793,4.908,1794,4.908,1795,3.265,1796,3.265,1797,3.265,1798,3.265,1799,3.265,1800,3.265,1801,3.265,1802,2.199,1803,2.893,1804,2.893]],["title/components/ContentComponent.html",[101,0.726,340,1.436]],["body/components/ContentComponent.html",[3,0.085,4,0.046,5,0.046,8,0.967,11,0.003,12,0.374,13,0.573,17,0.008,18,1.378,19,0.534,20,1.684,23,0.046,46,1.638,47,1.257,48,1.295,49,1.026,53,0.888,55,0.902,65,1.139,82,2.257,87,0.925,99,0.004,100,0.005,101,1.276,102,1.003,103,1.365,104,1.486,105,1.026,106,1.072,107,0.921,114,2.644,117,3.061,118,2.288,120,1.586,125,0.982,127,1.7,128,0.797,129,1.79,131,1.365,136,0.883,141,1.913,145,2.154,148,1.048,150,0.285,151,0.352,153,1.402,169,1.003,173,1.003,177,2.193,179,0.217,180,1.659,181,1.821,183,1.982,192,4.097,193,3.065,197,1.157,199,2.762,205,1.526,216,1.026,219,1.29,224,1.547,247,1.406,248,2.631,252,1.605,253,0.941,271,1.072,273,2.042,277,2.706,281,2.368,282,2.836,283,3.787,284,3.465,290,0.921,293,3.737,306,2.542,310,2.82,312,2.143,317,0.529,318,1.998,319,1.552,320,1.072,321,2.181,322,1.072,323,1.072,324,1.003,325,1.072,326,1.003,327,1.072,328,1.003,329,1.219,330,1.072,331,1.003,332,1.026,333,1.072,334,1.003,335,1.072,336,1.003,337,1.072,338,1.003,339,1.072,340,2.042,341,1.956,342,1.072,343,1.003,344,1.622,345,1.003,346,1.048,347,1.072,348,1.003,349,1.486,350,1.622,351,1.003,352,1.072,353,1.003,354,1.072,355,1.003,356,1.003,357,1.072,358,1.003,359,1.072,360,1.003,361,1.622,362,1.003,363,1.072,364,1.003,365,1.072,366,1.003,367,1.072,368,1.026,369,1.072,370,1.003,371,1.072,372,1.003,373,1.072,374,1.003,375,1.003,376,1.072,377,1.003,378,1.003,379,1.072,380,1.072,404,0.848,455,2.618,470,1.048,474,1.454,476,0.767,498,1.364,503,3.863,565,2.568,716,2.122,763,1.875,765,3.066,849,2.065,878,1.659,1009,2.836,1121,1.528,1186,2.729,1301,1.875,1359,3.419,1375,2.262,1380,2.967,1396,2.729,1397,2.729,1409,1.804,1522,3.308,1546,2.181,1560,1.626,1615,1.739,1617,2.262,1682,2.404,1691,3.292,1694,3.621,1700,5.739,1701,3.906,1702,3.67,1704,3.637,1706,3.906,1707,4.602,1708,4.602,1710,2.459,1711,3.308,1712,3.422,1715,3.621,1719,3.637,1720,3.637,1721,3.637,1727,3.422,1742,4.267,1745,4.387,1746,3.637,1753,2.262,1757,2.404,1767,4.476,1768,4.31,1772,2.262,1773,2.262,1781,2.404,1785,2.143,1789,2.404,1802,2.143,1805,3.182,1806,4.814,1807,7.098,1808,4.712,1809,6.474,1810,4.814,1811,4.814,1812,4.814,1813,6.474,1814,5.807,1815,5.807,1816,4.814,1817,3.243,1818,3.182,1819,3.906,1820,3.182,1821,3.182,1822,4.814,1823,3.182,1824,3.182,1825,3.906,1826,3.182,1827,3.906,1828,3.906,1829,3.182,1830,3.182,1831,4.267,1832,5.807,1833,4.814,1834,5.092,1835,3.182,1836,3.182,1837,3.906,1838,2.82,1839,2.836,1840,2.82,1841,2.582,1842,3.182,1843,3.182,1844,3.182,1845,3.182,1846,3.182,1847,3.182,1848,3.182,1849,4.814,1850,3.182,1851,3.182,1852,3.182,1853,3.182,1854,3.182,1855,3.182,1856,2.582,1857,4.814,1858,3.182,1859,4.814,1860,1.875,1861,3.182,1862,2.042,1863,2.143,1864,3.182,1865,3.182,1866,3.182,1867,5.807,1868,3.182,1869,3.182,1870,4.814,1871,3.182,1872,3.182,1873,4.814,1874,3.182,1875,3.182,1876,3.182,1877,2.582,1878,3.182,1879,2.82,1880,2.404]],["title/interfaces/ContentContainerChanged.html",[0,0.282,1881,3.067]],["body/interfaces/ContentContainerChanged.html",[0,0.504,2,1.285,3,0.078,4,0.078,5,0.078,8,0.798,11,0.004,12,0.416,13,0.826,17,0.008,18,1.307,19,0.786,23,0.134,46,1.635,53,0.683,82,2.141,97,3.592,99,0.006,100,0.004,101,1.346,103,1.967,114,2.743,116,3.601,131,1.515,141,1.761,150,0.219,179,0.167,192,4.088,215,2.922,219,0.908,233,3.321,275,2.977,281,2.052,283,3.981,284,2.689,290,1.548,296,2.492,476,1.106,544,2.567,546,2.422,578,2.177,593,3.356,849,3.305,872,3.545,878,2.391,1009,3.149,1560,3.545,1694,3.813,1697,2.646,1710,2.731,1711,3.545,1715,4.592,1730,3.664,1785,3.601,1834,4.259,1860,3.149,1862,3.43,1881,5.189,1882,3.8,1883,5.101,1884,4.932,1885,4.932,1886,5.476,1887,3.8,1888,4.674,1889,3.8,1890,3.282,1891,4.803,1892,4.932,1893,4.038,1894,4.038,1895,4.674,1896,4.674,1897,4.088,1898,4.038,1899,4.038,1900,4.932,1901,3.43,1902,3.8]],["title/modules/CoreModule.html",[381,0.651,394,3.236]],["body/modules/CoreModule.html",[3,0.093,4,0.093,5,0.093,11,0.005,17,0.008,23,0.093,87,1.021,99,0.006,100,0.005,119,3.274,150,0.365,151,0.709,179,0.2,204,1.895,317,1.065,381,1.197,383,1.817,384,1.817,385,1.935,386,1.895,387,1.895,388,2.528,394,6.721,403,2.204,404,1.707,406,2.399,407,2.348,476,1.021,1770,4.555,1903,5.679,1904,5.679,1905,5.679,1906,6.721,1907,6.442,1908,6.442,1909,6.408,1910,7.775,1911,5.199,1912,5.526,1913,6.408,1914,6.408,1915,6.408,1916,4.841,1917,8.37,1918,6.408,1919,5.199,1920,6.408]],["title/interfaces/DataSource.html",[0,0.282,92,2.007]],["body/interfaces/DataSource.html",[0,0.539,1,2.431,2,1.144,3,0.069,4,0.069,5,0.069,6,2.51,7,3.206,8,1.086,9,3.975,10,4.938,11,0.007,12,0.37,14,3.206,15,2.531,16,1.418,17,0.008,18,1.613,19,0.719,20,1.424,21,3.206,22,2.098,23,0.122,24,3.039,25,2.804,26,2.995,27,3.312,28,1.767,29,2.698,30,3.206,31,3.206,32,2.804,33,1.989,34,3.529,35,3.054,36,1.713,37,3.785,38,3.054,39,3.054,40,2.922,41,2.804,42,2.922,43,3.054,44,2.804,45,3.975,46,1.713,47,1.407,48,0.842,49,1.534,50,3.392,51,1.989,52,2.601,53,0.994,54,2.922,55,1.821,56,2.698,57,2.804,58,3.054,59,3.944,60,3.642,61,3.785,62,3.785,63,4.123,64,4.465,65,1.261,66,3.282,67,3.642,68,1.8,69,1.8,70,2.513,71,2.698,72,2.513,73,2.974,74,2.698,75,4.123,76,2.922,77,2.922,78,3.642,79,3.642,80,2.601,81,3.054,82,1.469,83,2.219,84,2.601,85,2.922,86,3.054,87,1.241,88,3.206,89,2.285,90,2.922,91,4.123,92,2.832,93,3.739,94,3.785,95,3.247,96,3.785,97,2.995,98,4.123,99,0.005,100,0.004,129,1.548,197,1.545,217,3.054,474,1.821,498,1.427,799,4.853,801,4.853,802,5.213,824,4.123,1921,4.759,1922,4.759,1923,4.759]],["title/interfaces/DataSource-1.html",[0,0.235,92,1.672,253,1.121]],["body/interfaces/DataSource-1.html",[0,0.419,2,0.838,3,0.105,4,0.051,5,0.051,6,1.124,11,0.006,12,0.401,13,0.614,16,1.131,17,0.008,18,1.631,19,0.715,23,0.11,28,1.701,46,1.214,47,0.932,48,0.617,92,3.336,95,2.802,99,0.004,100,0.003,125,1.076,141,2.021,145,1.461,150,0.296,179,0.109,205,1.712,216,1.661,219,1.47,235,2.054,247,1.913,252,1.564,271,2.708,281,2.315,329,0.971,455,2.522,457,4.438,472,1.997,475,3.164,476,0.556,495,3.703,512,1.976,515,1.976,517,2.703,519,4.259,520,2.237,522,1.976,523,4.92,524,2.237,525,3.036,528,3.613,530,2.563,536,3.164,547,2.237,572,5.025,604,1.457,650,3.276,653,3.371,669,3.818,686,2.237,736,2.795,860,2.14,925,1.674,989,2.552,1129,3.308,1130,2.349,1131,2.14,1132,2.633,1133,2.552,1134,3.462,1135,4.564,1136,4.259,1137,3.936,1138,1.976,1139,2.237,1140,3.992,1141,4.159,1142,3.992,1143,4.159,1144,2.478,1145,2.478,1146,3.308,1147,4.438,1148,2.478,1149,2.478,1150,3.472,1151,4.131,1152,2.478,1153,3.308,1154,3.308,1155,4.359,1156,4.107,1157,3.164,1158,2.14,1159,2.14,1160,3.703,1161,5.139,1162,4.564,1163,3.664,1164,4.131,1165,2.478,1166,2.478,1167,2.478,1168,4.131,1169,1.976,1170,4.359,1171,4.359,1172,2.349,1173,2.349,1174,4.131,1175,4.348,1176,4.359,1177,2.237,1178,2.349,1179,2.478,1180,2.237,1181,4.816,1182,2.349,1183,5.501,1184,3.472,1185,3.472,1186,3.841,1187,2.237,1188,2.478,1189,2.478,1190,2.478,1191,2.478,1192,2.478,1193,2.478,1194,2.14,1195,4.359,1196,4.359,1197,4.359,1198,4.816,1199,5.139,1200,2.349,1201,2.478,1202,2.349,1203,3.664,1204,2.478,1205,2.478,1206,2.478,1207,2.349,1208,2.478,1209,2.478,1210,2.478,1211,2.349,1212,2.478,1213,2.478,1214,3.664,1215,2.478,1216,2.478,1217,2.349,1218,4.359,1219,2.478,1220,3.037,1221,2.478,1222,3.664,1223,2.237,1224,2.237,1225,2.478,1226,2.349,1227,2.478,1228,3.664,1229,2.349,1230,2.478,1231,2.478,1232,2.237,1233,3.308,1234,2.478,1235,2.478,1236,2.478,1237,2.478,1238,2.478,1239,2.349,1240,2.478,1241,1.976,1242,2.478,1243,2.478,1244,2.478,1245,2.478,1246,2.478,1247,2.349,1248,2.478,1249,2.349,1250,3.472,1251,2.478,1252,2.478,1253,2.478,1254,2.478,1255,2.349,1256,2.478,1257,2.478,1258,2.478,1259,2.478,1260,2.478,1261,2.237,1262,2.478,1263,2.478,1264,3.664,1265,2.478,1266,2.478]],["title/injectables/DataSourceService.html",[160,3.067,1924,1.722]],["body/injectables/DataSourceService.html",[1,2.149,3,0.061,4,0.099,5,0.061,8,1.162,9,3.225,11,0.006,12,0.327,13,0.702,16,1.018,17,0.008,19,0.698,23,0.061,24,2.466,26,1.961,27,2.403,28,0.914,36,1.901,47,1.335,50,2.221,53,0.944,65,1.158,68,1.591,69,2.232,70,4.26,72,4.598,73,3.137,87,1.177,91,3.786,92,3.004,94,3.476,95,3.126,96,3.476,97,2.751,98,3.786,99,0.005,100,0.007,118,1.032,119,2.149,129,1.829,137,5.005,150,0.318,151,0.465,152,4.227,153,1.854,160,3.974,162,6.189,179,0.131,180,2.033,181,2.232,183,1.928,194,2.833,197,1.419,217,3.786,219,0.714,236,2.033,238,4.41,247,1.69,381,0.601,455,2.437,470,2.246,474,1.851,476,0.94,498,1.709,578,1.713,593,1.67,650,3.089,653,1.961,792,5.177,799,4.457,801,4.457,802,4.787,803,4.787,808,5.879,810,4.457,824,4.374,840,4.787,843,3.622,844,4.787,849,2.532,878,2.033,950,5.582,1241,3.345,1320,2.989,1559,4.982,1642,2.582,1749,4.787,1890,4.536,1924,2.232,1925,2.478,1926,8.708,1927,4.206,1928,6.816,1929,7.389,1930,7.389,1931,5.9,1932,4.206,1933,4.206,1934,7.389,1935,4.206,1936,4.206,1937,4.206,1938,5.229,1939,7.389,1940,4.206,1941,5.9,1942,4.206,1943,3.727,1944,3.177,1945,3.727,1946,2.699,1947,5.9,1948,4.206,1949,4.206,1950,4.206,1951,7.389,1952,4.206,1953,6.816,1954,4.206,1955,5.9,1956,3.177,1957,4.206,1958,5.9,1959,3.727,1960,3.727,1961,4.206,1962,4.206,1963,3.727,1964,6.816,1965,4.206,1966,7.389,1967,4.206,1968,4.206,1969,4.206,1970,4.206]],["title/injectables/DataState.html",[167,3.067,1924,1.722]],["body/injectables/DataState.html",[0,0.187,1,1.544,3,0.044,4,0.099,5,0.044,8,1.071,9,3.447,10,5.118,11,0.006,12,0.36,13,0.551,17,0.008,18,0.569,19,0.592,20,1.865,23,0.092,24,2.635,26,1.409,36,2.127,46,0.712,53,0.916,60,1.713,65,0.908,66,2.365,67,1.713,71,4.065,72,4.604,73,3.155,74,1.713,76,1.856,77,1.856,78,1.713,79,1.713,87,1.143,99,0.004,100,0.003,118,0.742,125,2.874,127,1.805,129,1.856,131,2.033,133,3.118,137,4.314,141,2.654,142,3.756,145,0.857,146,2.149,150,0.323,151,0.335,152,1.451,153,1.332,154,1.496,155,2.453,156,1.37,160,4.247,162,2.149,163,2.284,166,3.497,167,3.118,179,0.094,180,1.595,181,1.751,183,2.059,197,1.113,205,1.315,216,2.405,219,0.786,233,1.886,237,1.544,247,1.558,249,2.971,253,0.894,309,1.596,349,0.933,455,2.651,470,0.996,472,2.18,474,1.702,476,1.227,483,4.827,494,3.028,495,4.208,498,1.58,515,1.713,545,2.53,604,1.935,736,3.22,756,2.365,843,3.871,874,4.763,878,2.173,989,1.496,1006,1.713,1186,3.189,1359,2.445,1407,2.365,1521,2.149,1643,1.856,1710,1.544,1758,4.565,1759,1.94,1767,1.781,1890,3.454,1901,1.94,1924,1.751,1925,1.781,1971,2.453,1972,4.103,1973,3.79,1974,4.987,1975,4.987,1976,4.987,1977,6.404,1978,6.025,1979,6.615,1980,6.025,1981,4.987,1982,4.987,1983,6.025,1984,6.025,1985,4.103,1986,2.679,1987,3.023,1988,4.103,1989,3.023,1990,6.615,1991,4.103,1992,3.023,1993,4.103,1994,3.023,1995,4.103,1996,3.454,1997,3.023,1998,6.355,1999,3.023,2000,5.097,2001,3.023,2002,3.023,2003,6.355,2004,4.103,2005,4.103,2006,3.023,2007,6.056,2008,4.103,2009,3.023,2010,6.247,2011,4.103,2012,3.023,2013,4.103,2014,4.103,2015,3.023,2016,4.103,2017,3.023,2018,3.023,2019,4.103,2020,4.987,2021,4.103,2022,4.103,2023,4.103,2024,4.987,2025,4.103,2026,4.987,2027,6.025,2028,4.987,2029,3.023,2030,4.103,2031,4.103,2032,3.023,2033,4.103,2034,3.023,2035,2.842,2036,1.856,2037,1.856,2038,1.544,2039,4.103,2040,4.103,2041,2.679,2042,2.679,2043,4.103,2044,2.453,2045,2.284,2046,2.679,2047,4.103,2048,2.679,2049,2.679,2050,2.679,2051,2.284,2052,2.284,2053,2.679,2054,2.149,2055,4.565,2056,5.417,2057,2.453,2058,2.453,2059,2.679,2060,1.856,2061,2.036,2062,2.679,2063,2.679,2064,2.679,2065,4.103,2066,2.679,2067,2.679,2068,2.679,2069,2.679,2070,2.453,2071,1.94,2072,2.679,2073,2.284,2074,2.679,2075,2.679,2076,2.679,2077,2.679,2078,2.453,2079,2.036,2080,2.036,2081,2.679,2082,2.679,2083,2.679,2084,2.679,2085,4.103,2086,2.679,2087,2.679,2088,2.679,2089,2.679,2090,2.679,2091,2.679,2092,2.679,2093,2.679,2094,2.679,2095,2.679,2096,2.679,2097,2.679,2098,2.679]],["title/interfaces/DataStateModel.html",[0,0.282,2078,3.695]],["body/interfaces/DataStateModel.html",[0,0.237,1,1.959,2,0.922,3,0.056,4,0.103,5,0.056,8,0.573,9,3.02,10,5.035,11,0.006,12,0.429,13,0.658,17,0.008,18,0.722,19,0.316,20,1.225,23,0.103,24,2.309,26,1.787,36,2.107,46,0.903,53,0.49,60,2.173,65,0.752,66,1.959,67,2.173,71,3.671,72,4.507,73,3.158,74,2.173,76,2.354,77,2.354,78,2.173,79,2.173,87,0.611,99,0.005,100,0.003,118,0.941,125,2.72,127,0.833,131,1.836,133,2.582,137,4.106,141,2.771,142,3.111,145,1.087,146,2.725,150,0.344,151,0.424,152,1.841,153,1.69,154,1.898,155,3.111,156,1.737,160,3.721,162,2.725,163,2.896,166,4.174,167,2.582,179,0.119,180,1.321,181,1.45,183,2.194,205,1.351,216,2.599,219,0.938,233,1.562,237,2.823,247,1.7,249,3.42,253,1.134,309,2.024,349,1.183,455,2.364,472,1.486,476,1.197,483,4.863,495,4.106,498,1.535,515,2.173,545,3.02,604,1.602,736,3.192,756,2.823,843,3.391,874,4.174,878,1.904,989,1.898,1006,2.173,1186,3.671,1359,2.024,1407,1.959,1521,2.725,1643,2.354,1710,1.959,1758,5.255,1759,2.46,1767,2.259,1890,3.976,1901,2.46,1924,2.09,1971,3.111,1972,3.398,1973,3.721,1974,3.398,1975,3.398,1976,3.398,1977,5.255,1978,4.896,1979,4.896,1980,4.896,1981,3.398,1982,3.398,1983,3.398,1984,4.896,1988,3.398,1990,6.282,1991,3.398,1993,3.398,1995,3.398,1996,3.391,1998,5.74,2000,4.604,2003,5.74,2004,3.398,2005,3.398,2007,5.751,2008,3.398,2010,5.751,2011,3.398,2013,3.398,2014,3.398,2016,3.398,2019,3.398,2020,4.896,2021,3.398,2022,3.398,2023,3.398,2024,4.896,2025,3.398,2026,4.896,2027,6.282,2028,4.896,2030,3.398,2031,3.398,2033,3.398,2035,3.391,2036,2.354,2037,2.354,2038,1.959,2039,4.896,2040,4.896,2041,3.398,2042,3.398,2043,4.896,2044,3.111,2045,2.896,2046,3.398,2047,4.896,2048,3.398,2049,3.398,2050,3.398,2051,2.896,2052,2.896,2053,3.398,2054,2.725,2055,5.255,2056,5.912,2057,3.111,2058,3.111,2059,3.398,2060,2.354,2061,2.582,2062,3.398,2063,3.398,2064,3.398,2065,4.896,2066,3.398,2067,3.398,2068,3.398,2069,3.398,2070,3.111,2071,2.46,2072,3.398,2073,2.896,2074,3.398,2075,3.398,2076,3.398,2077,3.398,2078,4.483,2079,2.582,2080,2.582,2081,3.398,2082,3.398,2083,3.398,2084,3.398,2085,4.896,2086,3.398,2087,3.398,2088,3.398,2089,3.398,2090,3.398,2091,3.398,2092,3.398,2093,3.398,2094,3.398,2095,3.398,2096,3.398,2097,3.398,2098,3.398]],["title/interfaces/DefaultIconDefinition.html",[0,0.282,2099,4.036]],["body/interfaces/DefaultIconDefinition.html",[0,0.37,2,1.438,3,0.087,4,0.087,5,0.087,8,0.894,11,0.005,12,0.465,13,0.887,16,1.4,17,0.008,19,0.701,23,0.109,33,3.958,34,4.176,51,3.115,53,1.167,68,3.372,73,2.015,87,1.456,99,0.006,100,0.005,127,1.3,182,4.519,219,1.016,236,2.568,259,3.391,288,5.298,318,2.79,827,4.519,1558,4.519,1643,3.672,2099,7.195,2100,4.854,2101,5.982,2102,5.982,2103,4.854,2104,7.453,2105,5.982,2106,5.982,2107,4.854,2108,5.302,2109,5.982,2110,5.982,2111,7.336,2112,5.63,2113,6.895,2114,6.42,2115,6.047,2116,5.982,2117,4.854,2118,4.854,2119,5.982,2120,5.982,2121,5.982,2122,5.982]],["title/interfaces/DrawerContainersChanged.html",[0,0.282,1888,3.067]],["body/interfaces/DrawerContainersChanged.html",[0,0.503,2,1.28,3,0.078,4,0.078,5,0.078,8,0.795,11,0.004,12,0.414,13,0.824,17,0.008,18,1.303,19,0.786,23,0.134,46,1.63,53,0.68,82,2.135,97,3.584,99,0.006,100,0.004,101,1.297,103,2.179,114,2.764,116,3.585,131,1.509,141,1.753,150,0.218,179,0.166,192,4.97,215,2.909,219,0.903,233,3.315,275,2.968,281,2.046,283,3.587,284,2.681,290,1.541,296,2.481,476,0.848,544,2.555,546,2.411,578,2.818,593,3.497,849,2.968,872,3.535,878,2.384,1009,4.076,1560,3.535,1694,3.805,1697,2.634,1710,2.719,1711,3.535,1715,4.59,1730,3.653,1785,3.585,1834,4.247,1860,3.135,1862,3.415,1881,4.66,1882,3.783,1883,5.095,1884,4.917,1885,4.917,1886,5.464,1887,3.783,1888,5.178,1889,4.917,1890,4.247,1891,4.795,1892,4.917,1893,4.02,1894,4.02,1895,4.66,1896,4.66,1897,4.076,1898,4.02,1899,4.02,1900,4.917,1901,3.415,1902,3.783]],["title/interfaces/DrawerInitialized.html",[0,0.282,1895,3.067]],["body/interfaces/DrawerInitialized.html",[0,0.507,2,1.301,3,0.079,4,0.079,5,0.079,8,0.808,11,0.005,12,0.421,13,0.833,17,0.008,18,1.317,19,0.786,23,0.134,46,1.648,53,0.691,82,2.158,97,3.613,99,0.006,100,0.005,101,1.235,103,1.983,114,2.759,116,3.646,131,1.534,141,1.783,150,0.221,179,0.169,192,4.121,215,2.958,219,0.919,233,3.156,275,3.001,281,2.068,283,3.611,284,2.71,290,1.567,296,2.523,476,0.862,544,2.599,546,2.452,578,2.204,593,3.078,849,3.001,872,3.573,878,2.41,1009,3.189,1560,3.573,1694,3.836,1697,2.679,1710,2.765,1711,3.573,1715,4.6,1730,3.693,1785,3.646,1834,4.294,1860,3.189,1862,3.473,1881,4.711,1882,3.847,1883,5.118,1884,4.971,1885,4.971,1886,5.508,1887,3.847,1888,4.711,1889,3.847,1890,3.323,1891,4.826,1892,4.971,1893,5.284,1894,5.284,1895,5.22,1896,4.711,1897,4.121,1898,4.089,1899,4.089,1900,4.971,1901,3.473,1902,3.847]],["title/modules/DrawerModule.html",[381,0.651,395,3.067]],["body/modules/DrawerModule.html",[3,0.088,4,0.088,5,0.088,11,0.005,17,0.008,23,0.088,99,0.006,100,0.005,136,1.673,150,0.378,151,0.667,177,2.959,179,0.188,204,1.782,290,1.745,317,1.002,338,2.959,340,2.959,377,2.959,381,0.862,383,1.709,384,1.709,385,2.461,386,1.782,387,2.214,388,2.461,395,6.401,403,2.123,404,1.605,406,1.86,407,2.262,408,4.093,409,3.079,410,6.637,411,5.322,412,6.637,413,5.342,437,4.891,438,4.891,1756,5.342,1757,4.554,1887,4.284,2123,5.342,2124,5.342,2125,5.342,2126,6.028,2127,5.322,2128,5.322,2129,6.028,2130,5.342,2131,5.342]],["title/interfaces/DrawerToggled.html",[0,0.282,1896,3.067]],["body/interfaces/DrawerToggled.html",[0,0.497,2,1.239,3,0.075,4,0.075,5,0.075,8,0.77,11,0.004,12,0.401,13,0.807,17,0.008,18,1.615,19,0.788,23,0.133,46,2.02,53,0.658,82,2.481,97,3.529,99,0.006,100,0.004,101,1.206,103,1.921,114,2.781,116,3.472,131,1.921,141,2.232,150,0.211,179,0.161,192,3.992,215,3.704,219,0.875,233,3.275,275,2.907,281,2.535,283,3.544,284,3.322,290,1.962,296,3.159,476,0.821,544,2.475,546,2.336,578,2.1,593,3.006,849,2.907,872,3.462,878,2.335,1009,3.037,1560,3.462,1694,3.747,1697,2.552,1710,3.462,1711,3.462,1715,4.57,1730,3.578,1785,3.472,1834,5.263,1860,3.037,1862,3.308,1881,4.564,1882,3.664,1883,4.92,1884,4.816,1885,4.816,1886,5.38,1887,3.664,1888,4.564,1889,3.664,1890,3.165,1891,4.736,1892,4.816,1893,3.894,1894,3.894,1895,4.564,1896,5.099,1897,5.05,1898,5.119,1899,5.119,1900,4.816,1901,3.308,1902,3.664]],["title/components/DropdownComponent.html",[101,0.726,343,1.436]],["body/components/DropdownComponent.html",[3,0.092,4,0.053,5,0.053,8,0.798,11,0.003,12,0.285,13,0.636,15,2.228,16,1.262,17,0.008,19,0.635,20,1.807,22,3.505,23,0.053,47,1.333,48,1.363,53,0.806,55,1.038,65,1.238,69,2.386,87,0.583,99,0.004,100,0.005,101,1.267,102,1.154,103,1.514,104,1.13,105,1.18,106,1.233,107,1.06,114,1.865,117,3.097,118,2.31,120,1.76,122,1.8,125,1.13,127,0.795,128,0.917,129,1.693,131,1.514,136,1.016,144,2.644,147,2.466,148,1.206,150,0.15,151,0.405,159,4.968,169,1.154,173,1.154,177,1.154,179,0.114,183,0.955,193,3.057,197,1.284,199,2.122,205,1.447,224,1.68,228,2.602,239,3.8,252,1.601,253,1.082,261,2.466,268,1.613,271,2.337,272,2.445,277,1.53,279,1.659,281,2.41,282,3.716,286,3.234,289,3.894,290,1.06,291,4.035,292,3.331,293,2.729,295,2.821,297,3.448,298,1.87,299,3.029,300,3.323,308,4.181,309,3.894,317,0.608,318,1.649,319,1.722,320,1.233,321,2.337,322,1.233,323,1.233,324,1.154,325,1.233,326,1.154,327,1.233,328,1.154,329,1.389,330,1.233,331,1.154,332,1.18,333,1.233,334,1.154,335,1.233,336,1.154,337,1.233,338,1.154,339,1.233,340,1.154,341,2.125,342,1.233,343,2.187,344,1.8,345,1.154,346,1.206,347,1.233,348,1.154,349,1.649,350,1.8,351,1.154,352,1.233,353,1.154,354,1.233,355,1.154,356,1.154,357,1.233,358,1.154,359,1.233,360,1.154,361,1.8,362,1.154,363,1.233,364,1.154,365,1.233,366,1.154,367,1.233,368,1.18,369,1.233,370,1.154,371,1.233,372,1.154,373,1.233,374,1.154,375,1.154,376,1.233,377,1.154,378,1.154,379,1.233,380,1.233,453,4.249,474,0.917,476,1.005,498,1.048,723,2.176,724,2.233,734,2.569,736,1.973,745,2.623,746,2.176,847,4.882,916,3.797,1108,3.428,1113,4.528,1276,5.119,1295,6.158,1307,2.97,1317,2.247,1318,2.247,1348,2.821,1350,3.279,1359,2.821,1377,2.001,1379,2.92,1380,2.729,1381,2.92,1527,6.614,1530,4.335,1545,3.797,1560,2.729,1606,2.247,1607,2.466,1608,3.797,1609,2.602,1610,4.249,1611,2.466,1614,2.075,1660,4.735,1819,5.627,1839,2.156,2132,3.66,2133,6.946,2134,5.591,2135,4.735,2136,6.308,2137,5.342,2138,6.936,2139,3.66,2140,4.735,2141,3.66,2142,5.342,2143,3.66,2144,3.66,2145,5.342,2146,3.66,2147,3.66,2148,6.147,2149,5.627,2150,3.66,2151,5.342,2152,3.66,2153,4.735,2154,5.342,2155,3.66,2156,4.735,2157,5.984,2158,2.765,2159,2.97,2160,4.735,2161,3.244,2162,2.97,2163,2.97,2164,2.765,2165,5.627,2166,2.765,2167,4.735,2168,2.97,2169,3.66,2170,3.244,2171,3.244,2172,3.66,2173,2.97,2174,3.66,2175,4.335,2176,2.075,2177,3.66,2178,3.244,2179,2.97,2180,3.244,2181,3.244,2182,3.244]],["title/modules/DropdownModule.html",[381,0.651,2183,3.236]],["body/modules/DropdownModule.html",[3,0.098,4,0.098,5,0.098,11,0.006,17,0.008,22,2.951,23,0.098,99,0.007,100,0.006,150,0.369,151,0.741,179,0.209,204,1.98,317,1.113,343,2.998,381,0.957,383,1.898,384,1.898,385,2.576,386,1.98,387,1.98,388,2.576,403,2.263,404,1.783,406,2.066,407,2.411,444,2.751,445,2.256,2183,6.577,2184,5.934,2185,5.934,2186,5.934,2187,6.696,2188,6.031,2189,5.058,2190,6.477,2191,5.433,2192,5.934]],["title/components/DualSliderComponent.html",[101,0.726,345,1.436]],["body/components/DualSliderComponent.html",[3,0.064,4,0.031,5,0.031,8,0.846,11,0.002,12,0.163,13,0.609,15,2.037,16,0.846,17,0.008,18,1.27,19,0.653,20,1.797,22,2.497,23,0.031,47,1.024,48,1.08,49,1.966,51,1.443,53,0.824,55,0.593,63,1.958,65,0.865,69,2.853,71,1.958,75,4.486,82,1.58,87,0.816,93,1.658,99,0.003,100,0.004,101,1.147,102,0.66,103,0.979,104,1.361,105,1.113,106,0.705,107,0.606,114,1.304,117,2.926,118,2.192,120,1.138,122,1.163,127,0.958,128,0.524,129,1.821,131,1.729,134,2.97,136,0.581,144,2.534,145,1.606,147,5.175,148,0.689,150,0.209,151,0.232,159,4.974,169,0.66,173,0.66,177,0.66,179,0.065,180,1.764,181,1.306,183,1.478,193,1.944,197,0.83,199,1.752,202,6.498,205,1.672,219,1.145,223,2.609,224,1.175,228,1.487,233,2.484,235,1.233,239,1.61,247,1.231,249,1.824,252,1.614,253,1.304,268,2.844,269,1.709,270,2.035,271,2.055,272,1.338,274,1.186,277,1.443,279,2.319,281,2.067,282,3.337,283,0.922,284,2.195,286,2.056,289,2.991,290,0.606,291,2.804,292,2.991,293,3.296,295,1.105,296,2.843,297,1.888,298,1.069,299,2.458,300,2.549,302,3.325,305,2.598,306,1.824,307,1.284,308,2.901,309,2.703,317,0.348,318,1.066,319,2.431,320,0.705,321,1.724,322,0.705,323,0.705,324,0.66,325,0.705,326,0.66,327,0.705,328,0.66,329,1.067,330,0.705,331,0.66,332,0.674,333,0.705,334,0.66,335,0.705,336,0.66,337,0.705,338,0.66,339,0.705,340,0.66,341,1.486,342,0.705,343,0.66,344,1.163,345,1.614,346,2.373,347,0.705,348,0.66,349,1.066,350,1.163,351,0.66,352,0.705,353,0.66,354,0.705,355,0.66,356,0.66,357,0.705,358,0.66,359,0.705,360,0.66,361,1.163,362,0.66,363,0.705,364,0.66,365,0.705,366,0.66,367,0.705,368,0.674,369,0.705,370,0.66,371,0.705,372,0.66,373,0.705,374,0.66,375,0.66,376,0.705,377,0.66,378,0.66,379,0.705,380,0.705,427,6.114,453,2.326,455,2.175,470,1.138,474,1.282,476,0.703,494,1.658,498,1.372,503,4.057,522,1.958,544,2.117,555,1.105,565,2.582,578,1.407,606,2.256,631,2.455,649,2.598,669,2.329,716,1.522,723,1.407,724,1.443,730,2.216,734,1.796,736,1.89,740,4.794,742,2.609,744,1.409,745,2.307,746,1.407,847,3.477,849,2.894,878,1.19,900,1.698,916,2.455,1108,2.216,1113,3.477,1121,1.658,1133,4.565,1276,3.578,1285,1.581,1289,2.455,1307,1.698,1309,1.854,1315,2.386,1317,2.12,1318,2.12,1321,1.854,1335,1.698,1345,1.958,1350,3.744,1359,3.691,1379,1.888,1380,1.764,1381,1.888,1407,2.615,1522,1.764,1530,2.802,1546,1.565,1560,1.069,1569,4.536,1574,3.908,1581,3.638,1592,3.061,1593,3.908,1594,1.854,1595,1.854,1596,1.854,1606,1.284,1607,1.409,1608,2.455,1609,1.487,1610,3.448,1611,1.409,1614,1.186,1639,3.061,1640,3.061,1642,1.284,1647,1.581,1648,4.536,1649,1.854,1651,3.061,1652,3.061,1653,2.455,1654,2.609,1664,2.216,1667,3.331,1668,1.698,1669,1.854,1670,1.854,1671,3.908,1681,2.802,1691,3.211,1702,2.901,1727,2.455,1767,2.035,1768,1.233,1804,3.061,1819,4.596,1839,1.233,1860,3.015,1890,3.142,2140,3.061,2148,3.061,2149,2.802,2153,3.061,2156,3.061,2157,2.802,2158,1.581,2159,2.802,2160,1.854,2161,1.854,2162,1.698,2163,1.698,2164,1.581,2165,4.153,2166,2.609,2167,3.061,2170,1.854,2171,1.854,2173,1.698,2178,3.061,2179,1.698,2180,1.854,2181,1.854,2193,7.624,2194,2.092,2195,3.908,2196,4.41,2197,3.454,2198,4.41,2199,6.744,2200,6.099,2201,6.744,2202,6.991,2203,6.451,2204,5.665,2205,5.118,2206,5.118,2207,3.061,2208,3.454,2209,3.454,2210,6.099,2211,5.118,2212,5.118,2213,4.41,2214,5.665,2215,2.092,2216,3.454,2217,3.061,2218,3.454,2219,2.455,2220,2.092,2221,3.454,2222,2.092,2223,2.092,2224,2.609,2225,3.454,2226,2.092,2227,2.092,2228,3.454,2229,3.454,2230,3.061,2231,3.454,2232,2.092,2233,2.609,2234,3.061,2235,4.536,2236,2.092,2237,3.454,2238,2.092,2239,3.454,2240,3.061,2241,2.092,2242,5.665,2243,2.092,2244,6.451,2245,5.118,2246,4.41,2247,3.454,2248,2.092,2249,2.092,2250,3.061,2251,2.092,2252,3.454,2253,2.092,2254,2.092,2255,2.092,2256,5.118,2257,3.061,2258,2.092,2259,3.061,2260,2.092,2261,2.092,2262,2.092,2263,3.454,2264,2.092,2265,2.802,2266,4.41,2267,3.454,2268,2.092,2269,2.092,2270,2.092,2271,3.454,2272,3.454,2273,1.698,2274,1.854,2275,2.092,2276,2.092,2277,2.092,2278,2.092,2279,3.454,2280,2.092,2281,2.092,2282,2.092,2283,2.092,2284,2.092,2285,2.092,2286,2.092,2287,2.092,2288,2.092,2289,3.454,2290,2.092,2291,3.454,2292,2.092,2293,3.454,2294,2.092,2295,2.092,2296,2.092,2297,2.092,2298,2.092,2299,2.092,2300,2.092,2301,2.092,2302,2.092,2303,2.092,2304,3.454,2305,4.41,2306,3.454,2307,4.41,2308,2.092,2309,2.092,2310,2.092,2311,5.118,2312,2.092,2313,2.092,2314,2.092,2315,3.454,2316,3.454,2317,3.454,2318,2.092,2319,2.092,2320,2.092,2321,2.092,2322,3.454,2323,2.092,2324,2.092,2325,2.092,2326,1.854,2327,2.092,2328,3.454,2329,1.698,2330,2.092,2331,2.092,2332,1.105,2333,2.092]],["title/modules/DualSliderModule.html",[381,0.651,396,2.922]],["body/modules/DualSliderModule.html",[3,0.094,4,0.094,5,0.094,11,0.005,17,0.008,22,2.855,23,0.094,99,0.007,100,0.005,150,0.379,151,0.717,179,0.202,204,1.915,317,1.077,345,2.986,346,2.134,381,0.926,383,1.836,384,1.836,385,2.54,386,1.915,387,1.915,388,2.54,396,5.899,403,2.219,404,1.725,406,1.999,407,2.364,427,4.604,444,2.697,445,2.182,1133,3.206,1581,4.604,1630,6.936,2188,5.912,2189,4.894,2190,6.35,2191,5.256,2193,5.741,2273,5.256,2274,5.741,2334,5.741,2335,5.741,2336,5.741,2337,6.478,2338,7.826,2339,7.826,2340,6.478]],["title/interfaces/ExtDeckProps.html",[0,0.282,1150,3.067]],["body/interfaces/ExtDeckProps.html",[0,0.42,2,0.843,3,0.075,4,0.051,5,0.051,6,1.129,11,0.006,12,0.402,13,0.616,16,1.203,17,0.008,18,1.633,19,0.678,23,0.111,28,1.704,46,1.219,47,0.935,48,0.62,87,0.824,92,3.194,95,2.808,99,0.004,100,0.003,125,1.081,141,2.027,145,1.467,150,0.296,179,0.109,205,1.715,216,1.668,219,1.472,235,2.065,247,1.915,252,1.568,271,2.712,281,2.319,329,0.974,455,2.525,457,4.448,472,2.005,475,3.776,476,0.558,495,3.713,512,1.986,515,1.986,517,2.711,519,4.743,520,2.249,522,3.487,523,4.926,524,2.249,525,3.045,528,3.624,530,2.571,536,3.176,547,2.249,572,5.034,604,2.162,650,3.283,653,3.378,669,3.826,686,2.249,736,2.801,860,2.151,925,1.683,989,2.561,1129,3.32,1130,2.361,1131,2.151,1132,2.643,1133,2.561,1134,3.47,1135,4.575,1136,4.269,1137,3.947,1138,1.986,1139,2.249,1140,3.048,1141,3.176,1142,3.048,1143,3.176,1144,2.491,1145,2.491,1146,3.32,1147,4.448,1148,2.491,1149,2.491,1150,4.143,1151,4.143,1152,2.491,1153,3.32,1154,3.32,1155,4.372,1156,4.113,1157,3.176,1158,2.151,1159,2.151,1160,3.713,1161,5.15,1162,4.575,1163,3.678,1164,4.143,1165,2.491,1166,2.491,1167,2.491,1168,4.143,1169,1.986,1170,4.372,1171,4.372,1172,2.361,1173,2.361,1174,4.143,1175,4.359,1176,4.372,1177,2.249,1178,2.361,1179,2.491,1180,2.249,1181,4.828,1182,2.361,1183,5.507,1184,3.485,1185,3.485,1186,3.85,1187,2.249,1188,2.491,1189,2.491,1190,2.491,1191,2.491,1192,2.491,1193,2.491,1194,2.151,1195,4.372,1196,4.372,1197,4.372,1198,4.828,1199,5.15,1200,2.361,1201,2.491,1202,2.361,1203,3.678,1204,2.491,1205,2.491,1206,2.491,1207,2.361,1208,2.491,1209,2.491,1210,2.491,1211,2.361,1212,2.491,1213,2.491,1214,3.678,1215,2.491,1216,2.491,1217,2.361,1218,4.372,1219,2.491,1220,3.048,1221,2.491,1222,3.678,1223,2.249,1224,2.249,1225,2.491,1226,2.361,1227,2.491,1228,3.678,1229,2.361,1230,2.491,1231,2.491,1232,2.249,1233,3.32,1234,2.491,1235,2.491,1236,2.491,1237,2.491,1238,2.491,1239,2.361,1240,2.491,1241,1.986,1242,2.491,1243,2.491,1244,2.491,1245,2.491,1246,2.491,1247,2.361,1248,2.491,1249,2.361,1250,3.485,1251,2.491,1252,2.491,1253,2.491,1254,2.491,1255,2.361,1256,2.491,1257,2.491,1258,2.491,1259,2.491,1260,2.491,1261,2.249,1262,2.491,1263,2.491,1264,3.678,1265,2.491,1266,2.491]],["title/interfaces/Filter.html",[0,0.282,73,1.534]],["body/interfaces/Filter.html",[0,0.525,1,2.343,2,1.102,3,0.067,4,0.067,5,0.067,6,1.478,7,3.089,8,1.066,9,3.424,10,4.347,11,0.007,12,0.356,13,0.746,14,3.089,15,2.503,16,1.425,17,0.008,18,1.728,19,0.753,20,1.389,21,3.089,22,2.021,23,0.121,24,2.618,25,2.701,26,2.921,27,3.27,28,1.744,29,2.599,30,3.089,31,3.089,32,2.701,33,1.916,34,3.475,35,2.943,36,1.681,37,3.69,38,2.943,39,2.943,40,2.815,41,2.701,42,2.815,43,2.943,44,2.701,45,4.191,46,1.999,47,1.289,48,0.812,49,1.478,50,3.308,51,1.916,52,2.506,53,0.586,54,2.815,55,1.776,56,2.599,57,2.701,58,2.943,59,4.38,60,4.551,61,4.518,62,4.518,63,4.347,64,4.707,65,1.4,66,3.645,67,4.551,68,1.734,69,2.369,70,3.308,71,3.551,72,3.308,73,2.583,74,4.045,75,4.921,76,4.707,77,4.707,78,4.698,79,4.698,80,3.424,81,4.921,82,1.933,83,2.921,84,3.424,85,4.707,86,4.02,87,1.376,88,4.22,89,3.008,90,4.707,91,2.943,92,2.021,93,3.008,94,2.701,95,2.765,96,2.701,97,2.138,98,2.943,99,0.005,100,0.004]],["title/components/FiltersContentComponent.html",[101,0.726,348,1.436]],["body/components/FiltersContentComponent.html",[3,0.097,4,0.059,5,0.059,8,0.854,11,0.003,12,0.313,16,0.994,17,0.008,19,0.632,20,1.697,23,0.059,46,1.348,47,1.383,48,1.408,49,2.467,53,0.85,55,1.141,65,1.306,68,2.163,70,3.02,73,2.94,87,0.641,99,0.005,100,0.006,101,1.22,102,1.269,103,2.054,104,1.242,105,1.297,106,1.356,107,1.165,114,1.968,117,3.119,118,2.328,120,1.885,122,1.927,128,1.008,129,1.693,136,1.117,144,3.937,148,1.326,150,0.165,151,0.445,169,1.269,173,1.269,177,1.269,179,0.125,183,1.492,193,1.774,197,1.375,205,1.511,224,1.772,233,2.33,236,1.971,268,2.933,269,1.992,274,4.508,275,1.727,279,2.592,281,2.143,283,2.521,284,2.579,289,2.125,290,1.165,295,3.514,296,3.378,298,2.922,299,3.479,300,2.781,301,1.876,302,1.774,303,3.853,317,0.669,318,1.765,319,1.844,320,1.356,321,2.441,322,1.356,323,1.356,324,1.269,325,1.356,326,1.269,327,1.356,328,1.269,329,1.442,330,1.356,331,1.269,332,1.297,333,1.356,334,1.269,335,1.356,336,1.269,337,1.356,338,1.269,339,1.356,340,1.269,341,2.242,342,1.356,343,1.269,344,1.927,345,1.269,346,1.885,347,1.356,348,2.285,349,2.882,350,1.927,351,1.269,352,1.356,353,1.269,354,1.356,355,1.269,356,1.269,357,1.356,358,1.269,359,1.356,360,1.269,361,1.927,362,1.269,363,1.356,364,1.269,365,1.356,366,1.269,367,1.356,368,1.297,369,1.356,370,1.269,371,1.356,372,1.269,373,1.356,374,1.269,375,1.269,376,1.356,377,1.269,378,1.269,379,1.356,380,1.356,474,1.008,476,1.155,498,1.122,593,2.643,669,4.32,723,2.33,724,2.39,729,4.641,730,3.671,734,3.118,736,2.113,745,2.517,746,2.71,1113,3.511,1133,1.992,1156,2.922,1302,3.671,1319,2.861,1336,3.671,1350,3.511,1359,3.02,1377,2.2,1379,2.2,1380,2.056,1381,2.2,1522,2.922,1564,4.321,1606,2.471,1607,2.711,1610,2.711,1611,2.711,1612,3.266,1623,5.07,1664,3.671,1808,5.399,1985,5.07,2133,3.266,2163,3.266,2182,3.567,2341,6.181,2342,6.639,2343,3.567,2344,5.07,2345,5.07,2346,7.246,2347,5.898,2348,5.898,2349,3.567,2350,4.025,2351,3.567,2352,3.567,2353,5.07,2354,4.025,2355,7.246,2356,5.72,2357,4.025,2358,5.72,2359,7.246,2360,5.07,2361,4.025,2362,4.025,2363,5.72,2364,4.025,2365,4.025,2366,4.025,2367,4.025,2368,4.025,2369,4.025,2370,3.567,2371,5.72]],["title/modules/FiltersContentModule.html",[381,0.651,2372,3.236]],["body/modules/FiltersContentModule.html",[3,0.093,4,0.093,5,0.093,11,0.005,17,0.008,23,0.093,99,0.006,100,0.005,150,0.371,151,0.708,179,0.199,204,1.892,317,1.064,348,2.981,349,1.975,381,0.915,383,1.814,384,1.814,385,2.527,386,1.892,387,1.892,388,2.527,396,5.815,403,2.202,404,1.704,406,2.397,407,2.346,426,5.192,427,4.549,428,5.192,444,2.677,445,2.156,1324,6.44,2183,6.44,2341,4.834,2342,5.192,2372,6.742,2373,5.672,2374,5.672,2375,6.399,2376,5.672,2377,5.672,2378,6.399,2379,6.399,2380,5.672]],["title/components/FiltersPopoverComponent.html",[101,0.726,169,1.436]],["body/components/FiltersPopoverComponent.html",[3,0.094,4,0.056,5,0.056,8,0.823,11,0.003,12,0.503,13,0.656,17,0.008,19,0.584,20,0.847,23,0.056,46,1.299,47,1.356,48,1.384,51,2.958,53,0.826,55,1.083,65,1.269,68,2.677,73,2.384,82,2.184,87,0.609,99,0.005,100,0.005,101,1.195,102,1.205,103,1.563,104,1.179,105,2.084,106,1.287,107,1.106,114,2.218,117,3.107,118,2.314,120,1.816,122,1.857,127,0.83,128,1.772,129,1.715,133,4.767,136,1.061,144,3.503,148,1.259,150,0.156,151,0.423,169,2.232,171,6.231,173,1.205,177,1.205,179,0.119,183,0.997,193,1.684,197,1.325,199,2.189,202,6.525,205,1.63,216,1.776,223,4.164,224,1.722,236,1.899,238,3.013,252,1.272,253,1.13,271,1.857,275,2.365,277,3.136,279,1.732,281,2.311,282,3.809,285,2.018,289,2.91,290,1.106,295,2.018,297,3.013,298,1.952,299,3.104,300,2.958,301,1.782,302,1.684,303,2.574,317,0.635,318,1.701,319,1.776,320,1.287,321,2.384,322,1.287,323,1.287,324,1.205,325,1.287,326,1.205,327,1.287,328,1.205,329,1.333,330,1.287,331,1.205,332,1.232,333,1.287,334,1.205,335,1.287,336,1.205,337,1.287,338,1.205,339,1.287,340,1.205,341,2.178,342,1.287,343,1.205,344,1.857,345,1.205,346,1.259,347,1.287,348,1.205,349,2.886,350,1.857,351,1.205,352,1.287,353,1.205,354,1.287,355,1.205,356,1.205,357,1.287,358,1.205,359,1.287,360,1.205,361,1.857,362,1.205,363,1.287,364,1.205,365,1.287,366,1.205,367,1.287,368,1.232,369,1.287,370,1.205,371,1.287,372,1.205,373,1.287,374,1.205,375,1.205,376,1.287,377,1.205,378,1.205,379,1.287,380,1.287,474,0.957,476,0.609,498,1.269,565,2.388,723,2.245,724,2.303,729,4.472,730,3.537,731,4.885,732,3.537,733,4.885,734,2.633,736,2.614,745,2.445,746,2.245,786,3.969,916,3.918,1100,2.716,1113,4.606,1156,3.833,1301,3.247,1336,4.815,1379,2.089,1380,1.952,1381,2.089,1441,2.716,1522,2.816,1564,4.164,1606,5.158,1607,2.574,1608,3.918,1609,2.716,1610,2.574,1611,2.574,1614,2.166,1615,3.013,1643,3.384,1665,3.537,1681,3.101,1839,4.747,1877,5.246,1897,3.809,2166,4.884,2175,3.101,2341,6.231,2347,4.885,2348,5.73,2360,3.387,2381,3.387,2382,5.73,2383,4.885,2384,6.465,2385,7.077,2386,7.077,2387,6.465,2388,3.822,2389,5.742,2390,4.885,2391,3.822,2392,3.822,2393,5.512,2394,3.822,2395,6.272,2396,3.822,2397,3.822,2398,3.822,2399,6.465,2400,3.822,2401,3.822,2402,4.885,2403,3.822,2404,3.822,2405,3.822,2406,3.822,2407,3.822,2408,5.512,2409,3.822,2410,3.387]],["title/modules/FiltersPopoverModule.html",[381,0.651,397,3.236]],["body/modules/FiltersPopoverModule.html",[3,0.096,4,0.096,5,0.096,11,0.005,17,0.008,23,0.096,99,0.007,100,0.005,150,0.367,151,0.728,169,2.991,171,4.968,172,5.336,179,0.205,204,1.944,317,1.093,349,2.437,381,0.94,383,1.864,384,1.864,385,2.557,386,1.944,387,1.944,388,2.557,397,6.653,403,2.239,404,1.751,406,2.437,407,2.385,408,4.317,409,3.36,444,2.721,445,2.215,2341,4.968,2342,5.336,2372,6.481,2411,5.828,2412,5.828,2413,6.576,2414,5.828,2415,5.828,2416,5.336]],["title/classes/FlatNode.html",[179,0.142,2417,4.036]],["body/classes/FlatNode.html",[3,0.079,4,0.079,5,0.079,8,1.161,11,0.005,12,0.424,15,2.567,16,1.049,17,0.008,18,1.639,19,0.678,23,0.079,46,1.655,53,0.897,65,1.778,82,2.168,87,1.119,99,0.006,100,0.005,101,1.119,107,2.597,125,1.682,129,1.748,131,1.992,150,0.223,179,0.17,180,2.83,181,2.657,183,2.143,184,4.117,194,3.373,197,1.689,236,2.999,247,1.689,252,1.258,449,2.784,470,1.795,474,1.759,476,1.354,498,1.611,508,4.311,606,3.427,1345,3.982,1356,6.226,2217,6.226,2257,6.226,2417,7.279,2418,8.5,2419,4.83,2420,6.891,2421,5.449,2422,4.524,2423,7.607,2424,5.449,2425,9.14,2426,6.847,2427,7.025,2428,5.449,2429,5.449,2430,5.449,2431,7.025,2432,5.449,2433,5.449,2434,7.025,2435,4.508,2436,5.449,2437,5.449,2438,5.449]],["title/components/HeaderComponent.html",[101,0.726,351,1.436]],["body/components/HeaderComponent.html",[3,0.117,4,0.061,5,0.061,8,0.621,11,0.003,12,0.323,16,0.874,17,0.008,19,0.639,23,0.061,33,1.736,34,2.651,36,1.378,37,4.734,46,1.378,47,1.4,48,1.422,49,2.369,53,0.747,55,1.178,60,3.316,63,3.316,64,3.591,65,1.329,73,2.61,93,2.809,99,0.005,100,0.006,101,1.079,102,1.31,103,1.658,104,1.282,105,1.339,106,1.4,107,1.203,113,5.852,114,2.002,117,3.126,118,2.333,120,1.927,122,1.971,128,1.04,129,1.649,136,1.153,148,1.369,150,0.17,151,0.46,169,1.31,173,1.31,177,1.31,179,0.129,191,4.746,199,1.65,224,1.803,252,1.35,253,1.228,268,3.414,271,2.61,272,1.61,276,3.138,280,2.798,281,2.291,283,1.831,284,2.267,285,3.575,286,2.727,289,2.194,290,1.203,291,2.056,292,3.089,293,2.122,294,6.286,296,3.612,299,1.995,300,2.83,301,1.937,302,1.831,305,3.446,306,3.575,307,2.55,308,2.355,309,2.194,317,0.691,318,1.805,319,1.885,320,1.4,321,2.476,322,1.4,323,1.4,324,1.31,325,1.4,326,1.31,327,1.4,328,1.31,329,1.459,330,1.4,331,1.31,332,1.339,333,1.4,334,1.31,335,1.4,336,1.31,337,1.4,338,1.31,339,1.4,340,1.31,341,2.281,342,1.4,343,1.31,344,1.971,345,1.31,346,1.369,347,1.4,348,1.31,349,2.391,350,1.971,351,2.318,352,1.4,353,1.31,354,1.4,355,1.31,356,1.31,357,1.4,358,1.31,359,1.4,360,1.31,361,1.971,362,1.31,363,1.4,364,1.31,365,1.4,366,1.31,367,1.4,368,1.339,369,1.4,370,1.31,371,1.4,372,1.31,373,1.4,374,1.31,375,1.31,376,1.4,377,1.31,378,1.31,379,1.4,380,1.4,476,0.932,723,2.383,724,2.445,734,3.155,736,2.714,745,2.78,746,2.758,881,4.156,882,4.345,883,5.494,1156,2.989,1285,3.138,1287,3.446,1302,3.754,1348,3.089,1377,2.271,1379,2.271,1380,2.122,1381,2.271,1396,3.316,1397,3.316,1409,2.355,1521,5.224,1564,4.419,1664,5.157,1764,5.185,1839,2.447,2118,5.963,2164,3.138,2176,2.355,2332,2.194,2439,4.154,2440,7.349,2441,5.185,2442,5.185,2443,6.771,2444,5.85,2445,6.771,2446,6.771,2447,6.771,2448,4.154,2449,4.154,2450,4.154,2451,5.85,2452,4.154,2453,4.154,2454,7.747,2455,5.85,2456,5.85,2457,5.85,2458,5.85,2459,5.85,2460,5.185,2461,5.85,2462,5.85,2463,3.682,2464,4.154,2465,3.371,2466,4.154,2467,4.154,2468,3.682,2469,3.682,2470,4.154,2471,4.154,2472,4.154,2473,4.154,2474,4.154,2475,4.154,2476,4.154]],["title/modules/HeaderModule.html",[381,0.651,1906,3.236]],["body/modules/HeaderModule.html",[3,0.094,4,0.094,5,0.094,11,0.005,17,0.008,23,0.094,99,0.006,100,0.005,150,0.379,151,0.713,179,0.201,204,1.905,317,1.071,351,2.984,381,0.921,383,1.826,384,1.826,385,2.534,386,1.905,387,1.905,388,2.534,403,2.211,404,1.716,406,2.407,407,2.356,408,4.264,409,3.292,419,5.71,444,2.688,445,2.17,1906,6.631,2477,5.71,2478,5.71,2479,5.71,2480,5.71,2481,6.451,2482,6.443,2483,6.913,2484,5.71,2485,7.8,2486,6.443,2487,6.913,2488,5.71,2489,5.227,2490,6.443,2491,6.443]],["title/classes/HuBMAPEntity.html",[179,0.142,2492,4.036]],["body/classes/HuBMAPEntity.html",[3,0.026,4,0.026,5,0.026,6,2.821,8,0.775,10,1.015,11,0.001,12,0.236,13,0.361,15,1.814,16,1.385,17,0.008,18,1.189,19,0.738,20,0.397,22,0.789,23,0.058,27,0.729,28,1.56,29,1.015,32,1.055,34,3.085,35,2.531,36,1.946,38,1.149,39,1.149,40,2.421,41,2.323,42,1.099,44,1.055,46,0.714,47,0.324,48,0.537,49,0.577,52,3.829,53,0.504,54,4.039,55,1.118,59,1.861,60,4.07,61,3.321,62,3.321,63,4.157,64,4.039,67,2.631,68,0.677,78,3.196,83,2.945,84,2.537,87,1.116,95,0.694,99,0.003,100,0.001,118,0.439,127,0.389,128,0.759,129,1.857,145,0.86,150,0.231,154,1.501,179,0.056,183,1.211,189,1.587,193,1.336,197,0.729,199,1.204,216,1.271,217,4.053,219,1.421,236,1.789,237,2.88,247,0.857,252,1.198,253,2.279,272,1.798,283,0.789,293,0.915,449,0.915,470,0.59,474,0.448,476,0.898,497,3.506,498,0.774,508,0.811,565,0.661,578,2.296,593,1.204,597,4.254,606,1.336,620,1.206,650,0.811,653,1.839,669,1.601,681,1.353,726,1.353,736,0.661,796,1.273,797,3.187,806,2.734,816,2.537,818,2.46,820,3.2,824,2.531,850,1.149,856,1.453,860,1.861,861,1.453,876,1.353,878,0.617,880,3.506,881,4.3,882,1.149,894,1.353,977,1.273,1052,3.69,1068,2.291,1074,1.453,1081,1.453,1084,1.453,1100,3.298,1121,3.032,1134,0.915,1156,0.915,1241,1.015,1269,1.587,1297,1.206,1427,1.353,1557,1.273,1642,1.099,1735,4.601,2108,2.687,2492,2.687,2493,7.758,2494,1.587,2495,3.032,2496,3.032,2497,2.687,2498,5.191,2499,4.641,2500,6.807,2501,3.943,2502,4.641,2503,3.943,2504,7.005,2505,3.943,2506,6.006,2507,3.943,2508,5.637,2509,5.637,2510,5.125,2511,3.943,2512,6.807,2513,3.943,2514,3.943,2515,4.641,2516,7.208,2517,6.58,2518,3.032,2519,1.791,2520,1.791,2521,1.791,2522,3.032,2523,1.791,2524,1.791,2525,1.791,2526,1.791,2527,1.791,2528,1.791,2529,1.791,2530,4.212,2531,3.943,2532,1.791,2533,1.791,2534,1.791,2535,1.791,2536,1.791,2537,1.791,2538,1.791,2539,1.791,2540,1.791,2541,1.791,2542,1.791,2543,1.791,2544,1.791,2545,1.791,2546,1.791,2547,1.791,2548,4.873,2549,1.791,2550,6.006,2551,1.791,2552,1.791,2553,1.791,2554,2.042,2555,3.032,2556,2.155,2557,1.791,2558,1.587,2559,1.353,2560,1.791,2561,1.099,2562,1.791,2563,3.032,2564,1.791,2565,1.791,2566,3.2,2567,1.587,2568,3.943,2569,1.791,2570,1.791,2571,1.791,2572,1.791,2573,8.199,2574,6.316,2575,4.641,2576,6.316,2577,6.006,2578,6.316,2579,6.316,2580,6.316,2581,4.113,2582,5.191,2583,5.191,2584,5.191,2585,5.191,2586,6.316,2587,8.724,2588,3.765,2589,4.641,2590,6.316,2591,4.113,2592,4.641,2593,4.641,2594,4.641,2595,7.18,2596,6.316,2597,6.316,2598,4.641,2599,6.316,2600,4.113,2601,6.316,2602,4.641,2603,4.641,2604,4.113,2605,1.791,2606,1.791,2607,1.791,2608,6.316,2609,1.791,2610,3.032,2611,1.791,2612,3.032,2613,5.637,2614,4.641,2615,4.641,2616,1.791,2617,1.791,2618,1.791,2619,1.791,2620,1.791,2621,1.791,2622,3.943,2623,1.791,2624,3.032,2625,3.032,2626,3.032,2627,1.791,2628,1.791,2629,1.791,2630,3.032,2631,2.687,2632,1.791,2633,1.791,2634,1.791,2635,1.791,2636,1.791,2637,1.791,2638,1.791,2639,3.032,2640,1.791,2641,3.032,2642,7.595,2643,1.791,2644,3.032,2645,3.032,2646,3.032,2647,3.032,2648,1.791,2649,3.032,2650,1.791,2651,1.791,2652,3.032,2653,1.791,2654,3.032,2655,3.032,2656,1.791,2657,3.032,2658,1.791,2659,3.032,2660,1.791,2661,3.032,2662,1.791,2663,3.032,2664,1.791,2665,3.032,2666,1.791,2667,3.032,2668,1.791,2669,1.791,2670,1.791,2671,1.791,2672,1.791,2673,1.791,2674,3.032,2675,3.032,2676,1.791,2677,1.791,2678,1.791,2679,1.791,2680,1.206,2681,1.791,2682,1.791,2683,1.791,2684,1.791,2685,1.791,2686,1.791,2687,1.791,2688,1.791,2689,3.032,2690,1.791,2691,1.791,2692,1.791,2693,1.791,2694,1.791,2695,1.791,2696,1.791,2697,1.791,2698,3.032,2699,1.791,2700,3.943,2701,1.791,2702,4.641,2703,1.791,2704,4.641,2705,1.791,2706,3.032,2707,3.032,2708,3.032,2709,1.791,2710,3.032,2711,1.791,2712,1.791,2713,3.943,2714,1.791,2715,1.791,2716,1.791,2717,3.032,2718,1.791,2719,1.791,2720,1.791,2721,1.791,2722,1.791,2723,1.791,2724,6.316,2725,1.791,2726,1.791,2727,1.791,2728,3.032,2729,1.587,2730,3.032,2731,1.791,2732,1.791,2733,1.791,2734,3.032,2735,3.032,2736,1.791,2737,3.032,2738,3.032,2739,3.943,2740,1.791,2741,1.791,2742,3.943,2743,1.791,2744,1.791,2745,1.791,2746,3.943,2747,1.791,2748,1.791,2749,1.791,2750,3.032,2751,1.791,2752,1.791,2753,1.791,2754,1.791,2755,3.943,2756,1.791,2757,1.791,2758,1.791,2759,5.191,2760,1.791,2761,1.791,2762,1.587,2763,1.791,2764,1.791,2765,1.791,2766,1.791,2767,4.113,2768,1.791,2769,1.791,2770,1.453,2771,1.273,2772,1.791,2773,1.791,2774,1.791,2775,1.791,2776,1.791,2777,1.791,2778,1.791,2779,1.791,2780,1.791,2781,1.791,2782,1.791,2783,1.791,2784,1.791,2785,3.032,2786,1.791,2787,1.791,2788,3.943,2789,1.791,2790,1.791,2791,1.791,2792,3.032,2793,1.791,2794,1.791,2795,1.791,2796,3.032,2797,3.032,2798,1.791,2799,1.791,2800,1.791,2801,1.791,2802,1.791,2803,1.791,2804,1.791,2805,6.316,2806,5.637,2807,1.791,2808,6.006,2809,3.032,2810,1.791,2811,3.032,2812,1.791,2813,1.791,2814,1.791,2815,1.791,2816,1.791,2817,1.791,2818,4.641,2819,1.791,2820,1.791,2821,4.641,2822,1.791,2823,3.032,2824,1.791,2825,1.453,2826,1.791,2827,1.791,2828,1.791,2829,1.791,2830,1.791,2831,1.791,2832,1.791,2833,1.791,2834,1.791,2835,3.032,2836,1.791,2837,1.791,2838,1.587,2839,1.791,2840,1.791,2841,1.791,2842,1.791,2843,1.791,2844,1.791,2845,1.791,2846,1.791,2847,1.791,2848,1.273,2849,1.791,2850,1.273,2851,1.791,2852,3.032,2853,1.791,2854,1.791,2855,1.791,2856,1.791,2857,1.791,2858,1.791,2859,1.791,2860,1.791,2861,1.791,2862,1.791,2863,1.791,2864,1.791,2865,1.791,2866,1.791,2867,1.791,2868,3.943,2869,4.641,2870,4.641,2871,1.791,2872,3.032,2873,3.032,2874,3.032,2875,3.032,2876,1.791,2877,1.791,2878,1.791,2879,1.791,2880,1.791,2881,1.791,2882,1.791,2883,1.453,2884,1.587,2885,1.791,2886,1.791,2887,1.791,2888,1.791,2889,1.791,2890,1.791,2891,1.791,2892,1.791,2893,1.791,2894,1.791,2895,1.791,2896,1.791,2897,1.791,2898,1.791]],["title/interfaces/IconDefinition.html",[0,0.282,2899,3.695]],["body/interfaces/IconDefinition.html",[0,0.27,2,1.049,3,0.064,4,0.064,5,0.064,8,0.652,11,0.004,12,0.339,13,0.721,16,1.275,17,0.008,19,0.619,20,0.967,23,0.088,33,3.923,34,4.081,46,1.426,51,2.53,53,1.158,68,3.087,87,1.381,99,0.005,100,0.004,127,1.315,131,1.971,136,1.211,141,2.474,145,1.971,150,0.342,151,0.483,179,0.136,180,1.503,181,1.65,183,2.13,195,3.296,205,0.91,219,1.449,236,2.086,247,1.854,249,2.304,288,5.337,291,2.997,318,2.759,409,2.229,411,3.101,455,2.268,476,0.965,498,1.473,565,3.015,593,2.982,604,1.823,756,3.093,878,1.503,925,2.095,1147,4.609,1297,5.313,1642,3.716,1647,3.296,1916,3.296,1919,3.54,1924,2.29,1973,4.078,1996,3.716,2000,3.101,2035,3.716,2036,2.678,2037,2.678,2038,2.229,2080,2.939,2100,3.54,2103,6.924,2107,6.092,2111,7.254,2112,5.959,2113,6.792,2114,5.672,2115,4.912,2117,4.912,2219,3.101,2899,6.792,2900,3.54,2901,3.867,2902,5.365,2903,6.655,2904,6.655,2905,6.161,2906,5.365,2907,3.867,2908,3.296,2909,7.234,2910,3.867,2911,5.365,2912,3.867,2913,3.296,2914,3.867,2915,3.867,2916,3.867,2917,3.867,2918,3.867,2919,5.365,2920,4.912,2921,3.867,2922,3.867,2923,3.867,2924,3.867,2925,3.867,2926,5.365,2927,3.867,2928,3.867,2929,3.867,2930,3.54,2931,3.867,2932,3.867,2933,3.867,2934,3.867,2935,3.867,2936,3.867,2937,3.867,2938,4.573,2939,3.867,2940,3.867,2941,3.867,2942,3.867,2943,3.867,2944,3.867,2945,3.867,2946,3.296,2947,3.867,2948,3.867]],["title/injectables/IconRegistryState.html",[1924,1.722,2908,3.44]],["body/injectables/IconRegistryState.html",[0,0.246,3,0.058,4,0.058,5,0.058,8,1.077,11,0.003,12,0.309,16,1.139,17,0.008,19,0.629,20,0.883,23,0.083,33,3.899,34,3.845,46,1.699,51,1.664,53,1.155,68,2.502,87,1.263,99,0.005,100,0.003,127,1.437,129,1.623,131,2.247,136,1.105,141,2.611,145,2.161,150,0.334,151,0.441,179,0.124,180,1.956,181,2.147,183,2.068,195,4.288,197,1.365,205,0.83,219,1.416,236,1.372,247,1.811,249,2.997,288,5.125,291,3.569,318,2.618,409,2.034,411,2.83,455,2.6,470,1.312,474,1.909,476,0.634,494,1.911,498,1.636,565,3.079,593,3.028,604,2.372,756,2.9,878,1.956,925,3.176,1147,4.426,1297,5.616,1642,4.426,1647,4.288,1916,3.007,1919,4.605,1924,2.147,1925,2.345,1973,4.455,1996,4.06,2000,4.034,2035,3.484,2036,2.444,2037,2.444,2038,2.034,2080,2.682,2100,6.43,2103,6.885,2107,6.765,2111,6.765,2112,5.447,2113,6.765,2114,4.288,2115,3.23,2117,4.605,2219,4.034,2899,7.251,2900,6.43,2901,3.528,2902,3.528,2903,5.03,2904,5.03,2905,7.024,2906,6.391,2907,3.528,2908,4.288,2909,7.628,2910,5.03,2911,6.391,2912,5.03,2913,4.288,2914,3.528,2915,3.528,2916,3.528,2917,3.528,2918,5.03,2919,6.391,2920,5.851,2921,5.03,2922,3.528,2923,5.03,2924,6.391,2925,5.03,2926,5.03,2927,3.528,2928,3.528,2929,3.528,2930,3.23,2931,3.528,2932,3.528,2933,3.528,2934,3.528,2935,3.528,2936,3.528,2937,3.528,2938,5.447,2939,5.862,2940,3.528,2941,3.528,2942,3.528,2943,3.528,2944,3.528,2945,3.528,2946,4.288,2947,5.862,2948,3.528,2949,5.676,2950,3.981,2951,3.981,2952,3.981,2953,3.981,2954,3.981,2955,3.981,2956,3.981,2957,3.981]],["title/interfaces/IdObject.html",[0,0.282,2958,3.44]],["body/interfaces/IdObject.html",[0,0.531,2,1.245,3,0.076,4,0.076,5,0.076,8,0.773,11,0.004,12,0.402,13,0.809,15,2.432,16,1.249,17,0.008,19,0.427,20,1.903,22,3.686,23,0.117,28,1.996,51,3.17,53,1.068,65,1.641,99,0.006,100,0.004,150,0.278,154,2.563,183,1.351,216,2.766,219,1.538,247,1.125,472,2.633,498,1.016,508,3.889,521,4.002,604,2.164,754,4.744,1301,5.49,2422,3.472,2435,3.323,2554,6.404,2561,3.178,2680,3.487,2958,6.084,2959,4.201,2960,4.201,2961,6.534,2962,5.73,2963,4.201,2964,4.577,2965,5.514,2966,5.514,2967,5.391,2968,5.514,2969,4.201,2970,6.786,2971,6.786,2972,5.514,2973,4.201,2974,4.201,2975,6.155,2976,4.201,2977,4.201,2978,4.201,2979,4.201,2980,5.514,2981,4.201,2982,4.201,2983,4.201,2984,4.201,2985,4.201,2986,4.201,2987,4.201,2988,3.68,2989,5.514,2990,4.201,2991,4.201,2992,4.201,2993,4.201,2994,4.201,2995,3.487,2996,4.201]],["title/classes/ImageViewer.html",[179,0.142,1169,2.581]],["body/classes/ImageViewer.html",[0,0.355,3,0.059,4,0.037,5,0.037,6,2.95,11,0.005,12,0.315,13,0.482,16,0.998,17,0.008,18,1.617,19,0.737,20,1.611,23,0.097,28,1.522,46,1.189,47,1.657,48,0.451,53,0.956,87,1.193,92,3.204,95,2.974,99,0.003,100,0.002,125,1.557,127,1.579,129,1.944,141,1.662,145,1.149,150,0.257,179,0.079,197,0.975,205,1.777,216,1.306,219,1.374,235,3.387,247,1.801,252,1.327,271,2.686,281,2.269,329,0.763,449,1.303,455,2.724,457,4.598,470,0.84,472,2.228,474,1.876,475,2.488,476,0.406,494,1.946,495,3.652,498,1.644,512,1.445,515,1.445,517,2.534,519,3.696,520,1.636,522,1.445,523,4.98,524,1.636,525,2.497,528,3.696,530,2.622,536,3.529,547,1.636,572,4.495,604,1.065,650,3.758,653,2.925,669,3.313,686,1.636,736,2.467,860,1.565,925,1.224,989,2.006,1129,2.601,1130,6.165,1131,1.565,1132,2.071,1133,2.006,1134,3.205,1135,3.873,1136,3.936,1137,3.689,1138,1.445,1139,1.636,1140,2.388,1141,2.488,1142,2.388,1143,2.488,1144,1.812,1145,1.812,1146,3.689,1147,4.101,1148,1.812,1149,1.812,1150,2.73,1151,3.399,1152,1.812,1153,3.689,1154,3.689,1155,3.586,1156,4.073,1157,3.097,1158,1.565,1159,1.565,1160,3.829,1161,4.979,1162,3.873,1163,2.881,1164,3.399,1165,1.812,1166,1.812,1167,1.812,1168,4.718,1169,2.298,1170,3.586,1171,3.586,1172,3.399,1173,3.399,1174,3.399,1175,4.287,1176,3.586,1177,3.238,1178,3.399,1179,1.812,1180,3.238,1181,4.086,1182,3.399,1183,5.873,1184,3.873,1185,3.873,1186,3.787,1187,2.601,1188,1.812,1189,1.812,1190,1.812,1191,1.812,1192,1.812,1193,1.812,1194,3.529,1195,3.586,1196,3.586,1197,3.586,1198,4.086,1199,4.459,1200,3.873,1201,1.812,1202,2.73,1203,2.881,1204,1.812,1205,1.812,1206,1.812,1207,2.73,1208,1.812,1209,1.812,1210,1.812,1211,1.717,1212,1.812,1213,1.812,1214,2.881,1215,1.812,1216,1.812,1217,2.73,1218,3.586,1219,1.812,1220,2.388,1221,1.812,1222,2.881,1223,3.689,1224,3.689,1225,1.812,1226,1.717,1227,1.812,1228,2.881,1229,3.873,1230,1.812,1231,1.812,1232,3.689,1233,2.601,1234,1.812,1235,1.812,1236,1.812,1237,1.812,1238,1.812,1239,3.399,1240,1.812,1241,1.445,1242,1.812,1243,1.812,1244,1.812,1245,1.812,1246,1.812,1247,2.73,1248,1.812,1249,2.73,1250,3.873,1251,1.812,1252,1.812,1253,1.812,1254,1.812,1255,3.873,1256,1.812,1257,1.812,1258,1.812,1259,1.812,1260,1.812,1261,2.601,1262,1.812,1263,1.812,1264,2.881,1265,1.812,1266,1.812,1345,2.298,2997,3.593,2998,3.593,2999,3.593,3000,3.593,3001,3.593,3002,4.053,3003,2.55,3004,2.55,3005,2.55,3006,2.55,3007,2.55,3008,2.55,3009,2.55,3010,2.55,3011,2.55,3012,2.55,3013,2.55,3014,2.55,3015,2.55,3016,2.55,3017,2.55,3018,2.55,3019,2.26,3020,2.55,3021,2.26,3022,2.55,3023,2.55,3024,2.55,3025,2.55,3026,2.55,3027,2.55,3028,2.55,3029,2.55,3030,2.26,3031,2.55,3032,2.55,3033,2.55,3034,2.55,3035,2.55,3036,2.55,3037,2.26,3038,2.55,3039,2.55,3040,2.55,3041,2.55,3042,2.55,3043,2.55,3044,2.55]],["title/components/ImageViewerAccordionComponent.html",[101,0.726,353,1.436]],["body/components/ImageViewerAccordionComponent.html",[3,0.098,4,0.06,5,0.06,8,0.61,11,0.003,12,0.317,15,2.026,16,0.863,17,0.008,19,0.635,20,1.487,23,0.06,24,2.415,36,1.361,47,1.64,48,1.659,49,2.162,53,0.738,55,2.265,65,1.316,99,0.005,100,0.006,101,1.069,102,1.288,103,2.265,104,1.26,105,1.316,106,1.376,107,1.182,113,3.085,114,1.983,117,3.122,118,2.325,120,1.904,122,1.947,127,1.255,128,1.023,129,1.552,131,1.638,136,1.134,144,2.86,148,1.345,150,0.274,151,0.452,169,1.288,173,1.288,175,3.932,177,1.288,179,0.127,193,2.547,199,2.295,224,2.05,233,2.354,252,1.334,268,3.621,269,2.021,270,2.405,271,2.26,272,1.582,273,2.62,275,1.752,277,2.415,281,1.983,283,3.215,284,2.826,285,3.051,286,3.127,289,2.156,290,1.182,291,3.61,292,3.051,293,2.086,295,2.156,300,2.803,306,3.051,307,4.477,308,2.315,309,2.156,317,0.679,318,1.783,319,1.862,320,1.376,321,2.457,322,1.376,323,1.376,324,1.288,325,1.376,326,1.288,327,1.376,328,1.288,329,1.45,330,1.376,331,1.288,332,1.316,333,1.376,334,1.288,335,1.376,336,1.288,337,1.376,338,1.288,339,1.376,340,1.288,341,2.26,342,1.376,343,1.288,344,1.947,345,1.288,346,1.345,347,1.376,348,1.288,349,1.783,350,1.947,351,1.288,352,1.376,353,2.3,354,1.376,355,1.288,356,1.288,357,1.376,358,1.288,359,1.376,360,1.288,361,1.947,362,1.288,363,1.376,364,1.288,365,1.376,366,1.288,367,1.376,368,1.316,369,1.376,370,1.288,371,1.376,372,1.288,373,1.376,374,1.288,375,1.288,376,1.376,377,1.288,378,1.288,379,1.376,380,1.376,476,0.921,492,2.507,517,1.8,521,2.694,530,3.567,546,1.85,723,2.354,724,2.415,732,3.709,734,3.135,745,2.537,746,3.135,786,2.507,1315,3.127,1317,2.507,1318,2.507,1320,4.108,1332,1.85,1341,1.85,1348,3.051,1372,2.507,1377,2.232,1379,2.232,1380,2.086,1381,2.232,1401,4.518,1402,3.427,1407,2.952,1410,2.507,1546,2.619,1560,2.952,1621,3.313,1767,2.405,1768,2.405,1938,3.619,2157,3.313,2168,6.666,2176,3.276,2332,2.156,2420,5.122,3045,3.932,3046,6.245,3047,4.083,3048,7.293,3049,6.707,3050,5.779,3051,5.067,3052,4.083,3053,4.083,3054,4.083,3055,4.689,3056,4.083,3057,5.779,3058,5.779,3059,6.707,3060,3.619,3061,3.085,3062,3.619,3063,3.619,3064,3.619,3065,5.122]],["title/modules/ImageViewerAccordionModule.html",[381,0.651,3066,3.236]],["body/modules/ImageViewerAccordionModule.html",[3,0.095,4,0.095,5,0.095,11,0.005,17,0.008,23,0.095,47,1.422,48,1.587,99,0.007,100,0.005,150,0.367,151,0.724,175,3.341,179,0.204,204,1.934,317,1.087,353,2.989,381,0.935,383,1.854,384,1.854,385,2.55,386,1.934,387,1.934,388,2.55,403,2.231,404,1.742,406,2.429,407,2.377,444,2.712,445,2.203,3045,3.341,3046,5.306,3066,6.647,3067,5.796,3068,5.796,3069,5.796,3070,5.796,3071,6.135,3072,6.54,3073,7.871,3074,6.54,3075,6.54,3076,4.94,3077,5.796]],["title/components/ImageViewerContentComponent.html",[101,0.726,355,1.436]],["body/components/ImageViewerContentComponent.html",[3,0.107,4,0.06,5,0.06,8,0.613,11,0.003,12,0.319,17,0.008,19,0.636,23,0.06,24,2.424,36,1.817,47,1.642,48,1.682,49,1.323,50,3.552,53,0.741,55,1.163,65,1.32,99,0.005,100,0.006,101,1.072,102,1.294,103,2.269,104,1.267,105,1.323,106,1.383,107,1.188,113,3.101,114,1.989,117,3.123,118,2.329,120,1.911,122,1.954,127,1.26,128,1.028,129,1.704,131,1.644,136,1.139,144,3.618,148,1.352,150,0.299,151,0.454,152,1.971,169,1.294,173,1.294,175,4.204,177,1.294,179,0.128,193,2.556,197,1.395,199,2.304,205,1.21,224,2.132,233,2.362,252,0.948,268,2.556,271,1.383,279,1.86,283,3.399,285,4.072,286,1.914,289,4.345,290,1.188,292,2.167,296,3.136,297,2.243,298,2.097,299,1.971,300,1.715,301,1.914,302,1.809,307,2.52,317,0.682,318,1.79,319,1.869,320,1.383,321,2.463,322,1.383,323,1.383,324,1.294,325,1.383,326,1.294,327,1.383,328,1.294,329,1.377,330,1.383,331,1.294,332,1.323,333,1.383,334,1.294,335,1.383,336,1.294,337,1.383,338,1.294,339,1.383,340,1.294,341,2.266,342,1.383,343,1.294,344,1.954,345,1.294,346,1.352,347,1.383,348,1.294,349,1.79,350,1.954,351,1.294,352,1.383,353,1.294,354,1.383,355,2.305,356,1.294,357,1.383,358,1.294,359,1.383,360,1.294,361,1.954,362,1.294,363,1.383,364,1.294,365,1.383,366,1.294,367,1.383,368,1.323,369,1.383,370,1.294,371,1.383,372,1.294,373,1.383,374,1.294,375,1.294,376,1.383,377,1.294,378,1.294,379,1.383,380,1.383,476,1.072,498,0.805,517,1.809,521,2.704,530,3.439,723,2.362,724,2.424,732,3.722,734,3.351,745,2.544,746,3.26,1315,1.914,1317,2.52,1318,2.52,1341,1.86,1348,3.063,1401,4.531,1402,3.436,1407,2.963,1410,2.52,1546,2.628,1560,2.963,1653,4.122,1665,5.56,1768,2.418,1808,5.458,2176,3.288,2343,3.638,2345,5.14,2349,3.638,2351,3.638,2352,3.638,2395,5.14,2402,3.638,2530,4.706,3045,4.204,3051,5.081,3055,4.706,3078,6.216,3079,7.712,3080,7.712,3081,4.104,3082,4.104,3083,4.104,3084,4.104,3085,4.104,3086,5.8,3087,5.14,3088,4.104]],["title/modules/ImageViewerContentModule.html",[381,0.651,3089,3.067]],["body/modules/ImageViewerContentModule.html",[3,0.095,4,0.095,5,0.095,11,0.005,17,0.008,23,0.095,47,1.42,48,1.586,99,0.007,100,0.005,150,0.367,151,0.722,175,3.332,179,0.203,204,1.928,317,1.084,355,2.988,381,0.932,383,1.849,384,1.849,385,2.547,386,1.928,387,1.928,388,2.547,403,2.228,404,1.737,406,2.425,407,2.373,408,4.295,409,3.332,444,2.708,445,2.197,2377,5.78,2380,5.78,3045,3.332,3046,5.292,3066,6.469,3078,4.927,3089,6.297,3090,5.78,3091,5.78,3092,6.522,3093,5.78,3094,6.522]],["title/interfaces/ImageViewerData.html",[0,0.282,50,2.404]],["body/interfaces/ImageViewerData.html",[0,0.531,1,2.458,2,1.157,3,0.07,4,0.07,5,0.07,6,1.551,7,3.241,8,1.092,9,3.538,10,4.434,11,0.007,12,0.374,13,0.77,14,3.241,15,2.701,16,1.431,17,0.008,18,1.618,19,0.765,20,1.435,21,3.241,22,2.121,23,0.123,24,2.705,25,2.835,26,3.018,27,3.499,28,1.959,29,2.728,30,3.241,31,3.241,32,2.835,33,2.011,34,3.545,35,3.088,36,1.843,37,3.813,38,3.088,39,3.088,40,2.954,41,2.835,42,2.954,43,3.088,44,2.835,45,3.998,46,1.723,47,1.475,48,1.146,49,2.086,50,3.862,51,2.705,52,3.538,53,0.827,54,4.802,55,2.383,56,2.728,57,2.835,58,3.088,59,3.973,60,3.669,61,3.813,62,3.813,63,4.146,64,4.49,65,1.27,66,3.307,67,3.669,68,1.82,69,1.82,70,2.541,71,2.728,72,2.541,73,2.464,74,2.728,75,4.154,76,2.954,77,2.954,78,3.669,79,3.669,80,2.63,81,3.088,82,1.485,83,2.243,84,2.63,85,2.954,86,3.088,87,0.767,88,3.241,89,2.31,90,2.954,91,3.088,92,2.121,93,3.108,94,2.835,95,2.834,96,2.835,97,2.243,98,3.088,99,0.005,100,0.004,492,3.973]],["title/classes/ImageViewerLayer.html",[179,0.142,1402,2.326]],["body/classes/ImageViewerLayer.html",[0,0.291,3,0.069,4,0.069,5,0.069,11,0.004,12,0.562,13,0.759,15,2.446,16,1.342,17,0.008,18,1.705,19,0.734,20,1.893,23,0.113,28,1.759,33,3.021,36,1.501,46,1.908,48,1.637,53,0.601,82,2.231,87,0.749,99,0.005,100,0.004,127,1.814,129,1.96,145,1.333,150,0.192,179,0.147,180,2.196,197,1.532,199,1.868,219,1.082,224,1.925,226,5.171,227,6.288,228,5.138,239,3.613,247,1.384,248,3.484,252,1.471,253,1.884,272,2.801,298,4.138,300,3.021,329,1.741,449,2.403,470,1.549,472,1.822,474,1.178,498,1.52,565,2.991,603,3.343,716,2.809,726,4.815,1341,3.99,1345,3.613,1350,4.438,1351,2.771,1363,4.09,1373,3.018,1376,3.018,1380,3.256,1391,5.171,1402,3.256,1408,5.461,1541,5.508,1554,5.757,1602,5.508,1658,4.168,2680,3.168,3095,7.503,3096,5.138,3097,5.854,3098,5.508,3099,7.229,3100,6.868,3101,7.229,3102,6.288,3103,6.373,3104,5.648,3105,5.171,3106,4.703,3107,4.703,3108,4.703,3109,4.703,3110,4.703,3111,4.703,3112,4.703,3113,4.703,3114,4.703,3115,4.703,3116,4.168,3117,3.816,3118,4.168,3119,4.703,3120,6.407,3121,6.407,3122,4.703,3123,4.703,3124,4.703,3125,3.816,3126,4.168,3127,4.168,3128,4.168,3129,4.168,3130,4.168,3131,4.168,3132,4.168,3133,4.168,3134,4.168,3135,4.168,3136,4.168,3137,4.168,3138,4.168,3139,4.168]],["title/components/ImageViewerLayersComponent.html",[101,0.726,356,1.436]],["body/components/ImageViewerLayersComponent.html",[3,0.091,4,0.052,5,0.052,8,1.026,11,0.003,12,0.279,13,0.91,16,0.786,17,0.008,19,0.631,23,0.052,24,3.562,28,1.143,47,1.587,48,1.646,49,2.009,51,2.199,53,0.934,55,1.017,65,1.223,68,1.991,69,1.991,82,1.107,87,0.993,89,2.527,93,1.722,99,0.004,100,0.005,101,1.165,102,1.131,103,1.492,104,1.107,105,1.156,106,1.208,107,1.038,112,4.882,114,1.843,117,3.096,118,2.303,120,1.734,122,1.773,127,1.143,128,0.898,129,1.627,131,1.767,133,4.626,134,3.545,136,0.996,144,2.605,148,1.182,150,0.255,151,0.397,169,1.131,173,1.131,175,4.037,177,1.131,179,0.112,183,1.908,197,1.265,205,1.433,216,1.696,224,1.948,225,2.549,232,3.976,233,2.979,235,2.113,236,2.148,239,3.565,247,0.779,248,2.877,268,2.32,269,1.775,271,1.773,272,1.39,274,2.983,281,1.06,283,1.581,285,1.894,290,1.038,295,1.894,300,1.499,305,3.1,306,2.779,307,2.201,317,0.596,318,1.624,319,1.696,320,1.208,321,2.314,322,1.208,323,1.208,324,1.131,325,1.208,326,1.131,327,1.208,328,1.131,329,1.526,330,1.208,331,1.131,332,1.156,333,1.208,334,1.131,335,1.208,336,1.131,337,1.208,338,1.131,339,1.208,340,1.131,341,2.1,342,1.208,343,1.131,344,1.773,345,1.131,346,1.182,347,1.208,348,1.131,349,1.624,350,1.773,351,1.131,352,1.208,353,1.131,354,1.208,355,1.131,356,2.166,357,1.208,358,1.131,359,1.208,360,1.131,361,1.773,362,1.131,363,1.208,364,1.131,365,1.208,366,1.131,367,1.208,368,1.156,369,1.208,370,1.131,371,1.208,372,1.131,373,1.208,374,1.131,375,1.131,376,1.208,377,1.131,378,1.131,379,1.208,380,1.208,474,1.561,476,1.094,498,1.348,503,3.292,517,4.005,530,3.797,723,2.144,724,2.199,734,2.979,745,1.991,746,2.539,1132,2.689,1272,4.664,1289,4.882,1297,3.545,1298,3.976,1302,2.301,1315,2.454,1319,2.549,1332,1.625,1341,2.825,1348,2.779,1359,2.779,1372,2.201,1377,1.96,1401,4.199,1402,4.52,1406,3.976,1408,5.189,1410,2.201,1522,2.689,1548,5.189,1558,4.71,1559,4.046,1560,2.689,1645,4.664,1667,2.709,1720,3.976,1802,2.416,1889,3.741,1960,4.664,2219,3.741,2230,4.664,2332,2.779,2389,4.27,2390,4.664,2510,4.27,3045,4.037,3051,4.71,3076,5.969,3098,4.882,3118,4.664,3140,3.586,3141,5.263,3142,5.263,3143,5.263,3144,6.234,3145,5.263,3146,5.263,3147,5.263,3148,5.263,3149,3.586,3150,5.263,3151,5.263,3152,5.263,3153,3.586,3154,5.263,3155,3.586,3156,5.263,3157,3.586,3158,4.664,3159,5.263,3160,5.263,3161,3.586,3162,5.263,3163,3.586,3164,5.263,3165,5.263,3166,3.545,3167,3.178,3168,3.586,3169,3.586,3170,2.709,3171,3.586,3172,3.586,3173,3.586,3174,4.664,3175,5.263,3176,3.178,3177,2.91]],["title/modules/ImageViewerLayersModule.html",[381,0.651,3071,3.067]],["body/modules/ImageViewerLayersModule.html",[3,0.093,4,0.093,5,0.093,11,0.005,17,0.008,23,0.093,47,1.153,48,1.479,99,0.006,100,0.005,150,0.371,151,0.706,175,3.261,179,0.199,204,1.887,224,1.7,317,1.061,329,1.202,332,2.5,356,2.98,381,0.912,383,1.809,384,1.809,385,2.524,386,1.887,387,1.887,388,2.524,403,2.199,404,1.7,406,2.393,407,2.343,444,2.672,445,2.15,1305,5.179,1329,6.874,1332,2.892,1389,5.179,1413,6.436,3045,3.261,3071,6.341,3076,4.822,3178,5.657,3179,5.657,3180,5.657,3181,5.657,3182,6.436,3183,6.382,3184,6.382,3185,5.179,3186,6.382,3187,6.382]],["title/components/ImageViewerLegendComponent.html",[101,0.726,358,1.436]],["body/components/ImageViewerLegendComponent.html",[3,0.102,4,0.065,5,0.065,8,0.663,11,0.004,12,0.345,13,0.729,17,0.008,19,0.579,23,0.065,24,2.932,47,1.642,48,1.671,49,2.261,53,0.896,55,1.259,56,3.977,65,1.377,68,1.679,87,0.707,93,2.942,99,0.005,100,0.006,101,1.118,102,1.4,103,2.25,104,1.37,105,1.431,106,1.496,107,1.285,114,2.075,117,3.14,118,2.338,120,2.019,122,2.064,128,1.112,129,1.61,131,1.989,136,1.233,148,1.463,150,0.251,151,0.491,169,1.4,173,1.4,175,4.055,177,1.4,179,0.138,199,2.434,205,0.926,224,1.869,239,2.857,247,0.965,268,3.498,269,2.198,270,2.616,271,2.364,272,1.721,281,1.313,284,2.375,285,2.345,290,1.285,292,2.345,293,2.269,297,2.427,300,1.856,305,3.61,306,3.236,317,1.398,318,1.891,319,1.975,320,1.496,321,2.549,322,1.496,323,1.496,324,1.4,325,1.496,326,1.4,327,1.496,328,1.4,329,1.495,330,1.496,331,1.4,332,1.431,333,1.496,334,1.4,335,1.496,336,1.4,337,1.496,338,1.4,339,1.496,340,1.4,341,2.364,342,1.496,343,1.4,344,2.064,345,1.4,346,1.463,347,1.496,348,1.4,349,1.891,350,2.064,351,1.4,352,1.496,353,1.4,354,1.496,355,1.4,356,1.4,357,1.496,358,2.385,359,1.496,360,1.4,361,2.064,362,1.4,363,1.496,364,1.4,365,1.496,366,1.4,367,1.496,368,1.431,369,1.496,370,1.4,371,1.496,372,1.4,373,1.496,374,1.4,375,1.4,376,1.496,377,1.4,378,1.4,379,1.496,380,1.496,455,2.119,474,1.112,498,0.871,517,1.957,530,3.716,544,2.132,545,2.427,546,2.012,649,2.616,723,2.496,732,4.503,745,2.318,1315,3.527,1320,4.355,1345,3.473,1351,3.61,1377,2.427,1396,3.473,1397,3.473,1402,4.055,1409,2.517,1410,2.726,1412,3.603,2159,3.603,3045,4.055,3061,3.354,3174,5.431,3188,6.44,3189,4.44,3190,5.431,3191,7.016,3192,6.128,3193,6.219,3194,6.128,3195,4.44,3196,3.935,3197,4.44,3198,3.935,3199,3.935,3200,5.431,3201,4.44,3202,4.44,3203,4.44,3204,4.44]],["title/modules/ImageViewerLegendModule.html",[381,0.651,3205,3.236]],["body/modules/ImageViewerLegendModule.html",[3,0.099,4,0.099,5,0.099,11,0.006,17,0.008,23,0.099,47,1.22,48,1.515,99,0.007,100,0.006,150,0.35,151,0.747,175,3.45,179,0.21,204,1.997,317,1.123,358,3.001,381,0.965,383,1.914,384,1.914,385,2.586,386,1.997,387,1.997,388,2.586,403,2.274,404,1.799,406,2.084,407,2.423,444,2.765,445,2.275,3045,3.45,3188,5.479,3205,6.588,3206,5.985,3207,5.985,3208,5.985,3209,6.753,3210,6.753]],["title/modules/ImageViewerModule.html",[381,0.651,398,3.236]],["body/modules/ImageViewerModule.html",[3,0.091,4,0.091,5,0.091,11,0.005,17,0.008,23,0.091,47,1.494,48,1.594,99,0.006,100,0.005,150,0.362,151,0.69,175,3.184,176,4.708,179,0.194,204,1.843,317,1.036,381,0.891,383,1.767,384,1.767,385,2.309,386,1.843,387,2.26,388,2.497,398,6.761,403,2.167,404,1.66,406,2.359,407,2.309,417,5.524,2416,5.057,3045,3.184,3071,6.347,3076,4.708,3077,5.524,3078,4.708,3089,6.347,3211,5.524,3212,5.524,3213,5.524,3214,6.698,3215,6.065,3216,6.232,3217,5.524]],["title/components/ImageViewerPopoverComponent.html",[101,0.726,173,1.436]],["body/components/ImageViewerPopoverComponent.html",[3,0.088,4,0.05,5,0.05,8,0.904,11,0.007,12,0.394,13,0.604,15,1.532,16,0.758,17,0.008,19,0.62,20,1.486,23,0.05,26,3.806,28,1.456,33,1.426,36,2.011,40,3.717,41,2.988,44,2.01,47,1.669,48,1.682,49,1.635,50,3.965,53,0.915,54,2.094,55,1.438,65,1.188,69,1.919,82,1.565,87,0.965,89,2.436,99,0.004,100,0.005,101,1.142,102,1.076,103,1.9,104,1.053,105,1.1,106,1.149,107,0.988,114,2.119,117,3.079,118,2.297,120,1.671,122,1.709,125,1.053,127,1.456,128,0.854,129,1.701,134,4.516,136,0.947,141,2.689,145,0.967,148,1.124,150,0.248,151,0.378,152,1.638,169,1.076,173,2.114,175,4.17,176,6.167,177,1.076,179,0.106,183,1.58,184,2.577,193,3.158,197,1.22,202,3.832,205,1.566,215,2.773,216,1.1,219,1.028,224,1.613,233,2.066,238,2.773,239,2.365,252,1.171,253,1.009,268,2.955,269,1.689,270,2.01,271,2.414,272,2.598,273,3.255,274,2.875,275,1.464,276,2.577,277,1.426,278,2.768,279,2.744,280,2.298,281,2.119,284,2.777,285,3.965,288,2.425,290,0.988,291,1.689,292,1.802,293,1.743,294,2.768,296,1.591,297,2.773,298,1.743,299,2.907,300,1.426,301,1.591,302,1.504,303,2.298,312,4.079,317,0.843,318,1.565,319,1.635,320,1.149,321,2.259,322,1.149,323,1.149,324,1.076,325,1.149,326,1.076,327,1.149,328,1.076,329,1.414,330,1.149,331,1.076,332,1.1,333,1.149,334,1.076,335,1.149,336,1.076,337,1.149,338,1.076,339,1.149,340,1.076,341,2.04,342,1.149,343,1.076,344,1.709,345,1.076,346,1.124,347,1.149,348,1.076,349,1.565,350,1.709,351,1.076,352,1.149,353,1.076,354,1.149,355,1.076,356,1.076,357,1.149,358,1.076,359,1.149,360,1.076,361,1.709,362,1.076,363,1.149,364,1.076,365,1.149,366,1.076,367,1.149,368,1.1,369,1.149,370,1.076,371,1.149,372,1.076,373,1.149,374,1.076,375,1.076,376,1.149,377,1.076,378,1.076,379,1.149,380,1.149,404,0.909,455,2.025,470,1.124,474,1.516,498,1.406,565,2.236,578,1.39,620,3.417,849,2.176,1100,2.425,1113,3.114,1132,2.592,1301,2.01,1336,3.255,1382,2.577,1392,3.605,1396,2.875,1397,2.875,1406,3.832,1409,1.934,1522,2.592,1615,1.865,1665,4.302,1707,4.765,1708,4.765,1712,3.605,1786,4.116,1834,3.114,1839,3.567,1877,2.768,1879,3.024,1880,2.577,1897,2.01,2233,3.832,2381,3.024,2382,5.366,2383,4.496,2838,3.024,2913,3.832,3045,4.17,3218,5.072,3219,5.072,3220,6.055,3221,6.055,3222,5.072,3223,3.412,3224,4.765,3225,5.072,3226,3.412,3227,4.116,3228,5.072,3229,3.412,3230,5.072,3231,3.412,3232,6.055,3233,3.412,3234,6.055,3235,3.412,3236,3.412,3237,3.412,3238,5.072,3239,3.412,3240,3.412,3241,5.072,3242,3.412,3243,3.412,3244,3.412,3245,3.412,3246,3.412,3247,3.412,3248,3.412,3249,3.412]],["title/modules/ImageViewerPopoverModule.html",[381,0.651,3214,3.236]],["body/modules/ImageViewerPopoverModule.html",[3,0.091,4,0.091,5,0.091,11,0.005,17,0.008,23,0.091,47,1.492,48,1.613,99,0.006,100,0.005,150,0.373,151,0.687,172,5.037,173,2.97,175,3.172,176,4.69,179,0.193,204,1.836,317,1.032,381,0.887,383,1.76,384,1.76,385,2.493,386,1.836,387,1.836,388,2.493,395,6.059,403,2.162,404,1.653,406,2.353,407,2.303,425,5.502,444,2.628,445,2.091,2415,5.502,2416,5.037,3045,3.172,3078,4.69,3089,6.059,3188,5.037,3205,6.394,3214,6.758,3215,6.059,3217,5.502,3250,5.502,3251,5.502,3252,6.208,3253,5.502,3254,6.208]],["title/interfaces/ImageViewerProps.html",[0,0.282,1158,2.795]],["body/interfaces/ImageViewerProps.html",[0,0.412,2,0.811,3,0.073,4,0.049,5,0.049,6,1.087,11,0.006,12,0.391,13,0.599,16,1.237,17,0.008,18,1.672,19,0.728,23,0.109,28,1.8,46,1.185,47,0.909,48,0.597,87,1.357,92,3.415,95,2.763,99,0.004,100,0.003,125,1.041,141,2.349,145,1.426,150,0.292,179,0.105,205,1.697,216,1.621,219,1.461,235,1.987,247,1.902,252,1.539,271,2.833,281,2.45,329,0.947,455,2.502,457,4.377,472,2.583,475,3.088,476,0.537,495,3.644,512,1.912,515,1.912,517,2.651,519,4.691,520,3.86,522,1.912,523,4.88,524,2.165,525,2.977,528,3.543,530,2.513,536,3.088,547,2.165,572,4.972,604,1.41,650,3.231,653,3.325,669,3.765,686,2.165,736,2.762,860,2.071,925,1.62,989,2.49,1129,3.228,1130,2.272,1131,2.071,1132,2.57,1133,2.49,1134,3.406,1135,4.491,1136,4.201,1137,3.86,1138,1.912,1139,2.165,1140,2.963,1141,3.088,1142,2.963,1143,3.088,1144,2.398,1145,2.398,1146,3.228,1147,4.377,1148,2.398,1149,2.398,1150,3.388,1151,4.051,1152,2.398,1153,3.228,1154,3.228,1155,4.275,1156,4.068,1157,3.088,1158,3.088,1159,4.093,1160,4.235,1161,5.659,1162,5.218,1163,3.575,1164,4.051,1165,2.398,1166,2.398,1167,2.398,1168,4.051,1169,1.912,1170,4.275,1171,4.275,1172,2.272,1173,2.272,1174,4.051,1175,4.278,1176,4.275,1177,2.165,1178,2.272,1179,2.398,1180,2.165,1181,4.739,1182,2.272,1183,5.464,1184,3.388,1185,3.388,1186,3.779,1187,2.165,1188,2.398,1189,2.398,1190,2.398,1191,2.398,1192,2.398,1193,2.398,1194,2.071,1195,4.275,1196,4.275,1197,4.275,1198,4.739,1199,5.068,1200,2.272,1201,2.398,1202,2.272,1203,3.575,1204,2.398,1205,2.398,1206,2.398,1207,2.272,1208,2.398,1209,2.398,1210,2.398,1211,2.272,1212,2.398,1213,2.398,1214,3.575,1215,2.398,1216,2.398,1217,2.272,1218,4.275,1219,2.398,1220,2.963,1221,2.398,1222,3.575,1223,2.165,1224,2.165,1225,2.398,1226,2.272,1227,2.398,1228,3.575,1229,2.272,1230,2.398,1231,2.398,1232,2.165,1233,3.228,1234,2.398,1235,2.398,1236,2.398,1237,2.398,1238,2.398,1239,2.272,1240,2.398,1241,1.912,1242,2.398,1243,2.398,1244,2.398,1245,2.398,1246,2.398,1247,2.272,1248,2.398,1249,2.272,1250,3.388,1251,2.398,1252,2.398,1253,2.398,1254,2.398,1255,2.272,1256,2.398,1257,2.398,1258,2.398,1259,2.398,1260,2.398,1261,2.165,1262,2.398,1263,2.398,1264,3.575,1265,2.398,1266,2.398]],["title/components/InfoButtonComponent.html",[101,0.726,360,1.436]],["body/components/InfoButtonComponent.html",[3,0.136,4,0.07,5,0.07,8,0.967,11,0.004,12,0.374,17,0.008,19,0.397,23,0.07,33,2.707,36,1.135,47,1.476,48,1.488,53,0.935,55,1.365,65,1.436,87,0.767,89,3.11,99,0.005,100,0.006,101,1.369,102,1.519,103,1.836,104,1.486,105,1.552,106,1.623,107,1.394,114,2.164,117,3.156,118,2.35,120,2.134,122,2.182,125,1.486,128,1.206,129,1.379,136,1.337,148,1.587,150,0.299,151,0.533,169,1.519,173,1.519,177,1.519,179,0.15,180,2.232,181,2.45,183,1.257,197,1.557,205,1.351,224,1.949,281,1.424,290,1.394,296,3.921,301,2.246,302,2.123,317,0.801,318,1.999,319,2.087,320,1.623,321,2.636,322,1.623,323,1.623,324,1.519,325,1.623,326,1.519,327,1.623,328,1.519,329,1.538,330,1.623,331,1.519,332,1.552,333,1.623,334,1.519,335,1.623,336,1.519,337,1.623,338,1.519,339,1.623,340,1.519,341,2.465,342,1.623,343,1.519,344,2.182,345,1.519,346,1.587,347,1.623,348,1.519,349,1.999,350,2.182,351,1.519,352,1.623,353,1.519,354,1.623,355,1.519,356,1.519,357,1.623,358,1.519,359,1.623,360,2.468,361,2.182,362,2.042,363,1.623,364,1.519,365,1.623,366,1.519,367,1.623,368,1.552,369,1.623,370,1.519,371,1.623,372,1.519,373,1.623,374,1.519,375,1.519,376,1.623,377,1.519,378,1.519,379,1.623,380,1.623,420,3.424,470,1.587,474,1.206,498,0.945,849,2.779,878,2.232,1006,2.73,1392,4.604,1545,4.604,1664,4.157,1839,2.838,2468,4.269,2489,5.937,3255,5.528,3256,4.269,3257,6.35,3258,6.936,3259,6.486,3260,5.74,3261,7.825,3262,4.817,3263,7.825,3264,4.817,3265,7.237,3266,4.604,3267,4.817,3268,6.477,3269,3.908,3270,4.269,3271,4.817,3272,4.817,3273,6.477]],["title/modules/InfoButtonModule.html",[381,0.651,2481,3.236]],["body/modules/InfoButtonModule.html",[3,0.124,4,0.096,5,0.096,11,0.005,17,0.008,23,0.096,99,0.007,100,0.005,150,0.368,151,0.729,179,0.205,204,1.947,317,1.095,360,2.992,381,0.941,383,1.867,384,1.867,385,2.558,386,1.947,387,1.947,388,2.558,399,6.144,403,2.241,404,1.754,406,2.439,407,2.387,408,4.32,409,3.364,420,4.68,421,5.836,444,2.723,445,2.218,2131,5.836,2481,6.654,2489,5.343,3255,4.975,3274,5.836,3275,5.836,3276,6.585,3277,5.836,3278,6.585]],["title/components/InfoDialogComponent.html",[101,0.726,362,1.436]],["body/components/InfoDialogComponent.html",[0,0.448,3,0.125,4,0.045,5,0.083,8,0.853,11,0.003,12,0.444,13,0.561,17,0.008,19,0.471,23,0.045,29,4.104,33,1.294,36,2.063,47,1.242,48,1.281,49,0.998,52,2.578,53,0.729,55,0.878,65,1.477,79,2.674,83,2.977,87,0.494,89,2.265,99,0.004,100,0.005,101,1.362,102,0.977,103,1.337,104,0.956,105,0.998,106,1.043,107,0.897,114,1.689,117,3.054,118,2.334,120,1.554,122,1.589,128,1.43,129,1.359,131,1.619,136,0.86,147,3.177,148,1.02,150,0.193,151,0.343,169,0.977,173,0.977,177,0.977,179,0.096,180,2.368,181,1.784,183,1.231,195,4.315,197,1.652,199,1.873,205,0.984,216,1.52,224,1.521,225,3.352,248,2.578,252,1.474,271,1.589,275,2.024,279,2.588,283,1.365,284,3.006,285,3.016,286,2.977,289,3.016,290,0.897,291,1.533,292,3.629,293,3.262,297,1.693,298,1.582,301,1.444,302,1.365,308,1.756,309,1.635,317,0.515,318,1.455,319,1.52,320,1.043,321,2.151,322,1.043,323,1.043,324,0.977,325,1.043,326,0.977,327,1.043,328,0.977,329,1.294,330,1.043,331,0.977,332,0.998,333,1.043,334,0.977,335,1.043,336,0.977,337,1.043,338,0.977,339,1.043,340,0.977,341,1.924,342,1.043,343,0.977,344,1.589,345,0.977,346,1.02,347,1.043,348,0.977,349,1.455,350,1.589,351,0.977,352,1.043,353,0.977,354,1.043,355,0.977,356,0.977,357,1.043,358,0.977,359,1.043,360,0.977,361,1.589,362,2.014,363,1.043,364,0.977,365,1.043,366,0.977,367,1.043,368,0.998,369,1.043,370,0.977,371,1.043,372,0.977,373,1.043,374,0.977,375,0.977,376,1.043,377,0.977,378,0.977,379,1.043,380,1.043,420,4.884,470,1.554,474,0.776,494,1.487,498,0.608,545,2.578,546,1.403,593,2.536,745,1.784,754,2.779,755,3.027,797,4.444,806,2.779,849,2.451,881,5.246,882,3.027,1068,3.563,1132,3.262,1194,2.895,1283,3.827,1287,4.265,1314,2.513,1315,2.977,1317,1.901,1318,1.901,1392,3.352,1427,4.824,1551,5.762,1617,2.201,1619,2.745,1654,3.563,1665,4.646,1682,2.34,1959,5.66,2054,3.352,2114,5.861,2118,2.513,2344,4.18,3061,2.34,3117,3.827,3190,4.18,3255,5.191,3257,6.295,3265,7.496,3269,2.513,3279,3.097,3280,4.716,3281,3.352,3282,4.716,3283,4.716,3284,5.712,3285,4.716,3286,6.872,3287,3.097,3288,6.872,3289,3.097,3290,5.712,3291,5.062,3292,5.712,3293,3.097,3294,4.716,3295,3.097,3296,3.097,3297,2.086,3298,3.097,3299,3.097,3300,7.758,3301,6.386,3302,7.24,3303,4.716,3304,4.716,3305,4.716,3306,4.716,3307,4.716,3308,4.716,3309,4.716,3310,4.716,3311,2.895,3312,4.716,3313,4.716,3314,4.18,3315,4.716,3316,4.716,3317,4.716,3318,4.716,3319,4.716,3320,5.874,3321,5.874,3322,5.181,3323,4.716,3324,4.716,3325,4.716,3326,4.716,3327,4.716,3328,4.18,3329,5.66,3330,4.716,3331,6.386,3332,6.386,3333,6.386,3334,5.66,3335,4.716,3336,6.386,3337,4.716,3338,3.827,3339,4.18,3340,4.716,3341,4.716,3342,4.716,3343,5.181,3344,6.295,3345,3.563,3346,6.386,3347,4.716,3348,4.716,3349,4.18,3350,4.716,3351,3.827,3352,4.716,3353,3.027,3354,4.716,3355,4.716,3356,4.716,3357,4.716,3358,4.716,3359,3.563,3360,4.716,3361,4.716,3362,4.716,3363,4.716,3364,4.18,3365,4.18,3366,4.18,3367,4.716,3368,4.716,3369,4.716,3370,4.716,3371,4.716,3372,4.716,3373,4.18,3374,6.671,3375,4.716,3376,4.716,3377,4.716,3378,4.716,3379,4.716,3380,4.716,3381,4.18,3382,4.18,3383,4.716,3384,4.716,3385,4.716,3386,4.716,3387,4.716,3388,4.716,3389,4.716,3390,4.716,3391,4.716,3392,4.716,3393,4.716,3394,4.716,3395,4.716,3396,6.386,3397,4.716,3398,4.18,3399,4.18,3400,4.716,3401,3.097,3402,4.716,3403,3.097,3404,3.097,3405,3.097,3406,3.097,3407,3.097]],["title/modules/InfoDialogModule.html",[381,0.651,399,3.067]],["body/modules/InfoDialogModule.html",[3,0.116,4,0.098,5,0.098,11,0.006,17,0.008,23,0.098,99,0.007,100,0.006,150,0.369,151,0.74,179,0.208,204,1.977,317,1.112,362,2.997,381,0.956,383,1.895,384,1.895,385,2.575,386,1.977,387,1.977,388,2.575,399,6.232,403,2.261,404,1.781,406,2.063,407,2.409,408,4.36,409,3.416,420,4.753,444,2.748,445,2.253,3255,5.051,3269,5.425,3270,5.926,3408,5.926,3409,5.926,3410,5.926,3411,6.686,3412,7.976]],["title/classes/InitializationState.html",[179,0.142,3413,4.036]],["body/classes/InitializationState.html",[3,0.036,4,0.036,5,0.036,8,0.369,11,0.002,12,0.192,13,0.471,17,0.008,18,0.745,19,0.544,20,1.37,23,0.036,46,1.863,53,0.631,68,2.937,82,2.135,95,3.009,99,0.003,100,0.002,101,1.05,103,0.701,105,0.797,114,2.679,117,0.814,118,0.97,120,0.814,122,0.833,125,1.743,127,1.227,129,1.403,131,1.121,141,2.832,145,2.202,146,1.757,150,0.253,151,0.274,153,1.089,177,1.559,179,0.154,180,0.852,181,0.935,183,1.805,193,1.743,194,3.164,197,0.951,199,1.571,205,1.698,215,4.449,216,1.593,219,1.291,223,2.987,225,2.811,233,1.007,236,1.363,247,1.84,252,1.854,277,2.361,281,2.407,284,3.154,290,0.716,299,1.187,312,2.664,318,1.22,319,2.23,404,1.053,449,1.263,455,2.676,474,0.99,476,1.102,498,1.293,503,2.983,544,3.797,546,3.583,565,2.655,593,0.982,606,2.179,649,4.367,650,2.56,653,2.304,716,1.089,717,2.664,722,1.665,734,1.007,736,1.825,740,2.811,745,2.137,746,2.818,763,1.456,765,1.305,786,2.427,810,2.987,849,1.697,872,2.525,878,0.852,1108,1.586,1121,1.187,1301,3.328,1302,1.586,1380,3.535,1396,1.401,1397,1.401,1409,1.401,1522,2.02,1545,1.757,1546,1.12,1558,1.867,1559,2.912,1654,1.867,1665,2.538,1668,2.005,1691,2.241,1692,2.191,1694,2.447,1697,2.447,1700,3.734,1702,1.401,1706,2.005,1707,2.811,1708,2.811,1711,2.02,1712,1.757,1715,2.447,1717,2.191,1719,1.867,1721,1.867,1723,2.811,1727,1.757,1730,2.088,1732,1.665,1745,2.987,1746,1.867,1749,3.209,1753,1.757,1767,4.235,1768,4.235,1772,1.757,1773,1.757,1777,1.665,1778,2.005,1779,2.191,1780,2.005,1781,1.867,1784,3.505,1789,1.867,1807,2.191,1825,2.005,1828,2.005,1834,4.767,1837,2.005,1838,2.191,1839,2.33,1840,2.191,1841,2.005,1856,2.005,1860,3.64,1862,2.538,1863,1.665,1880,2.987,1897,4.731,1902,3.513,2056,1.867,2060,1.517,2061,2.664,2071,2.538,2165,5.013,2233,1.867,2265,2.005,3227,6.015,3281,3.513,3413,4.381,3414,2.191,3415,3.954,3416,4.943,3417,6.919,3418,5.649,3419,5.649,3420,3.954,3421,4.943,3422,2.472,3423,2.472,3424,2.472,3425,2.472,3426,2.472,3427,2.472,3428,4.943,3429,2.472,3430,2.472,3431,2.191,3432,4.381,3433,6.132,3434,4.381,3435,4.381,3436,5.84,3437,4.381,3438,5.476,3439,3.505,3440,4.381,3441,5.649,3442,3.954,3443,5.649,3444,3.954,3445,2.472,3446,2.005,3447,2.472,3448,2.472,3449,2.472,3450,2.472,3451,2.472,3452,2.472,3453,2.472,3454,3.954,3455,2.472,3456,3.954,3457,2.472,3458,2.472,3459,2.472,3460,2.191,3461,6.178,3462,2.472,3463,2.472,3464,2.472,3465,4.381,3466,2.191,3467,3.505,3468,3.954,3469,2.472,3470,6.59,3471,2.472,3472,3.954,3473,2.472,3474,2.472,3475,2.472,3476,4.943,3477,2.472,3478,2.472,3479,2.472,3480,2.472,3481,4.943,3482,2.472,3483,2.472,3484,3.505,3485,2.472,3486,2.472,3487,2.472,3488,6.59,3489,3.954,3490,5.649,3491,3.954,3492,3.954,3493,2.472,3494,4.943,3495,3.954,3496,2.472,3497,2.472,3498,2.472,3499,2.472,3500,3.954,3501,3.954,3502,2.472,3503,2.472,3504,4.943,3505,2.472,3506,2.472,3507,2.472,3508,2.472,3509,2.472,3510,2.472,3511,2.191,3512,2.472,3513,2.472,3514,2.472,3515,5.006,3516,4.943,3517,5.649,3518,3.954,3519,3.954,3520,2.472,3521,2.472,3522,2.472,3523,2.472,3524,2.472,3525,2.472,3526,2.191,3527,2.191,3528,2.472,3529,6.59,3530,3.954,3531,2.472,3532,2.472,3533,2.472,3534,2.472,3535,2.472,3536,2.472,3537,2.472,3538,2.472,3539,1.757,3540,2.472,3541,2.472,3542,3.954,3543,2.472,3544,2.472,3545,2.472,3546,2.472,3547,2.472,3548,2.472,3549,3.954,3550,4.943,3551,2.472,3552,2.472,3553,3.954,3554,2.472,3555,2.472,3556,4.943,3557,4.943,3558,4.943,3559,4.381,3560,2.472,3561,4.943,3562,4.943,3563,2.472,3564,2.472]],["title/interfaces/JsonOntologyNode.html",[0,0.282,2964,3.067]],["body/interfaces/JsonOntologyNode.html",[0,0.512,2,1.211,3,0.073,4,0.073,5,0.073,8,0.752,11,0.004,12,0.391,13,0.794,15,2.503,16,1.118,17,0.008,19,0.617,20,1.888,22,3.653,23,0.116,28,1.887,51,2.788,53,1.058,65,1.671,87,1.063,99,0.006,100,0.004,150,0.273,154,2.492,183,1.314,216,2.745,219,1.531,247,1.094,472,2.585,498,0.988,508,3.937,521,4.203,604,2.788,754,4.693,1301,5.492,2422,3.409,2435,3.231,2554,6.41,2561,3.091,2680,3.392,2958,6.434,2959,4.086,2960,4.086,2961,6.463,2962,6.564,2963,5.413,2964,5.04,2965,6.724,2966,6.724,2967,5.662,2968,6.724,2969,4.086,2970,6.724,2971,6.724,2972,5.413,2973,4.086,2974,4.086,2975,6.071,2976,4.086,2977,4.086,2978,4.086,2979,4.086,2980,5.413,2981,4.086,2982,4.086,2983,4.086,2984,4.086,2985,4.086,2986,4.086,2987,4.086,2988,3.579,2989,5.413,2990,4.086,2991,4.086,2992,4.086,2993,4.086,2994,4.086,2995,3.392,2996,4.086]],["title/interfaces/ListResult.html",[0,0.282,26,2.123]],["body/interfaces/ListResult.html",[0,0.522,1,2.301,2,1.083,3,0.066,4,0.066,5,0.066,6,1.451,7,3.033,8,1.192,9,3.382,10,4.314,11,0.007,12,0.35,13,0.736,14,3.033,15,2.667,16,1.434,17,0.008,18,1.59,19,0.769,20,1.372,21,3.033,22,1.985,23,0.12,24,2.954,25,3.645,26,3.295,27,3.439,28,1.937,29,3.507,30,4.168,31,5.126,32,3.645,33,2.586,34,3.897,35,4.884,36,1.879,37,4.483,38,4.884,39,4.884,40,4.672,41,4.483,42,4.339,43,4.536,44,4.164,45,4.615,46,1.879,47,1.277,48,0.797,49,1.451,50,3.267,51,1.882,52,2.461,53,0.575,54,2.764,55,1.754,56,2.553,57,2.653,58,2.89,59,3.798,60,3.507,61,3.645,62,3.645,63,4.007,64,4.339,65,1.214,66,3.161,67,3.507,68,1.703,69,1.703,70,2.378,71,2.553,72,2.378,73,2.381,74,2.553,75,3.971,76,2.764,77,2.764,78,3.507,79,3.507,80,2.461,81,2.89,82,1.39,83,2.1,84,2.461,85,2.764,86,2.89,87,1.459,88,3.033,89,2.162,90,2.764,91,2.89,92,1.985,93,2.971,94,2.653,95,2.739,96,2.653,97,2.1,98,2.89,99,0.005,100,0.004]],["title/interfaces/Message.html",[0,0.282,1715,2.254]],["body/interfaces/Message.html",[0,0.367,2,1.021,3,0.062,4,0.133,5,0.062,8,0.634,11,0.004,12,0.33,13,0.707,17,0.008,18,1.471,19,0.668,23,0.118,27,3.023,28,1.758,36,1.4,46,1.001,69,1.606,73,1.431,82,1.31,87,0.947,97,1.98,99,0.005,100,0.004,104,2.114,119,3.035,125,2.114,127,0.922,131,1.204,137,4.902,145,1.204,150,0.28,151,0.47,153,1.872,156,1.924,179,0.185,180,2.361,181,1.606,183,2.247,194,3.29,205,1.239,219,1.009,247,1.697,252,0.98,455,2.444,470,1.399,476,1.244,483,4.372,498,1.532,521,3.641,593,3.3,606,1.872,716,1.872,754,2.502,823,2.861,838,3.5,878,2.921,887,2.725,925,2.039,989,4.112,1160,3.745,1220,3.5,1546,1.924,1559,4.037,1691,3.367,1694,2.941,1697,4.319,1702,2.407,1710,2.17,1711,4.506,1715,4.697,1730,3.137,1732,2.861,1759,2.725,1777,4.002,1817,2.861,1863,4.002,1883,4.768,1891,5.196,1912,4.223,1924,2.247,1946,3.812,2060,2.607,2071,2.725,2127,3.018,2128,4.223,3166,4.999,3297,2.861,3539,3.018,3565,3.208,3566,4.488,3567,4.223,3568,3.208,3569,3.208,3570,5.9,3571,4.87,3572,3.208,3573,4.488,3574,3.018,3575,3.208,3576,3.208,3577,4.488,3578,3.208,3579,3.208,3580,3.208,3581,3.208,3582,3.208,3583,4.488,3584,3.208,3585,3.208,3586,3.208,3587,3.208,3588,4.223,3589,3.208,3590,4.488,3591,2.861,3592,3.208,3593,3.208,3594,3.208,3595,3.208,3596,3.208,3597,3.208,3598,3.208,3599,5.176,3600,3.208,3601,3.208,3602,3.208,3603,3.208,3604,3.208,3605,3.208,3606,3.208,3607,3.208]],["title/classes/MessageChannel.html",[179,0.142,1730,2.404]],["body/classes/MessageChannel.html",[0,0.337,3,0.055,4,0.133,5,0.055,8,1.114,11,0.003,12,0.293,13,0.649,17,0.008,18,1.465,19,0.678,20,0.834,23,0.113,27,3.038,28,1.527,36,0.887,46,0.887,53,0.897,69,1.424,73,1.268,82,1.162,87,1.239,97,2.542,99,0.005,100,0.003,104,1.978,119,2.785,125,1.978,127,1.184,129,1.707,131,1.546,137,5.072,145,1.067,150,0.262,151,0.417,153,1.659,156,1.706,179,0.17,180,2.57,181,1.424,183,2.184,194,3.734,197,1.311,205,1.337,219,0.926,247,1.62,252,1.259,449,1.923,455,2.568,470,1.796,474,1.76,476,1.239,483,4.725,498,1.668,521,3.477,593,3.42,606,2.825,716,1.659,754,3.212,823,2.536,838,2.218,878,2.83,887,2.416,925,1.807,989,3.97,1160,4.251,1220,3.212,1546,1.706,1559,4.581,1691,3.09,1694,2.699,1697,4.348,1702,2.134,1710,2.785,1711,4.651,1715,4.686,1730,3.385,1732,2.536,1759,2.416,1777,3.672,1817,3.672,1863,3.672,1883,4.839,1891,5.073,1912,3.875,1924,2.062,1946,3.499,1986,3.336,2060,3.347,2071,2.416,2127,2.676,2128,3.875,3166,5.024,3297,2.536,3539,3.875,3565,2.844,3566,2.844,3567,3.875,3568,2.844,3569,2.844,3570,5.634,3571,4.556,3572,2.844,3573,4.119,3574,2.676,3575,2.844,3576,4.119,3577,5.634,3578,4.119,3579,4.119,3580,4.119,3581,2.844,3582,2.844,3583,4.119,3584,4.119,3585,4.119,3586,5.309,3587,2.844,3588,4.995,3589,4.119,3590,4.119,3591,3.672,3592,4.119,3593,2.844,3594,5.309,3595,2.844,3596,2.844,3597,2.844,3598,2.844,3599,4.842,3600,2.844,3601,2.844,3602,2.844,3603,2.844,3604,2.844,3605,2.844,3606,2.844,3607,2.844,3608,3.336,3609,5.452,3610,5.452,3611,5.452,3612,5.452,3613,3.764,3614,3.764,3615,3.764,3616,3.764,3617,3.764]],["title/injectables/MessageService.html",[1694,2.254,1924,1.722]],["body/injectables/MessageService.html",[0,0.353,3,0.059,4,0.131,5,0.059,8,0.992,11,0.003,12,0.312,13,0.679,17,0.008,18,1.251,19,0.655,20,0.889,23,0.116,27,2.705,28,1.443,36,0.945,46,0.945,53,0.729,69,1.517,73,1.351,82,1.238,87,1.153,97,1.87,99,0.005,100,0.003,104,2.05,119,2.915,125,2.05,127,1.24,129,1.627,131,1.137,137,4.891,145,1.137,150,0.272,151,0.444,153,1.768,156,1.818,179,0.178,180,2.493,181,2.158,183,2.218,194,3.189,197,1.372,205,1.385,219,0.969,247,1.661,252,0.926,455,2.604,470,1.88,474,1.429,476,1.302,483,4.504,498,1.604,521,3.895,593,3.247,606,1.768,716,1.768,754,2.363,798,5.057,823,3.844,838,2.363,878,3.035,887,2.574,925,3.189,989,3.784,1160,3.63,1220,3.913,1546,2.586,1559,3.913,1691,3.235,1694,3.784,1697,4.429,1702,4.101,1710,2.049,1711,4.571,1715,4.69,1730,3.507,1732,3.844,1759,3.662,1777,3.844,1817,2.702,1863,3.844,1883,4.68,1891,4.922,1912,4.056,1924,2.158,1925,2.363,1946,3.662,2060,2.462,2071,3.662,2127,2.851,2128,4.056,3166,4.474,3297,2.702,3539,2.851,3565,3.03,3566,3.03,3567,4.056,3568,3.03,3569,3.03,3570,6.002,3571,5.434,3572,3.03,3573,4.311,3574,2.851,3575,3.03,3576,3.03,3577,4.311,3578,3.03,3579,3.03,3580,3.03,3581,3.03,3582,3.03,3583,4.311,3584,3.03,3585,3.03,3586,3.03,3587,3.03,3588,4.056,3589,3.03,3590,4.311,3591,2.702,3592,3.03,3593,3.03,3594,3.03,3595,3.03,3596,4.311,3597,3.03,3598,3.03,3599,5.018,3600,3.03,3601,3.03,3602,3.03,3603,3.03,3604,4.311,3605,3.03,3606,4.311,3607,3.03,3608,3.555,3618,4.011,3619,5.706,3620,4.011,3621,4.011,3622,4.011]],["title/interfaces/MessageServiceConfig.html",[0,0.282,3571,3.236]],["body/interfaces/MessageServiceConfig.html",[0,0.371,2,1.037,3,0.063,4,0.131,5,0.063,8,0.644,11,0.004,12,0.335,13,0.715,17,0.008,18,1.301,19,0.616,23,0.119,27,2.814,28,1.501,36,1.016,46,1.628,69,2.271,73,1.453,82,1.853,87,0.957,97,2.01,99,0.005,100,0.004,104,2.132,119,3.068,125,2.132,127,0.937,131,1.222,137,4.914,145,1.222,150,0.283,151,0.477,153,1.901,156,1.954,179,0.187,180,2.38,181,1.631,183,2.255,194,3.317,205,1.252,219,1.019,247,1.706,252,0.995,455,2.456,470,1.421,476,1.251,483,4.401,498,1.541,521,3.791,593,3.119,606,1.901,716,1.901,754,2.54,823,2.904,838,2.54,878,2.978,887,2.767,925,2.07,989,3.888,1160,3.776,1220,3.537,1546,1.954,1559,4.07,1691,3.403,1694,2.972,1697,4.278,1702,2.444,1710,2.203,1711,4.559,1715,4.676,1730,3.17,1732,2.904,1759,2.767,1777,4.044,1817,2.904,1863,4.044,1883,4.627,1891,5.013,1912,4.268,1924,2.271,1946,3.853,2060,2.647,2071,2.767,2127,3.065,2128,4.268,3166,4.653,3297,2.904,3539,3.065,3565,3.257,3566,3.257,3567,4.268,3568,3.257,3569,3.257,3570,6.143,3571,5.31,3572,4.536,3573,5.933,3574,3.065,3575,3.257,3576,3.257,3577,4.536,3578,3.257,3579,3.257,3580,3.257,3581,3.257,3582,3.257,3583,4.536,3584,3.257,3585,3.257,3586,3.257,3587,3.257,3588,4.268,3589,3.257,3590,4.536,3591,2.904,3592,3.257,3593,3.257,3594,3.257,3595,3.257,3596,3.257,3597,3.257,3598,3.257,3599,5.219,3600,3.257,3601,3.257,3602,3.257,3603,3.257,3604,3.257,3605,3.257,3606,3.257,3607,3.257]],["title/interfaces/OMEZarrInfo.html",[0,0.282,1141,2.795]],["body/interfaces/OMEZarrInfo.html",[0,0.443,2,1.35,3,0.125,4,0.104,5,0.082,6,1.81,11,0.005,12,0.437,13,0.853,16,1.332,17,0.008,18,1.485,19,0.724,23,0.125,34,4.162,47,1.425,48,1.268,95,2.775,99,0.006,100,0.005,127,1.22,150,0.23,216,2.308,219,1.457,247,1.864,606,3.157,650,3.245,653,4,763,3.309,765,4.766,872,2.869,1121,2.697,1136,4.646,1138,3.183,1139,4.596,1140,4.219,1141,5.099,1142,4.646,1143,4.841,1241,3.183,1770,3.992,2052,4.243,2771,6.235,2946,4.243,3359,4.243,3623,4.243,3624,4.978,3625,4.978,3626,6.348,3627,6.399,3628,4.557,3629,4.557,3630,4.557,3631,4.557,3632,4.557,3633,4.557,3634,4.557,3635,4.557,3636,4.557,3637,4.978,3638,6.989,3639,4.978,3640,4.978,3641,4.978,3642,4.978,3643,4.978,3644,4.978,3645,4.978,3646,4.978,3647,4.978,3648,4.557,3649,4.978,3650,4.978,3651,4.978,3652,4.978,3653,4.978,3654,4.978,3655,4.978,3656,4.978,3657,4.978,3658,4.978,3659,4.978,3660,4.978,3661,4.978]],["title/interfaces/OldRuiData.html",[0,0.282,2566,3.695]],["body/interfaces/OldRuiData.html",[0,0.28,2,1.088,3,0.066,4,0.066,5,0.066,6,1.458,8,0.676,11,0.004,12,0.352,13,0.739,15,2.303,16,1.385,17,0.008,18,1.645,19,0.762,23,0.091,27,3.106,28,1.539,29,4.679,36,2.082,52,3.873,53,0.974,87,0.721,99,0.005,100,0.004,118,1.11,150,0.185,183,1.99,216,2.001,219,1.203,236,2.753,247,1.348,253,2.095,261,4.181,272,1.753,277,2.594,278,3.671,293,3.171,476,0.721,492,5.067,498,1.218,551,5.136,555,2.389,578,2.528,593,2.814,681,3.418,816,2.473,849,2.663,876,4.689,891,5.037,959,3.048,961,3.216,977,3.216,986,4.689,989,2.24,997,4.01,1052,6.008,1121,3.402,1290,5.502,1615,4.168,2426,3.418,2548,5.037,2556,5.036,2566,6.483,2567,5.502,2604,4.01,2680,3.048,2729,5.502,2767,6.758,2825,3.671,2848,5.679,2850,3.216,2883,3.671,3105,5.037,3266,4.412,3353,3.984,3662,4.525,3663,4.525,3664,6.207,3665,7.625,3666,7.625,3667,7.625,3668,7.625,3669,7.625,3670,7.625,3671,7.625,3672,7.99,3673,7.625,3674,4.689,3675,6.207,3676,6.207,3677,5.761,3678,4.01,3679,6.207,3680,4.525,3681,4.525,3682,4.525,3683,3.671,3684,4.525,3685,4.525,3686,4.525,3687,7.99,3688,6.207,3689,4.525,3690,4.525,3691,4.525,3692,4.525,3693,4.525,3694,4.525,3695,4.525,3696,4.525,3697,6.207,3698,6.207,3699,6.207,3700,6.207,3701,6.207,3702,6.207,3703,3.418,3704,3.418,3705,3.418,3706,4.525,3707,6.207,3708,4.525,3709,3.418,3710,4.525,3711,3.418,3712,4.525,3713,3.418,3714,4.525,3715,3.418,3716,4.525,3717,3.418,3718,3.418,3719,3.418,3720,3.418,3721,3.418,3722,4.525,3723,3.418,3724,4.525,3725,3.418,3726,4.525,3727,3.418,3728,4.525,3729,3.418,3730,4.525,3731,3.418,3732,4.525,3733,3.418,3734,4.525,3735,3.418,3736,4.525,3737,3.418,3738,4.525,3739,3.418]],["title/modules/OntologyExplorationModule.html",[381,0.651,400,3.236]],["body/modules/OntologyExplorationModule.html",[3,0.093,4,0.093,5,0.093,11,0.005,17,0.008,23,0.093,65,1.637,99,0.006,100,0.005,150,0.364,151,0.704,179,0.198,204,1.88,317,1.057,381,0.909,383,1.802,384,1.802,385,1.92,386,1.88,387,1.88,388,2.519,400,6.737,403,2.193,404,1.693,406,2.388,407,2.337,423,4.079,444,2.666,445,2.142,3740,5.634,3741,5.634,3742,5.634,3743,6.363,3744,6.714,3745,6.363,3746,4.282,3747,6.357,3748,3.902,3749,5.634,3750,5.158,3751,6.357,3752,4.802,3753,5.634]],["title/interfaces/OntologyNode.html",[0,0.282,2422,2.326]],["body/interfaces/OntologyNode.html",[0,0.393,2,1.528,3,0.093,4,0.093,5,0.093,8,0.949,11,0.005,12,0.494,13,0.921,15,2.792,16,1.424,17,0.008,19,0.734,23,0.093,27,3.535,28,1.885,65,1.637,99,0.006,100,0.005,107,1.84,119,3.953,249,4.085,508,4.263,521,4.218,578,3.151,1285,5.845,2176,4.386,2419,5.634,2422,3.953,2435,5.57,2967,5.499,2995,5.846,3166,5.212,3754,5.634,3755,6.278]],["title/components/OntologySearchComponent.html",[101,0.726,364,1.436]],["body/components/OntologySearchComponent.html",[3,0.079,4,0.042,5,0.042,8,1.047,11,0.006,12,0.345,13,0.528,15,1.85,16,0.99,17,0.008,18,0.835,19,0.624,20,1.899,22,3.561,23,0.042,28,0.964,47,1.198,48,1.241,49,1.974,53,0.934,55,0.811,57,2.613,65,1.681,73,1.831,87,1.056,99,0.004,100,0.007,101,1.166,102,0.902,103,1.257,104,0.882,105,0.922,106,0.963,107,0.828,114,1.607,117,3.031,118,2.266,120,1.462,122,1.494,127,0.964,128,0.716,129,1.72,136,0.794,137,3.833,144,2.196,148,0.942,150,0.309,151,0.317,153,1.26,154,1.416,156,1.296,158,2.32,169,0.902,173,0.902,177,0.902,179,0.089,180,1.528,181,2.937,183,1.729,193,1.955,194,2.94,197,1.067,198,3.931,205,1.655,215,2.97,216,2.26,219,0.753,224,1.447,239,3.411,240,2.196,247,1.18,252,1.941,253,2.074,268,1.26,271,2.063,272,1.108,273,1.835,275,1.227,279,2.462,280,1.926,281,2.074,284,2.717,285,2.869,286,2.534,290,0.828,291,3.999,297,1.563,299,3.182,300,3.376,303,4.724,308,3.08,309,2.869,315,2.32,317,0.475,318,1.369,319,1.43,320,0.963,321,2.063,322,0.963,323,0.963,324,0.902,325,0.963,326,0.902,327,0.963,328,0.902,329,1.153,330,0.963,331,0.902,332,0.922,333,0.963,334,0.902,335,0.963,336,0.902,337,0.963,338,0.902,339,0.963,340,0.902,341,1.831,342,0.963,343,0.902,344,1.494,345,0.902,346,0.942,347,0.963,348,0.902,349,1.369,350,1.494,351,0.902,352,0.963,353,0.902,354,0.963,355,0.902,356,0.902,357,0.963,358,0.902,359,0.963,360,0.902,361,1.494,362,0.902,363,0.963,364,1.931,365,0.963,366,0.902,367,0.963,368,0.922,369,0.963,370,0.902,371,0.963,372,0.902,373,0.963,374,0.902,375,0.902,376,0.963,377,0.902,378,0.902,379,0.963,380,0.963,423,5.265,453,1.926,470,0.942,474,1.66,476,0.866,498,1.484,503,3.233,508,3.178,565,1.638,716,1.955,724,1.854,734,2.213,745,1.082,746,2.494,765,2.342,797,2.723,806,5.337,824,1.835,843,1.756,847,5.036,878,1.528,894,2.16,1134,2.266,1241,1.621,1284,3.599,1287,3.607,1295,4.626,1315,2.855,1348,2.342,1350,2.723,1377,3.623,1381,1.563,1617,2.033,1620,2.32,1665,2.847,1755,3.931,1767,2.613,1768,2.613,2010,3.599,2044,2.32,2060,2.723,2070,4.409,2158,2.16,2162,2.32,2164,2.16,2173,3.599,2179,2.32,2224,3.351,2240,3.931,2329,2.32,2332,1.51,2422,3.128,2469,2.535,2561,1.756,2938,3.351,2967,3.153,3062,7.594,3064,2.535,3065,2.535,3366,3.931,3559,3.931,3588,3.153,3746,5.526,3748,5.103,3756,2.86,3757,4.436,3758,3.931,3759,4.816,3760,5.434,3761,4.436,3762,5.434,3763,5.434,3764,7.562,3765,7.316,3766,4.436,3767,5.427,3768,4.436,3769,4.436,3770,4.436,3771,2.86,3772,4.711,3773,4.436,3774,5.434,3775,5.378,3776,2.86,3777,4.436,3778,3.599,3779,4.436,3780,5.994,3781,2.86,3782,4.436,3783,4.436,3784,2.86,3785,4.436,3786,4.436,3787,4.436,3788,7.013,3789,2.86,3790,4.436,3791,4.436,3792,4.436,3793,2.86,3794,6.123,3795,4.436,3796,2.86,3797,4.436,3798,2.86,3799,5.434,3800,2.86,3801,4.436,3802,4.436,3803,2.86,3804,2.32,3805,2.535,3806,2.86,3807,2.535,3808,2.535,3809,2.86,3810,2.86,3811,2.86,3812,2.86,3813,2.86,3814,2.32,3815,2.86,3816,2.86,3817,2.86,3818,2.86,3819,2.86,3820,2.86,3821,2.86,3822,2.86,3823,2.86,3824,2.86,3825,2.86,3826,2.86,3827,2.86,3828,4.436,3829,4.436,3830,4.436,3831,4.436,3832,6.123,3833,2.32,3834,2.86,3835,2.86,3836,2.86,3837,4.436,3838,2.535]],["title/modules/OntologySearchModule.html",[381,0.651,3743,3.067]],["body/modules/OntologySearchModule.html",[3,0.094,4,0.094,5,0.094,11,0.005,17,0.008,22,2.851,23,0.094,65,1.269,99,0.007,100,0.005,150,0.379,151,0.716,179,0.202,204,1.913,317,1.075,364,2.985,381,0.925,383,1.834,384,1.834,385,2.539,386,1.913,387,1.913,388,2.539,403,2.217,404,1.723,406,1.996,407,2.362,408,4.274,409,3.305,423,4.151,444,2.694,445,2.179,2188,5.907,2189,4.887,3743,6.19,3746,4.357,3748,3.971,3804,5.249,3805,5.733,3839,5.733,3840,5.733,3841,5.733,3842,6.469,3843,7.82,3844,7.82,3845,7.82,3846,7.82,3847,6.469,3848,6.469]],["title/injectables/OntologySearchService.html",[1924,1.722,3772,3.236]],["body/injectables/OntologySearchService.html",[0,0.277,3,0.042,4,0.042,5,0.042,8,1.098,11,0.006,12,0.619,13,0.533,15,2.664,16,1.355,17,0.008,18,1.032,19,0.657,20,0.993,23,0.103,28,1.649,36,1.291,53,0.9,57,2.639,65,1.769,73,1.509,87,1.123,99,0.004,100,0.006,107,1.93,119,3.879,128,1.372,129,1.616,131,0.821,132,2.35,137,3.644,141,2.031,150,0.332,151,0.321,153,1.277,154,2.712,156,1.312,179,0.09,180,2.124,181,2.072,183,2.274,194,2.151,197,1.077,205,1.286,212,3.635,216,2.149,219,1.376,236,0.998,237,4.068,240,4.314,247,1.597,248,2.449,249,3.722,259,1.642,455,2.014,470,0.954,472,1.122,474,1.765,476,0.873,498,1.636,508,4.084,521,2.874,593,1.15,631,3.184,704,3.515,736,2.023,755,2.875,756,1.48,765,3.52,806,5.361,838,1.706,843,5.052,847,2.75,849,1.922,850,2.875,878,2.124,1006,1.642,1134,1.48,1300,2.188,1348,1.529,1546,2.03,1557,2.059,1643,1.778,1741,3.384,1911,2.35,1924,2.332,1925,1.706,1944,2.188,1946,1.859,1956,4.657,2038,1.48,2045,2.188,2051,2.188,2061,3.017,2073,2.188,2176,1.642,2224,4.657,2332,3.255,2422,4.55,2426,2.188,2435,5.11,2465,6.161,2554,1.951,2561,1.778,2631,3.97,2770,3.635,2964,1.951,2988,2.059,2995,1.951,3281,2.059,3311,1.778,3353,2.875,3446,2.35,3591,1.951,3748,4.785,3755,2.35,3772,4.382,3775,2.35,3778,2.35,3780,4.138,3814,3.635,3833,3.635,3849,6.324,3850,2.35,3851,3.97,3852,3.97,3853,4.138,3854,4.48,3855,4.48,3856,4.48,3857,5.464,3858,2.896,3859,5.464,3860,4.873,3861,4.48,3862,5.909,3863,3.97,3864,2.896,3865,3.97,3866,3.97,3867,7.671,3868,2.896,3869,3.97,3870,3.97,3871,5.464,3872,3.97,3873,3.97,3874,2.896,3875,3.97,3876,3.97,3877,2.896,3878,2.896,3879,3.97,3880,3.97,3881,5.464,3882,2.896,3883,3.97,3884,3.97,3885,2.188,3886,2.567,3887,2.567,3888,2.567,3889,2.567,3890,3.97,3891,2.567,3892,2.188,3893,4.153,3894,2.567,3895,2.567,3896,4.855,3897,1.951,3898,3.635,3899,2.35,3900,2.567,3901,5.909,3902,3.384,3903,3.384,3904,2.567,3905,2.567,3906,3.97,3907,2.567,3908,2.567,3909,2.567,3910,2.567,3911,2.567,3912,2.567,3913,2.567,3914,2.567,3915,2.567,3916,2.567,3917,2.567,3918,2.567,3919,5.464,3920,2.567,3921,2.567,3922,2.567,3923,4.855,3924,4.855,3925,3.97,3926,2.567,3927,2.567,3928,3.97,3929,2.567,3930,4.855,3931,2.567,3932,2.35,3933,2.567,3934,2.567,3935,2.567,3936,2.567,3937,2.567,3938,2.567,3939,2.567,3940,2.567,3941,2.567,3942,2.567,3943,2.567,3944,2.567,3945,2.567,3946,2.567,3947,2.567,3948,3.97,3949,2.567,3950,2.567,3951,2.567,3952,2.567,3953,2.567,3954,2.567,3955,2.567,3956,2.567,3957,2.567,3958,2.567,3959,2.567,3960,2.567,3961,3.97,3962,2.567,3963,3.97,3964,3.97,3965,3.97,3966,3.97,3967,2.567,3968,2.567,3969,2.567,3970,2.567,3971,2.567,3972,2.567,3973,3.97,3974,3.97,3975,2.567,3976,2.35,3977,2.567,3978,2.567]],["title/interfaces/OntologySelection.html",[0,0.282,157,3.44]],["body/interfaces/OntologySelection.html",[0,0.429,2,1.668,3,0.101,4,0.101,5,0.101,11,0.006,12,0.539,13,0.971,15,2.699,16,1.379,17,0.008,19,0.714,23,0.101,28,1.941,65,1.362,99,0.007,100,0.006,150,0.284,157,6.16,508,3.144,578,3.527,2422,4.565,2762,7.919,3754,6.15,3979,6.939]],["title/components/OntologySelectionComponent.html",[101,0.726,366,1.436]],["body/components/OntologySelectionComponent.html",[3,0.094,4,0.056,5,0.056,8,0.964,11,0.003,12,0.296,13,0.655,16,0.822,17,0.008,19,0.68,23,0.056,24,2.299,36,1.296,47,1.355,48,1.383,49,1.773,53,0.903,55,1.081,65,1.852,66,3.99,73,1.854,87,0.877,99,0.005,100,0.006,101,1.376,102,1.202,103,2.004,104,1.176,105,1.229,106,1.284,107,2.569,114,1.909,117,3.106,118,2.314,120,1.813,122,1.854,125,1.176,128,0.955,129,1.755,131,1.56,134,5.261,135,4.465,136,1.058,141,1.813,148,1.256,150,0.329,151,0.422,157,5.34,158,4.465,159,5.815,169,1.202,173,1.202,177,1.202,179,0.119,180,1.896,181,2.081,182,4.157,183,1.685,197,1.323,205,1.148,219,0.647,224,1.72,232,4.157,237,4.356,238,3.008,239,3.843,240,1.887,290,1.104,317,0.634,318,1.698,319,1.773,320,1.284,321,2.382,322,1.284,323,1.284,324,1.202,325,1.284,326,1.202,327,1.284,328,1.202,329,1.331,330,1.284,331,1.202,332,1.229,333,1.284,334,1.202,335,1.284,336,1.202,337,1.284,338,1.202,339,1.284,340,1.202,341,2.175,342,1.284,343,1.202,344,1.854,345,1.202,346,1.256,347,1.284,348,1.202,349,1.698,350,1.854,351,1.202,352,1.284,353,1.202,354,1.284,355,1.202,356,1.202,357,1.284,358,1.202,359,1.284,360,1.202,361,1.854,362,1.202,363,1.284,364,1.202,365,1.284,366,2.229,367,1.284,368,2.278,369,1.284,370,1.202,371,1.284,372,1.202,373,1.284,374,1.202,375,1.202,376,1.284,377,1.202,378,1.202,379,1.284,380,1.284,423,5.389,455,1.152,470,1.813,474,1.378,476,0.607,494,1.831,498,0.748,503,2.905,508,3.539,565,2.032,606,2.425,723,2.241,724,2.299,730,3.531,734,2.63,736,2.032,744,2.568,745,2.954,746,2.241,797,3.963,806,4.601,878,2.225,1134,2.811,1156,4.211,1405,4.877,1406,4.157,1407,2.811,1522,3.612,1956,4.157,2038,1.948,2176,3.119,2422,3.99,3746,5.656,3748,2.34,3750,6.814,3752,2.88,3758,5.722,3772,6.06,3807,3.379,3808,3.379,3860,2.447,3893,2.568,3976,3.093,3980,3.812,3981,5.502,3982,6.456,3983,5.502,3984,6.456,3985,6.456,3986,6.456,3987,3.812,3988,5.502,3989,3.812,3990,5.502,3991,3.812,3992,3.812,3993,5.502,3994,5.502,3995,3.812,3996,3.812,3997,5.502,3998,3.812,3999,3.812,4000,3.379,4001,3.812,4002,3.812]],["title/modules/OntologySelectionModule.html",[381,0.651,3744,3.236]],["body/modules/OntologySelectionModule.html",[3,0.094,4,0.094,5,0.094,11,0.005,17,0.008,23,0.094,65,1.649,99,0.007,100,0.005,150,0.366,151,0.716,179,0.202,204,1.913,317,1.075,366,2.985,381,0.925,383,1.834,384,1.834,385,2.539,386,1.913,387,1.913,388,2.539,403,2.217,404,1.723,406,2.413,407,2.362,423,4.151,444,2.694,445,2.179,3743,6.119,3744,6.703,3745,6.119,3746,4.357,3748,3.971,3749,5.733,3750,5.249,3752,4.887,3753,5.733,4003,5.733,4004,5.733,4005,6.469,4006,5.733,4007,6.469,4008,6.469]],["title/injectables/OntologyState.html",[1924,1.722,3860,2.922]],["body/injectables/OntologyState.html",[0,0.348,3,0.082,4,0.082,5,0.082,8,1.072,11,0.005,12,0.438,13,0.854,16,1.072,17,0.008,19,0.465,20,1.591,23,0.105,27,2.296,28,1.224,36,1.328,53,0.917,65,1.825,87,0.898,99,0.006,100,0.005,107,2.542,119,4.388,125,2.71,127,1.559,129,1.681,141,3.005,150,0.359,151,0.624,154,2.79,156,2.554,179,0.176,183,1.471,197,1.726,205,1.497,240,4.471,474,1.412,476,1.144,494,2.706,498,1.106,508,3.768,604,3,704,3.617,756,3.667,797,5.39,1723,5.102,1924,2.715,1925,3.32,1973,5.321,1996,4.849,2035,4.407,2036,3.46,2037,3.46,2038,2.879,2079,3.796,2422,3.667,3853,5.967,3860,4.607,3892,4.258,3893,5.602,3902,4.258,3903,4.258,4009,4.995,4010,7.178,4011,6.362,4012,5.636,4013,7.371,4014,6.362,4015,5.636,4016,6.362,4017,5.636,4018,4.995]],["title/interfaces/OntologyStateModel.html",[0,0.282,3893,3.067]],["body/interfaces/OntologyStateModel.html",[0,0.366,2,1.424,3,0.086,4,0.086,5,0.086,8,0.885,11,0.005,12,0.46,13,0.882,16,1.265,17,0.008,19,0.699,23,0.108,27,3.017,28,1.287,36,1.745,53,0.756,65,1.79,99,0.006,100,0.005,107,2.34,119,4.66,125,2.286,141,2.972,150,0.364,151,0.656,154,2.932,156,2.684,179,0.185,183,1.545,205,1.235,240,4.554,476,0.944,492,4.547,508,3.837,604,2.475,704,4.753,756,3.784,797,4.547,1723,4.21,1924,2.802,1973,4.989,1996,4.547,2035,4.547,2036,3.636,2037,3.636,2038,3.026,2079,3.99,2422,3.784,3853,4.474,3860,3.801,3892,4.474,3893,5.444,3902,5.596,3903,5.596,4009,5.249,4011,5.249,4013,6.565,4014,5.249,4016,5.249,4018,5.249]],["title/modules/OntologyTreeModule.html",[381,0.651,3745,3.067]],["body/modules/OntologyTreeModule.html",[3,0.095,4,0.095,5,0.095,11,0.005,17,0.008,23,0.095,65,1.283,99,0.007,100,0.005,150,0.377,151,0.724,179,0.204,204,1.934,317,1.087,368,3.055,381,0.935,383,1.854,384,1.854,385,2.55,386,1.934,387,1.934,388,2.55,403,2.231,404,1.742,406,2.018,407,2.377,408,4.302,409,3.341,423,4.197,444,2.712,445,2.203,2483,6.976,2484,5.796,2487,6.976,2488,5.796,3745,6.204,3746,4.405,3752,4.94,4000,5.796,4019,5.796,4020,5.796,4021,5.796,4022,6.54,4023,7.871,4024,6.54]],["title/classes/PictureInPictureViewer.html",[179,0.142,4025,3.44]],["body/classes/PictureInPictureViewer.html",[0,0.217,3,0.051,4,0.051,5,0.051,6,2.191,11,0.003,12,0.273,13,0.617,16,0.525,17,0.008,18,1.598,19,0.748,20,1.786,23,0.09,28,1.126,46,1.221,47,1.371,48,0.917,53,1.05,87,1.311,92,2.715,95,3.187,99,0.004,100,0.003,125,1.599,127,1.75,129,1.987,145,1.746,150,0.212,179,0.109,193,1.548,197,1.246,205,1.716,219,1.44,235,3.628,247,1.477,252,1.959,271,2.443,277,1.468,281,2.011,284,1.361,286,1.637,329,0.661,449,1.794,455,2.737,457,4.174,470,1.157,472,2.387,474,2.06,476,0.826,494,2.488,495,2.833,498,1.762,517,1.548,523,4.624,525,3.756,528,3.053,530,2.166,536,3.182,604,2.574,650,4.022,669,2.737,1112,2.653,1131,2.156,1132,1.794,1133,1.739,1134,1.794,1136,3.628,1137,3.326,1138,1.991,1146,3.326,1147,2.156,1153,3.326,1154,3.326,1156,3.474,1157,3.182,1158,3.182,1159,4.452,1160,1.92,1168,4.58,1169,5.293,1172,3.491,1173,3.491,1175,3.326,1177,3.326,1178,3.491,1180,2.254,1182,3.491,1183,5.981,1184,3.491,1185,3.491,1186,2.938,1187,3.326,1194,3.781,1200,4.149,1202,2.366,1207,2.366,1217,2.366,1223,5.037,1224,5.037,1229,4.149,1232,3.953,1239,3.491,1247,2.366,1249,2.366,1250,3.491,1255,4.149,1261,2.254,1697,2.565,2080,2.366,2559,2.653,2997,4.593,2998,4.593,2999,4.593,3000,4.593,3001,4.593,3019,3.113,3021,3.113,3030,3.113,4025,3.915,4026,5.517,4027,5.517,4028,5.517,4029,3.512,4030,9.282,4031,3.512,4032,3.512,4033,3.512,4034,3.512,4035,3.512,4036,3.512,4037,3.512,4038,3.512,4039,3.512,4040,3.512,4041,3.512,4042,3.512,4043,3.512,4044,3.512,4045,3.512,4046,3.512,4047,3.512,4048,3.512,4049,3.512,4050,3.512,4051,3.512,4052,3.512,4053,3.512,4054,3.512,4055,3.512,4056,3.512,4057,3.512,4058,3.512,4059,3.512,4060,3.512,4061,6.026,4062,6.026,4063,3.113,4064,4.205,4065,5.155,4066,4.593,4067,3.113,4068,3.113,4069,3.113,4070,4.593,4071,3.113,4072,3.113,4073,4.593,4074,5.459,4075,5.459,4076,5.459,4077,3.113,4078,3.113,4079,3.113,4080,3.113,4081,3.113,4082,5.517,4083,3.113,4084,3.113]],["title/interfaces/PictureInPictureViewerProps.html",[0,0.282,4028,3.695]],["body/interfaces/PictureInPictureViewerProps.html",[0,0.333,2,1.295,3,0.079,4,0.079,5,0.079,6,1.736,11,0.004,12,0.419,13,0.83,16,0.805,17,0.008,18,1.595,19,0.575,23,0.113,28,1.515,46,1.269,47,1.397,48,1.234,95,2.702,99,0.006,100,0.004,145,2.192,150,0.285,179,0.168,193,2.375,219,1.56,247,1.776,252,2.121,271,2.605,277,2.252,281,2.286,284,2.088,286,2.512,329,1.015,472,2.088,476,1.111,523,4.108,525,4.295,604,3.232,650,3.16,669,3.682,1112,4.07,1131,3.307,1132,2.753,1133,2.667,1136,4.108,1137,3.458,1138,3.054,1157,3.307,1158,4.747,1159,5.199,1169,3.953,1175,4.475,1180,3.458,1183,4.475,1187,3.458,1223,3.458,1224,3.458,1697,3.452,2080,3.629,2559,4.07,4025,4.07,4026,4.372,4027,4.372,4028,6.274,4061,7.248,4062,7.248,4063,4.775,4064,6.635,4065,6.361,4066,6.181,4067,4.775,4068,4.775,4069,4.775,4070,6.181,4071,4.775,4072,4.775,4073,6.181,4074,6.853,4075,6.853,4076,6.853,4077,4.775,4078,4.775,4079,4.775,4080,4.775,4081,4.775,4082,6.635,4083,4.775,4084,4.775]],["title/interfaces/PureImageViewerLayer.html",[0,0.282,3096,3.236]],["body/interfaces/PureImageViewerLayer.html",[0,0.335,2,1.303,3,0.079,4,0.079,5,0.079,11,0.005,12,0.603,13,0.833,15,2.625,16,1.388,17,0.008,18,1.775,19,0.763,23,0.12,28,1.888,33,2.264,36,1.277,46,2.083,48,0.959,82,1.672,99,0.006,100,0.005,145,1.536,150,0.222,179,0.169,180,1.867,199,2.152,219,1.188,224,1.864,227,5.679,228,3.851,239,3.956,247,1.52,248,2.962,252,1.251,253,1.602,272,2.712,298,3.576,300,2.264,329,1.732,472,2.1,565,2.864,603,3.851,716,2.388,726,4.093,1341,4.166,1350,3.326,1351,3.192,1363,4.492,1373,3.477,1376,3.477,1380,2.768,1391,4.396,1402,2.768,1408,4.093,1541,6.031,1554,6.031,1602,6.031,3095,4.396,3096,5.511,3097,6.41,3098,6.031,3100,4.802,3102,5.679,3104,4.802,3105,4.396,3120,4.802,3121,4.802,3125,4.396,3126,4.802,3127,4.802,3128,4.802,3129,4.802,3130,4.802,3131,4.802,3132,4.802,3133,4.802,3134,4.802,3135,4.802,3136,4.802,3137,4.802,3138,4.802,3139,4.802]],["title/components/ResultsBrowserComponent.html",[101,0.726,370,1.436]],["body/components/ResultsBrowserComponent.html",[1,3.047,3,0.087,4,0.049,5,0.049,8,0.497,11,0.007,12,0.259,13,0.592,15,1.503,16,0.743,17,0.008,19,0.654,20,1.103,23,0.049,24,2.962,26,3.305,36,1.817,46,1.173,47,1.281,48,1.404,49,2.398,53,0.762,55,0.943,65,1.17,68,1.883,82,2.548,87,0.53,89,2.39,93,2.39,99,0.004,100,0.008,101,1.229,102,1.049,103,1.411,104,1.026,105,1.072,106,1.121,107,0.963,112,3.538,114,1.763,117,3.073,118,2.292,120,1.64,122,1.677,127,0.723,128,0.833,129,1.757,131,2.248,133,4.459,136,2.327,141,1.64,148,1.096,150,0.244,151,0.368,152,1.597,169,1.049,173,1.049,177,1.049,179,0.104,197,1.197,199,1.977,205,1.381,213,4.038,224,1.589,233,1.355,238,2.721,239,2.321,249,2.628,252,1.149,253,0.983,259,2.821,268,3.495,269,2.952,270,1.959,271,2.009,275,2.559,276,2.513,277,1.39,279,2.255,281,1.763,284,2.311,285,3.496,286,3.908,289,1.756,290,0.963,292,1.756,299,1.597,305,1.959,312,2.24,313,2.948,315,2.699,317,0.553,318,2.043,319,1.604,320,1.121,321,2.23,322,1.121,323,1.121,324,1.049,325,1.121,326,1.049,327,1.121,328,1.049,329,1.247,330,1.121,331,1.049,332,1.072,333,1.121,334,1.049,335,1.121,336,1.049,337,1.121,338,1.049,339,1.121,340,1.049,341,2.009,342,1.121,343,1.049,344,1.677,345,1.049,346,1.096,347,1.121,348,1.049,349,1.536,350,1.677,351,1.049,352,1.121,353,1.049,354,1.121,355,1.049,356,1.049,357,1.121,358,1.049,359,1.121,360,1.049,361,1.677,362,1.049,363,1.121,364,1.049,365,1.121,366,1.049,367,1.121,368,1.072,369,1.121,370,2.088,371,1.121,372,1.049,373,1.121,374,1.049,375,1.049,376,1.121,377,1.049,378,1.049,379,1.121,380,1.121,430,6.447,474,0.833,476,0.53,494,1.597,498,0.977,546,1.507,565,1.838,716,2.194,717,4.017,722,4.459,723,2.027,724,2.08,730,3.194,732,3.194,734,2.429,744,2.24,745,3.17,746,2.697,1134,2.543,1135,5.011,1283,4.038,1287,2.932,1298,3.76,1315,1.551,1317,2.042,1318,2.042,1319,4.239,1320,3.538,1348,2.628,1363,4.949,1364,4.411,1375,2.364,1548,5.001,1559,2.932,1606,2.042,1614,1.885,1643,3.055,1653,3.538,1664,3.194,1803,4.411,1831,4.411,1860,2.932,1977,4.839,2195,5.286,2207,4.411,2219,3.538,2234,4.411,2235,5.868,2326,4.411,2332,1.756,2389,5.372,2410,4.411,2442,5.868,3061,4.506,3158,4.411,3838,2.948,4085,6.332,4086,3.326,4087,4.977,4088,6.62,4089,8.107,4090,4.977,4091,4.977,4092,5.964,4093,4.977,4094,5.964,4095,5.964,4096,5.964,4097,5.964,4098,7.088,4099,5.964,4100,3.326,4101,3.326,4102,3.326,4103,4.977,4104,3.326,4105,4.977,4106,3.326,4107,4.977,4108,3.326,4109,4.977,4110,8.381,4111,4.977,4112,4.977,4113,4.977,4114,3.326,4115,4.977,4116,4.977,4117,4.977,4118,3.326,4119,4.977,4120,4.977,4121,4.977,4122,3.326,4123,5.964,4124,4.977,4125,3.326,4126,4.977,4127,4.977,4128,2.948,4129,3.326,4130,3.326,4131,3.326,4132,4.977,4133,3.326,4134,3.326,4135,4.977,4136,4.977,4137,5.964,4138,2.948,4139,2.948,4140,2.948,4141,3.326]],["title/components/ResultsBrowserItemComponent.html",[101,0.726,372,1.436]],["body/components/ResultsBrowserItemComponent.html",[3,0.111,4,0.058,5,0.058,8,1.078,11,0.007,12,0.31,15,2.001,17,0.008,19,0.469,23,0.058,26,3.088,36,1.701,37,4.253,41,3.902,42,2.45,43,2.561,44,2.351,47,1.575,48,1.477,49,1.833,51,2.376,53,0.726,55,1.131,56,4.092,65,1.3,68,1.51,89,2.73,93,2.73,99,0.005,100,0.007,101,1.3,102,1.258,103,1.612,104,1.232,105,1.286,106,1.345,107,1.155,112,4.041,114,1.958,117,3.117,118,2.324,120,1.873,122,1.916,127,1.235,128,1,129,1.41,131,2.046,136,2.536,148,1.315,150,0.233,151,0.442,152,1.916,169,1.258,173,1.258,177,1.258,179,0.124,183,1.041,193,1.759,197,1.367,199,1.585,205,1.186,215,4.171,224,1.764,236,2.282,248,3.108,268,2.919,269,1.976,271,2.231,272,1.547,273,3.649,274,2.262,279,1.808,280,2.688,281,2.256,284,2.203,285,2.107,289,2.107,290,1.155,292,3.497,293,2.039,295,2.107,300,1.668,301,2.651,302,2.506,317,0.663,318,1.755,319,1.833,320,1.345,321,2.432,322,1.345,323,1.345,324,1.258,325,1.345,326,1.258,327,1.345,328,1.258,329,1.36,330,1.345,331,1.258,332,1.286,333,1.345,334,1.258,335,1.345,336,1.258,337,1.345,338,1.258,339,1.345,340,1.258,341,2.231,342,1.345,343,1.258,344,1.916,345,1.258,346,1.315,347,1.345,348,1.258,349,1.755,350,1.916,351,1.258,352,1.345,353,1.258,354,1.345,355,1.258,356,1.258,357,1.345,358,1.258,359,1.345,360,1.258,361,1.916,362,1.258,363,1.345,364,1.258,365,1.345,366,1.258,367,1.345,368,1.286,369,1.345,370,2.089,371,1.345,372,2.276,373,1.345,374,1.258,375,1.258,376,1.345,377,1.258,378,1.258,379,1.345,380,1.345,430,5.131,476,0.906,498,0.783,546,1.808,723,2.316,724,2.376,734,2.698,736,1.474,745,2.73,746,2.94,763,2.351,765,3.497,769,5.131,1169,3.223,1284,4.614,1301,3.35,1314,3.238,1315,2.651,1317,3.49,1318,2.45,1319,2.837,1379,2.181,1381,2.181,1393,3.537,1546,2.576,1548,4.295,1613,3.238,1620,5.374,1642,2.45,1653,4.708,1664,2.561,2329,3.238,2332,2.107,2441,5.039,2460,6.398,3055,4.614,3063,3.537,3087,5.039,3176,3.537,3177,3.238,4085,5.453,4138,3.537,4142,5.857,4143,3.991,4144,6.624,4145,5.686,4146,7.219,4147,6.624,4148,3.991,4149,6.398,4150,3.991,4151,5.686,4152,3.991,4153,5.686,4154,5.686,4155,5.686,4156,3.991,4157,5.686,4158,5.686,4159,5.686,4160,3.991,4161,3.991,4162,3.991,4163,3.991,4164,3.991,4165,3.991,4166,3.991,4167,3.991,4168,3.991]],["title/modules/ResultsBrowserItemModule.html",[381,0.651,4169,3.236]],["body/modules/ResultsBrowserItemModule.html",[3,0.097,4,0.097,5,0.097,11,0.006,17,0.008,23,0.097,99,0.007,100,0.007,136,2.365,150,0.361,151,0.739,179,0.208,204,1.974,317,1.11,372,2.997,381,0.955,383,1.893,384,1.893,385,2.573,386,1.974,387,1.974,388,2.573,403,2.259,404,1.778,406,2.06,407,2.407,408,4.356,409,3.411,430,4.746,444,2.746,445,2.249,4085,5.044,4142,5.418,4169,6.574,4170,5.918,4171,5.918,4172,5.918,4173,6.677,4174,6.677]],["title/modules/ResultsBrowserModule.html",[381,0.651,401,3.236]],["body/modules/ResultsBrowserModule.html",[3,0.096,4,0.096,5,0.096,11,0.005,17,0.008,23,0.096,99,0.007,100,0.007,136,2.187,150,0.367,151,0.725,179,0.204,204,1.936,317,1.089,370,2.99,381,0.936,383,1.856,384,1.856,385,2.552,386,1.936,387,1.936,388,2.552,401,6.649,403,2.233,404,1.744,406,2.431,407,2.379,430,5.599,444,2.714,445,2.206,4085,4.947,4128,5.804,4142,5.314,4169,6.475,4175,5.804,4176,5.804,4177,6.549,4178,5.804,4179,6.549,4180,6.549,4181,6.549,4182,7.878]],["title/components/SchemeDropdownComponent.html",[101,0.726,374,1.436]],["body/components/SchemeDropdownComponent.html",[3,0.092,4,0.053,5,0.053,8,0.543,11,0.003,12,0.572,13,0.632,15,2.221,17,0.008,18,1.301,19,0.634,20,1.392,22,3.241,23,0.053,47,1.329,48,1.36,49,2.227,53,0.802,55,1.03,65,1.232,69,2.614,86,3.409,87,0.579,99,0.004,100,0.005,101,1.001,102,1.145,103,1.506,104,1.121,105,1.171,106,1.224,107,1.052,114,1.857,117,3.095,118,2.305,120,1.75,122,1.79,127,1.364,128,0.91,129,1.635,136,1.008,144,3.421,148,1.197,150,0.217,151,0.402,169,1.145,173,1.145,177,1.145,179,0.113,193,1.601,197,1.277,199,1.443,205,1.441,224,2.48,238,3.777,239,3.581,252,1.45,268,3.497,269,1.798,270,2.14,271,2.588,275,2.695,277,1.518,279,2.407,281,2.493,283,2.768,284,2.059,286,1.694,289,1.918,290,1.052,291,4.465,295,2.805,296,1.694,297,1.985,299,2.551,300,3.21,301,1.694,302,1.601,306,1.918,307,3.261,308,3.56,309,3.316,311,2.947,317,0.604,318,1.639,319,1.712,320,1.224,321,2.328,322,1.224,323,1.224,324,1.145,325,1.224,326,1.145,327,1.224,328,1.145,329,1.446,330,1.224,331,1.145,332,1.171,333,1.224,334,1.145,335,1.224,336,1.145,337,1.224,338,1.145,339,1.224,340,1.145,341,2.116,342,1.224,343,1.145,344,1.79,345,1.145,346,1.197,347,1.224,348,1.145,349,2.132,350,1.79,351,1.145,352,1.224,353,1.145,354,1.224,355,1.145,356,1.145,357,1.224,358,1.145,359,1.224,360,1.145,361,1.79,362,1.145,363,1.224,364,1.145,365,1.224,366,1.145,367,1.224,368,1.171,369,1.224,370,1.145,371,1.224,372,1.145,373,1.224,374,2.179,375,1.145,376,1.224,377,1.145,378,1.145,379,1.224,380,1.224,404,1.415,453,2.447,474,0.91,476,0.579,498,1.042,530,2.22,632,2.947,716,2.342,723,2.164,724,2.22,734,2.558,736,2.552,745,2.376,746,2.164,847,4.514,1108,2.331,1288,3.219,1295,4.745,1315,3.868,1332,1.646,1341,3.686,1359,2.805,1372,3.856,1374,3.219,1375,2.582,1376,4.031,1379,2.904,1380,2.714,1381,2.904,1382,2.744,1412,5.096,1520,4.031,1523,4.013,1527,4.31,1538,5.096,1551,3.776,1606,2.23,1607,2.447,1608,3.776,1609,2.582,1610,2.447,1611,2.447,1613,2.947,1614,2.059,1618,3.219,1621,4.31,1768,2.14,2133,5.607,2134,5.566,2135,4.708,2149,2.947,2158,2.744,2168,2.947,2176,2.059,2332,1.918,3051,4.745,3185,6.437,3759,5.566,3767,6.125,4139,4.708,4183,7.031,4184,3.632,4185,5.312,4186,6.281,4187,5.312,4188,4.31,4189,3.632,4190,3.632,4191,3.632,4192,3.632,4193,5.312,4194,3.632,4195,5.312,4196,3.632,4197,2.744,4198,3.632,4199,3.632,4200,3.632,4201,3.632,4202,3.632,4203,3.632,4204,3.632,4205,3.632,4206,3.632,4207,3.632,4208,3.632,4209,3.632,4210,8.432,4211,5.312]],["title/modules/SchemeDropdownModule.html",[381,0.651,3182,3.236]],["body/modules/SchemeDropdownModule.html",[3,0.094,4,0.094,5,0.094,11,0.005,17,0.008,22,2.836,23,0.094,99,0.006,100,0.005,150,0.376,151,0.712,179,0.2,204,1.902,224,1.714,317,1.07,374,2.983,381,0.92,383,1.824,384,1.824,385,2.533,386,1.902,387,1.902,388,2.533,403,2.209,404,1.714,406,2.405,407,2.354,444,2.686,445,2.168,1332,2.915,1333,4.861,1383,6.111,1632,5.702,2188,5.888,2189,4.861,2190,6.324,2191,5.22,2192,5.702,3182,6.63,3185,5.22,4183,5.702,4197,4.861,4212,5.702,4213,5.702,4214,6.434,4215,5.702,4216,6.434,4217,7.794,4218,6.434]],["title/interfaces/SearchResult.html",[0,0.282,3780,3.44]],["body/interfaces/SearchResult.html",[0,0.369,2,0.801,3,0.049,4,0.049,5,0.049,8,0.498,11,0.006,12,0.652,13,0.593,15,2.565,16,1.315,17,0.008,18,1.248,19,0.637,20,0.739,23,0.109,28,1.724,36,1.407,57,1.964,65,1.715,99,0.004,100,0.007,107,2.054,119,3.943,128,1.496,131,0.945,132,2.704,137,3.264,141,1.967,150,0.343,151,0.369,153,1.469,154,2.956,156,1.51,179,0.104,180,2.058,181,2.259,183,2.325,194,1.6,205,1.246,212,2.704,216,2.287,219,1.424,236,1.148,237,3.625,240,4.325,247,1.676,248,1.822,249,3.153,259,1.889,455,1.804,472,1.292,476,0.951,498,1.514,508,4.111,521,3.09,593,1.324,631,2.369,704,3.832,736,2.205,755,2.139,756,1.703,765,3.153,806,5.301,838,2.937,843,4.57,847,2.046,849,1.43,850,3.199,878,1.718,1006,1.889,1134,2.547,1300,2.518,1348,2.632,1546,1.51,1557,2.369,1643,2.046,1741,2.518,1911,2.704,1924,2.259,1944,2.518,1946,2.139,1956,3.766,2038,1.703,2045,2.518,2051,2.518,2061,2.245,2073,2.518,2176,1.889,2224,3.766,2332,2.632,2422,4.598,2426,2.518,2435,4.778,2465,6.041,2554,2.245,2561,2.046,2770,4.045,2964,2.245,2988,2.369,2995,2.245,3281,2.369,3311,3.06,3353,2.139,3446,2.704,3591,2.245,3748,2.046,3755,2.704,3772,3.543,3775,4.045,3778,2.704,3780,4.511,3814,2.704,3833,2.704,3849,2.704,3850,2.704,3851,2.954,3852,2.954,3853,2.518,3857,2.954,3859,4.418,3860,4.253,3862,5.293,3863,2.954,3865,2.954,3866,2.954,3867,7.432,3869,2.954,3870,2.954,3871,4.418,3872,2.954,3873,2.954,3875,2.954,3876,2.954,3879,2.954,3880,2.954,3881,4.418,3883,2.954,3884,2.954,3885,2.518,3886,2.954,3887,2.954,3888,2.954,3889,2.954,3890,4.418,3891,2.954,3892,2.518,3893,4.464,3894,2.954,3895,4.418,3896,6.598,3897,2.245,3898,4.045,3899,2.704,3900,2.954,3901,6.288,3902,3.766,3903,3.766,3904,2.954,3905,2.954,3906,4.418,3907,2.954,3908,2.954,3909,2.954,3910,2.954,3911,2.954,3912,2.954,3913,2.954,3914,2.954,3915,2.954,3916,2.954,3917,2.954,3918,2.954,3919,5.874,3920,2.954,3921,2.954,3922,2.954,3923,5.293,3924,5.293,3925,4.418,3926,2.954,3927,2.954,3928,4.418,3929,2.954,3930,5.293,3931,2.954,3932,2.704,3933,2.954,3934,2.954,3935,2.954,3936,2.954,3937,2.954,3938,2.954,3939,2.954,3940,2.954,3941,2.954,3942,2.954,3943,2.954,3944,2.954,3945,2.954,3946,2.954,3947,2.954,3948,4.418,3949,2.954,3950,2.954,3951,2.954,3952,2.954,3953,2.954,3954,2.954,3955,2.954,3956,2.954,3957,2.954,3958,2.954,3959,2.954,3960,2.954,3961,4.418,3962,2.954,3963,4.418,3964,4.418,3965,4.418,3966,4.418,3967,2.954,3968,2.954,3969,2.954,3970,2.954,3971,2.954,3972,2.954,3973,4.418,3974,4.418,3975,2.954,3976,2.704,3977,2.954,3978,2.954]],["title/interfaces/SearchableItem.html",[0,0.282,58,2.922]],["body/interfaces/SearchableItem.html",[0,0.531,1,2.456,2,1.156,3,0.07,4,0.07,5,0.07,6,1.549,7,3.238,8,1.092,9,3.535,10,4.432,11,0.007,12,0.374,13,0.77,14,3.238,15,2.538,16,1.419,17,0.008,18,1.698,19,0.738,20,1.434,21,3.238,22,2.119,23,0.123,24,2.703,25,2.832,26,3.016,27,3.423,28,1.897,29,2.725,30,3.238,31,3.238,32,2.832,33,2.009,34,3.543,35,3.085,36,1.722,37,3.811,38,3.085,39,3.085,40,2.951,41,2.832,42,2.951,43,3.085,44,2.832,45,3.996,46,1.722,47,1.321,48,0.851,49,1.549,50,3.415,51,2.009,52,2.628,53,0.614,54,2.951,55,1.834,56,3.666,57,3.811,58,4.151,59,4.488,60,4.625,61,4.606,62,4.606,63,4.868,64,5.272,65,1.434,66,3.735,67,4.625,68,2.765,69,1.818,70,2.538,71,2.725,72,2.538,73,2.463,74,2.725,75,4.151,76,2.951,77,2.951,78,3.666,79,3.666,80,2.628,81,3.085,82,1.483,83,2.241,84,2.628,85,2.951,86,3.085,87,1.409,88,3.238,89,2.308,90,2.951,91,3.085,92,2.119,93,3.106,94,2.832,95,2.833,96,2.832,97,2.241,98,3.085,99,0.005,100,0.004]],["title/interfaces/SpatialEntity.html",[0,0.282,816,2.489]],["body/interfaces/SpatialEntity.html",[0,0.432,2,1.058,3,0.064,4,0.102,5,0.11,6,1.418,8,0.657,11,0.004,12,0.342,13,0.725,15,2.472,16,1.428,17,0.008,18,1.789,19,0.775,23,0.102,27,3.333,28,1.778,36,1.775,53,1.109,70,2.323,83,3.513,84,4.852,87,1.473,99,0.005,100,0.004,217,3.907,236,2.726,261,4.101,329,1.419,551,5.329,555,3.215,639,4.836,816,4.324,955,5.816,959,4.101,961,4.328,1009,3.587,1115,4.328,1407,2.248,1615,4.324,2556,3.127,2848,6.364,2850,5.356,3266,4.328,3311,2.701,3345,4.6,3353,3.907,3674,5.976,3677,5.976,3703,5.692,3704,5.692,3705,5.692,3709,5.692,3711,5.692,3713,5.692,3715,5.692,3717,3.324,3718,3.324,3719,3.324,3720,3.324,3721,3.324,3723,3.324,3725,3.324,3727,3.324,3729,3.324,3731,3.324,3733,3.324,3735,3.324,3737,3.324,3739,3.324,4219,3.57,4220,3.57,4221,4.94,4222,5.665,4223,6.419,4224,7.44,4225,3.57,4226,3.57,4227,3.57,4228,3.57,4229,6.114,4230,5.665,4231,3.57,4232,3.57,4233,3.57,4234,6.114]],["title/interfaces/SpatialObjectReference.html",[0,0.282,955,3.236]],["body/interfaces/SpatialObjectReference.html",[0,0.457,2,1.181,3,0.072,4,0.108,5,0.13,6,1.583,8,0.734,11,0.004,12,0.382,13,0.781,15,1.982,16,1.423,17,0.008,18,1.757,19,0.76,23,0.108,27,3.348,28,1.837,36,1.936,53,1.12,70,2.593,83,3.445,84,4.719,87,1.045,99,0.005,100,0.004,217,3.152,236,2.546,261,3.308,329,0.925,551,5.313,555,3.465,639,3.152,816,4.311,849,2.107,955,5.842,959,4.42,961,4.664,1009,2.893,1115,3.491,1407,2.509,1615,4.311,2556,4.664,2848,5.842,2850,3.491,3266,3.491,3311,3.015,3345,3.71,3353,3.152,3674,6.209,3677,5.958,3703,3.71,3704,3.71,3705,3.71,3709,3.71,3711,3.71,3713,3.71,3715,3.71,3717,3.71,3718,3.71,3719,3.71,3720,3.71,3721,3.71,3723,3.71,3725,3.71,3727,3.71,3729,3.71,3731,3.71,3733,3.71,3735,3.71,3737,3.71,3739,3.71,4219,3.985,4220,3.985,4221,3.985,4222,5.324,4223,6.399,4224,7.44,4225,6.399,4226,5.324,4227,6.399,4228,3.985,4229,6.399,4230,5.996,4231,3.985,4232,3.985,4233,3.985,4234,6.399]],["title/interfaces/SpatialPlacement.html",[0,0.282,959,3.067]],["body/interfaces/SpatialPlacement.html",[0,0.425,2,1.026,3,0.062,4,0.121,5,0.108,6,1.375,8,0.637,11,0.004,12,0.332,13,0.709,15,1.8,16,1.416,17,0.008,18,1.797,19,0.779,23,0.1,27,3.186,28,1.761,36,1.618,53,1.062,70,3.147,83,2.778,84,4.773,87,1.185,99,0.005,100,0.004,217,2.737,236,2.367,261,2.873,329,0.803,551,5.603,555,4.279,639,2.737,816,4.639,955,5.76,959,4.626,961,5.285,1009,2.513,1115,3.032,1407,3.045,1615,4.547,2556,3.032,2848,5.56,2850,3.032,3266,3.032,3311,3.658,3345,3.223,3353,2.737,3674,6.597,3677,6.284,3703,3.223,3704,3.223,3705,3.223,3709,3.223,3711,3.223,3713,3.223,3715,3.223,3717,5.617,3718,5.617,3719,5.617,3720,5.617,3721,5.617,3723,5.617,3725,5.617,3727,5.617,3729,5.617,3731,5.617,3733,5.617,3735,5.617,3737,5.617,3739,5.617,4219,3.461,4220,3.461,4221,3.461,4222,5.573,4223,6.749,4224,7.585,4225,3.461,4226,3.461,4227,3.461,4228,4.835,4229,6.886,4230,6.576,4231,4.835,4232,6.033,4233,4.835,4234,6.886]],["title/interfaces/SpatialSceneNode.html",[0,0.282,480,2.581]],["body/interfaces/SpatialSceneNode.html",[0,0.232,2,1.307,3,0.055,4,0.055,5,0.055,6,1.208,11,0.005,12,0.291,13,0.647,16,1.37,17,0.008,18,1.653,19,0.744,23,0.079,28,1.618,45,2.049,46,2.049,61,3.203,62,3.203,66,1.916,73,2.616,74,3.082,83,2.535,87,1.444,90,2.302,99,0.005,100,0.003,118,1.334,127,1.389,128,2.055,145,2.326,150,0.318,152,1.8,179,0.117,219,1.461,237,1.916,240,2.691,247,1.74,252,2.081,253,2.296,272,1.453,329,1.678,472,1.453,476,0.866,480,4.93,513,4.501,514,2.302,525,4.539,555,1.98,578,3.342,639,4.779,640,6.318,641,6.318,642,5.626,643,5.626,644,5.626,645,5.626,646,6.052,647,5.626,648,5.626,676,2.833,685,4.107,707,2.833,710,5.626,763,3.768,765,4.416,769,5.944,792,3.489,793,2.665,815,2.665,816,4.07,845,2.833,850,2.406,864,2.526,871,2.665,872,1.916,929,3.864,950,2.833,967,3.042,977,2.665,978,3.042,983,6.042,985,3.042,986,2.833,987,2.833,988,3.042,1006,2.125,1008,3.042,1033,3.323,1040,3.323,1042,3.323,1044,3.323,1046,3.323,1049,3.323,1050,4.818,1052,2.665,1053,6.6,1054,4.818,1055,3.323,1056,3.323,1057,3.323,1058,6.217,1059,6.6,1060,4.818,1061,4.818,1062,7.1,1063,3.323,1064,4.818,1065,3.323,1066,3.323,1067,3.323,1068,2.833,1069,3.323,1070,3.323,1071,3.323,1072,3.323,1073,3.323,1074,3.042,1075,3.323,1076,3.323,1077,4.818,1078,3.323,1079,3.323,1080,7.272,1081,4.411,1082,4.818,1083,4.818,1084,4.411,1085,4.818,1086,3.323,1087,4.818,1088,3.323,1089,4.818,1090,4.818,1091,3.323,1092,3.323,1093,3.323,1094,3.323,1095,3.323,1096,3.323,1097,3.323,1098,3.323,1099,3.323,1100,3.864,1101,3.323,1102,6.6,1103,4.818,1104,3.323,1105,3.323,1106,3.323,1107,4.818,1108,4.501,1109,3.323,1110,3.323,1111,3.323,1112,4.107,1113,2.302,1114,3.323,1115,2.665,1116,3.323,1117,3.323,1118,3.323,1119,3.323,1120,3.323,1121,1.8,1122,3.323,1123,3.323,1124,3.323,1125,3.323,1126,3.323,1127,3.323,1128,3.323]],["title/interfaces/SpatialSceneNode-1.html",[0,0.235,253,1.121,480,2.15]],["body/interfaces/SpatialSceneNode-1.html",[0,0.262,2,1.018,3,0.087,4,0.062,5,0.062,6,1.365,11,0.004,12,0.329,13,0.706,16,1.399,17,0.008,18,1.718,19,0.756,23,0.087,28,1.803,36,1.956,46,2.096,53,0.541,69,2.243,87,1.466,95,1.641,99,0.005,100,0.004,125,1.307,128,1.061,141,1.395,145,2.212,150,0.34,179,0.132,205,0.883,216,1.911,219,1.409,236,1.459,240,2.096,247,1.695,252,1.711,253,1.252,282,2.495,329,1.469,450,3.2,454,2.853,456,4.215,476,1.09,480,4.423,512,2.401,513,4.757,514,2.6,525,3.862,530,1.77,544,3.285,545,3.241,546,2.687,561,4.48,565,2.527,578,3.019,593,2.718,599,3.2,603,3.01,604,1.77,605,5.255,606,1.867,607,3.754,609,3.754,610,3.754,612,3.754,616,3.754,617,5.255,618,6.064,619,3.437,620,2.853,621,3.754,622,3.437,623,5.255,624,3.754,625,3.437,626,6.064,627,3.437,628,5.255,629,3.437,630,3.754,631,3.01,632,3.437,633,3.754,634,3.754,635,3.754,636,3.754,637,3.754,638,3.754,639,4.757,640,5.6,641,6.272,642,5.894,643,5.894,644,6.272,645,5.6,646,5.6,647,5.894,648,5.6,649,4.367,650,1.919,651,5.255,652,5.255,653,1.975,654,3.754,655,3.754,656,3.754,657,6.064,658,3.754,659,3.754,660,5.255,661,3.754,662,3.754,663,3.754,664,5.255,665,4.215,666,5.255,667,3.437,668,3.754,669,2.236,670,3.754,671,6.064,672,3.754,673,3.754,674,3.754,675,3.754,676,3.2,677,5.255,678,5.255,679,3.754,680,5.255,681,5.6,682,3.754,683,5.255,684,3.754,685,3.2,686,2.718,687,3.754,688,3.754,689,3.754,690,3.754,691,5.255,692,6.064,693,6.064,694,5.255,695,5.255,696,5.255,697,3.754,698,3.754,699,3.754,700,3.754,701,3.754,702,3.754,703,3.754,704,2.718,705,3.754,706,3.754,707,3.2,708,3.754,709,3.754,710,3.2,711,3.754,712,3.754,713,3.754]],["title/components/SpinnerOverlayComponent.html",[101,0.726,375,1.436]],["body/components/SpinnerOverlayComponent.html",[3,0.104,4,0.067,5,0.067,8,1.197,11,0.004,12,0.485,16,0.932,17,0.008,19,0.376,20,1.383,23,0.067,47,1.448,48,1.464,49,1.469,53,0.797,55,1.292,65,1.396,82,1.926,87,1.219,93,2.189,99,0.005,100,0.006,101,1.277,102,1.438,103,1.769,104,1.407,105,1.469,106,1.536,107,1.32,114,2.103,117,3.145,118,2.347,120,2.056,122,2.102,125,1.407,127,1.355,128,1.142,129,1.514,136,1.266,147,5.809,148,3.035,150,0.187,151,0.505,169,1.438,173,1.438,177,1.438,179,0.25,224,1.895,252,1.441,253,1.845,268,2.75,269,2.257,270,2.686,271,1.536,272,2.418,274,2.584,277,1.905,279,2.066,280,4.203,281,1.348,282,4.874,283,2.009,284,1.767,286,2.126,290,1.32,291,3.089,299,2.189,302,2.75,305,2.686,306,3.295,307,2.799,312,3.071,317,0.758,318,2.361,319,2.011,320,1.536,321,2.577,322,1.536,323,1.536,324,1.438,325,1.536,326,1.438,327,1.536,328,1.438,329,1.441,330,1.536,331,1.438,332,1.469,333,1.536,334,1.438,335,1.536,336,1.438,337,1.536,338,1.438,339,1.536,340,1.438,341,2.397,342,1.536,343,1.438,344,2.102,345,1.438,346,1.502,347,1.536,348,1.438,349,1.926,350,2.102,351,1.438,352,1.536,353,1.438,354,1.536,355,1.438,356,1.438,357,1.536,358,1.438,359,1.536,360,1.438,361,2.102,362,1.438,363,1.536,364,1.438,365,1.536,366,1.438,367,1.536,368,1.469,369,1.536,370,1.438,371,1.536,372,1.438,373,1.536,374,1.438,375,2.412,376,1.536,377,1.438,378,1.438,379,1.536,380,1.536,404,1.662,433,6.207,565,2.305,723,2.542,745,2.691,1113,2.799,1132,3.908,1298,4.714,1315,2.126,1348,3.295,1392,4.435,1396,3.537,1397,3.537,1409,2.584,1614,2.584,1615,2.492,1617,3.241,1667,5.374,1704,4.714,1753,3.241,1772,3.241,1773,3.241,1802,3.071,1839,3.676,1880,4.714,2166,4.714,2332,4.619,4235,6.78,4236,4.559,4237,6.24,4238,7.114,4239,6.24,4240,4.559,4241,6.24,4242,4.559,4243,6.24,4244,4.559,4245,4.559,4246,4.559,4247,4.559]],["title/modules/SpinnerOverlayModule.html",[381,0.651,402,3.236]],["body/modules/SpinnerOverlayModule.html",[3,0.098,4,0.098,5,0.098,11,0.006,17,0.008,23,0.098,99,0.007,100,0.006,148,2.637,150,0.362,151,0.744,179,0.209,204,1.988,317,1.118,375,2.999,381,0.961,383,1.906,384,1.906,385,2.581,386,1.988,387,1.988,388,2.581,402,6.583,403,2.269,404,1.791,406,2.075,407,2.417,433,5.456,444,2.758,445,2.265,4235,5.959,4248,5.959,4249,5.959,4250,5.959,4251,6.724,4252,8.003,4253,6.724,4254,6.724]],["title/modules/StoreModule.html",[381,0.651,1907,3.236]],["body/modules/StoreModule.html",[3,0.095,4,0.095,5,0.095,11,0.005,17,0.008,23,0.115,33,2.722,36,1.534,99,0.007,100,0.005,150,0.38,151,0.721,167,5.289,179,0.203,182,4.92,219,1.106,237,3.327,381,0.931,383,1.846,406,2.01,407,2.372,756,3.327,1186,3.692,1907,5.581,1944,4.92,1945,5.772,1963,5.772,2038,3.327,2900,5.285,2908,5.932,3224,5.581,3291,5.772,3860,5.039,4255,6.513,4256,6.513,4257,5.772,4258,6.513,4259,6.513,4260,6.513,4261,6.513,4262,6.513,4263,6.513,4264,6.513,4265,6.513,4266,6.513,4267,6.513,4268,6.513,4269,6.513,4270,6.513,4271,6.513,4272,6.513,4273,6.513,4274,6.513,4275,6.513,4276,6.513,4277,6.513,4278,6.513]],["title/modules/ThemingModule.html",[381,0.651,1908,3.236]],["body/modules/ThemingModule.html",[3,0.1,4,0.1,5,0.1,11,0.006,17,0.008,23,0.1,99,0.007,100,0.006,145,1.953,150,0.332,151,0.763,164,6.55,179,0.215,204,2.037,317,1.145,381,0.985,383,1.953,384,1.953,385,2.081,386,2.037,387,2.552,388,2.081,403,2.302,404,1.835,407,2.452,437,5.59,438,5.59,1908,6.55,4279,6.106,4280,6.106,4281,6.889,4282,8.119,4283,6.889,4284,6.889,4285,6.889]],["title/injectables/ThemingService.html",[164,3.236,1924,1.722]],["body/injectables/ThemingService.html",[3,0.061,4,0.061,5,0.061,8,1.16,11,0.003,12,0.325,13,0.7,16,1.353,17,0.008,19,0.697,20,0.927,23,0.086,53,0.992,68,2.223,70,3.104,71,3.332,82,1.814,87,1.386,99,0.005,100,0.003,101,1.425,103,1.666,119,2.137,127,1.834,129,1.852,147,3.96,150,0.241,151,0.463,164,4.178,179,0.279,180,2.026,183,2.027,185,6.884,191,4.77,197,1.413,205,1.814,219,1.405,231,7.682,238,4.616,247,1.601,259,4.787,279,3.341,386,1.738,435,3.708,455,2.737,470,1.378,474,1.945,476,1.175,498,1.58,522,2.371,606,2.996,825,5.982,878,2.676,887,2.685,925,3.54,1132,4.315,1297,5.232,1300,6.085,1546,2.664,1557,4.178,1723,4.178,1737,5.21,1761,3.708,1762,3.708,1770,2.973,1860,3.463,1916,3.16,1924,2.223,1925,2.465,2000,4.178,2061,3.96,2250,5.21,2273,3.394,2423,5.982,2930,3.394,3297,2.818,3567,2.973,3574,2.973,4286,4.183,4287,5.879,4288,8.273,4289,5.879,4290,7.372,4291,5.879,4292,7.372,4293,5.879,4294,4.183,4295,4.183,4296,5.879,4297,4.183,4298,5.879,4299,7.767,4300,4.183,4301,5.879,4302,8.584,4303,4.183,4304,5.879,4305,5.879,4306,4.183,4307,4.183,4308,5.879,4309,4.183,4310,4.183,4311,5.879,4312,4.183,4313,4.183,4314,4.183,4315,4.183,4316,4.183,4317,4.183,4318,4.183,4319,4.183,4320,4.183,4321,7.372,4322,5.879,4323,4.183,4324,4.183,4325,6.797,4326,4.183,4327,5.879,4328,4.183,4329,4.183,4330,4.183,4331,4.183,4332,4.183,4333,4.183,4334,4.183,4335,4.183]],["title/interfaces/TiffInfo.html",[0,0.282,1142,2.682]],["body/interfaces/TiffInfo.html",[0,0.439,2,1.33,3,0.125,4,0.103,5,0.081,6,1.783,11,0.005,12,0.43,13,0.844,16,1.358,17,0.008,18,1.608,19,0.733,23,0.125,34,4.152,47,1.415,48,1.256,87,1.13,95,2.749,99,0.006,100,0.005,127,1.202,150,0.226,216,2.286,219,1.45,247,1.855,606,3.126,650,3.214,653,3.981,763,3.259,765,4.751,872,2.826,1121,2.656,1136,4.613,1138,3.135,1139,4.552,1140,4.179,1141,4.807,1142,4.865,1143,4.807,1241,3.135,1770,3.932,2052,4.179,2771,6.21,2946,4.179,3359,4.179,3623,4.179,3624,4.903,3625,4.903,3626,6.287,3627,6.353,3628,4.488,3629,4.488,3630,4.488,3631,4.488,3632,4.488,3633,4.488,3634,4.488,3635,4.488,3636,4.488,3637,4.903,3638,7.744,3639,4.903,3640,4.903,3641,4.903,3642,4.903,3643,4.903,3644,4.903,3645,4.903,3646,4.903,3647,4.903,3648,4.488,3649,4.903,3650,4.903,3651,4.903,3652,4.903,3653,4.903,3654,4.903,3655,4.903,3656,4.903,3657,4.903,3658,4.903,3659,4.903,3660,4.903,3661,4.903]],["title/components/ToggleButtonComponent.html",[101,0.726,377,1.436]],["body/components/ToggleButtonComponent.html",[3,0.086,4,0.048,5,0.048,8,0.881,11,0.003,12,0.254,13,0.585,16,0.733,17,0.008,19,0.541,20,1.454,23,0.048,33,3.435,46,1.546,47,1.271,48,1.308,49,1.583,53,0.944,55,0.926,65,1.158,82,2.025,87,0.782,99,0.004,100,0.005,101,1.285,102,1.03,103,1.392,104,1.008,105,1.053,106,1.101,107,0.946,114,2.725,117,3.068,118,2.299,120,1.618,122,1.654,125,1.008,127,1.425,128,0.818,129,1.777,131,1.392,136,0.907,141,1.618,145,1.673,148,1.076,150,0.268,151,0.362,153,1.44,169,1.03,173,1.03,177,2.218,179,0.219,180,1.692,181,1.857,183,1.712,192,2.893,193,2.164,194,2.358,197,1.181,199,2.606,205,1.541,219,1.002,224,1.571,247,1.425,271,1.101,277,3.372,279,2.225,281,0.966,290,2.61,291,1.617,296,4.06,297,1.786,300,2.052,301,1.523,302,1.44,317,0.543,318,2.025,319,1.583,320,1.101,321,2.21,322,1.101,323,1.101,324,1.03,325,1.101,326,1.03,327,1.101,328,1.03,329,1.236,330,1.101,331,1.03,332,1.053,333,1.101,334,1.03,335,1.101,336,1.03,337,1.101,338,1.03,339,1.101,340,1.03,341,1.988,342,1.101,343,1.03,344,1.654,345,1.03,346,1.076,347,1.101,348,1.03,349,1.515,350,1.654,351,1.03,352,1.101,353,1.03,354,1.101,355,1.03,356,1.03,357,1.101,358,1.03,359,1.101,360,1.03,361,1.654,362,1.03,363,1.101,364,1.03,365,1.101,366,1.03,367,1.101,368,1.053,369,1.101,370,1.03,371,1.101,372,1.03,373,1.101,374,1.03,375,1.03,376,1.101,377,2.069,378,1.03,379,1.101,380,1.101,455,2.482,470,1.076,474,1.23,476,0.782,498,1.45,503,3.902,544,1.569,546,1.48,565,2.179,649,1.925,716,2.892,717,3.974,722,4.42,786,2.005,849,2.107,878,1.692,1006,1.852,1108,2.097,1315,1.523,1345,2.784,1359,2.593,1377,2.684,1379,1.786,1396,2.784,1397,2.784,1409,1.852,1522,3.352,1546,2.225,1612,5.324,1614,1.852,1691,3.344,1694,3.904,1697,1.617,1700,5.791,1701,3.984,1702,3.719,1704,3.71,1707,4.664,1708,4.664,1710,2.509,1711,3.014,1712,3.49,1715,3.658,1719,3.71,1720,3.71,1721,3.71,1727,3.49,1745,4.457,1746,3.71,1753,2.322,1757,2.468,1767,3.865,1768,4.917,1772,2.322,1773,2.322,1778,2.651,1780,2.651,1781,2.468,1786,2.651,1789,2.468,1802,2.201,1817,3.308,1825,3.984,1827,3.984,1828,3.984,1834,4.706,1837,5.995,1856,2.651,1862,2.097,1897,2.893,2130,7.495,2175,5.324,2233,3.71,2463,2.895,3060,4.352,3256,2.895,3259,5.229,3260,4.352,3460,2.895,3465,2.895,3466,2.895,3467,5.229,3484,4.352,3511,2.895,3515,4.352,3526,6.549,3527,6.549,4336,8.456,4337,4.911,4338,3.267,4339,4.911,4340,7.389,4341,3.267,4342,3.267,4343,4.911,4344,3.267,4345,3.267,4346,3.267,4347,3.267,4348,3.267,4349,3.267,4350,3.267,4351,3.267,4352,3.267,4353,3.267,4354,3.267,4355,3.267,4356,3.267,4357,3.267,4358,3.267,4359,3.267,4360,3.267,4361,3.267,4362,4.911,4363,3.267,4364,4.911,4365,3.267]],["title/interfaces/ValueObject.html",[0,0.282,2962,3.44]],["body/interfaces/ValueObject.html",[0,0.531,2,1.245,3,0.076,4,0.076,5,0.076,8,0.773,11,0.004,12,0.402,13,0.809,15,2.432,16,1.249,17,0.008,19,0.427,20,2.024,22,3.686,23,0.117,28,1.9,51,3.17,53,1.068,65,1.641,99,0.006,100,0.004,150,0.278,154,2.563,183,1.351,216,2.766,219,1.538,247,1.125,472,2.633,498,1.016,508,3.889,521,4.002,604,2.164,754,4.744,1301,5.49,2422,3.472,2435,3.323,2554,6.404,2561,3.178,2680,3.487,2958,5.73,2959,4.201,2960,4.201,2961,6.534,2962,6.084,2963,4.201,2964,4.577,2965,5.514,2966,5.514,2967,5.391,2968,5.514,2969,4.201,2970,6.786,2971,6.786,2972,5.514,2973,4.201,2974,4.201,2975,6.155,2976,4.201,2977,4.201,2978,4.201,2979,4.201,2980,5.514,2981,4.201,2982,4.201,2983,4.201,2984,4.201,2985,4.201,2986,4.201,2987,4.201,2988,3.68,2989,5.514,2990,4.201,2991,4.201,2992,4.201,2993,4.201,2994,4.201,2995,3.487,2996,4.201]],["title/components/ViewerComponent.html",[101,0.726,378,1.436]],["body/components/ViewerComponent.html",[3,0.099,4,0.044,5,0.044,11,0.004,12,0.359,13,0.549,16,1.069,17,0.008,18,1.403,19,0.701,20,1.652,23,0.044,28,0.653,34,2.09,46,0.709,47,1.479,48,1.552,53,0.914,55,0.853,65,1.101,68,1.744,72,1.588,87,1.002,92,3.154,95,2.437,99,0.004,100,0.005,101,0.894,102,0.948,103,1.307,104,0.928,105,0.969,106,1.013,107,0.871,114,1.658,117,3.045,118,2.272,120,1.519,122,1.554,125,0.928,127,1.218,128,0.753,129,1.888,136,0.835,145,1.59,148,0.991,150,0.257,151,0.333,169,0.948,173,0.948,177,0.948,179,0.094,193,1.326,197,1.109,199,1.195,205,1.603,216,1.486,219,1.409,224,1.494,247,1.712,252,1.652,253,1.364,271,2.119,272,2.437,275,2.698,277,1.927,279,1.363,281,1.658,290,0.871,295,1.588,305,2.717,306,1.588,317,0.5,318,1.423,319,2.306,320,1.013,321,2.119,322,1.013,323,1.013,324,0.948,325,1.013,326,0.948,327,1.013,328,0.948,329,1.277,330,1.013,331,0.948,332,0.969,333,1.013,334,0.948,335,1.013,336,0.948,337,1.013,338,0.948,339,1.013,340,0.948,341,1.89,342,1.013,343,0.948,344,1.554,345,0.948,346,0.991,347,1.013,348,0.948,349,1.423,350,1.554,351,0.948,352,1.013,353,0.948,354,1.013,355,0.948,356,0.948,357,1.013,358,0.948,359,1.013,360,0.948,361,1.554,362,0.948,363,1.013,364,0.948,365,1.013,366,0.948,367,1.013,368,0.969,369,1.013,370,0.948,371,1.013,372,0.948,373,1.013,374,0.948,375,0.948,376,1.013,377,0.948,378,1.983,379,1.013,380,1.013,403,0.853,455,2.726,470,0.991,474,1.575,476,0.894,494,1.444,498,1.508,517,2.033,519,4.216,525,3.542,530,3.212,544,2.693,545,2.521,546,2.09,555,1.588,565,1.703,578,1.225,649,2.717,650,3.376,653,2.932,667,2.44,716,2.033,717,3.778,722,4.236,723,1.878,724,1.927,734,2.285,740,5.463,742,3.484,744,2.026,745,2.121,746,1.878,786,1.846,1006,1.705,1121,1.444,1129,1.93,1132,2.356,1133,1.489,1140,1.772,1142,1.772,1156,1.537,1159,1.846,1160,3.912,1162,2.026,1169,3.179,1174,3.106,1177,4.036,1194,3.861,1211,2.026,1226,3.106,1232,4.036,1261,1.93,1345,2.614,1396,2.614,1397,2.614,1402,3.465,1409,1.705,1410,1.846,1614,1.705,1615,1.644,1673,4.087,1691,3.179,1702,3.565,1802,2.026,2332,2.435,2884,2.666,2913,3.484,3037,2.666,3045,4.554,3116,2.666,3167,2.666,3170,2.272,3193,4.971,3196,2.666,3198,2.666,3199,2.666,3200,4.087,3359,5.406,3648,3.742,4025,3.484,4065,2.138,4082,3.742,4366,3.007,4367,5.609,4368,4.612,4369,5.609,4370,5.609,4371,4.612,4372,6.289,4373,6.289,4374,3.007,4375,4.612,4376,4.612,4377,4.612,4378,3.007,4379,3.007,4380,3.007,4381,3.007,4382,4.612,4383,3.007,4384,3.007,4385,3.007,4386,3.007,4387,3.007,4388,4.612,4389,3.007,4390,3.007,4391,5.609,4392,3.007,4393,3.007,4394,3.007,4395,3.007,4396,2.666,4397,5.609,4398,3.007,4399,3.007,4400,3.007,4401,3.007,4402,4.612,4403,3.007,4404,3.007,4405,3.007,4406,5.609,4407,3.007,4408,4.612,4409,5.609,4410,4.612,4411,2.44,4412,4.612,4413,3.007,4414,3.007,4415,4.612,4416,3.007,4417,3.007,4418,3.007,4419,3.007,4420,4.612,4421,3.007,4422,4.612,4423,4.087,4424,4.612,4425,3.007,4426,4.612,4427,3.007,4428,3.007,4429,5.609,4430,5.609,4431,3.007,4432,2.44,4433,3.007,4434,3.007,4435,3.007,4436,3.007,4437,3.007,4438,3.007,4439,3.007,4440,3.007,4441,3.007,4442,3.007,4443,3.007,4444,3.007,4445,3.007,4446,3.007,4447,3.007,4448,3.007,4449,3.007,4450,3.007,4451,3.007,4452,3.007,4453,3.007,4454,4.971,4455,3.007]],["title/modules/ViewerModule.html",[381,0.651,3215,3.067]],["body/modules/ViewerModule.html",[3,0.099,4,0.099,5,0.099,11,0.006,17,0.008,23,0.099,99,0.007,100,0.006,150,0.362,151,0.747,179,0.21,204,1.997,317,1.123,378,3.001,381,0.965,383,1.914,384,1.914,385,2.586,386,1.997,387,1.997,388,2.586,403,2.274,404,1.799,406,2.084,407,2.423,408,4.385,409,3.45,444,2.765,445,2.275,3045,3.45,3215,6.244,4456,5.985,4457,5.985,4458,5.985,4459,6.753,4460,6.753]],["title/injectables/ViewerState.html",[1924,1.722,3224,3.236]],["body/injectables/ViewerState.html",[0,0.276,3,0.065,4,0.065,5,0.065,11,0.004,12,0.618,13,0.731,15,1.346,16,1.257,17,0.008,18,1.586,19,0.625,20,1.362,23,0.09,28,1.785,48,1.087,53,1.015,80,2.436,87,1.207,99,0.005,100,0.004,125,2.535,127,1.335,129,1.749,141,2.024,150,0.361,151,0.493,154,2.206,156,2.02,179,0.139,197,1.477,205,1.714,219,1.534,224,2.018,233,3.346,247,0.968,252,1.623,253,2.35,272,1.727,329,1.497,455,2.123,472,2.381,474,1.898,476,0.979,494,3.376,498,1.487,517,3.099,530,2.938,565,1.646,597,4.138,604,2.938,756,3.871,835,3.616,1121,2.95,1233,2.86,1332,2.02,1341,3.815,1351,2.626,1372,2.736,1402,2.277,1441,3.168,1520,2.86,1537,5.445,1541,3.168,1554,3.168,1602,3.168,1924,2.324,1925,2.626,1996,5.044,2035,3.771,2036,2.736,2037,2.736,2038,2.277,2079,3.002,2588,3.616,3096,3.168,3097,5.724,3098,3.168,3170,4.641,3224,4.367,3311,2.736,3885,3.367,4188,3.616,4197,3.367,4432,3.616,4461,3.95,4462,6.231,4463,6.231,4464,6.143,4465,6.143,4466,6.143,4467,5.445,4468,4.457,4469,5.445,4470,4.457,4471,5.445,4472,4.457,4473,4.457,4474,4.457,4475,5.445,4476,6.715,4477,5.445,4478,4.457,4479,5.445,4480,5.445,4481,5.445,4482,5.445,4483,5.445,4484,4.457,4485,5.445,4486,5.445,4487,5.445,4488,3.95,4489,3.95,4490,3.95,4491,5.445,4492,3.95,4493,3.616,4494,3.616,4495,7.282,4496,7.282,4497,7.282,4498,3.95,4499,6.231,4500,3.95,4501,3.95,4502,3.95,4503,3.95,4504,3.95,4505,3.95,4506,5.445,4507,5.445,4508,3.95,4509,3.95,4510,3.95,4511,6.231,4512,3.95,4513,3.95,4514,3.95,4515,3.95,4516,3.95,4517,3.95,4518,3.95,4519,3.95]],["title/interfaces/ViewerStateModel.html",[0,0.282,4494,3.695]],["body/interfaces/ViewerStateModel.html",[0,0.303,2,1.177,3,0.071,4,0.071,5,0.071,11,0.004,12,0.612,13,0.779,15,1.479,16,0.978,17,0.008,18,1.672,19,0.609,23,0.096,28,1.784,48,1.159,53,0.625,80,2.676,99,0.005,100,0.004,125,2.021,141,2.157,150,0.367,151,0.542,154,2.423,156,2.218,179,0.153,205,1.539,219,1.556,224,1.965,233,3.208,247,1.064,252,1.703,253,2.428,272,1.897,329,1.546,455,1.479,476,0.78,517,3.252,530,2.046,565,1.808,597,4.411,604,3.083,756,4.024,1121,3.144,1233,3.142,1332,2.218,1341,3.909,1351,2.884,1372,3.005,1402,2.501,1441,3.48,1520,3.142,1541,3.48,1554,3.48,1602,3.48,1924,2.477,1996,4.529,2035,4.02,2036,3.005,2037,3.005,2038,2.501,2079,3.298,2588,3.972,3096,3.48,3097,5.951,3098,3.48,3170,3.699,3224,3.48,3311,3.005,3885,3.699,4188,3.972,4197,3.699,4432,3.972,4461,4.339,4462,5.803,4463,4.339,4467,4.339,4469,4.339,4471,4.339,4475,4.339,4476,5.803,4477,4.339,4479,4.339,4480,4.339,4481,4.339,4482,4.339,4483,4.339,4485,5.803,4486,6.539,4487,5.803,4488,4.339,4489,4.339,4490,4.339,4491,5.803,4492,4.339,4493,3.972,4494,5.313,4495,7.869,4496,7.869,4497,7.869,4498,4.339,4499,6.539,4500,4.339,4501,4.339,4502,4.339,4503,4.339,4504,4.339,4505,4.339,4506,5.803,4507,5.803,4508,4.339,4509,4.339,4510,4.339,4511,6.539,4512,4.339,4513,4.339,4514,4.339,4515,4.339,4516,4.339,4517,4.339,4518,4.339,4519,4.339]],["title/changelog.html",[3897,2.555,4520,2.865,4521,3.077]],["body/changelog.html",[0,0.447,10,2.663,11,0.004,17,0.006,25,3.752,29,4.923,33,1.963,36,2.074,37,3.752,47,1.306,48,1.371,49,2.053,52,4.425,55,2.196,56,2.663,59,2.884,63,2.663,65,1.418,73,2.434,78,2.663,79,2.663,99,0.005,100,0.005,105,1.514,107,1.36,110,4.164,118,2.16,128,2.091,129,1,131,1.332,136,1.768,152,2.256,199,1.866,225,3.339,238,3.481,253,1.883,264,4.164,274,2.663,290,1.36,296,2.969,298,2.4,329,1.199,384,1.332,454,5.623,476,0.749,528,3.752,545,3.481,597,3.165,755,3.015,797,2.884,806,5.186,827,3.549,848,5.863,880,3.549,881,3.91,882,3.015,982,4.164,1052,3.339,1121,3.058,1134,2.4,1287,4.257,1289,3.339,1336,3.015,1348,3.363,1359,3.815,1546,2.886,1560,3.254,1606,2.884,1827,3.812,2054,4.527,2057,6.285,2058,3.812,2259,5.645,2265,3.812,2353,4.164,2370,4.164,2423,5.168,2497,4.164,2510,5.168,2530,3.812,2558,5.645,2581,4.164,2591,4.164,2600,4.164,2771,4.527,2825,3.812,2883,5.168,2938,3.549,3117,3.812,3177,3.812,3257,5.863,3258,4.164,3314,5.645,3320,3.812,3321,3.812,3322,3.812,3328,4.164,3329,4.164,3334,4.164,3338,6.285,3343,3.812,3344,5.168,3349,4.164,3351,3.812,3678,5.645,3683,5.168,3899,3.812,3932,7.556,4140,4.164,4411,3.812,4423,4.164,4454,5.645,4520,4.811,4521,5.168,4522,8.901,4523,7.225,4524,6.369,4525,7.746,4526,4.698,4527,6.369,4528,7.746,4529,4.698,4530,4.698,4531,4.698,4532,4.698,4533,6.369,4534,4.698,4535,4.698,4536,6.369,4537,4.698,4538,4.698,4539,4.698,4540,4.698,4541,6.369,4542,7.567,4543,7.225,4544,6.369,4545,4.698,4546,4.698,4547,4.698,4548,7.746,4549,4.698,4550,4.698,4551,4.698,4552,7.746,4553,4.698,4554,4.698,4555,6.369,4556,7.225,4557,4.698,4558,4.698,4559,4.698,4560,6.369,4561,4.698,4562,6.369,4563,4.698,4564,4.698,4565,4.698,4566,6.369,4567,6.369,4568,6.369,4569,6.369,4570,4.698,4571,4.698,4572,4.698,4573,4.698,4574,4.698,4575,4.698,4576,4.698,4577,4.698,4578,4.698,4579,4.698,4580,4.698,4581,4.164,4582,4.698,4583,4.698,4584,4.698,4585,4.698,4586,4.698,4587,4.698,4588,4.698,4589,4.698,4590,4.164,4591,4.698,4592,4.698,4593,4.698,4594,4.698,4595,4.698,4596,4.698,4597,4.698,4598,4.698,4599,4.698,4600,4.698,4601,6.369,4602,8.096,4603,4.698,4604,4.698,4605,4.698,4606,4.698,4607,4.698,4608,4.698,4609,6.369,4610,4.698,4611,4.164,4612,4.698,4613,4.698,4614,4.698,4615,4.698,4616,4.698,4617,4.698,4618,4.698,4619,4.698,4620,4.698]],["title/dependencies.html",[384,1.554,4621,3.793]],["body/dependencies.html",[11,0.005,17,0.008,47,1.115,48,1.092,72,3.257,99,0.006,100,0.005,136,2.109,151,0.683,153,2.719,319,1.988,384,1.748,411,5.399,445,2.078,492,3.786,495,3.371,512,3.496,514,3.786,515,3.496,530,3.174,619,5.005,622,5.005,625,5.005,627,5.005,629,5.005,704,3.958,756,3.151,864,4.155,968,6.732,970,5.466,973,6.732,975,5.466,976,5.466,1028,5.005,1133,3.053,1138,3.496,1369,5.466,1581,4.384,1841,5.005,1943,5.466,2038,3.151,2548,5.005,2561,3.786,3683,5.005,3804,5.005,4257,5.466,4396,5.466,4622,9.191,4623,6.168,4624,7.596,4625,6.168,4626,6.168,4627,6.168,4628,8.59,4629,6.168,4630,6.168,4631,6.168,4632,8.231,4633,6.168,4634,6.168,4635,6.168,4636,6.168,4637,6.168,4638,6.168,4639,6.168,4640,6.168,4641,6.168,4642,6.168,4643,6.168,4644,6.168,4645,6.168,4646,6.168,4647,6.168,4648,6.168,4649,6.168,4650,6.168,4651,6.168,4652,6.168,4653,6.168,4654,6.168,4655,6.168,4656,6.168,4657,6.168,4658,6.168,4659,6.168,4660,6.168]],["title/miscellaneous/enumerations.html",[4661,2.865,4662,4.858]],["body/miscellaneous/enumerations.html",[6,2.211,11,0.006,12,0.533,17,0.008,20,2.098,36,1.616,47,1.24,72,3.622,99,0.007,100,0.006,141,2.26,166,6.118,606,3.569,736,2.533,1121,3.294,1140,4.771,1971,5.566,2055,6.571,2056,6.118,2771,6.544,3623,5.182,3627,6.992,3628,5.566,3629,5.566,3630,5.566,3631,5.566,3632,5.566,3633,5.566,3634,5.566,3635,5.566,3636,5.566,4661,5.182,4662,6.079,4663,6.859,4664,6.079]],["title/index.html",[12,0.295,3897,2.555,4520,2.865]],["body/index.html",[0,0.507,11,0.006,17,0.007,89,3.935,99,0.007,100,0.006,118,2.241,298,3.576,306,3.696,881,4.297,882,4.492,1287,4.828,1522,3.576,2007,5.68,2054,5.825,3320,6.65,3321,6.65,3322,6.65,3339,7.264,3343,6.65,3344,7.271,3364,6.204,3365,6.204,3373,6.204,3374,6.204,3381,6.204,3382,6.204,4521,5.68,4581,6.204,4665,7,4666,7,4667,7,4668,7,4669,7,4670,7,4671,7]],["title/license.html",[3897,2.555,4520,2.865,4672,3.361]],["body/license.html",[11,0.005,17,0.007,82,2.026,99,0.007,100,0.005,112,4.668,404,1.749,483,3.869,503,3.467,755,4.214,838,3.869,881,4.031,1642,4.844,1741,6.39,2920,5.328,3338,5.328,3351,6.402,3399,5.82,4149,5.82,4542,5.82,4590,5.82,4672,5.82,4673,6.567,4674,8.459,4675,6.567,4676,6.567,4677,7.891,4678,6.567,4679,6.567,4680,6.567,4681,6.567,4682,6.567,4683,7.891,4684,9.358,4685,6.567,4686,6.567,4687,6.567,4688,6.567,4689,6.567,4690,6.567,4691,6.567,4692,6.567,4693,6.567,4694,6.567,4695,6.567,4696,6.567,4697,7.891,4698,6.567,4699,6.567,4700,6.567,4701,6.567,4702,6.567,4703,7.891,4704,7.891,4705,6.567,4706,6.567,4707,6.567,4708,6.567,4709,6.567,4710,6.567,4711,6.567,4712,6.567,4713,6.567,4714,6.567,4715,6.567,4716,6.567,4717,6.567,4718,6.567,4719,6.567,4720,6.567,4721,6.567,4722,6.567,4723,6.567,4724,6.567,4725,6.567,4726,6.567,4727,6.567,4728,6.567]],["title/modules.html",[383,1.767]],["body/modules.html",[11,0.005,17,0.006,99,0.006,100,0.005,136,2.69,382,4.486,383,1.683,393,4.22,394,4.22,395,4,396,3.81,397,4.22,398,4.22,399,4,400,4.22,401,4.22,402,4.22,442,4.22,796,4.22,1324,4.22,1383,4,1413,4.22,1418,4.22,1551,4.22,1624,4.22,1906,4.22,1907,4.22,1908,4.22,2112,7.319,2183,4.22,2372,4.22,2481,4.22,3066,4.22,3071,4,3089,4,3182,4.22,3205,4.22,3214,4.22,3215,4,3398,8.587,3743,4,3744,4.22,3745,4,4169,4.22,4729,9.694]],["title/overview.html",[4065,4.431]],["body/overview.html",[2,0.805,11,0.003,17,0.008,99,0.004,100,0.003,102,2.437,103,0.95,164,4.257,169,2.437,173,2.437,177,2.437,204,0.99,317,0.557,324,2.437,326,2.437,328,2.437,331,2.437,334,2.437,336,2.437,338,2.437,340,2.437,343,2.437,345,2.437,348,2.437,351,2.437,353,2.437,355,2.437,356,2.437,358,2.437,360,2.437,362,2.437,364,2.437,366,2.437,368,2.491,370,2.437,372,2.437,374,2.437,375,2.437,377,2.437,378,2.437,381,0.479,382,6.926,383,0.95,384,0.95,385,1.012,386,0.99,387,0.99,388,1.012,389,2.969,390,2.969,391,2.969,392,2.969,393,5.301,394,5.878,395,5.934,396,5.099,397,5.648,398,6.166,399,5.206,400,6.043,401,5.648,402,5.301,403,1.418,404,0.892,439,2.969,440,2.969,441,2.969,442,5.878,449,1.711,787,2.969,788,2.969,789,2.969,1324,5.301,1325,2.969,1326,2.969,1327,2.969,1383,5.206,1384,2.969,1385,2.969,1386,2.969,1413,5.648,1414,2.969,1415,2.969,1416,2.969,1417,2.969,1418,5.648,1624,5.878,1625,2.969,1626,2.969,1628,2.969,1683,2.969,1684,2.969,1686,2.969,1903,2.969,1904,2.969,1905,2.969,1906,6.043,1907,4.257,1908,5.053,1925,1.973,2123,2.969,2124,2.969,2125,2.969,2183,5.301,2184,2.969,2185,2.969,2186,2.969,2334,2.969,2335,2.969,2336,2.969,2372,6.043,2373,2.969,2374,2.969,2376,2.969,2411,2.969,2412,2.969,2414,2.969,2477,2.969,2478,2.969,2479,2.969,2480,2.969,2481,5.648,3066,5.648,3067,2.969,3068,2.969,3069,2.969,3070,2.969,3071,5.891,3089,5.789,3090,2.969,3091,2.969,3093,2.969,3178,2.969,3179,2.969,3180,2.969,3181,2.969,3182,5.648,3205,5.301,3206,2.969,3207,2.969,3208,2.969,3211,2.969,3212,2.969,3213,2.969,3214,6.338,3215,5.206,3250,2.969,3251,2.969,3253,2.969,3274,2.969,3275,2.969,3277,2.969,3408,2.969,3409,2.969,3410,2.969,3740,2.969,3741,2.969,3742,2.969,3743,5.655,3744,6.166,3745,5.655,3839,2.969,3840,2.969,3841,2.969,4003,2.969,4004,2.969,4006,2.969,4019,2.969,4020,2.969,4021,2.969,4065,2.381,4169,5.301,4170,2.969,4171,2.969,4172,2.969,4175,2.969,4176,2.969,4178,2.969,4212,2.969,4213,2.969,4215,2.969,4248,2.969,4249,2.969,4250,2.969,4279,2.969,4280,2.969,4411,2.718,4456,2.969,4457,2.969,4458,2.969,4493,2.718,4611,2.969,4730,3.349,4731,3.349]],["title/miscellaneous/typealiases.html",[4661,2.865,4732,5.482]],["body/miscellaneous/typealiases.html",[6,2.704,11,0.005,12,0.449,17,0.008,19,0.74,28,1.254,47,1.443,48,1.414,97,3.724,99,0.006,100,0.005,103,1.636,114,2.362,116,3.888,141,2.85,192,3.401,215,4.586,216,2.349,240,2.857,275,2.477,475,4.474,492,3.544,508,2.616,521,2.691,603,5.677,786,3.544,872,3.723,878,1.989,989,2.857,1130,3.888,1131,5.664,1143,4.474,1146,4.677,1151,5.38,1153,4.677,1154,4.677,1156,3.723,1157,4.474,1341,2.616,1694,3.608,1697,2.857,1711,3.723,1715,3.954,1730,3.848,1881,3.888,1882,4.103,1883,4.294,1884,4.103,1885,4.103,1886,4.103,1888,3.888,1891,5.097,1892,5.677,1895,3.888,1896,3.888,1897,3.401,1900,5.677,1901,3.704,2176,3.272,2493,5.116,2494,6.459,2516,6.459,2559,4.361,3095,4.684,3102,5.914,3125,5.914,3227,5.914,3281,4.103,3414,5.116,3431,5.116,3432,6.459,3433,6.459,3434,5.116,3435,6.459,3436,5.116,3437,6.459,3438,5.116,3439,5.116,3440,5.116,3623,4.361,3748,3.544,3849,4.684,3850,5.914,3897,3.888,3898,5.914,4026,4.684,4027,5.914,4064,5.914,4661,4.361,4664,5.116,4733,5.772,4734,8.835,4735,8.971,4736,7.987,4737,5.772,4738,7.288,4739,5.772,4740,5.772]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["0).tolocaledatestring",{"_index":2852,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["0.095rem",{"_index":2330,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0.1.0",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":4660,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":4068,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["0.15rem",{"_index":1622,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["0.17.1",{"_index":4642,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1623,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{}}}],["0.2",{"_index":598,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["0.2.0",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["0.25rem",{"_index":4364,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["0.2rem",{"_index":2365,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.3.2",{"_index":4631,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":2166,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["0.4em",{"_index":2366,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.4rem",{"_index":1608,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.4s",{"_index":4247,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.5",{"_index":556,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["0.5*255",{"_index":710,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["0.5.0",{"_index":3683,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{},"dependencies.html":{}}}],["0.5em",{"_index":1316,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["0.5rem",{"_index":1619,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/InfoDialogComponent.html":{}}}],["0.6.0",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["0.6s",{"_index":4246,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.75rem",{"_index":1621,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.8",{"_index":688,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["0.875rem",{"_index":3402,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["0.8rem",{"_index":1609,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.9*255",{"_index":685,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["000000",{"_index":1611,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["020202",{"_index":1510,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["03",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["03b3d854",{"_index":2606,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["04",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["07a29e4c",{"_index":2612,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["08",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["0a7c1eab007a",{"_index":2626,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["0c1687",{"_index":1519,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["0e368f3075e8",{"_index":2610,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["0e8017bdda58",{"_index":2615,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["0em",{"_index":2404,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["0px",{"_index":2175,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0rem",{"_index":1610,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0s",{"_index":2408,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["0xff",{"_index":4409,"title":{},"body":{"components/ViewerComponent.html":{}}}],["1",{"_index":253,"title":{"interfaces/ColorScheme-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/SpatialSceneNode-1.html":{}},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["1)[0].split('?')[0].replace('.ome.tif",{"_index":2828,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["1*255",{"_index":1077,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["1.0",{"_index":599,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["1.0.0",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":4639,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":4362,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.1.0",{"_index":4648,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4649,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":4638,"title":{},"body":{"dependencies.html":{}}}],["1.125rem",{"_index":1616,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["1.13.0",{"_index":4658,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":4641,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":4647,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":4138,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["1.3.3",{"_index":4643,"title":{},"body":{"dependencies.html":{}}}],["1.3.6",{"_index":4653,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":4646,"title":{},"body":{"dependencies.html":{}}}],["1.55rem",{"_index":2172,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1.5em",{"_index":1321,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["1.5rem",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["1.5s",{"_index":1878,"title":{},"body":{"components/ContentComponent.html":{}}}],["10",{"_index":1100,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["10.0",{"_index":527,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["100",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["1000",{"_index":987,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["10000",{"_index":2884,"title":{},"body":{"classes/HuBMAPEntity.html":{},"components/ViewerComponent.html":{}}}],["101",{"_index":2598,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["103",{"_index":2595,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["104",{"_index":4205,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["10px",{"_index":1378,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["10rem",{"_index":1613,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["10x.svg",{"_index":2807,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["11",{"_index":2600,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["11.5",{"_index":575,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["110",{"_index":2048,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["11e8",{"_index":2608,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["12",{"_index":4611,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["1234",{"_index":3689,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["12rem",{"_index":4207,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["13",{"_index":2049,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["136",{"_index":675,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["14px",{"_index":2159,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{}}}],["15",{"_index":553,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["1500",{"_index":1165,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["152px",{"_index":2174,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1565c0",{"_index":1436,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["15px",{"_index":2328,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["15rem",{"_index":2329,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["16",{"_index":4406,"title":{},"body":{"components/ViewerComponent.html":{}}}],["16.13.1",{"_index":4655,"title":{},"body":{"dependencies.html":{}}}],["16.5rem",{"_index":2405,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["166",{"_index":1439,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["16px",{"_index":2161,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["16px/20px",{"_index":2473,"title":{},"body":{"components/HeaderComponent.html":{}}}],["172",{"_index":2589,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["18rem",{"_index":3836,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["1].rotation",{"_index":663,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["1a9850",{"_index":1461,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["1e88e5",{"_index":3248,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["1em",{"_index":2157,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["1px",{"_index":1379,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":1315,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1s",{"_index":2468,"title":{},"body":{"components/HeaderComponent.html":{},"components/InfoButtonComponent.html":{}}}],["2",{"_index":1121,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["2.0625rem",{"_index":4361,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.2.8",{"_index":4632,"title":{},"body":{"dependencies.html":{}}}],["2.25rem",{"_index":3407,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["2.2rem",{"_index":3249,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["2.5rem",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["20",{"_index":3104,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["20000",{"_index":1166,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["2019",{"_index":4542,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3334,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["203",{"_index":2594,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["20em",{"_index":2323,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["21",{"_index":2575,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["2166ac",{"_index":1453,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["21908a",{"_index":1498,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["22",{"_index":2581,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["22.5rem",{"_index":2406,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["225",{"_index":3138,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["229",{"_index":676,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["24",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["24rem",{"_index":2407,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["25",{"_index":4067,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["25.5rem",{"_index":3246,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["25000",{"_index":4433,"title":{},"body":{"components/ViewerComponent.html":{}}}],["255",{"_index":525,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["25rem",{"_index":3064,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{}}}],["27",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["275s",{"_index":2167,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["28.5rem",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["28px",{"_index":2333,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["2d6379",{"_index":1499,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["2em",{"_index":2363,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["2px",{"_index":2164,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["2rem",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["3",{"_index":597,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"classes/HuBMAPEntity.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["3.0.5",{"_index":4635,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":4644,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4634,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":3245,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["3.6.2",{"_index":4636,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":674,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["308f5ffc",{"_index":2617,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["31",{"_index":4493,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"overview.html":{}}}],["32",{"_index":2574,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["32px",{"_index":2331,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["33",{"_index":2371,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["333",{"_index":1440,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["34",{"_index":4730,"title":{},"body":{"overview.html":{}}}],["35rem",{"_index":2409,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["380px",{"_index":3837,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["393768",{"_index":1500,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3d",{"_index":848,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"changelog.html":{}}}],["3d121f",{"_index":1509,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3rem",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["3s",{"_index":2169,"title":{},"body":{"components/DropdownComponent.html":{}}}],["4",{"_index":2588,"title":{},"body":{"classes/HuBMAPEntity.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["4.17.15",{"_index":4645,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":4640,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":2472,"title":{},"body":{"components/HeaderComponent.html":{}}}],["403",{"_index":2597,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["404",{"_index":3660,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["40px",{"_index":3834,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["42",{"_index":4731,"title":{},"body":{"overview.html":{}}}],["450b57",{"_index":1501,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["4a2484",{"_index":1518,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["4em",{"_index":2403,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["4px",{"_index":1612,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["4rem",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["5",{"_index":1441,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["5.5rem",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["50",{"_index":3065,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{}}}],["500",{"_index":921,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["500px",{"_index":3832,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["542788",{"_index":1470,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["5678",{"_index":3690,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["5bd084c8",{"_index":2619,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["5em",{"_index":2182,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{}}}],["5rem",{"_index":1620,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["5s",{"_index":3242,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["6",{"_index":4432,"title":{},"body":{"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["6.5.5",{"_index":4656,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3105,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/OldRuiData.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["60em",{"_index":3272,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["625rem",{"_index":4166,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["64b5f6",{"_index":1449,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["666",{"_index":1442,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["66bb6a",{"_index":1432,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["67a9cf",{"_index":1454,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["69f0ae",{"_index":2368,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["6bab65",{"_index":1497,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["6e016b",{"_index":1486,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["6rem",{"_index":2463,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["7",{"_index":4404,"title":{},"body":{"components/ViewerComponent.html":{}}}],["7.5rem",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["70px",{"_index":2325,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["73bb26e4",{"_index":2624,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["75",{"_index":2602,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["75rem",{"_index":2326,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["76",{"_index":2603,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["78223c",{"_index":1508,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["7rem",{"_index":1375,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["8",{"_index":4411,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{},"overview.html":{}}}],["8.2.0",{"_index":4633,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":4628,"title":{},"body":{"dependencies.html":{}}}],["8.25rem",{"_index":2467,"title":{},"body":{"components/HeaderComponent.html":{}}}],["8.9",{"_index":596,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["802f",{"_index":2621,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["80cbc4",{"_index":1447,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["83",{"_index":2050,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["833",{"_index":1443,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["85",{"_index":2591,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["86",{"_index":2592,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["883381",{"_index":1517,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["88419d",{"_index":1487,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8bce",{"_index":2609,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["8c6bb1",{"_index":1488,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8c96c6",{"_index":1489,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8em",{"_index":1322,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["8f19",{"_index":2625,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["8rem",{"_index":3244,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["9",{"_index":2719,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["9.1.11",{"_index":4622,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":4624,"title":{},"body":{"dependencies.html":{}}}],["9.5",{"_index":559,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["9.85rem",{"_index":2155,"title":{},"body":{"components/DropdownComponent.html":{}}}],["90",{"_index":2370,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["91cf60",{"_index":1462,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["95",{"_index":4140,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"changelog.html":{}}}],["990000",{"_index":1478,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["998ec3",{"_index":1471,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["9e9e9e",{"_index":3247,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["9ebcda",{"_index":1490,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["9rem",{"_index":4139,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["_afterconnected",{"_index":1928,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["_aggregatedataquerystatus",{"_index":1974,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_blank",{"_index":4160,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["_channelconfigs",{"_index":1182,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_error",{"_index":2937,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":3479,"title":{},"body":{"classes/InitializationState.html":{}}}],["_height",{"_index":1173,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_layers",{"_index":3193,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["_lighting",{"_index":642,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["_listdataquerystatus",{"_index":1975,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_loaders",{"_index":1178,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_measuredmargin",{"_index":3508,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":3502,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":1718,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_onclick",{"_index":465,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onclick(e",{"_index":491,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["_onhover",{"_index":466,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onhover(e",{"_index":499,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["_onviewstatechange",{"_index":467,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onviewstatechange(event",{"_index":501,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["_opened",{"_index":3475,"title":{},"body":{"classes/InitializationState.html":{}}}],["_placement",{"_index":3716,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["_position",{"_index":3471,"title":{},"body":{"classes/InitializationState.html":{}}}],["_self",{"_index":4161,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["_source",{"_index":2689,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["_sources",{"_index":1177,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["_termoccurencesdataquerystatus",{"_index":1976,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_thumbnail.png",{"_index":2829,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["_width",{"_index":1172,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["a.highlighted",{"_index":937,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ability",{"_index":3141,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["about.wrapper",{"_index":3401,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["above",{"_index":4590,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":1614,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["abstract",{"_index":1168,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["acc",{"_index":3930,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["acc[current.id",{"_index":3934,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["accelerate",{"_index":3312,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["accent",{"_index":1311,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["accepting",{"_index":3558,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessible",{"_index":1962,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["accessors",{"_index":1345,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["accordingly",{"_index":2390,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["accordion",{"_index":3048,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion'},{'name",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["accordion.component",{"_index":3075,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["accordion.component.html",{"_index":3050,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.scss",{"_index":3049,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts",{"_index":3047,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:20",{"_index":3053,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:25",{"_index":3052,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:30",{"_index":3054,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:33",{"_index":3056,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.module",{"_index":3094,"title":{},"body":{"modules/ImageViewerContentModule.html":{}}}],["accordion.module.ts",{"_index":3072,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["accordion/image",{"_index":3046,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["accumulated",{"_index":3931,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["accumulator",{"_index":3929,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["acknowledgements",{"_index":3362,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["action",{"_index":4149,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["activate",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":1132,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["active/showing",{"_index":4241,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["activelayers",{"_index":4463,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["actual_component",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["add",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{}}}],["addclass",{"_index":4332,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":3932,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["addhubmapdatatostore",{"_index":861,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{}}}],["additional",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["addjsonldtostore",{"_index":856,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{}}}],["addjsonldtostore(hubmapresponseasjsonld(hubmapdata",{"_index":2897,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["addn3tostore",{"_index":857,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["addrdfxmltostore",{"_index":858,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["adds",{"_index":1557,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/HuBMAPEntity.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{}}}],["addspatialentity",{"_index":943,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialentity(entity",{"_index":952,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialobjectreference",{"_index":944,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialobjectreference(ref",{"_index":954,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialplacement",{"_index":945,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialplacement(placement",{"_index":958,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addsubtree",{"_index":3933,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsubtree(model.nodes",{"_index":3927,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsubtree(nodes",{"_index":3936,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsvgicon",{"_index":2941,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["aed581",{"_index":1451,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["af.svg",{"_index":2810,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["af_preims_registered_thumbnail.png",{"_index":2576,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["af_premxif_registered_thumbnail.png",{"_index":2582,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["afterviewinit",{"_index":717,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["against",{"_index":3547,"title":{},"body":{"classes/InitializationState.html":{}}}],["age",{"_index":63,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["agematch",{"_index":2717,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["agerange",{"_index":76,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["aggregate",{"_index":9,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["aggregatedata",{"_index":1977,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["aggregatedata(filter",{"_index":1988,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["aggregatedataquerystatus",{"_index":1978,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["aggregateresult",{"_index":1,"title":{"interfaces/AggregateResult.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{}}}],["aims",{"_index":3323,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["aliases",{"_index":4733,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["alignment_datetime",{"_index":3665,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_id",{"_index":3666,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_operator_first_name",{"_index":3667,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_operator_last_name",{"_index":3668,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["allcompleted(states",{"_index":2026,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["allergy",{"_index":3390,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["allow",{"_index":917,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["allowing",{"_index":4105,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["allows",{"_index":729,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["along",{"_index":1406,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["alongside",{"_index":4243,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["alpha",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":1737,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["always",{"_index":1764,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["ambientlight",{"_index":509,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["analysis",{"_index":3306,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ancestor_ids",{"_index":2889,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ancestors",{"_index":2498,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["and/or",{"_index":4695,"title":{},"body":{"license.html":{}}}],["angular",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["angular's",{"_index":2239,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["angular/animations",{"_index":1841,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":4623,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":3430,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":2273,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"injectables/ThemingService.html":{}}}],["angular/cdk/portal",{"_index":2274,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["angular/cdk/scrolling",{"_index":4128,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{}}}],["angular/common",{"_index":445,"title":{},"body":{"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1911,"title":{},"body":{"modules/CoreModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["angular/compiler",{"_index":4625,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":3804,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4626,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":3805,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/button",{"_index":2484,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/checkbox",{"_index":1305,"title":{},"body":{"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["angular/material/dialog",{"_index":3269,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":3074,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["angular/material/form",{"_index":2189,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["angular/material/icon",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/ImageViewerContentModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/input",{"_index":3847,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["angular/material/progress",{"_index":4253,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["angular/material/radio",{"_index":4218,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["angular/material/select",{"_index":2191,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["angular/material/theming",{"_index":4162,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["angular/material/toolbar",{"_index":2486,"title":{},"body":{"modules/HeaderModule.html":{}}}],["angular/material/tooltip",{"_index":2488,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/tree",{"_index":4024,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["angular/platform",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4627,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":1838,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animate('1.5s",{"_index":3456,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":1846,"title":{},"body":{"components/ContentComponent.html":{}}}],["animate(0",{"_index":3455,"title":{},"body":{"classes/InitializationState.html":{}}}],["animation",{"_index":2165,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["animations",{"_index":1807,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":1848,"title":{},"body":{"components/ContentComponent.html":{}}}],["annotate",{"_index":3325,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["api",{"_index":880,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["api.hubmapconsortium.org/entities",{"_index":2570,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["app",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/OntologySelectionComponent.html":{},"modules/StoreModule.html":{}}}],["app.component",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["app/core/services/theming/theming.service",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["app_bootstrap_listener",{"_index":4282,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":102,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["appearance",{"_index":3831,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["application/json",{"_index":2876,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["applied",{"_index":70,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/ThemingService.html":{}}}],["apply",{"_index":2355,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applybuttonclick",{"_index":2346,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applyfilter",{"_index":721,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["applyfilter(filter",{"_index":737,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["applyfilters",{"_index":2347,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["applyfilters(filters",{"_index":2393,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["applypropdefaults(props",{"_index":1163,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["applyspatialplacement(tx",{"_index":981,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["applythemeclass",{"_index":4289,"title":{},"body":{"injectables/ThemingService.html":{}}}],["applythemeclass(cls",{"_index":4296,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":382,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":4163,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["args",{"_index":1147,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["args.filter(value",{"_index":2948,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argsgenerator",{"_index":1240,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["argument",{"_index":2946,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["arguments",{"_index":1647,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arising",{"_index":4726,"title":{},"body":{"license.html":{}}}],["array",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{}}}],["array.from(searchresults.values",{"_index":3969,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["arrow",{"_index":2180,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["arxiv",{"_index":3342,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["asking",{"_index":1281,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["assay_types",{"_index":2864,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assaytype",{"_index":2792,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assaytypes",{"_index":2499,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assaytypes.keys()].sort",{"_index":2800,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assaytypes.set(assaytype",{"_index":2794,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assets",{"_index":885,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["assets/histology3.jpg",{"_index":2824,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assets/icons/app/hubmap",{"_index":2119,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["assets/icons/filter.svg",{"_index":2121,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["assets/icons/ico",{"_index":2806,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assets/thumbnails/dr1",{"_index":2831,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assetsapi",{"_index":2500,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["associated",{"_index":838,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["async",{"_index":650,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["at(model.nodes",{"_index":3922,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["at(nodes",{"_index":3977,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["atlas",{"_index":3302,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["atscrollbottom",{"_index":4094,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["attach",{"_index":4343,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["authentication",{"_index":2466,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authorgroup",{"_index":2847,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["authors",{"_index":4719,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1617,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["autocolorindex",{"_index":4496,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["autocomplete",{"_index":3799,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autocompleteopen",{"_index":3762,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autohighlight",{"_index":672,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["available",{"_index":1551,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/InfoDialogComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules.html":{}}}],["await",{"_index":653,"title":{},"body":{"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["awaited",{"_index":3415,"title":{},"body":{"classes/InitializationState.html":{}}}],["award",{"_index":3381,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["b",{"_index":936,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["b.highlighted",{"_index":938,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["b2182b",{"_index":1459,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b35806",{"_index":1475,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b39ddb",{"_index":1433,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b4335a",{"_index":1507,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b56a",{"_index":2614,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["b5c740",{"_index":1496,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["backend",{"_index":91,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["background",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":2923,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":1335,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["bar'},{'name",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["bar.component",{"_index":1388,"title":{},"body":{"modules/ColorBarModule.html":{}}}],["bar.component.html",{"_index":1338,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.scss",{"_index":1337,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts",{"_index":1334,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:18",{"_index":1347,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:23",{"_index":1352,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:28",{"_index":1353,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:33",{"_index":1349,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:38",{"_index":1355,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:43",{"_index":1367,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:55",{"_index":1362,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:64",{"_index":1358,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.module",{"_index":1632,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["bar.module.ts",{"_index":1387,"title":{},"body":{"modules/ColorBarModule.html":{}}}],["bar/color",{"_index":1333,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["bars",{"_index":1371,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["base",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{}}}],["bbox",{"_index":3496,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.left",{"_index":3499,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.right",{"_index":3498,"title":{},"body":{"classes/InitializationState.html":{}}}],["bcbb",{"_index":3397,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bearer",{"_index":2879,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["became",{"_index":3332,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["becomes",{"_index":3358,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["before",{"_index":1558,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{}}}],["being",{"_index":3291,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/StoreModule.html":{}}}],["between",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["bf",{"_index":3633,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["bfd3e6",{"_index":1491,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["bftiff",{"_index":3632,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["bind",{"_index":495,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"dependencies.html":{}}}],["biomolecular",{"_index":3301,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bioportal",{"_index":3337,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bitwise",{"_index":4402,"title":{},"body":{"components/ViewerComponent.html":{}}}],["bl",{"_index":2641,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["black",{"_index":2163,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{}}}],["bladder",{"_index":2671,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["block",{"_index":1682,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/InfoDialogComponent.html":{}}}],["blue",{"_index":4412,"title":{},"body":{"components/ViewerComponent.html":{}}}],["bluered",{"_index":1452,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["bmi",{"_index":64,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["bmi.tofixed(1",{"_index":2733,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["bmirange",{"_index":77,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["board",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["body.id",{"_index":3924,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["bodycanvas",{"_index":720,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["bodyid",{"_index":1053,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["bodymodule",{"_index":393,"title":{"modules/BodyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyui",{"_index":448,"title":{"classes/BodyUI.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{}}}],["bodyuicomponent",{"_index":324,"title":{"components/BodyUiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["bodyuilayer",{"_index":456,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["bodyuimodule",{"_index":442,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyuiprops",{"_index":518,"title":{"interfaces/BodyUIProps.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["bold",{"_index":1318,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["booleaninput",{"_index":3428,"title":{},"body":{"classes/InitializationState.html":{}}}],["boolean}).zoomopacity",{"_index":563,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["bootstrap",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["border",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["both",{"_index":74,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{}}}],["bottom",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["bound",{"_index":2256,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["bounding",{"_index":1089,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["box",{"_index":1606,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"changelog.html":{}}}],["boxes",{"_index":1090,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["branch",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":769,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["brightness",{"_index":1554,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["brightness/transparency",{"_index":1528,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightness[0",{"_index":4416,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightness[1",{"_index":4417,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightness_2",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["brightness_5",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["brightnesschanged",{"_index":1535,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesshigh",{"_index":1540,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesshigh(value",{"_index":1587,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesslow",{"_index":1539,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesslow(value",{"_index":1583,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnessslideroptions",{"_index":1533,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesstoslider(brightness",{"_index":4413,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightnesstoslider(layer.brightness",{"_index":4449,"title":{},"body":{"components/ViewerComponent.html":{}}}],["browse",{"_index":4729,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser'},{'name",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["browser.component",{"_index":4181,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser.component.html",{"_index":4093,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.scss",{"_index":4092,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts",{"_index":4086,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:21",{"_index":4101,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:26",{"_index":4100,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:31",{"_index":4104,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:36",{"_index":4102,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:42",{"_index":4106,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:47",{"_index":4125,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:53",{"_index":4118,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:58",{"_index":4122,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:63",{"_index":4114,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:74",{"_index":4108,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.module",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["browser.module.ts",{"_index":4179,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser/animations",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browser/results",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["browseranimationsmodule",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsermodule",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3329,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["bug",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":2550,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["button",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["button.component",{"_index":2131,"title":{},"body":{"modules/DrawerModule.html":{},"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":3260,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":3259,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":3256,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts:15",{"_index":3264,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4341,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:22",{"_index":4342,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:25",{"_index":4351,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:26",{"_index":3267,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:34",{"_index":4349,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:36",{"_index":4348,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:38",{"_index":4339,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:59",{"_index":4345,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:69",{"_index":4346,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:79",{"_index":4344,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:91",{"_index":4347,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.module",{"_index":2490,"title":{},"body":{"modules/HeaderModule.html":{}}}],["button.module.ts",{"_index":3278,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button/info",{"_index":2489,"title":{},"body":{"modules/HeaderModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{}}}],["button/toggle",{"_index":2130,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["button:active",{"_index":2367,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["c",{"_index":4675,"title":{},"body":{"license.html":{}}}],["c6427e",{"_index":1516,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ca7670",{"_index":1506,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["cached",{"_index":3500,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":4363,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["calc(50",{"_index":3460,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":3492,"title":{},"body":{"classes/InitializationState.html":{}}}],["calculates",{"_index":1658,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"classes/ImageViewerLayer.html":{}}}],["call",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/InfoDialogComponent.html":{}}}],["callback",{"_index":3790,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["called",{"_index":2061,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{}}}],["calls",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["caltech",{"_index":2618,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["candidate",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["canvas",{"_index":519,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":749,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["captures",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["case",{"_index":765,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{}}}],["catch",{"_index":2936,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ccf",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"index.html":{}}}],["ccf.spatial.body.id",{"_index":1063,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.spatial.bothsexes.id",{"_index":1057,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.spatial.female.id",{"_index":1056,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.spatial.femaleorgans.id",{"_index":1061,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.spatial.male.id",{"_index":1055,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.spatial.maleorgans.id",{"_index":1060,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.spatialentity",{"_index":1016,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.spatialobjectreference",{"_index":1014,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.spatialplacement",{"_index":1019,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.x('vhkidney').id",{"_index":3691,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ccf.x('vhleftkidney').id",{"_index":1084,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.x('vhrightkidney').id",{"_index":1081,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.x('vhspleen').id",{"_index":1086,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.x('vhspleencc1').id",{"_index":1092,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.x('vhspleencc2').id",{"_index":1093,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf.x('vhspleencc3').id",{"_index":1094,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccf_annotations",{"_index":3708,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ccfcontexturl",{"_index":877,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfdatabase",{"_index":792,"title":{"classes/CCFDatabase.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccfdatabaseoptions",{"_index":808,"title":{"interfaces/CCFDatabaseOptions.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["ccfdrawer",{"_index":3448,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":1693,"title":{},"body":{"components/ContainerComponent.html":{}}}],["ccfowlurl",{"_index":875,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfowlurl.endswith('.n3",{"_index":904,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfspatialgraph",{"_index":811,"title":{"classes/CCFSpatialGraph.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{}}}],["ccfspatialgraph(this",{"_index":897,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfspatialscene",{"_index":815,"title":{"classes/CCFSpatialScene.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ccfspatialscene(this",{"_index":899,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["cdk",{"_index":2177,"title":{},"body":{"components/DropdownComponent.html":{}}}],["cdkportal",{"_index":2266,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":4123,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["cdr",{"_index":1707,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["cdr.markforcheck",{"_index":1781,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ceil",{"_index":1593,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["cell",{"_index":3314,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["center",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["centers",{"_index":3371,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["centimeter",{"_index":985,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["cff",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{}}}],["change",{"_index":1522,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"components/ToggleButtonComponent.html":{},"index.html":{}}}],["changed",{"_index":1560,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":1396,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy",{"_index":1409,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1397,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectorref",{"_index":1708,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["changelog",{"_index":4521,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.color",{"_index":4504,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.customizedcolor",{"_index":4508,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.dataloading",{"_index":4129,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["changes.push",{"_index":4515,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.selected",{"_index":4509,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.selection",{"_index":2286,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changes.valuerange",{"_index":2284,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["channel",{"_index":1697,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["channelconfig",{"_index":1129,"title":{"interfaces/ChannelConfig.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["channelconfigs",{"_index":1180,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelison",{"_index":4074,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelison.push(active",{"_index":4079,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelnames",{"_index":1161,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["channelnames.length",{"_index":1257,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["channels",{"_index":3596,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["channelschange",{"_index":4373,"title":{},"body":{"components/ViewerComponent.html":{}}}],["channelschange.emit(!isrgb",{"_index":4444,"title":{},"body":{"components/ViewerComponent.html":{}}}],["charge",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["check",{"_index":4111,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["checkbox",{"_index":1272,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["checkbox'},{'name",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["checkbox.component",{"_index":1330,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["checkbox.component.html",{"_index":1274,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1273,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.mat",{"_index":1310,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":326,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["checkboxes",{"_index":1270,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxmodule",{"_index":1324,"title":{"modules/CheckboxModule.html":{}},"body":{"modules/CheckboxModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["checkboxonchange",{"_index":3146,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["checkboxonchange(layer",{"_index":3156,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["checked",{"_index":1288,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["checkmark",{"_index":1312,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checks",{"_index":1831,"title":{},"body":{"components/ContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["child",{"_index":2176,"title":{},"body":{"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["children",{"_index":2435,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["choices",{"_index":2142,"title":{},"body":{"components/DropdownComponent.html":{}}}],["choose",{"_index":1645,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["chronological",{"_index":2727,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["circle",{"_index":1412,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["claim",{"_index":4722,"title":{},"body":{"license.html":{}}}],["class",{"_index":179,"title":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"classes/PictureInPictureViewer.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["class.ccf",{"_index":4337,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":1812,"title":{},"body":{"components/ContentComponent.html":{}}}],["classend",{"_index":3466,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":449,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"classes/PictureInPictureViewer.html":{},"overview.html":{}}}],["classname",{"_index":1773,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["clean",{"_index":3604,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["cleans",{"_index":1727,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["clear",{"_index":1194,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["click",{"_index":1653,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["clicked",{"_index":1664,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/InfoButtonComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["clickpos",{"_index":1677,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["clicks",{"_index":1655,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["clientheight",{"_index":4430,"title":{},"body":{"components/ViewerComponent.html":{}}}],["clientwidth",{"_index":4429,"title":{},"body":{"components/ViewerComponent.html":{}}}],["close",{"_index":1665,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{}}}],["close(target",{"_index":1672,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["closed",{"_index":3227,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["closeexpanded",{"_index":3524,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeopendone",{"_index":3532,"title":{},"body":{"classes/InitializationState.html":{}}}],["closes",{"_index":1654,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{}}}],["closesliderpopover(target",{"_index":2301,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["closeviewer",{"_index":3080,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["cloud_download",{"_index":2460,"title":{},"body":{"components/HeaderComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["cls",{"_index":4299,"title":{},"body":{"injectables/ThemingService.html":{}}}],["cluster_appmodule",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bodymodule",{"_index":439,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_exports",{"_index":441,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_imports",{"_index":440,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":787,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":788,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":789,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule",{"_index":1325,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_declarations",{"_index":1326,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_exports",{"_index":1327,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule",{"_index":1384,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule_declarations",{"_index":1385,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule_exports",{"_index":1386,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule",{"_index":1414,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_declarations",{"_index":1415,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_exports",{"_index":1417,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_imports",{"_index":1416,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule",{"_index":1625,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_declarations",{"_index":1626,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_exports",{"_index":1628,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_imports",{"_index":1627,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["cluster_colorschemepopupmodule",{"_index":1683,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_declarations",{"_index":1684,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_exports",{"_index":1686,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_imports",{"_index":1685,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["cluster_coremodule",{"_index":1903,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":1905,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1904,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":2123,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":2124,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":2125,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule",{"_index":2184,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":2185,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":2186,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule",{"_index":2334,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_declarations",{"_index":2335,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_exports",{"_index":2336,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule",{"_index":2373,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_declarations",{"_index":2374,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_exports",{"_index":2376,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_imports",{"_index":2375,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["cluster_filterspopovermodule",{"_index":2411,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_declarations",{"_index":2412,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_exports",{"_index":2414,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_imports",{"_index":2413,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["cluster_headermodule",{"_index":2477,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":2478,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":2480,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_imports",{"_index":2479,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule",{"_index":3067,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_declarations",{"_index":3068,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_exports",{"_index":3070,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_imports",{"_index":3069,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule",{"_index":3090,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_declarations",{"_index":3091,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_exports",{"_index":3093,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_imports",{"_index":3092,"title":{},"body":{"modules/ImageViewerContentModule.html":{}}}],["cluster_imageviewerlayersmodule",{"_index":3178,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_declarations",{"_index":3179,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_exports",{"_index":3181,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_imports",{"_index":3180,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule",{"_index":3206,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule_declarations",{"_index":3207,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule_exports",{"_index":3208,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule",{"_index":3211,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule_exports",{"_index":3213,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule_imports",{"_index":3212,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule",{"_index":3250,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_declarations",{"_index":3251,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_exports",{"_index":3253,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_imports",{"_index":3252,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{}}}],["cluster_infobuttonmodule",{"_index":3274,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":3275,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":3277,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":3276,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["cluster_infodialogmodule",{"_index":3408,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":3409,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":3410,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule",{"_index":3740,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_exports",{"_index":3742,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_imports",{"_index":3741,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule",{"_index":3839,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_declarations",{"_index":3840,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_exports",{"_index":3841,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule",{"_index":4003,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_declarations",{"_index":4004,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_exports",{"_index":4006,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_imports",{"_index":4005,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["cluster_ontologytreemodule",{"_index":4019,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_declarations",{"_index":4020,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_exports",{"_index":4021,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule",{"_index":4170,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule_declarations",{"_index":4171,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule_exports",{"_index":4172,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule",{"_index":4175,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_declarations",{"_index":4176,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_exports",{"_index":4178,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_imports",{"_index":4177,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["cluster_schemedropdownmodule",{"_index":4212,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_declarations",{"_index":4213,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_exports",{"_index":4215,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_imports",{"_index":4214,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["cluster_spinneroverlaymodule",{"_index":4248,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_declarations",{"_index":4249,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_exports",{"_index":4250,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":4279,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":4280,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_viewermodule",{"_index":4456,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_declarations",{"_index":4457,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_exports",{"_index":4458,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["code",{"_index":3117,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["codex.svg",{"_index":2812,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["codifies",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":3429,"title":{},"body":{"classes/InitializationState.html":{}}}],["collapse",{"_index":3527,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":3438,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":3523,"title":{},"body":{"classes/InitializationState.html":{}}}],["color",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["colorbarcomponent",{"_index":328,"title":{"components/ColorBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorbarmodule",{"_index":1383,"title":{"modules/ColorBarModule.html":{}},"body":{"modules/ColorBarModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["colorchange",{"_index":1344,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["colorchanged",{"_index":1339,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{}}}],["colorchanged(color",{"_index":1357,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{}}}],["coloridx",{"_index":1524,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["coloring",{"_index":4221,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["colorpickerlaunchercomponent",{"_index":331,"title":{"components/ColorPickerLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorpickerlaunchermodule",{"_index":1413,"title":{"modules/ColorPickerLauncherModule.html":{}},"body":{"modules/ColorPickerLauncherModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules.html":{},"overview.html":{}}}],["colors",{"_index":1351,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["colors.foreach((color",{"_index":3136,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["colors[order[index",{"_index":4518,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["colorscheme",{"_index":1341,"title":{"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{}},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["colorscheme.colors",{"_index":1354,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["colorschemecontentscomponent",{"_index":334,"title":{"components/ColorSchemeContentsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorschemecontentsmodule",{"_index":1624,"title":{"modules/ColorSchemeContentsModule.html":{}},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["colorschemepopupcomponent",{"_index":336,"title":{"components/ColorSchemePopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorschemepopupmodule",{"_index":1418,"title":{"modules/ColorSchemePopupModule.html":{}},"body":{"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["colorschemeselection",{"_index":1523,"title":{"interfaces/ColorSchemeSelection.html":{}},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/SchemeDropdownComponent.html":{}}}],["colorvalues",{"_index":4075,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["colorvalues.push(color",{"_index":4080,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["column",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["combined",{"_index":1901,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":2020,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["combines",{"_index":2066,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["come",{"_index":2763,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["coming",{"_index":2497,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["comlink",{"_index":1943,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["comma",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["common",{"_index":3320,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["common_options",{"_index":1591,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["commonmodule",{"_index":444,"title":{},"body":{"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{}}}],["compare",{"_index":2090,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["compatibility",{"_index":4276,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":2056,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"miscellaneous/enumerations.html":{}}}],["completion",{"_index":3530,"title":{},"body":{"classes/InitializationState.html":{}}}],["componenet",{"_index":3757,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["component",{"_index":101,"title":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["component's",{"_index":2218,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["component.injector.get(overlaycontainer",{"_index":4330,"title":{},"body":{"injectables/ThemingService.html":{}}}],["component.injector.get(renderer2",{"_index":4328,"title":{},"body":{"injectables/ThemingService.html":{}}}],["component.injector.get(themingservice",{"_index":4317,"title":{},"body":{"injectables/ThemingService.html":{}}}],["component.location.nativeelement",{"_index":4329,"title":{},"body":{"injectables/ThemingService.html":{}}}],["component_template",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["componentref",{"_index":4302,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["composes",{"_index":3884,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["compositelayer",{"_index":605,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["computational",{"_index":3307,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["computations",{"_index":3852,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computes",{"_index":2271,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["concept",{"_index":3355,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["condition",{"_index":3961,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["conditions",{"_index":4702,"title":{},"body":{"license.html":{}}}],["config",{"_index":1220,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["config.isolated",{"_index":3598,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["configs",{"_index":1261,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["configuration",{"_index":3570,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connect",{"_index":798,"title":{},"body":{"classes/CCFDatabase.html":{},"injectables/MessageService.html":{}}}],["connect(options",{"_index":821,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["connect(source",{"_index":3606,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":1732,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connectedposition",{"_index":2272,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["connecting",{"_index":1957,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connection",{"_index":4727,"title":{},"body":{"license.html":{}}}],["connects",{"_index":823,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consider",{"_index":4274,"title":{},"body":{"modules/StoreModule.html":{}}}],["console.warn(`unable",{"_index":2898,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["consortium",{"_index":4676,"title":{},"body":{"license.html":{}}}],["const",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["construction",{"_index":3313,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor",{"_index":470,"title":{},"body":{"classes/BodyUI.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["constructor(@inject(message_service_config",{"_index":3597,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["constructor(@optional",{"_index":1916,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["constructor(config",{"_index":3618,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(container",{"_index":4374,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor(data",{"_index":726,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["constructor(db",{"_index":948,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{}}}],["constructor(deckprops",{"_index":471,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["constructor(defaulttheme",{"_index":4294,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(dialog",{"_index":3262,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["constructor(dialogref",{"_index":3287,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(drawer",{"_index":4338,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(http",{"_index":3858,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["constructor(messageservice",{"_index":1706,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["constructor(ontologysearchservice",{"_index":3987,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["constructor(ontologyservice",{"_index":3771,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(options",{"_index":807,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["constructor(original",{"_index":2421,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(overlay",{"_index":2215,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["constructor(private",{"_index":1006,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/InfoButtonComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["constructor(props",{"_index":1187,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["constructor(public",{"_index":894,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{},"components/OntologySearchComponent.html":{}}}],["constructor(readonly",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/FlatNode.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["constructor(registry",{"_index":2950,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(source",{"_index":1986,"title":{},"body":{"injectables/DataState.html":{},"classes/MessageChannel.html":{}}}],["constructor(state",{"_index":3223,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["constructorparameters[0",{"_index":1149,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["contain",{"_index":1889,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ImageViewerLayersComponent.html":{}}}],["container",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["container.component.html",{"_index":1696,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":1695,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":2129,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":338,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["containerpayload",{"_index":1892,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":1785,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["containing",{"_index":51,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/ValueObject.html":{}}}],["contains",{"_index":1302,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{}}}],["contains_sequence",{"_index":2867,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["containshumangeneticsequences",{"_index":2501,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["containssequence",{"_index":2788,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["content",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["content'},{'name",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["content.component",{"_index":2380,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["content.component.html",{"_index":2345,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.scss",{"_index":1808,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts",{"_index":2343,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:16",{"_index":2350,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:21",{"_index":2349,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:26",{"_index":2352,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:31",{"_index":2351,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:36",{"_index":3081,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:38",{"_index":2357,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:39",{"_index":3082,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:44",{"_index":3083,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:46",{"_index":2354,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.module",{"_index":2416,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["content.module.ts",{"_index":2377,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["content/content.component",{"_index":1756,"title":{},"body":{"components/ContainerComponent.html":{},"modules/DrawerModule.html":{}}}],["content/filters",{"_index":2342,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{}}}],["content/image",{"_index":3078,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["content1",{"_index":1698,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":1699,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content?.contains(target",{"_index":1674,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["contentchildren",{"_index":1752,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":1734,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":1743,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":340,"title":{"components/ContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":1881,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["contentelement",{"_index":1636,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["contents",{"_index":1530,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["contents'},{'name",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["contents.component",{"_index":1631,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["contents.component.html",{"_index":1532,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.scss",{"_index":1531,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts",{"_index":1526,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:106",{"_index":1555,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:118",{"_index":1563,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:21",{"_index":1544,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:26",{"_index":1550,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:31",{"_index":1547,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:36",{"_index":1552,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:41",{"_index":1565,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:46",{"_index":1566,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:51",{"_index":1568,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:52",{"_index":1571,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:59",{"_index":1573,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:60",{"_index":1576,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:67",{"_index":1578,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:68",{"_index":1580,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:70",{"_index":1542,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:91",{"_index":1553,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:98",{"_index":1561,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.module",{"_index":1689,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["contents.module.ts",{"_index":1629,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["contents/color",{"_index":1525,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{}}}],["contentsvisible",{"_index":2198,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["context",{"_index":876,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["context.jsonld",{"_index":891,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/OldRuiData.html":{}}}],["continues",{"_index":3356,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contract",{"_index":3399,"title":{},"body":{"components/InfoDialogComponent.html":{},"license.html":{}}}],["control",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{}}}],["controller",{"_index":529,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["controls",{"_index":1660,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{}}}],["convenience",{"_index":452,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["converted",{"_index":2682,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["convertoldruitojsonld",{"_index":2565,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["convertoldruitojsonld(data",{"_index":3686,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["convertoldruitojsonld(ruilocation",{"_index":2769,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["converts",{"_index":2680,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"classes/ImageViewerLayer.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OldRuiData.html":{},"interfaces/ValueObject.html":{}}}],["coordinate",{"_index":3321,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["coordinate_system",{"_index":616,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["coordinate_system.cartesian",{"_index":678,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["coordinatesystem",{"_index":677,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["coordination/office",{"_index":3379,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["copied",{"_index":3639,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["copies",{"_index":4697,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4683,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4674,"title":{},"body":{"license.html":{}}}],["core",{"_index":1917,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/color",{"_index":3084,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["core/models/image",{"_index":1410,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["core/models/ontology",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/data",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{}}}],["core/services/ontology",{"_index":3807,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/theming/theming.service",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/data/data.state",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{}}}],["core/store/ontology/ontology.state",{"_index":3999,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["core/store/viewer/viewer.state",{"_index":3237,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["coremodule",{"_index":394,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponds",{"_index":1395,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["count",{"_index":14,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["counter",{"_index":3577,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["counts",{"_index":844,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["cover",{"_index":4165,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["coverage",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["covid",{"_index":3635,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["covidtiff",{"_index":3634,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["create",{"_index":2217,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["create(original",{"_index":2427,"title":{},"body":{"classes/FlatNode.html":{}}}],["created",{"_index":2257,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["createentitycollections",{"_index":4487,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["creategraph",{"_index":946,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["createlayerconfigs",{"_index":1224,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["createlayers",{"_index":4464,"title":{},"body":{"injectables/ViewerState.html":{}}}],["createlayers(ids",{"_index":4467,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["createloader",{"_index":1139,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createloader(source.type",{"_index":1210,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["createmodel(nodemap",{"_index":3913,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["createometiffloader",{"_index":3626,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createruiorganlookup",{"_index":2630,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["creates",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewerLayer.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{}}}],["createselectionlabel(ontolgyselection",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["createvivviews",{"_index":1223,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["createzarrloader",{"_index":3624,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createzarrloader(info",{"_index":3643,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["creating",{"_index":1759,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["creation",{"_index":3266,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creation_date",{"_index":2850,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator",{"_index":2848,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_first_name",{"_index":3703,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_last_name",{"_index":3704,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_orcid",{"_index":3705,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["credits",{"_index":4667,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":2221,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["css",{"_index":4396,"title":{},"body":{"components/ViewerComponent.html":{},"dependencies.html":{}}}],["ctrlclick",{"_index":587,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{}}}],["ctrlkey",{"_index":585,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["cubegeometry",{"_index":628,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["cubes",{"_index":691,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["cuboid",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":736,"title":{},"body":{"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"miscellaneous/enumerations.html":{}}}],["currently",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"injectables/DataSourceService.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["currentstate",{"_index":592,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["currentstate.data",{"_index":601,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["currentstate.zoomopacity",{"_index":600,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["currentstates",{"_index":1242,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["currentstates[view.id",{"_index":1244,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["currentviewstate",{"_index":1266,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["cursor",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["customizable",{"_index":3175,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["customizedcolor",{"_index":1602,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["cyberinfrastructure",{"_index":4669,"title":{},"body":{"index.html":{}}}],["d",{"_index":681,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["d.organ",{"_index":2752,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["d.scenegraph",{"_index":693,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["d.uuid",{"_index":2784,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["d.wireframe",{"_index":694,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["d.x",{"_index":3710,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d.y",{"_index":3712,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d.z",{"_index":3714,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d1e5f0",{"_index":1455,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d47d60",{"_index":1515,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d7301f",{"_index":1479,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d73027",{"_index":1467,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d8daeb",{"_index":1472,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d9ef8b",{"_index":1463,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["damages",{"_index":4723,"title":{},"body":{"license.html":{}}}],["dark",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data",{"_index":36,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["data.aggregatedata$.subscribe",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["data.alignment_datetime",{"_index":3707,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_id",{"_index":3700,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_first_name",{"_index":3701,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_last_name",{"_index":3702,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_orcid",{"_index":3706,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.colorscheme.colors[0",{"_index":3129,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data.created_by_user_displayname",{"_index":2849,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.description",{"_index":2742,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.display_doi",{"_index":2740,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.filter$.pipe(pluck('ontologyterms",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["data.group_name",{"_index":2748,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.group_uuid",{"_index":2744,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.id",{"_index":3128,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data.label",{"_index":3087,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["data.length",{"_index":670,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["data.listdata$.subscribe",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["data.organname",{"_index":3086,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["data.reference_organ_id",{"_index":3688,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.rui_location",{"_index":2760,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.specimen_type",{"_index":2709,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.storage.googleapis.com/test",{"_index":4399,"title":{},"body":{"components/ViewerComponent.html":{}}}],["data.termoccurencesdata$.subscribe",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["data.tissue_object_rotation",{"_index":3695,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_object_size",{"_index":3694,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point",{"_index":3696,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.x",{"_index":3680,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.y",{"_index":3681,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.z",{"_index":3682,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.ts",{"_index":2494,"title":{},"body":{"classes/HuBMAPEntity.html":{},"miscellaneous/typealiases.html":{}}}],["data.ts:100",{"_index":2543,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:101",{"_index":2520,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:102",{"_index":2526,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:104",{"_index":2536,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:105",{"_index":2532,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:107",{"_index":2547,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:108",{"_index":2519,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:109",{"_index":2523,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:110",{"_index":2533,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:111",{"_index":2539,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:112",{"_index":2527,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:113",{"_index":2528,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:115",{"_index":2535,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:116",{"_index":2534,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:117",{"_index":2545,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:118",{"_index":2544,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:120",{"_index":2538,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:121",{"_index":2537,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:123",{"_index":2540,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:124",{"_index":2541,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:125",{"_index":2542,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:126",{"_index":2549,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:127",{"_index":2525,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:128",{"_index":2521,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:129",{"_index":2524,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:130",{"_index":2551,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:131",{"_index":2552,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:132",{"_index":2546,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:133",{"_index":2518,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:135",{"_index":2522,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:309",{"_index":2553,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:99",{"_index":2529,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data/data.state",{"_index":4259,"title":{},"body":{"modules/StoreModule.html":{}}}],["data/hubmap/pyramid_0.0.2/spraggins.ome.tif",{"_index":4400,"title":{},"body":{"components/ViewerComponent.html":{}}}],["data?.length",{"_index":560,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["data_types",{"_index":2862,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["dataaction",{"_index":1996,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["database",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["database.ts",{"_index":794,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["database.ts:106",{"_index":834,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:116",{"_index":829,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:126",{"_index":854,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:136",{"_index":852,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:147",{"_index":839,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:161",{"_index":832,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:171",{"_index":841,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:181",{"_index":837,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:190",{"_index":846,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:47",{"_index":819,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:49",{"_index":812,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:51",{"_index":809,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:58",{"_index":814,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:70",{"_index":822,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database/src/lib/ccf",{"_index":793,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["database/src/lib/hubmap/hubmap",{"_index":2493,"title":{},"body":{"classes/HuBMAPEntity.html":{},"miscellaneous/typealiases.html":{}}}],["database/src/lib/hubmap/old",{"_index":3662,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["database/src/lib/interfaces.ts",{"_index":7,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["database/src/lib/interfaces.ts:90",{"_index":1923,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/interfaces.ts:92",{"_index":1921,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/interfaces.ts:94",{"_index":1922,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/spatial",{"_index":4219,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["datafactory",{"_index":859,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["dataloading",{"_index":4097,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["dataquerystate",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["dataquerystate.completed",{"_index":2027,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["dataquerystate.running",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["dataset",{"_index":2531,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["datasource",{"_index":92,"title":{"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/ListResult.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchableItem.html":{},"components/ViewerComponent.html":{}}}],["datasourceservice",{"_index":160,"title":{"injectables/DataSourceService.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datastate",{"_index":167,"title":{"injectables/DataState.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"modules/StoreModule.html":{}}}],["datastatemodel",{"_index":2078,"title":{"interfaces/DataStateModel.html":{}},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datatypes",{"_index":2502,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["datatypes.get('codex_cytokit')?.uuid",{"_index":2834,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["datatypes.get('salmon_rnaseq_10x')?.uuid",{"_index":2837,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["datatypes.has('codex_cytokit",{"_index":2833,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["datatypes.has('salmon_rnaseq_10x",{"_index":2836,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["datatypes.keys()].sort",{"_index":2798,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["datatypes.set(t",{"_index":2791,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["dataurl",{"_index":2868,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["date",{"_index":4222,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["date(data.create_timestamp",{"_index":2851,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["date(data.last_modified_timestamp",{"_index":2854,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["db",{"_index":950,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialSceneNode.html":{}}}],["db.getaggregateresults(filter",{"_index":1968,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getimageviewerdata(iri",{"_index":1970,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getlistresults(filter",{"_index":1967,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytermoccurences(filter",{"_index":1969,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["dboptions",{"_index":1929,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["deal",{"_index":4686,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":4728,"title":{},"body":{"license.html":{}}}],["debug",{"_index":90,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{}}}],["debugging",{"_index":88,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["decided",{"_index":4153,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["decides",{"_index":1299,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["decisions",{"_index":3152,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["deck",{"_index":457,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["deck(props",{"_index":548,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["deck.gl/core",{"_index":512,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["deck.gl/geo",{"_index":4629,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":4630,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":619,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["deckcallbackargs",{"_index":1151,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["deckprops",{"_index":475,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["declarations",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["decompress",{"_index":655,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["decoration",{"_index":2469,"title":{},"body":{"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["decorator",{"_index":515,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"dependencies.html":{}}}],["decorators",{"_index":494,"title":{},"body":{"classes/BodyUI.html":{},"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"injectables/DataState.html":{},"components/DualSliderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/InfoDialogComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["deep",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["def5fd76",{"_index":2628,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["default",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["default_ccf_db_options",{"_index":813,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["default_color_schemes",{"_index":1520,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["default_color_schemes[0",{"_index":4188,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["default_filter",{"_index":2047,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["default_icons",{"_index":2117,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default_theme",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["defaultchannelconfig",{"_index":1162,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["defaulticondefinition",{"_index":2099,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["defaultorder",{"_index":3097,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaults",{"_index":2079,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaultscheme",{"_index":4495,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaulttheme",{"_index":4288,"title":{},"body":{"injectables/ThemingService.html":{}}}],["deferred",{"_index":3416,"title":{},"body":{"classes/InitializationState.html":{}}}],["deficient",{"_index":637,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["defined",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"changelog.html":{}}}],["definition",{"_index":2103,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":2928,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":2927,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["degree",{"_index":3732,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["delay",{"_index":916,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["delete",{"_index":3917,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["demo",{"_index":3359,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["demo_source",{"_index":4397,"title":{},"body":{"components/ViewerComponent.html":{}}}],["department",{"_index":3394,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dependencies",{"_index":384,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":2495,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["descendant_ids",{"_index":2890,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["descendants",{"_index":1735,"title":{},"body":{"components/ContainerComponent.html":{},"classes/HuBMAPEntity.html":{}}}],["describes",{"_index":1278,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["describing",{"_index":4228,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{}}}],["desired",{"_index":1114,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["detail",{"_index":4071,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["detailed",{"_index":3218,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["detailheight",{"_index":4435,"title":{},"body":{"components/ViewerComponent.html":{}}}],["details",{"_index":3258,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["detailview",{"_index":4061,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["detailwidth",{"_index":4434,"title":{},"body":{"components/ViewerComponent.html":{}}}],["detect",{"_index":2287,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detected",{"_index":2237,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detection",{"_index":1719,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":1712,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["determine",{"_index":4121,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["determines",{"_index":1350,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["develop",{"_index":3303,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["developed",{"_index":4668,"title":{},"body":{"index.html":{}}}],["development",{"_index":1959,"title":{},"body":{"injectables/DataSourceService.html":{},"components/InfoDialogComponent.html":{}}}],["developmentmode",{"_index":4273,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":4581,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":3265,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["dialog's",{"_index":3290,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog'},{'name",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dialog.component",{"_index":3270,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":3285,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.scss",{"_index":3284,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts",{"_index":3279,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":3289,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":3296,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":3295,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":3293,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.module",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":3411,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialogref",{"_index":3286,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogue",{"_index":3268,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["didzoom",{"_index":564,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["different",{"_index":3559,"title":{},"body":{"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{}}}],["dim",{"_index":1120,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["dimension",{"_index":4224,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["dimension_units",{"_index":3715,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["dimensions",{"_index":1115,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{}}}],["direct",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["directedgraph",{"_index":951,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["direction",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["directive",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directives",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directly",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["director",{"_index":3380,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["disable",{"_index":632,"title":{},"body":{"classes/BodyUILayer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["disabled",{"_index":4422,"title":{},"body":{"components/ViewerComponent.html":{}}}],["discrete",{"_index":1376,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{}}}],["diseases",{"_index":3392,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["display",{"_index":49,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":1348,"title":{},"body":{"components/ColorBarComponent.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["displayformatter",{"_index":3766,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displayformatter(option",{"_index":3779,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displaying",{"_index":3190,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{}}}],["displaylabel",{"_index":3896,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["displays",{"_index":1392,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["distinct",{"_index":2028,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["distribute",{"_index":4693,"title":{},"body":{"license.html":{}}}],["div",{"_index":1393,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["doc",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1652,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["document:click",{"_index":1640,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["document:click(target",{"_index":1649,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["documentation",{"_index":3338,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"license.html":{}}}],["docvalue_fields",{"_index":2893,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["doi",{"_index":2503,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["dom",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["domsanitizer",{"_index":2906,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["don't",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["donor",{"_index":2504,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["donor_id",{"_index":2855,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["donordescription",{"_index":2712,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["donordescription.includes('female",{"_index":2715,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["donordescription.includes('male",{"_index":2716,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["donordescription.match(/age",{"_index":2718,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["down",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["download",{"_index":37,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["downloadclicked",{"_index":2446,"title":{},"body":{"components/HeaderComponent.html":{}}}],["downloadtooltip",{"_index":39,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["downloadurl",{"_index":38,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["dr1_vu_thumbs",{"_index":2571,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["dr1_vu_thumbs.has(thumb",{"_index":2830,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["dracoloader",{"_index":623,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["dracoworkerloader",{"_index":624,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["drawer",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["drawer.close",{"_index":4359,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":4358,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":3449,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":3450,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":4360,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":1794,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":1757,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":1864,"title":{},"body":{"components/ContentComponent.html":{}}}],["drawercontainerschanged",{"_index":1888,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawerexpanded",{"_index":2387,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["drawerinitialized",{"_index":1895,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":395,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":1900,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":1793,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":1896,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":2133,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown'},{'name",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dropdown.component",{"_index":2192,"title":{},"body":{"modules/DropdownModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["dropdown.component.html",{"_index":2135,"title":{},"body":{"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2134,"title":{},"body":{"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":4184,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:18",{"_index":4190,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:23",{"_index":4189,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:28",{"_index":4191,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:33",{"_index":4196,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:38",{"_index":4192,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:46",{"_index":4194,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.module",{"_index":3186,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["dropdown.module.ts",{"_index":4216,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["dropdown/scheme",{"_index":3185,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{}}}],["dropdowncomponent",{"_index":343,"title":{"components/DropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["dropdownmodule",{"_index":2183,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["dual",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dualslidercomponent",{"_index":345,"title":{"components/DualSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["dualslidermodule",{"_index":396,"title":{"modules/DualSliderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["due",{"_index":636,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["duration",{"_index":1877,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["during",{"_index":71,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"injectables/ThemingService.html":{}}}],["dynamic",{"_index":1369,"title":{},"body":{"components/ColorBarComponent.html":{},"dependencies.html":{}}}],["dynamically",{"_index":1391,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["e",{"_index":497,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/HuBMAPEntity.html":{}}}],["e.contains_human_genetic_sequences",{"_index":2795,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["e.data_types",{"_index":2789,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["e.entity_type",{"_index":2708,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["e.info",{"_index":713,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["e.isdragging",{"_index":541,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["e.object",{"_index":579,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["e.object['@id",{"_index":580,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["e.picked",{"_index":577,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["e.specimen_type",{"_index":2711,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["e1b986",{"_index":1505,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e3b842",{"_index":1514,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e65100",{"_index":1438,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e91e63",{"_index":1437,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["each",{"_index":3579,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ease",{"_index":1880,"title":{},"body":{"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{}}}],["ed43",{"_index":2613,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ed44",{"_index":2607,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["edc2",{"_index":2620,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["edf8fb",{"_index":1492,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef6548",{"_index":1480,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef8a62",{"_index":1458,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef9a9a",{"_index":1448,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["effect",{"_index":2149,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["effects",{"_index":524,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["efficient",{"_index":3327,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["effort",{"_index":3368,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["element",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["element.getboundingclientrect",{"_index":3497,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement.contains(target",{"_index":2302,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["elementref",{"_index":740,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ViewerComponent.html":{}}}],["ellipsis",{"_index":3063,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["emit",{"_index":1292,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{}}}],["emits",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["emitted",{"_index":1521,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{}}}],["emitter",{"_index":3777,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["emitters",{"_index":4090,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["emitting",{"_index":1559,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/DataSourceService.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ResultsBrowserComponent.html":{}}}],["empty",{"_index":3875,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["empty_data",{"_index":3232,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["empty_result",{"_index":3234,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["enable",{"_index":3783,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["enabled",{"_index":1822,"title":{},"body":{"components/ContentComponent.html":{}}}],["enables",{"_index":1368,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["enableselection",{"_index":1342,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["encapsulates",{"_index":3981,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["encoded",{"_index":2989,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["end",{"_index":1768,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["end?.expanded",{"_index":1875,"title":{},"body":{"components/ContentComponent.html":{}}}],["end?.opened",{"_index":1874,"title":{},"body":{"components/ContentComponent.html":{}}}],["enddrawers",{"_index":1795,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":1798,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":1801,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":1873,"title":{},"body":{"components/ContentComponent.html":{}}}],["enough",{"_index":3120,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["ensures",{"_index":3895,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enter",{"_index":2245,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["entire",{"_index":4264,"title":{},"body":{"modules/StoreModule.html":{}}}],["entities",{"_index":80,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["entity",{"_index":84,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["entity.owl",{"_index":2692,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["entityid",{"_index":639,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["entitytype",{"_index":2505,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["entityupdate",{"_index":4485,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["entries",{"_index":2684,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["entries.map(e",{"_index":2695,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["entry",{"_index":3062,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{}}}],["entry.displaylabel.join().includes",{"_index":3823,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.label",{"_index":3057,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["entry.node.label.tolowercase",{"_index":3824,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.value",{"_index":3058,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["enum",{"_index":2052,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["enumerations",{"_index":4662,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1944,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["environment.dboptions",{"_index":1954,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["environment.disabledbworker",{"_index":1948,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["environment.organnodes",{"_index":3953,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["environment.production",{"_index":1963,"title":{},"body":{"injectables/DataSourceService.html":{},"modules/StoreModule.html":{}}}],["environments/environment",{"_index":1945,"title":{},"body":{"injectables/DataSourceService.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":1762,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["error('the",{"_index":1918,"title":{},"body":{"modules/CoreModule.html":{}}}],["error('theming",{"_index":4326,"title":{},"body":{"injectables/ThemingService.html":{}}}],["error(`multiple",{"_index":1771,"title":{},"body":{"components/ContainerComponent.html":{}}}],["error(`pyramid",{"_index":3654,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["errors",{"_index":1760,"title":{},"body":{"components/ContainerComponent.html":{}}}],["etc",{"_index":1899,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["ethnicity",{"_index":2506,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["eui",{"_index":3344,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["euler",{"_index":975,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["event",{"_index":503,"title":{},"body":{"classes/BodyUI.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["event.checked",{"_index":1306,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["event.interactionstate?.iszooming",{"_index":591,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["event.key",{"_index":2314,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["event.pagey",{"_index":1678,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["event.target",{"_index":1648,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["event.viewstate",{"_index":602,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["event.viewstate.zoom",{"_index":595,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["eventemitter",{"_index":734,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["eventemitter(true",{"_index":3481,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":1298,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["everything",{"_index":2081,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["everytime",{"_index":4116,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["evolve",{"_index":3357,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["evt",{"_index":750,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["evt.preventdefault",{"_index":751,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["example",{"_index":3608,"title":{},"body":{"classes/MessageChannel.html":{},"injectables/MessageService.html":{}}}],["except",{"_index":3584,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["excludes",{"_index":2885,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["executionstrategy",{"_index":4277,"title":{},"body":{"modules/StoreModule.html":{}}}],["exists",{"_index":2894,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["expand",{"_index":3526,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":3534,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":3441,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandable",{"_index":2420,"title":{},"body":{"classes/FlatNode.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["expandcollapsedone",{"_index":3536,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":1897,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":3477,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":3434,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":3482,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":3435,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":3437,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":3487,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":3520,"title":{},"body":{"classes/InitializationState.html":{}}}],["expansion",{"_index":3059,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["expert",{"_index":3369,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["exploration",{"_index":3343,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["exploration.module",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["exploration.module.ts",{"_index":3747,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["exploration/ontology",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["exportas",{"_index":1692,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["express",{"_index":4710,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":4230,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["extdeckprops",{"_index":1150,"title":{"interfaces/ExtDeckProps.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["extended",{"_index":3440,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":604,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["external_link",{"_index":42,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["externalid",{"_index":3684,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["extracting",{"_index":2970,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["f",{"_index":758,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["f1a340",{"_index":1474,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f2f424",{"_index":1513,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f7f7f7",{"_index":1456,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f8fc9d",{"_index":1504,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["factor",{"_index":983,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["factory",{"_index":3575,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["fade",{"_index":2148,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["faded",{"_index":1832,"title":{},"body":{"components/ContentComponent.html":{}}}],["fadein",{"_index":2156,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["fadeinout",{"_index":1811,"title":{},"body":{"components/ContentComponent.html":{}}}],["fafafa",{"_index":1323,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["fake",{"_index":3906,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["false",{"_index":565,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["fc8d59",{"_index":1466,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fdbb84",{"_index":1481,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fdd49e",{"_index":1482,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fddbc7",{"_index":1457,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["features",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["fee08b",{"_index":1465,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fee0b6",{"_index":1473,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fef0d9",{"_index":1483,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["female",{"_index":62,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{}}}],["feminine",{"_index":2725,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["fetch",{"_index":2115,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["fetch(dataurl",{"_index":2880,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["fetch(dataurl).then(r",{"_index":2871,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["fetch(url",{"_index":3658,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["fetches",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["few",{"_index":634,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ffb74d",{"_index":1450,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffcc80",{"_index":1434,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffe31c",{"_index":1495,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffff8d",{"_index":1435,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffffbf",{"_index":1464,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["field",{"_index":22,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchableItem.html":{},"interfaces/ValueObject.html":{}}}],["fields",{"_index":2971,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["file_format",{"_index":4225,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["file_subpath",{"_index":4227,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["files",{"_index":4685,"title":{},"body":{"license.html":{}}}],["fill",{"_index":2170,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["filler",{"_index":2471,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filter",{"_index":73,"title":{"interfaces/Filter.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["filter's",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(f",{"_index":2776,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["filter(l",{"_index":711,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter(s",{"_index":1101,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["filter(value",{"_index":3814,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["filter?.debug",{"_index":1088,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["filter?.ontologyterms",{"_index":1065,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["filter?.sex",{"_index":1054,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["filterbox",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["filterbox.removebox",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["filterchange",{"_index":725,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["filtered",{"_index":3588,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{}}}],["filteredresults",{"_index":3763,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filtering",{"_index":3330,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["filteronchange",{"_index":1275,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filteronchange(event",{"_index":1293,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filters",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["filters?.agerange[0",{"_index":2456,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.agerange[1",{"_index":2457,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.bmirange[0",{"_index":2458,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.bmirange[1",{"_index":2459,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.sex",{"_index":2455,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filterschange",{"_index":2348,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["filterscontentcomponent",{"_index":348,"title":{"components/FiltersContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["filterscontentmodule",{"_index":2372,"title":{"modules/FiltersContentModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filterspopovercomponent",{"_index":169,"title":{"components/FiltersPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["filterspopovermodule",{"_index":397,"title":{"modules/FiltersPopoverModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filtersvisible",{"_index":2384,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["finalize",{"_index":1200,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["find",{"_index":2770,"title":{},"body":{"classes/HuBMAPEntity.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["find((organ",{"_index":2753,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["find(nodemap[''].children",{"_index":3914,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["findids",{"_index":865,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["findids(this.store",{"_index":923,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["finished",{"_index":1893,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["fired",{"_index":1669,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["first",{"_index":3353,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["fit",{"_index":4164,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["fitness",{"_index":4715,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{}}}],["fixes",{"_index":3678,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["fixoldruikidneydata(data",{"_index":3679,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["fixuflruilocation",{"_index":2562,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["fixuflruilocation(ruilocation",{"_index":2766,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["flat",{"_index":2425,"title":{},"body":{"classes/FlatNode.html":{}}}],["flatmap",{"_index":1144,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatmap(loaders",{"_index":1258,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatmap(vivviews",{"_index":1235,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatnode",{"_index":2417,"title":{"classes/FlatNode.html":{}},"body":{"classes/FlatNode.html":{}}}],["flatnode(original",{"_index":2438,"title":{},"body":{"classes/FlatNode.html":{}}}],["flex",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["float",{"_index":3404,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["floor",{"_index":1592,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["florida",{"_index":2616,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["flow",{"_index":2961,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["fly",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":4701,"title":{},"body":{"license.html":{}}}],["font",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["footer",{"_index":3406,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["foreach",{"_index":3886,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(current.children",{"_index":3935,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(nodemap",{"_index":3911,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(organnodes",{"_index":3925,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(t",{"_index":2790,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["form",{"_index":847,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{}}}],["format",{"_index":2556,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["formatlabel",{"_index":3854,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["formatlabel(label",{"_index":3866,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formats",{"_index":3869,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formatter",{"_index":3782,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formcontrol",{"_index":3764,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formsmodule",{"_index":3843,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["forwards",{"_index":2171,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["found",{"_index":3870,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foundational",{"_index":3309,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["framework",{"_index":3322,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["free",{"_index":4680,"title":{},"body":{"license.html":{}}}],["from(this.getdb().then((db",{"_index":1966,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["fromeuler",{"_index":972,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["full",{"_index":3281,"title":{},"body":{"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["fullscreen_exit",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["fully",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2070,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["fund",{"_index":3375,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["funded",{"_index":3373,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["furnished",{"_index":4700,"title":{},"body":{"license.html":{}}}],["further",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["gender",{"_index":59,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["generate",{"_index":1283,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["generation",{"_index":3304,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["genericmessage",{"_index":1884,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":1885,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":1886,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["get(d",{"_index":2773,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["get(data",{"_index":2685,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["get(e",{"_index":2688,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["get(event",{"_index":3825,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["get(id",{"_index":828,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["get(this.donor",{"_index":2722,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["getaggregateresults",{"_index":799,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":96,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getaggregateresults(this.getids(filter",{"_index":939,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getarguments",{"_index":2947,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getarguments(undefined",{"_index":2952,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getautocolor",{"_index":4465,"title":{},"body":{"injectables/ViewerState.html":{}}}],["getautocolor(index",{"_index":4469,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["getbackground",{"_index":3123,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["getbrightness",{"_index":3099,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["getbrightnesshigh",{"_index":1572,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getbrightnesslow",{"_index":1567,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getchannelconfigs",{"_index":3043,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getchannelnames",{"_index":3041,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getchildren",{"_index":3855,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getchildren(node",{"_index":3873,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getchildrenfunc",{"_index":3898,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["getcolor",{"_index":683,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getcontent",{"_index":1747,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getcursor",{"_index":538,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["getdb",{"_index":1930,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getentityscenenodes",{"_index":1034,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getentityscenenodes(filter",{"_index":1040,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getexpandable",{"_index":2432,"title":{},"body":{"classes/FlatNode.html":{}}}],["getgradientstyle",{"_index":1366,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["gethaswrappedcontent",{"_index":1750,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getheight",{"_index":3035,"title":{},"body":{"classes/ImageViewer.html":{}}}],["geticon",{"_index":4350,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getids",{"_index":800,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["getids(filter",{"_index":833,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getimageviewerdata",{"_index":801,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getimageviewerdata(id",{"_index":836,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getimageviewerdata(iri",{"_index":98,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getindexofmatch",{"_index":3856,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getindexofmatch(label",{"_index":3876,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getlabel",{"_index":2429,"title":{},"body":{"classes/FlatNode.html":{}}}],["getlayers",{"_index":3196,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["getlistresult",{"_index":868,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getlistresult(this.store",{"_index":931,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getlistresults",{"_index":802,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getlistresults(filter",{"_index":94,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getloaders",{"_index":3039,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getmessages",{"_index":3586,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":3609,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":3589,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":3610,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":3592,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmethodname",{"_index":2939,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getmethodname(undefined",{"_index":2954,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getontologytermoccurences",{"_index":803,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":840,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(this.getids(filter",{"_index":940,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getpickinginfo",{"_index":608,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":612,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getrangelabel",{"_index":2269,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["getreferencebody",{"_index":1035,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferencebody(filter",{"_index":1042,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getreferenceorgans",{"_index":1036,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferenceorgans(filter",{"_index":1044,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getreferencescenenodes",{"_index":1037,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferencescenenodes(filter",{"_index":1046,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gets",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorPickerLauncherComponent.html":{},"injectables/DataSourceService.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{}}}],["getscene",{"_index":804,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{}}}],["getscene(filter",{"_index":845,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getscenenode",{"_index":1038,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getscenenode(source",{"_index":1049,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getsources",{"_index":3037,"title":{},"body":{"classes/ImageViewer.html":{},"components/ViewerComponent.html":{}}}],["getspatialentities",{"_index":805,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["getspatialentities(filter",{"_index":851,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialentity",{"_index":978,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getspatialentity(this.db.store",{"_index":1058,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getspatialentityforentity",{"_index":870,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialentityforentity(this.store",{"_index":928,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialobjectreference",{"_index":979,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["getspatialplacement",{"_index":980,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["getter/setter",{"_index":3470,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":4290,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getting",{"_index":3897,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["gettransformationmatrix",{"_index":947,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["gettransformationmatrix(sourceiri",{"_index":963,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["gettransformmatrix",{"_index":680,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gettransparency",{"_index":1577,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getvivid",{"_index":1145,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["getwidth",{"_index":3033,"title":{},"body":{"classes/ImageViewer.html":{}}}],["github",{"_index":3336,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["give",{"_index":3578,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["global",{"_index":1956,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["globally",{"_index":1961,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis",{"_index":1955,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis.dboptions",{"_index":1958,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":3505,"title":{},"body":{"classes/InitializationState.html":{}}}],["gloptions",{"_index":1253,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["gltf",{"_index":652,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gltf.nodes?.find((n",{"_index":658,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gltf.scene",{"_index":664,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gltf.scene.nodes[gltf.scene.nodes.length",{"_index":662,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gltf.scene?.nodes?.length",{"_index":661,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gltf.scenes",{"_index":666,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gltfloader",{"_index":626,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["grab",{"_index":543,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["grabbing",{"_index":542,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["gradient",{"_index":1363,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{}}}],["gradient(to",{"_index":3135,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["gradient.hidden",{"_index":4141,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["gradienthighlight",{"_index":1340,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["gradientstyle",{"_index":1346,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["grant",{"_index":3386,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["granted",{"_index":4679,"title":{},"body":{"license.html":{}}}],["graph",{"_index":796,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/HuBMAPEntity.html":{},"modules.html":{}}}],["graph.ts",{"_index":942,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:38",{"_index":949,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:44",{"_index":962,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:63",{"_index":953,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:66",{"_index":956,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:69",{"_index":960,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:73",{"_index":965,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graphology",{"_index":968,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["greeenorange",{"_index":1430,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["green",{"_index":4410,"title":{},"body":{"components/ViewerComponent.html":{}}}],["greenred",{"_index":1460,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["group",{"_index":1269,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/HuBMAPEntity.html":{}}}],["group_uuid_mapping",{"_index":2605,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["group_uuid_mapping[groupuuid",{"_index":2747,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["groupname",{"_index":2507,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["groupuuid",{"_index":2508,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["grow",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["half",{"_index":3439,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":2110,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["handlemessage",{"_index":1701,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":1714,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":1825,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handler",{"_index":2252,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["handles",{"_index":2344,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/InfoDialogComponent.html":{}}}],["handling",{"_index":2219,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["happen",{"_index":2353,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["happy",{"_index":4269,"title":{},"body":{"modules/StoreModule.html":{}}}],["has3dobject",{"_index":1102,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["hash",{"_index":3902,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["hasimage",{"_index":2693,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hasimageprovider",{"_index":2694,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hasspatialentity",{"_index":85,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["hasterm",{"_index":1066,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["hasterm.kidney",{"_index":1082,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["hasterm.left_kidney",{"_index":1085,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["hasterm.right_kidney",{"_index":1083,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["hasterm.spleen",{"_index":1087,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["haswrappedcontent",{"_index":1705,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hbm",{"_index":2622,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hbm_organ_labels",{"_index":2670,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hbm_organ_labels[this.organname",{"_index":2845,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hbm_organs",{"_index":2640,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hbm_organs[this.organname",{"_index":2754,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hbm_prefix",{"_index":2568,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["header",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["header'},{'name",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["header.component",{"_index":2491,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":2444,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":2443,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.module",{"_index":1913,"title":{},"body":{"modules/CoreModule.html":{}}}],["headercomponent",{"_index":351,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["headermodule",{"_index":1906,"title":{"modules/HeaderModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["headers",{"_index":2875,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["headers.authorization",{"_index":2878,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["heading",{"_index":3403,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["health",{"_index":3395,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["heart",{"_index":2672,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["height",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["helper",{"_index":1758,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["here",{"_index":2122,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["hereby",{"_index":4678,"title":{},"body":{"license.html":{}}}],["hex",{"_index":3116,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ViewerComponent.html":{}}}],["hex.length",{"_index":4403,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hextorgbtriple(hex",{"_index":4401,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hextorgbtriple(layer.color",{"_index":4448,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hhsn316201300006w/hhsn27200002",{"_index":3400,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["hidden",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["hide",{"_index":2410,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["hidelimitlabels",{"_index":1595,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["hidepointerlabels",{"_index":1596,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["hides",{"_index":2395,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["hiding",{"_index":3280,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["high",{"_index":1574,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["highlightcolor",{"_index":673,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["highlighted",{"_index":45,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/ColorBarComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{}}}],["highlighted.has(entity.entityid",{"_index":1099,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["highlighted.has(s['@id",{"_index":934,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["highlightedentities",{"_index":81,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BodyUiComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["highlightedentities.concat([node.entityid",{"_index":782,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlightedentities.length",{"_index":779,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlightedentities[0",{"_index":780,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlighting",{"_index":1364,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["highvalue",{"_index":2199,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hits.hits",{"_index":2686,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hive",{"_index":3367,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["holders",{"_index":4720,"title":{},"body":{"license.html":{}}}],["hook",{"_index":2240,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["hooked",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":1802,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding",{"_index":1753,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":3486,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":1852,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('@openclose",{"_index":3485,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":1772,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.active",{"_index":4245,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["hostbinding('class.ccf",{"_index":3465,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":1847,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('style.margin",{"_index":1849,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbindings",{"_index":1704,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["hostlistener",{"_index":1668,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":3535,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":3531,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('document:click",{"_index":1670,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["hostlistener('document:mousemove",{"_index":2299,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlistener('document:touchstart",{"_index":2300,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlisteners",{"_index":1639,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["hover",{"_index":1382,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ht",{"_index":2647,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["html",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":520,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["htmlelement",{"_index":522,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"injectables/ThemingService.html":{}}}],["htmlinputelement).value",{"_index":2313,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["http",{"_index":3862,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":776,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":771,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":768,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0013702",{"_index":2051,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["http://purl.org/ccf/0.5",{"_index":3699,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["http://purl.org/ccf/latest/ccf",{"_index":2691,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhleftkidney",{"_index":770,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhrightkidney",{"_index":766,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleen",{"_index":772,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc1",{"_index":773,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc2",{"_index":774,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc3",{"_index":775,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://www.geneontology.org/formats/oboinowl#hasexactsynonym",{"_index":2968,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["http://www.w3.org/2000/01/rdf",{"_index":2965,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["httpclient",{"_index":3859,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["httpclientmodule",{"_index":1910,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://assets.hubmapconsortium.org",{"_index":893,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://entity",{"_index":2569,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["https://github.com/hubmapconsortium/commons/blob/master/hubmap_commons/hubmap_const.py#l101",{"_index":2638,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":4665,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":3697,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["https://hubmapconsortium.org",{"_index":3319,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["https://portal.hubmapconsortium.org",{"_index":892,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://purl.org/ccf/latest/ccf",{"_index":890,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://purl.org/ccf/latest/ccf.owl",{"_index":889,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["https://vitessce",{"_index":4398,"title":{},"body":{"components/ViewerComponent.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":4278,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":881,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmap/hubmap",{"_index":862,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmap/vitessce",{"_index":1138,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{},"dependencies.html":{}}}],["hubmapassetsurl",{"_index":886,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapdata",{"_index":2870,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hubmapdataservice",{"_index":879,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapdataurl",{"_index":884,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapentity",{"_index":2492,"title":{"classes/HuBMAPEntity.html":{}},"body":{"classes/HuBMAPEntity.html":{}}}],["hubmapentity(e",{"_index":2696,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hubmapportalurl",{"_index":883,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{}}}],["hubmapresponseasjsonld(data",{"_index":2683,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hubmaptoken",{"_index":888,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["human",{"_index":3300,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["icon",{"_index":33,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchableItem.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["icondefinition",{"_index":2899,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistry",{"_index":2907,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":2908,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{}}}],["icons",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["icons.ts",{"_index":2102,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["id",{"_index":28,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":27,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["identifiers",{"_index":3755,"title":{},"body":{"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["identity",{"_index":1024,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["idextractor",{"_index":2972,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idextractor(json",{"_index":2992,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idobject",{"_index":2958,"title":{"interfaces/IdObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idproperty",{"_index":2969,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["ids",{"_index":835,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/ViewerState.html":{}}}],["ids.length",{"_index":4500,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["idx",{"_index":4195,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["iec",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["if(data.reference_organ_id",{"_index":3692,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["if(this.handlemessage(msg",{"_index":1855,"title":{},"body":{"components/ContentComponent.html":{}}}],["image",{"_index":47,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["image_viewer",{"_index":44,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["image_viewer_layer_defaults",{"_index":4492,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageproviders",{"_index":2509,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["imageproviders.push(hbm_prefix",{"_index":2783,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["images",{"_index":2510,"title":{},"body":{"classes/HuBMAPEntity.html":{},"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["images.concat(tiffs",{"_index":2782,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["images.length",{"_index":2785,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["images[0",{"_index":2822,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["imageviewer",{"_index":1169,"title":{"classes/ImageViewer.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserItemComponent.html":{},"components/ViewerComponent.html":{}}}],["imageviewer:110",{"_index":4048,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:114",{"_index":4053,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:133",{"_index":4054,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:148",{"_index":4056,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:168",{"_index":4047,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:169",{"_index":4046,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:171",{"_index":4055,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:181",{"_index":4060,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:185",{"_index":4058,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:195",{"_index":4059,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:208",{"_index":4057,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:212",{"_index":4049,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:231",{"_index":4052,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:244",{"_index":4050,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:250",{"_index":4051,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:64",{"_index":4039,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:68",{"_index":4035,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:69",{"_index":4032,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:73",{"_index":4034,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:74",{"_index":4033,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:78",{"_index":4031,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:80",{"_index":4042,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:81",{"_index":4041,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:82",{"_index":4038,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:83",{"_index":4037,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:84",{"_index":4040,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:86",{"_index":4036,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:99",{"_index":4045,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imagevieweraccordioncomponent",{"_index":353,"title":{"components/ImageViewerAccordionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imagevieweraccordionmodule",{"_index":3066,"title":{"modules/ImageViewerAccordionModule.html":{}},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewercontentcomponent",{"_index":355,"title":{"components/ImageViewerContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewercontentmodule",{"_index":3089,"title":{"modules/ImageViewerContentModule.html":{}},"body":{"modules/ImageViewerContentModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerdata",{"_index":50,"title":{"interfaces/ImageViewerData.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["imageviewerlayer",{"_index":1402,"title":{"classes/ImageViewerLayer.html":{}},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageviewerlayer(layer",{"_index":4483,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageviewerlayerargs",{"_index":3102,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["imageviewerlayerrequiredargnames",{"_index":3125,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["imageviewerlayerscomponent",{"_index":356,"title":{"components/ImageViewerLayersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerlayersmodule",{"_index":3071,"title":{"modules/ImageViewerLayersModule.html":{}},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerlegendcomponent",{"_index":358,"title":{"components/ImageViewerLegendComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerlegendmodule",{"_index":3205,"title":{"modules/ImageViewerLegendModule.html":{}},"body":{"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewermodule",{"_index":398,"title":{"modules/ImageViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImageViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerpopovercomponent",{"_index":173,"title":{"components/ImageViewerPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerpopovermodule",{"_index":3214,"title":{"modules/ImageViewerPopoverModule.html":{}},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerprops",{"_index":1158,"title":{"interfaces/ImageViewerProps.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["imc.svg",{"_index":2814,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["immediate_ancestors",{"_index":2886,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["immediate_descendants",{"_index":2887,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["immutable",{"_index":3881,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["implementation",{"_index":2000,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["implemented",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":716,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["implied",{"_index":4711,"title":{},"body":{"license.html":{}}}],["implies",{"_index":1898,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["important",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["imported",{"_index":1919,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ViewerModule.html":{}}}],["improved",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["ims_negmode_multilayer_thumbnail.png",{"_index":2578,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ims_posmode_multilayer_thumbnail.png",{"_index":2579,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["include",{"_index":86,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{}}}],["included",{"_index":4705,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3351,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"license.html":{}}}],["increased",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indiana",{"_index":3364,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["indicates",{"_index":2434,"title":{},"body":{"classes/FlatNode.html":{}}}],["indicator",{"_index":1938,"title":{},"body":{"injectables/DataSourceService.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["individual",{"_index":1284,"title":{},"body":{"components/CheckboxComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["infectious",{"_index":3391,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["infix",{"_index":2158,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["info_outline",{"_index":3273,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["infobuttoncomponent",{"_index":360,"title":{"components/InfoButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":2481,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infodialogcomponent",{"_index":362,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["infodialogmodule",{"_index":399,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":89,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"index.html":{}}}],["inherit",{"_index":2402,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["inherited",{"_index":4030,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["init",{"_index":3785,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["initial",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["initialization",{"_index":810,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{},"classes/InitializationState.html":{}}}],["initializationstate",{"_index":3413,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{}}}],["initialize",{"_index":825,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":4301,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":1860,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{}}}],["initializedeck",{"_index":2997,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["initializedeck(props",{"_index":1249,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["initializeimpl",{"_index":4291,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializeimpl(component",{"_index":4305,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializer",{"_index":4304,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":2233,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["initializesliderpopover",{"_index":2206,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["initializestate",{"_index":609,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["initializing",{"_index":1894,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["initialviewstate",{"_index":1159,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["initiates",{"_index":1543,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["inject",{"_index":3297,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["inject(default_theme",{"_index":4319,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inject(mat_dialog_data",{"_index":3294,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["injectable",{"_index":1924,"title":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/ThemingService.html":{},"injectables/ViewerState.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["injectables",{"_index":1925,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/ThemingService.html":{},"injectables/ViewerState.html":{},"overview.html":{}}}],["injected",{"_index":3292,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["injectiontoken",{"_index":3567,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["injectiontoken('default",{"_index":4316,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inner",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["input",{"_index":745,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["inputeventsinterval",{"_index":1598,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["inputs",{"_index":723,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["inserted",{"_index":3915,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["inside",{"_index":2320,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["instance",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{}}}],["instances",{"_index":3165,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["instant",{"_index":3433,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":2327,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["institute",{"_index":3389,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["integrated",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":526,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["intent",{"_index":4151,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["inter",{"_index":2474,"title":{},"body":{"components/HeaderComponent.html":{}}}],["interactions",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":589,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["interest",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AggregateResult.html":{},"interfaces/BodyUIProps.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"interfaces/ViewerStateModel.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"interfaces/ViewerStateModel.html":{},"overview.html":{}}}],["intestine",{"_index":2674,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["invisible",{"_index":1819,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["iri",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/HuBMAPEntity.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["isdark",{"_index":3100,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["isdemo",{"_index":4369,"title":{},"body":{"components/ViewerComponent.html":{}}}],["isdragging",{"_index":539,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["islight",{"_index":3101,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["isolated",{"_index":3573,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["isrgb",{"_index":4082,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["issliderinitialized",{"_index":2200,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isslideropen",{"_index":2201,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["issues",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":590,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["it's",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":56,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["item'},{'name",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["item.component",{"_index":4174,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{}}}],["item.component.html",{"_index":4145,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.scss",{"_index":4144,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts",{"_index":4143,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:19",{"_index":4148,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:24",{"_index":4150,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:30",{"_index":4152,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.module",{"_index":4180,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["item.module.ts",{"_index":4173,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{}}}],["item/results",{"_index":4142,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["items",{"_index":93,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{}}}],["iu",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":3822,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["json",{"_index":2554,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["json.parse(ruilocation",{"_index":2765,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["json.stringify",{"_index":2882,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["jsondict",{"_index":2516,"title":{},"body":{"classes/HuBMAPEntity.html":{},"miscellaneous/typealiases.html":{}}}],["jsonld",{"_index":2548,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"dependencies.html":{}}}],["jsonld/jsonld",{"_index":2557,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["jsonontology",{"_index":3942,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsonontology.pipe",{"_index":3945,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsonontologynode",{"_index":2964,"title":{"interfaces/JsonOntologyNode.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["jsontoontologynode",{"_index":3890,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsontoontologynode(json",{"_index":2991,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["july",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3333,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["justify",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["keep",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keeping",{"_index":2019,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["keeps",{"_index":2389,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["key",{"_index":669,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["key/value",{"_index":2358,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["keyboard",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["keyboard_arrow_left",{"_index":4353,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["keyboard_arrow_right",{"_index":4352,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["keyboardevent",{"_index":2242,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["keyby",{"_index":3887,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keyby(nodes",{"_index":3949,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keyframes",{"_index":2153,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["keys",{"_index":1256,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["keys.reduce((configs",{"_index":1260,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["kidney",{"_index":1068,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["kind",{"_index":4709,"title":{},"body":{"license.html":{}}}],["known",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":712,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["l.tolowercase()).join",{"_index":2803,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["label",{"_index":15,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["label.length",{"_index":3975,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(0",{"_index":3972,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(index",{"_index":3973,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().includes(searchvalue",{"_index":3968,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().indexof(searchvalue",{"_index":3970,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["labeled",{"_index":1268,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["labelextractor",{"_index":2982,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelextractor(json",{"_index":2994,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelproperty",{"_index":2981,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labels",{"_index":1285,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OntologyNode.html":{}}}],["labs/data",{"_index":4257,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/data/decorators",{"_index":2036,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/repositories",{"_index":2037,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/typings",{"_index":3885,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/utils",{"_index":4488,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["large",{"_index":2673,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["large_intestine",{"_index":2651,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["last",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["lasthovered",{"_index":458,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["later",{"_index":3910,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["latest",{"_index":2007,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"index.html":{}}}],["launch",{"_index":1411,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher",{"_index":1398,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["launcher.component",{"_index":1420,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["launcher.component.html",{"_index":1400,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":1399,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":1390,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts:20",{"_index":1403,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts:25",{"_index":1404,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.module",{"_index":3187,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["launcher.module.ts",{"_index":1419,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["launcher/color",{"_index":1389,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["launchinfodialog",{"_index":3261,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["layer",{"_index":517,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer's",{"_index":1408,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["layer.color",{"_index":4505,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.colorscheme.colors.indexof(layer.color",{"_index":4514,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.customizedcolor",{"_index":4507,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.defaultorder",{"_index":4506,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.id",{"_index":3167,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ViewerComponent.html":{}}}],["layer.id.includes(getvivid(viewportid",{"_index":1263,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layer.label",{"_index":3174,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{}}}],["layer.selected",{"_index":3170,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.ts",{"_index":603,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SpatialSceneNode-1.html":{},"miscellaneous/typealiases.html":{}}}],["layer.ts:102",{"_index":3119,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:109",{"_index":613,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:24",{"_index":3110,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:25",{"_index":3111,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:27",{"_index":3108,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:28",{"_index":3107,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:29",{"_index":3106,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:30",{"_index":3114,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:32",{"_index":3112,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:33",{"_index":3109,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:34",{"_index":3113,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:35",{"_index":3103,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:47",{"_index":3124,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:70",{"_index":3115,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:72",{"_index":611,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:74",{"_index":614,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:82",{"_index":615,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:95",{"_index":3122,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layerchange",{"_index":1401,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["layerchange.emit(layer",{"_index":1605,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["layerchanged",{"_index":3147,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layerchanged(layer",{"_index":3160,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layerconfig",{"_index":1157,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["layerconfigs",{"_index":1185,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerconfigs.length",{"_index":1234,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layerconfigs[index",{"_index":1238,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layerfilter",{"_index":1250,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerfilter(undefined",{"_index":3019,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerfilterargs",{"_index":1153,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["layername",{"_index":607,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["layers",{"_index":530,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["layers'},{'name",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["layers(layers",{"_index":3199,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["layers.component",{"_index":3184,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["layers.component.html",{"_index":3145,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.scss",{"_index":3144,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts",{"_index":3140,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:21",{"_index":3149,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:26",{"_index":3153,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:31",{"_index":3155,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:39",{"_index":3163,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:49",{"_index":3157,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:62",{"_index":3161,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.filter(layer",{"_index":4477,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layers.length",{"_index":4446,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers.map(layer",{"_index":4482,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layers.module",{"_index":3077,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerModule.html":{}}}],["layers.module.ts",{"_index":3183,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["layers.reduce((result",{"_index":4447,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers/image",{"_index":3076,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerModule.html":{}}}],["layers].sort((v1",{"_index":3201,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["lc.svg",{"_index":2816,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ld",{"_index":2555,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["left",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["left.closeexpanded",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["left.open",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["left.px",{"_index":1814,"title":{},"body":{"components/ContentComponent.html":{}}}],["left_kidney",{"_index":1072,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["leftmargin",{"_index":1850,"title":{},"body":{"components/ContentComponent.html":{}}}],["legend",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["legend'},{'name",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["legend.component",{"_index":3210,"title":{},"body":{"modules/ImageViewerLegendModule.html":{}}}],["legend.component.html",{"_index":3192,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.scss",{"_index":3191,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts",{"_index":3189,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:18",{"_index":3194,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:21",{"_index":3197,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:22",{"_index":3195,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.module",{"_index":3254,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{}}}],["legend.module.ts",{"_index":3209,"title":{},"body":{"modules/ImageViewerLegendModule.html":{}}}],["legend/image",{"_index":3188,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["length",{"_index":1233,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["level",{"_index":2423,"title":{},"body":{"classes/FlatNode.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["levels",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["lexically",{"_index":3797,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["li",{"_index":2649,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["liability",{"_index":4724,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4721,"title":{},"body":{"license.html":{}}}],["license",{"_index":4672,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":3786,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["light",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ImageViewerLayer.html":{}}}],["lighter",{"_index":4168,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["lightingeffect",{"_index":510,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["limitation",{"_index":4688,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4712,"title":{},"body":{"license.html":{}}}],["line",{"_index":546,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["line:no",{"_index":1671,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["linear",{"_index":3134,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["link",{"_index":2441,"title":{},"body":{"components/HeaderComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["linkage",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["linkchildren",{"_index":3916,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["linkchildren(nodemap",{"_index":3904,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["linking",{"_index":4126,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["links",{"_index":3899,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["list",{"_index":24,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{}}}],["listdata",{"_index":1979,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listdata(filter",{"_index":1991,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listdataquerystatus",{"_index":1980,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listen",{"_index":3572,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":2071,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listeners",{"_index":1724,"title":{},"body":{"components/ContainerComponent.html":{}}}],["listening",{"_index":4109,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["listens",{"_index":1651,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["listresult",{"_index":26,"title":{"interfaces/ListResult.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["literal",{"_index":492,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyStateModel.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["liver",{"_index":2679,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["lk",{"_index":2573,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ll",{"_index":2654,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["load",{"_index":620,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["load(model.scenegraph",{"_index":654,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["loaded",{"_index":827,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["loader",{"_index":1136,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{}}}],["loader.channelnames",{"_index":1259,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["loader.isrgb",{"_index":4443,"title":{},"body":{"components/ViewerComponent.html":{}}}],["loaderpromises",{"_index":1208,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["loaders",{"_index":1175,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders.gl/core",{"_index":622,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":625,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":627,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["loaders.length",{"_index":4070,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders[0",{"_index":4072,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders[0].isrgb",{"_index":4083,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaderselection",{"_index":4073,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaderselection.push",{"_index":4078,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loadertype",{"_index":1140,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loadertype.bftiff",{"_index":3650,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.covidtiff",{"_index":3651,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.omezarr",{"_index":3644,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.statictiff",{"_index":3652,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.staticzarr",{"_index":3642,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.tiff",{"_index":3648,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["loadertype.tiff2",{"_index":3649,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.zarr",{"_index":3641,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadgltf(model",{"_index":651,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["loading",{"_index":4103,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["loadoffsets(offsets",{"_index":3653,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadoffsets(url",{"_index":3656,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadontology",{"_index":3857,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["loads",{"_index":3879,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["local_link",{"_index":43,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["located",{"_index":3464,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":2762,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OntologySelection.html":{}}}],["lodash",{"_index":2561,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"dependencies.html":{}}}],["log",{"_index":4666,"title":{},"body":{"index.html":{}}}],["logged",{"_index":2451,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loggedin",{"_index":2445,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logic",{"_index":3446,"title":{},"body":{"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["login",{"_index":2461,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logo",{"_index":2118,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/HeaderComponent.html":{},"components/InfoDialogComponent.html":{}}}],["logo.svg",{"_index":2120,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["logout",{"_index":2462,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lomap",{"_index":3888,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lomap(ontology",{"_index":3947,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["looks",{"_index":3883,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup",{"_index":2631,"title":{},"body":{"classes/HuBMAPEntity.html":{},"injectables/OntologySearchService.html":{}}}],["lookup(nodes",{"_index":3880,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup[k",{"_index":2634,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["low",{"_index":1569,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["low/high",{"_index":2288,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lower",{"_index":2224,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lowvalue",{"_index":2202,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["luma.gl/core",{"_index":629,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["lung",{"_index":2675,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["lv",{"_index":2667,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ly",{"_index":2659,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["lymph",{"_index":2676,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["made",{"_index":1407,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["magma",{"_index":1503,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["main",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{}}}],["make",{"_index":1960,"title":{},"body":{"injectables/DataSourceService.html":{},"components/ImageViewerLayersComponent.html":{}}}],["male",{"_index":61,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{}}}],["managed",{"_index":1746,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["manages",{"_index":4287,"title":{},"body":{"injectables/ThemingService.html":{}}}],["many",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map((d",{"_index":2751,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["map((s",{"_index":932,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["map(createmodel",{"_index":3951,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(e",{"_index":2687,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["map(entities",{"_index":4480,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map(f",{"_index":2778,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["map(layers",{"_index":4476,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map(nodes",{"_index":3948,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(ontology",{"_index":3946,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(partial(prunemodel",{"_index":3952,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(searchresults",{"_index":3817,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["map(state",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["map(states",{"_index":2025,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["mapping",{"_index":1427,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{}}}],["maps",{"_index":3310,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["margin",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["margin2",{"_index":3443,"title":{},"body":{"classes/InitializationState.html":{}}}],["masculine",{"_index":2726,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["mass",{"_index":2729,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["mat",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["mat_dialog_data",{"_index":3298,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["matautocompletemodule",{"_index":3845,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matautocompleteselectedevent",{"_index":3788,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["matbuttonmodule",{"_index":2483,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["match",{"_index":2465,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["matcheckboxchange",{"_index":1294,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["matcheckboxmodule",{"_index":1329,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["matching",{"_index":99,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["matdialog",{"_index":3263,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["matdialogmodule",{"_index":3412,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":3288,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material",{"_index":2910,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matexpansionmodule",{"_index":3073,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["matformfieldmodule",{"_index":2188,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["math.gl/core",{"_index":514,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["math.max(...this.selection",{"_index":2292,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(...this.selection",{"_index":2290,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(math.max(1",{"_index":594,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["math.trunc(slider_max",{"_index":4415,"title":{},"body":{"components/ViewerComponent.html":{}}}],["maticonmodule",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ViewerModule.html":{}}}],["maticonregistry",{"_index":2905,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":3846,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matprogressspinnermodule",{"_index":4252,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["matradiomodule",{"_index":4217,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["matrix",{"_index":569,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["matrix.gettranslation",{"_index":574,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["matrix4",{"_index":513,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["matrix4().rotatex(toradians(90)).multiplyleft(transform",{"_index":1111,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["matrix4(node.transformmatrix",{"_index":570,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["matselectmodule",{"_index":2190,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["mattoolbarmodule",{"_index":2485,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodule",{"_index":2487,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["mattreemodule",{"_index":4023,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["max",{"_index":2173,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["maxrotationx",{"_index":554,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["maxselected",{"_index":4498,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["mc",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["md",{"_index":2721,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["md.grouping_concept_preferred_term",{"_index":2730,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["md.preferred_term",{"_index":2724,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["measured",{"_index":3501,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":3503,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":3493,"title":{},"body":{"classes/InitializationState.html":{}}}],["medicine",{"_index":3385,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["member",{"_index":3561,"title":{},"body":{"classes/InitializationState.html":{}}}],["menu",{"_index":1527,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["merchantability",{"_index":4714,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4691,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":3568,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["mesh",{"_index":679,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["meshlayer('cubes",{"_index":697,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["meshlayer('wireframes",{"_index":698,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["meshlayer(id",{"_index":668,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["message",{"_index":1715,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["message_service_config",{"_index":2127,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message_service_default_config",{"_index":2128,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel",{"_index":1730,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":3607,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":3595,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":1711,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":1694,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice.connect(this",{"_index":1778,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":1853,"title":{},"body":{"components/ContentComponent.html":{}}}],["messageserviceconfig",{"_index":3571,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagess",{"_index":2062,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["metadata",{"_index":55,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["metadata.files",{"_index":2774,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["metadata.organ_donor_data",{"_index":2723,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["metadata?.metadata?.assay_type",{"_index":2793,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["meter",{"_index":988,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["method",{"_index":1297,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerLayersComponent.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":2935,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":2930,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["millimeter",{"_index":986,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode.html":{}}}],["min",{"_index":2179,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["minor",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":552,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["miscellaneous",{"_index":4661,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":4673,"title":{},"body":{"license.html":{}}}],["mock",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":3283,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mode",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["model",{"_index":704,"title":{},"body":{"classes/BodyUILayer.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["model._lighting",{"_index":706,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["model.color",{"_index":709,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["model.scenegraph",{"_index":705,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["model.scenegraphnode",{"_index":657,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["model.subscribe(ontology",{"_index":3954,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["model.transformmatrix",{"_index":708,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["model.unpickable",{"_index":703,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["model.zoombasedopacity",{"_index":701,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["model['@id",{"_index":700,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["models",{"_index":696,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["models.map((model",{"_index":699,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["models/color",{"_index":4489,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["models/image",{"_index":4490,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["models/json",{"_index":3891,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["models/ontology",{"_index":3892,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["modified_date",{"_index":2853,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["modify",{"_index":4690,"title":{},"body":{"license.html":{}}}],["module",{"_index":381,"title":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["modules",{"_index":383,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/body/body.module",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/color",{"_index":4197,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["modules/filters/filters",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modules/image",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modules/info/info",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{}}}],["modules/ontology",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/results",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["molecular",{"_index":3305,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["more",{"_index":2054,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":2228,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mouseevent",{"_index":493,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/ColorSchemePopupComponent.html":{}}}],["mouseevent?.srcevent?.ctrlkey",{"_index":588,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["moved",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["movement",{"_index":2229,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["msg",{"_index":1828,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":1865,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.drawers",{"_index":1858,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.opened",{"_index":4356,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":1856,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":1863,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["multi",{"_index":4285,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":3346,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mxif_cyc1_registered_thumbnail.png",{"_index":2583,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["mxif_cyc2_registered_thumbnail.png",{"_index":2584,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["mxif_cyc3_registered_thumbnail.png",{"_index":2585,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["n.name",{"_index":659,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["n3",{"_index":864,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["n3store",{"_index":818,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{}}}],["name",{"_index":53,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["names",{"_index":2639,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["namespace",{"_index":2111,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["national",{"_index":3388,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["nativeelement",{"_index":1673,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ViewerComponent.html":{}}}],["navigation",{"_index":3349,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["necessary",{"_index":2250,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1643,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersPopoverComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{}}}],["needed",{"_index":3151,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["needs",{"_index":1720,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["nested",{"_index":2319,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["network",{"_index":4670,"title":{},"body":{"index.html":{}}}],["never",{"_index":1769,"title":{},"body":{"components/ContainerComponent.html":{}}}],["new",{"_index":476,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["newconfigs",{"_index":1218,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["newfilter",{"_index":783,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["newly",{"_index":1356,"title":{},"body":{"components/ColorBarComponent.html":{},"classes/FlatNode.html":{}}}],["newvalue",{"_index":2311,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["next",{"_index":545,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["nextmessageid",{"_index":3594,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ng",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ng5",{"_index":1581,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"dependencies.html":{}}}],["ng5slidermodule",{"_index":1630,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/DualSliderModule.html":{}}}],["ngacceptinputtype_expanded",{"_index":3564,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":3563,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":3560,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":722,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["ngfor",{"_index":3164,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["ngmodule",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{}}}],["ngonchanges",{"_index":2207,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["ngonchanges(changes",{"_index":2234,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["ngondestroy",{"_index":1702,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["ngoninit",{"_index":3767,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ngxs",{"_index":756,"title":{},"body":{"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":2038,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["ngxsdataentitycollectionsrepository",{"_index":4462,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ngxsdatapluginmodule",{"_index":4256,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":4271,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1973,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["ngxsentitycollections",{"_index":4486,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ngxsmodule",{"_index":4258,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":4272,"title":{},"body":{"modules/StoreModule.html":{}}}],["niaid",{"_index":3393,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["niddk",{"_index":3383,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["nih",{"_index":3374,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["node",{"_index":508,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"miscellaneous/typealiases.html":{}}}],["node's",{"_index":2431,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.children",{"_index":3978,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.entityid",{"_index":777,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["node.label.tolowercase().includes(searchvalue",{"_index":3962,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.parent",{"_index":3926,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.synonymlabels.find((label",{"_index":3967,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.ts",{"_index":2419,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OntologyNode.html":{}}}],["node.ts:11",{"_index":2430,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:16",{"_index":2433,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:27",{"_index":2428,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:29",{"_index":2424,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.zoomtoonload",{"_index":566,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["node['@id",{"_index":764,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["nodeattrs",{"_index":1050,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["nodeclick",{"_index":459,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodeclicksubject",{"_index":460,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodehoverstart",{"_index":461,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodehoverstartsubject",{"_index":462,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodehoverstop",{"_index":463,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodehoverstopsubject",{"_index":464,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodemap",{"_index":3901,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodemap[parent].children.push(id",{"_index":3912,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"miscellaneous/typealiases.html":{}}}],["nodes.concat",{"_index":1091,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["nodes.filter(s",{"_index":1095,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["nodes.foreach((node",{"_index":3960,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes[id",{"_index":3937,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes[node.parent",{"_index":4002,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["none",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["noninfringement",{"_index":4718,"title":{},"body":{"license.html":{}}}],["normally",{"_index":733,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["not(:last",{"_index":2470,"title":{},"body":{"components/HeaderComponent.html":{}}}],["note",{"_index":631,"title":{},"body":{"classes/BodyUILayer.html":{},"components/DualSliderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["notice",{"_index":4703,"title":{},"body":{"license.html":{}}}],["now",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":4167,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["null",{"_index":925,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["null)?.getcontainerelement",{"_index":4331,"title":{},"body":{"injectables/ThemingService.html":{}}}],["num_layers_selected_on_creation",{"_index":4491,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["number((event.target",{"_index":2312,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(this.options.floor",{"_index":2315,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(value.slice(0",{"_index":3507,"title":{},"body":{"classes/InitializationState.html":{}}}],["number.isnan(value",{"_index":4407,"title":{},"body":{"components/ViewerComponent.html":{}}}],["number.parseint(hex.slice(1",{"_index":4405,"title":{},"body":{"components/ViewerComponent.html":{}}}],["number[][]}).transformmatrix",{"_index":682,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["number]}).color",{"_index":684,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["o",{"_index":2073,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["object",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["object.assign",{"_index":2091,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["object.assign(s",{"_index":933,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["object.assign(this",{"_index":3127,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["object.entries(channelconfigs",{"_index":4077,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["object.entries(configs).reduce((result",{"_index":1219,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["object.entries(entities",{"_index":4513,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["object.entries(rui).foreach(([k",{"_index":2632,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["object.keys(this.channelconfigs",{"_index":1179,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["object.values(entities",{"_index":4481,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["object.values(state.nodes",{"_index":4014,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["objects",{"_index":855,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["observable",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observableinput",{"_index":1990,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["observedvalueof",{"_index":2039,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["obtaining",{"_index":4682,"title":{},"body":{"license.html":{}}}],["occurencedata",{"_index":3984,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["occurences",{"_index":874,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["occurrences",{"_index":842,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["occurs",{"_index":2231,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["office",{"_index":3377,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["official",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1867,"title":{},"body":{"components/ContentComponent.html":{}}}],["offsets",{"_index":3638,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["old",{"_index":2567,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["oldruidata",{"_index":2566,"title":{"interfaces/OldRuiData.html":{}},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["oldviewstate",{"_index":1264,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["ome",{"_index":3629,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["ome\\.tif|ome\\.tiff)$/.test(f.rel_path",{"_index":2777,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["omezarr",{"_index":3628,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["omezarrinfo",{"_index":1141,"title":{"interfaces/OMEZarrInfo.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omezarrreader",{"_index":3625,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omezarrreader.fromurl(url",{"_index":3646,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omit",{"_index":2559,"title":{},"body":{"classes/HuBMAPEntity.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["omit(this",{"_index":2839,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["once",{"_index":1920,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":2195,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["onclick",{"_index":534,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["ondestroy",{"_index":1691,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["one",{"_index":2053,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ones",{"_index":3142,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["onhover",{"_index":532,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["oninit",{"_index":3759,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["onkeyhigh",{"_index":2208,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeyhigh(event",{"_index":2241,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow",{"_index":2209,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow(event",{"_index":2247,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["online",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["onselect",{"_index":3768,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onselect(event",{"_index":3787,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontolgyselection.foreach((selection",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["ontolgyselection.length",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["ontolgyselection[0].label",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["ontological",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":65,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["ontology.ts",{"_index":2960,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["ontology/ccf",{"_index":3698,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ontology/ontology.state",{"_index":4261,"title":{},"body":{"modules/StoreModule.html":{}}}],["ontologyexplorationmodule",{"_index":400,"title":{"modules/OntologyExplorationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyfilter",{"_index":3985,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologynode",{"_index":2422,"title":{"interfaces/OntologyNode.html":{}},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["ontologysearchcomponent",{"_index":364,"title":{"components/OntologySearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologysearchmodule",{"_index":3743,"title":{"modules/OntologySearchModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologysearchservice",{"_index":3772,"title":{"injectables/OntologySearchService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["ontologyselected(ontologyselection",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselection",{"_index":157,"title":{"interfaces/OntologySelection.html":{}},"body":{"components/AppComponent.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{}}}],["ontologyselection.map(selection",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselectioncomponent",{"_index":366,"title":{"components/OntologySelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologyselectionlabel",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselectionmodule",{"_index":3744,"title":{"modules/OntologySelectionModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyselections",{"_index":3993,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologyservice",{"_index":3765,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologystate",{"_index":3860,"title":{"injectables/OntologyState.html":{}},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["ontologystatemodel",{"_index":3893,"title":{"interfaces/OntologyStateModel.html":{}},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["ontologyterms",{"_index":67,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["ontologytermsdata",{"_index":2085,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ontologytermsfulldata",{"_index":1981,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ontologytreecomponent",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologytreemodule",{"_index":3745,"title":{"modules/OntologyTreeModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules.html":{},"overview.html":{}}}],["onviewstatechange",{"_index":536,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["onviewstatechange(undefined",{"_index":3021,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["onviewstatechangeargs",{"_index":1154,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["opacity",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{}}}],["open",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open(data",{"_index":3228,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["open(event",{"_index":1656,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["open/close",{"_index":3484,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["openapi",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["opened",{"_index":1834,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":3473,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":3431,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":3480,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":3432,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":3521,"title":{},"body":{"classes/InitializationState.html":{}}}],["openimageviewer",{"_index":4147,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["opening",{"_index":4107,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["opening/closing/expanding",{"_index":3447,"title":{},"body":{"classes/InitializationState.html":{}}}],["openresult",{"_index":4146,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["opens",{"_index":1545,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{}}}],["openviewer(viewer",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["operator",{"_index":2065,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["operatorfunction",{"_index":2040,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["opposite",{"_index":3436,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["ops",{"_index":902,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addhubmapdatatostore",{"_index":910,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addjsonldtostore(this.options.hubmapdataurl",{"_index":909,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addn3tostore(this.options.ccfowlurl",{"_index":905,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addrdfxmltostore(this.options.ccfowlurl",{"_index":906,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["optimizations",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1295,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["option.displaylabel[0",{"_index":3828,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[1",{"_index":3829,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[2",{"_index":3830,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option:first",{"_index":4208,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["option:last",{"_index":4209,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["option?.displaylabel",{"_index":3821,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["optional",{"_index":87,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["options",{"_index":69,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["options.ceil",{"_index":2317,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["options.floor",{"_index":2316,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionschanged",{"_index":2210,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionsvisible",{"_index":2136,"title":{},"body":{"components/DropdownComponent.html":{}}}],["orbitaxis",{"_index":550,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["orbitview",{"_index":511,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["order",{"_index":3311,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["order.length",{"_index":4519,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ordering",{"_index":3562,"title":{},"body":{"classes/InitializationState.html":{}}}],["organ",{"_index":52,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["organ_id",{"_index":2857,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["organ_sample",{"_index":2840,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["organids",{"_index":3919,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organization",{"_index":3318,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["organname",{"_index":54,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["organnodes",{"_index":3921,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organs",{"_index":850,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{}}}],["organsample",{"_index":2511,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["organsid",{"_index":1059,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["origin_sample",{"_index":2888,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["original",{"_index":2426,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["originx",{"_index":2275,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["originy",{"_index":2276,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ot",{"_index":2108,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/HuBMAPEntity.html":{}}}],["ot2od026671",{"_index":3382,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["other.expanded",{"_index":3549,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":3550,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":3555,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":3553,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":3552,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":3551,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":3554,"title":{},"body":{"classes/InitializationState.html":{}}}],["other_organ",{"_index":2669,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["otherwise",{"_index":2920,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"license.html":{}}}],["out",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":4211,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["outline",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{}}}],["output",{"_index":746,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["outputs",{"_index":724,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["outside",{"_index":730,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["overall",{"_index":1279,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["overflow",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["overlay",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{}}}],["overlay'},{'name",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["overlay.component",{"_index":4254,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.component.html",{"_index":4239,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":4238,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":4236,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:16",{"_index":4244,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:19",{"_index":4240,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:22",{"_index":4242,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.create",{"_index":2282,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.module",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.module.ts",{"_index":4251,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.position().flexibleconnectedto(element).withpositions([position",{"_index":2280,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay/spinner",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{}}}],["overlaycontainer",{"_index":4314,"title":{},"body":{"injectables/ThemingService.html":{}}}],["overlaymodule",{"_index":2338,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["overlayref",{"_index":2203,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.attach(popoverportal",{"_index":2309,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.updateposition",{"_index":2310,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlays",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["overlayx",{"_index":2277,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayy",{"_index":2278,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overview",{"_index":4065,"title":{"overview.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["overview_defaults",{"_index":4066,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["overviewargs",{"_index":4064,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["overviewview",{"_index":4062,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["overviewviewnewargs",{"_index":4063,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["owl",{"_index":3335,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["owner",{"_index":1637,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["owner?.contains(target",{"_index":1675,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["owning",{"_index":4340,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":982,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"changelog.html":{}}}],["p.translation_units",{"_index":984,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_rotation",{"_index":994,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_scaling",{"_index":1002,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_translation",{"_index":990,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_rotation",{"_index":995,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_scaling",{"_index":1003,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_translation",{"_index":991,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_rotation].map(toradians",{"_index":996,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_scaling",{"_index":1004,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_translation].map(t",{"_index":992,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["package",{"_index":4621,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["page",{"_index":2442,"title":{},"body":{"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["pair",{"_index":3557,"title":{},"body":{"classes/InitializationState.html":{}}}],["pane",{"_index":2178,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["panel",{"_index":2168,"title":{},"body":{"components/DropdownComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["panelclass",{"_index":2283,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["param",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{}}}],["parameters",{"_index":474,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["parameters>[0",{"_index":1152,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["parameters[0",{"_index":3637,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["params",{"_index":3442,"title":{},"body":{"classes/InitializationState.html":{}}}],["parent",{"_index":521,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/CheckboxComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"miscellaneous/typealiases.html":{}}}],["parent.messages.pipe(takewhile",{"_index":3601,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parentextractor",{"_index":2978,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentextractor(json",{"_index":2993,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentproperty",{"_index":2977,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parents",{"_index":3900,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["parser",{"_index":4652,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":3366,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{}}}],["partial",{"_index":472,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{}}}],["partial.placeholder",{"_index":2988,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["partial[0",{"_index":1603,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["particular",{"_index":4716,"title":{},"body":{"license.html":{}}}],["partonomy",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":2940,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":2945,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":2944,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":2943,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":2942,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["pas_registered_thumbnail.png",{"_index":2580,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["pass",{"_index":3055,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["passed",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["passes",{"_index":1405,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["patch",{"_index":2564,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["path",{"_index":1028,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"dependencies.html":{}}}],["path.length",{"_index":1030,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["path.reverse",{"_index":1031,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["path/unweighted",{"_index":971,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["patient",{"_index":2369,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["payload",{"_index":1891,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["pbr",{"_index":707,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["permission",{"_index":4677,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4698,"title":{},"body":{"license.html":{}}}],["person",{"_index":4681,"title":{},"body":{"license.html":{}}}],["persons",{"_index":4699,"title":{},"body":{"license.html":{}}}],["physiologic",{"_index":3352,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["pick",{"_index":3126,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["pickable",{"_index":671,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["picked",{"_index":576,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["picker",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["picture",{"_index":4027,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["pictureinpictureviewer",{"_index":4025,"title":{"classes/PictureInPictureViewer.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["pictureinpictureviewerprops",{"_index":4028,"title":{"interfaces/PictureInPictureViewerProps.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["pipe",{"_index":2024,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["pipe(mergeall",{"_index":3603,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["placed",{"_index":4270,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":3177,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"changelog.html":{}}}],["placement",{"_index":961,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["placement.target['@id",{"_index":1023,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["placement_date",{"_index":3717,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["placements",{"_index":1017,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["placementtarget",{"_index":3687,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["placementtarget?.endswith('kidney",{"_index":3693,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["places",{"_index":635,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["plasma",{"_index":1512,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["pluck",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["plugin",{"_index":4268,"title":{},"body":{"modules/StoreModule.html":{}}}],["point",{"_index":3675,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["pointer",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["popover",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover's",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["popover'},{'name",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["popover.component",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"modules/FiltersPopoverModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popover.component.html",{"_index":2383,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.scss",{"_index":2382,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts",{"_index":2381,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:15",{"_index":2391,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:21",{"_index":2388,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:26",{"_index":2392,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:31",{"_index":2398,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:36",{"_index":2397,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:37",{"_index":3233,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:42",{"_index":3235,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:43",{"_index":2396,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:47",{"_index":3236,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:51",{"_index":2394,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:52",{"_index":3225,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:65",{"_index":3226,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:74",{"_index":3229,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:82",{"_index":3231,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.module",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageViewerModule.html":{}}}],["popover.module.ts",{"_index":2415,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popover/filters",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{}}}],["popover/image",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popoverelement",{"_index":2204,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverelement.nativeelement.contains(target",{"_index":2303,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverportal",{"_index":2205,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popup",{"_index":1336,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"changelog.html":{}}}],["popup'},{'name",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["popup.component",{"_index":1688,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["popup.component.html",{"_index":1635,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.scss",{"_index":1634,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts",{"_index":1633,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:20",{"_index":1644,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:25",{"_index":1641,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:30",{"_index":1646,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:32",{"_index":1662,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:37",{"_index":1666,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:40",{"_index":1663,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:45",{"_index":1659,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:53",{"_index":1650,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:64",{"_index":1657,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.module",{"_index":1422,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["popup.module.ts",{"_index":1687,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["popup/color",{"_index":1421,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{}}}],["popupvisible",{"_index":1638,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["portal",{"_index":882,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["portalmodule",{"_index":2339,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["portalurl",{"_index":2512,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["portalurl}browse/dataset/${uuid}#visualization",{"_index":2835,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["portalurl}browse/sample/${this.id",{"_index":2819,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["portalurl}search?ancestor_ids[0]=${this.id}&entity_type[0]=dataset",{"_index":2820,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["portions",{"_index":4707,"title":{},"body":{"license.html":{}}}],["position",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"interfaces/OldRuiData.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["position(value",{"_index":3469,"title":{},"body":{"classes/InitializationState.html":{}}}],["positions",{"_index":1373,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["positions[index",{"_index":3137,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["positionstrategy",{"_index":2279,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["post",{"_index":2881,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["postprocess",{"_index":656,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["precision",{"_index":3384,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["prefix",{"_index":3872,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["preparation",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["preprint",{"_index":3340,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["presented",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":2246,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["private",{"_index":455,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["process",{"_index":1827,"title":{},"body":{"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["processes",{"_index":1717,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["programmers",{"_index":630,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["progress",{"_index":4237,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["project",{"_index":3257,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["projected",{"_index":1725,"title":{},"body":{"components/ContainerComponent.html":{}}}],["projects/.../hubmap",{"_index":4739,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../image",{"_index":4735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../loader.ts",{"_index":4664,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../picture",{"_index":4740,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["promise",{"_index":95,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["promise(r",{"_index":919,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["promise(resolve",{"_index":3420,"title":{},"body":{"classes/InitializationState.html":{}}}],["promise.all(loaderpromises",{"_index":1212,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["promise.all(ops",{"_index":915,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["proof",{"_index":3354,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["prop",{"_index":2929,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["properly",{"_index":4113,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["property",{"_index":1301,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/ValueObject.html":{}}}],["property(0",{"_index":2980,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(idproperty",{"_index":2973,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(labelproperty",{"_index":2983,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(parentproperty",{"_index":2979,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(synonymsproperty",{"_index":2986,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(valueproperty",{"_index":2976,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["props",{"_index":523,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["props.defaultchannelconfig",{"_index":1167,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["props.overview",{"_index":4069,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["protected",{"_index":1183,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["protocolurl",{"_index":2513,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["provide",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":755,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":1946,"title":{},"body":{"injectables/DataSourceService.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["provider",{"_index":795,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["providers",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["provides",{"_index":3775,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["providing",{"_index":1806,"title":{},"body":{"components/ContentComponent.html":{}}}],["prunednodes",{"_index":3923,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["prunemodel(model",{"_index":3920,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["public",{"_index":797,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"changelog.html":{}}}],["publication",{"_index":3341,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["publish",{"_index":4692,"title":{},"body":{"license.html":{}}}],["publishreplay",{"_index":2042,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["publishreplay(1",{"_index":2077,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["pull",{"_index":1549,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{}}}],["pureimageviewerlayer",{"_index":3096,"title":{"interfaces/PureImageViewerLayer.html":{}},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["purplebrown",{"_index":1469,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["purplelightblue",{"_index":1485,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["purpose",{"_index":4717,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1365,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["px",{"_index":3461,"title":{},"body":{"classes/InitializationState.html":{}}}],["quad",{"_index":831,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["qualitative",{"_index":1428,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["qualitative1",{"_index":1431,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["qualitative2",{"_index":1446,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["quaternion",{"_index":973,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["queried",{"_index":21,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["queries",{"_index":72,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"components/ViewerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["queries/aggregate",{"_index":863,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/find",{"_index":866,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/image",{"_index":867,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/list",{"_index":869,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/ontology",{"_index":873,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/spatial",{"_index":871,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["query",{"_index":10,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["querydata",{"_index":2072,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["querying",{"_index":2067,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["querylist",{"_index":1733,"title":{},"body":{"components/ContainerComponent.html":{}}}],["querystatus",{"_index":1982,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["question",{"_index":1280,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["r",{"_index":997,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{}}}],["r.json",{"_index":2873,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["r.ok",{"_index":2872,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["r.x",{"_index":3724,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r.y",{"_index":3726,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r.z",{"_index":3728,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r_rad",{"_index":993,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["r_rad[0",{"_index":999,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["r_rad[2",{"_index":1000,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["race",{"_index":2732,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["racial",{"_index":2731,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["radio",{"_index":4210,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["radius",{"_index":1377,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/OntologySearchComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["range",{"_index":75,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["rangelabel",{"_index":2214,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ratio",{"_index":3722,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["raw",{"_index":2496,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rc.1",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":976,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["rdf.type",{"_index":1013,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["rdfjs/data",{"_index":4637,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":4650,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":4115,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["reached",{"_index":4112,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["react",{"_index":4654,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":3844,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["read",{"_index":742,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ViewerComponent.html":{}}}],["reader",{"_index":3645,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["reader.loadomezarr",{"_index":3647,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["readonly",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ready",{"_index":1934,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["real",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":4267,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":1817,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":3576,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":1156,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["red",{"_index":4408,"title":{},"body":{"components/ViewerComponent.html":{}}}],["redtan",{"_index":1477,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ref",{"_index":957,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["refcount",{"_index":2043,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["reference",{"_index":849,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialObjectReference.html":{},"components/ToggleButtonComponent.html":{}}}],["reference_organ_id",{"_index":3669,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["referencelayer",{"_index":3171,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["references",{"_index":1009,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["referencing",{"_index":3172,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["reforganid",{"_index":2767,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["refresh",{"_index":2454,"title":{},"body":{"components/HeaderComponent.html":{}}}],["refreshclicked",{"_index":2447,"title":{},"body":{"components/HeaderComponent.html":{}}}],["region",{"_index":3088,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["regions",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2113,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registered",{"_index":2116,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["registericon",{"_index":2924,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":2921,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl",{"_index":2949,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":2925,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":2902,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registerloaders",{"_index":621,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["registerloaders([dracoworkerloader",{"_index":689,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["registers",{"_index":2918,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registration",{"_index":2107,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry",{"_index":2909,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":4260,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":2901,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state.ts:106",{"_index":2955,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:120",{"_index":2953,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:43",{"_index":2951,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:72",{"_index":2956,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:82",{"_index":2957,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":2101,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["registry/icon",{"_index":2900,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{}}}],["registry[methodname",{"_index":2932,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["rel_path",{"_index":2775,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["relationship",{"_index":3317,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["relative",{"_index":786,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relavant",{"_index":1360,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["release",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["reloads",{"_index":4117,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["remote",{"_index":1939,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["remove",{"_index":1300,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{}}}],["removebox",{"_index":2385,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["removeclass",{"_index":4333,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removes",{"_index":4298,"title":{},"body":{"injectables/ThemingService.html":{}}}],["render",{"_index":732,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["renderer",{"_index":4327,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":4315,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](overlay",{"_index":4335,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":4334,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":1548,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["renderlayers",{"_index":610,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["replace",{"_index":753,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["replay",{"_index":2069,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject",{"_index":2041,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject(1",{"_index":1998,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject>(1",{"_index":2086,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["repository",{"_index":1972,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["represents",{"_index":3345,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["reqprops",{"_index":1188,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.height",{"_index":1191,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.sources.length",{"_index":1192,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.width",{"_index":1190,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["requested",{"_index":830,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["requests",{"_index":3863,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["require",{"_index":3121,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["required",{"_index":1164,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["res",{"_index":3657,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["res.json",{"_index":3661,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["res.status",{"_index":3659,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["research",{"_index":3372,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["reset",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["resetchannelconfigs",{"_index":1255,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["resets",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/ThemingService.html":{}}}],["resettheme",{"_index":4292,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resizesensor",{"_index":4391,"title":{},"body":{"components/ViewerComponent.html":{}}}],["resizesensor(container",{"_index":4437,"title":{},"body":{"components/ViewerComponent.html":{}}}],["resizing",{"_index":4206,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["resolution",{"_index":3315,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["resolve",{"_index":3417,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolves",{"_index":1749,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/DataSourceService.html":{},"classes/InitializationState.html":{}}}],["resolving",{"_index":826,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["respond",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":2681,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["responsetype",{"_index":3944,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["responsible",{"_index":3851,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["restriction",{"_index":4687,"title":{},"body":{"license.html":{}}}],["result",{"_index":11,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result's",{"_index":4155,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["result[key",{"_index":1221,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["resultclicked",{"_index":4099,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resulting",{"_index":2990,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["resultlabel",{"_index":4098,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["results",{"_index":100,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resultsbrowser",{"_index":4087,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsercomponent",{"_index":370,"title":{"components/ResultsBrowserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["resultsbrowseritemcomponent",{"_index":372,"title":{"components/ResultsBrowserItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["resultsbrowseritemmodule",{"_index":4169,"title":{"modules/ResultsBrowserItemModule.html":{}},"body":{"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["resultsbrowseritems",{"_index":4091,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsermodule",{"_index":401,"title":{"modules/ResultsBrowserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["resulttype",{"_index":41,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["resulturl",{"_index":40,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["return",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["returns",{"_index":498,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["reverse",{"_index":2364,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["rgb",{"_index":3118,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{}}}],["right",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["right.closeexpanded",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["right.expanded",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["right.open",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["right.px",{"_index":1815,"title":{},"body":{"components/ContentComponent.html":{}}}],["right_kidney",{"_index":1070,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["rightmargin",{"_index":1851,"title":{},"body":{"components/ContentComponent.html":{}}}],["rights",{"_index":4689,"title":{},"body":{"license.html":{}}}],["rk",{"_index":2587,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rl",{"_index":2657,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["root",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{}}}],["root'},{'name",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["root_states",{"_index":4265,"title":{},"body":{"modules/StoreModule.html":{}}}],["rootnode",{"_index":3853,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["rotation",{"_index":3674,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotation_order",{"_index":3729,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotation_units",{"_index":3731,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotationorbit",{"_index":558,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["rotations",{"_index":4233,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotationx",{"_index":557,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["row",{"_index":1319,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["rui",{"_index":1052,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["rui_location",{"_index":2895,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs",{"_index":2636,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.bladder",{"_index":2643,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.body",{"_index":2642,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.colon",{"_index":2650,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.heart",{"_index":2648,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.kidney",{"_index":2644,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.left_kidney",{"_index":2646,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.left_lung",{"_index":2656,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.liver",{"_index":2668,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.lung",{"_index":2655,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.lymph_node",{"_index":2660,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.right_kidney",{"_index":2645,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.right_lung",{"_index":2658,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.small_instestine",{"_index":2653,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.spleen",{"_index":2662,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.thymus",{"_index":2664,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.ureter",{"_index":2666,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ruilocation",{"_index":2759,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["run",{"_index":1721,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["running",{"_index":2055,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["runtime",{"_index":2106,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/ContainerComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["s",{"_index":929,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["safedef",{"_index":2914,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["safehtml",{"_index":2903,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":2904,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sample",{"_index":2530,"title":{},"body":{"classes/HuBMAPEntity.html":{},"components/ImageViewerContentComponent.html":{},"changelog.html":{}}}],["samples",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":2912,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":2109,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["sanitizer",{"_index":2911,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitizer.bypasssecuritytrusthtml(html",{"_index":2916,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl(url",{"_index":2915,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sans",{"_index":2475,"title":{},"body":{"components/HeaderComponent.html":{}}}],["saved",{"_index":2359,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["scaffolding",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1112,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scale(1,2",{"_index":4365,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["scales",{"_index":3347,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["scaling",{"_index":4229,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["scaling_units",{"_index":3721,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["scene",{"_index":665,"title":{},"body":{"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scene.ts",{"_index":1033,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scene.ts:105",{"_index":1041,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:115",{"_index":1051,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:154",{"_index":1048,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:26",{"_index":1039,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:30",{"_index":1043,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:47",{"_index":1045,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:64",{"_index":1047,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scenegraph",{"_index":643,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphlayer",{"_index":617,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphnode",{"_index":644,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphnode.rotation",{"_index":660,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenes",{"_index":817,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["schema",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["schema#label",{"_index":2966,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["scheme",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme.colors[index",{"_index":4516,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme.ts",{"_index":1424,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["scheme.type",{"_index":4200,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["scheme/color",{"_index":1332,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme1",{"_index":1429,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme2",{"_index":1444,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme3",{"_index":1468,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme4",{"_index":1476,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme5",{"_index":1484,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme6",{"_index":1493,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme7",{"_index":1502,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme8",{"_index":1511,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["schemechange",{"_index":3051,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["schemechanged",{"_index":4187,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemechanged(idx",{"_index":4193,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemedropdowncomponent",{"_index":374,"title":{"components/SchemeDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["schemedropdownmodule",{"_index":3182,"title":{"modules/SchemeDropdownModule.html":{}},"body":{"modules/ImageViewerLayersModule.html":{},"modules/SchemeDropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["schemeidx",{"_index":4186,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemeoptions",{"_index":1538,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["schemes",{"_index":1372,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["schemes.ts",{"_index":1425,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["science",{"_index":4671,"title":{},"body":{"index.html":{}}}],["screen",{"_index":3282,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["script_fields",{"_index":2892,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["scroll",{"_index":4110,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollbar",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrolled",{"_index":4119,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrolling",{"_index":1803,"title":{},"body":{"components/ContainerComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollingmodule",{"_index":4182,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["search",{"_index":806,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["search'},{'name",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["search(filter",{"_index":853,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["search.component",{"_index":3848,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.component.html",{"_index":3761,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.scss",{"_index":3760,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts",{"_index":3756,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:25",{"_index":3776,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:30",{"_index":3800,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:36",{"_index":3798,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:41",{"_index":3773,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:47",{"_index":3803,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:54",{"_index":3784,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:72",{"_index":3781,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:81",{"_index":3793,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:90",{"_index":3796,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:98",{"_index":3789,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.detached",{"_index":3835,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.module",{"_index":3749,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["search.module.ts",{"_index":3842,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.service",{"_index":3808,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["search.service.ts",{"_index":3850,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["search.service.ts:107",{"_index":3861,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:124",{"_index":3878,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:142",{"_index":3864,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:154",{"_index":3882,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:190",{"_index":3877,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:200",{"_index":3868,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:216",{"_index":3874,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search/ontology",{"_index":3748,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["searchableitem",{"_index":58,"title":{"interfaces/SearchableItem.html":{}},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["searched",{"_index":57,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{}}}],["searches",{"_index":3865,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searching",{"_index":3758,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["searchresult",{"_index":3780,"title":{"interfaces/SearchResult.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults",{"_index":3959,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.get(node.id",{"_index":3963,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.set(node.id",{"_index":3964,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchservice",{"_index":3774,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["searchvalue",{"_index":3867,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchvalue.length",{"_index":3974,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["section",{"_index":4185,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["see",{"_index":3339,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["select",{"_index":2160,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selected",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["selected(ontologynode",{"_index":3994,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selectedcolor",{"_index":1343,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["selectedresult",{"_index":4095,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["selecting",{"_index":2140,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selection",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["selection'},{'name",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["selection.component",{"_index":4008,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.component.html",{"_index":3983,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.scss",{"_index":3982,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts",{"_index":3980,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":3998,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":3989,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":3992,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:40",{"_index":3991,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":3988,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:53",{"_index":3996,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:61",{"_index":3995,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.id",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["selection.label",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["selection.module",{"_index":3751,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["selection.module.ts",{"_index":4007,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.ts",{"_index":3979,"title":{},"body":{"interfaces/OntologySelection.html":{}}}],["selection/ontology",{"_index":3750,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{}}}],["selectionchange",{"_index":1276,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selectionchanged",{"_index":2137,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionchanged(value",{"_index":2145,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectioncounter",{"_index":4497,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["selectionorder",{"_index":3098,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["selections",{"_index":1271,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["selectionstring",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["selects",{"_index":2938,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["sell",{"_index":4696,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3328,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["semantically",{"_index":3324,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["send",{"_index":1710,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["sendcompletedto(subject",{"_index":2063,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._aggregatedataquerystatus",{"_index":2005,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._listdataquerystatus",{"_index":2014,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._termoccurencesdataquerystatus",{"_index":2031,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sender",{"_index":3566,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":3539,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":3509,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":3611,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":3580,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":2060,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{}}}],["sendtoggle",{"_index":3540,"title":{},"body":{"classes/InitializationState.html":{}}}],["sensor",{"_index":4370,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sent",{"_index":1883,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["serif",{"_index":2476,"title":{},"body":{"components/HeaderComponent.html":{}}}],["server",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":878,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["service.initializeimpl(component",{"_index":4318,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services",{"_index":3396,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["services/data",{"_index":2046,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["services/message/message.service",{"_index":1887,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1914,"title":{},"body":{"modules/CoreModule.html":{}}}],["servicetoken",{"_index":2517,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["servicetoken).tojsonld",{"_index":2697,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["servicetoken.length",{"_index":2877,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["servicetype",{"_index":2869,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["set",{"_index":68,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["set(['van0003",{"_index":2572,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["set(filter.highlightedentities",{"_index":930,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["set(filter?.highlightedentities",{"_index":1096,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["setbrightnesshigh(value",{"_index":1575,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setbrightnesslow(value",{"_index":1570,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setdefaultscheme",{"_index":4466,"title":{},"body":{"injectables/ViewerState.html":{}}}],["setdefaultscheme(scheme",{"_index":4471,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["setlayers(layers",{"_index":3198,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["setontology",{"_index":4010,"title":{},"body":{"injectables/OntologyState.html":{}}}],["setontology(ontology",{"_index":4011,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["sets",{"_index":1723,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ThemingService.html":{}}}],["setscene",{"_index":468,"title":{},"body":{"classes/BodyUI.html":{}}}],["setscene(data",{"_index":504,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["setsize",{"_index":2998,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsize(width",{"_index":1202,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources",{"_index":2999,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources(sources",{"_index":1207,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources(urls",{"_index":4394,"title":{},"body":{"components/ViewerComponent.html":{}}}],["setsourceurls",{"_index":3222,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["setsourceurls(result",{"_index":3230,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["settheme",{"_index":4293,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":4308,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":3511,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["settimeout(r",{"_index":920,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["setting",{"_index":4275,"title":{},"body":{"modules/StoreModule.html":{}}}],["settings",{"_index":1564,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{}}}],["settle",{"_index":918,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["settransparency(value",{"_index":1579,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setup",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":60,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shadow",{"_index":1607,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["shall",{"_index":4704,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1394,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["share",{"_index":516,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["shared",{"_index":4263,"title":{},"body":{"modules/StoreModule.html":{}}}],["shared/components/checkbox/checkbox.module",{"_index":2378,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["shared/components/drawer/drawer/drawer.component",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/components/dropdown/dropdown.module",{"_index":2379,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/dual",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/FiltersContentModule.html":{}}}],["shared/components/spinner",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["sharing",{"_index":2068,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["short",{"_index":30,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shortest",{"_index":970,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["shortestpath",{"_index":969,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["shortestpath(this.graph",{"_index":1029,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["shortinfo",{"_index":31,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shortinfo0",{"_index":2842,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["shortinfo1",{"_index":2843,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["shortinfo2",{"_index":2844,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["show",{"_index":1681,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["showing",{"_index":4423,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["showm",{"_index":3143,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["shown",{"_index":2259,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["shows",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["showselectionbar",{"_index":1600,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["si",{"_index":2652,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["side",{"_index":1837,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["sidebar",{"_index":3079,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["simplechanges",{"_index":2235,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["simplemeshlayer",{"_index":618,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["simplify",{"_index":3907,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["single",{"_index":754,"title":{},"body":{"components/BodyUiComponent.html":{},"interfaces/IdObject.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ValueObject.html":{}}}],["site",{"_index":2440,"title":{},"body":{"components/HeaderComponent.html":{}}}],["size",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OldRuiData.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["skipself",{"_index":1912,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["slideinhorizontaldropdown",{"_index":2154,"title":{},"body":{"components/DropdownComponent.html":{}}}],["slideinhorizontalslider",{"_index":2322,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider",{"_index":1133,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["slider's",{"_index":2244,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider'},{'name",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["slider.component",{"_index":2340,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.component.html",{"_index":2197,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.scss",{"_index":2196,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts",{"_index":2194,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:102",{"_index":2216,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:125",{"_index":2236,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:139",{"_index":2249,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:155",{"_index":2238,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:168",{"_index":2227,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:187",{"_index":2253,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:204",{"_index":2251,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:214",{"_index":2232,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:227",{"_index":2248,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:243",{"_index":2243,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":2268,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:36",{"_index":2264,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:41",{"_index":2220,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:46",{"_index":2223,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:51",{"_index":2222,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:56",{"_index":2226,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:61",{"_index":2258,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:66",{"_index":2261,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:71",{"_index":2260,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:76",{"_index":2255,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:81",{"_index":2254,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:86",{"_index":2270,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:97",{"_index":2262,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.detached",{"_index":2324,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.module",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider.module.ts",{"_index":2337,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.wrapper",{"_index":2318,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider/dual",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider_max",{"_index":4414,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sliders",{"_index":1529,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["slidervaluechanged",{"_index":2211,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slidervalues",{"_index":4076,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["slidervalues.push(slider",{"_index":4081,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["small",{"_index":32,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["software",{"_index":4684,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1381,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["sort((a",{"_index":935,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["sortby",{"_index":3806,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortby(searchresults",{"_index":3818,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult",{"_index":3769,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult(this",{"_index":3792,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorted",{"_index":3154,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["sortlexically",{"_index":3770,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically(this",{"_index":3795,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorts",{"_index":3794,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["source.dimension_units",{"_index":1116,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source.entityid",{"_index":1123,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source.getontologytermoccurences().subscribe(ontologytermsdata",{"_index":2087,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.info",{"_index":1211,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["source.label",{"_index":1126,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source.object",{"_index":1103,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source.object.file_format?.startswith('model/gltf",{"_index":1104,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source.object?.file",{"_index":1124,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source.object?.file_subpath",{"_index":1125,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source.object['@id",{"_index":1106,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source.pipe",{"_index":2074,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.service",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.service.ts",{"_index":1927,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":1940,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:19",{"_index":1942,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":1931,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:53",{"_index":1933,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:67",{"_index":1936,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:77",{"_index":1932,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:87",{"_index":1937,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:97",{"_index":1935,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.subscribe(data",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["source.worker",{"_index":1950,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.x_dimension",{"_index":1117,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source.y_dimension",{"_index":1118,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source.z_dimension].map(dim",{"_index":1119,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["source/data",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source['@id",{"_index":1107,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sourceid",{"_index":1105,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sourceiri",{"_index":966,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["sources",{"_index":1160,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["sources(urls",{"_index":4418,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sources.includes(msg.source",{"_index":3593,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sources.map(source",{"_index":1209,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["sourcesfromurls",{"_index":4371,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sourcesfromurls(urls",{"_index":4382,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sourceurls",{"_index":3220,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["sp",{"_index":2661,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["space",{"_index":3176,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["spatial",{"_index":83,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{}}}],["spatial_bulk",{"_index":2866,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["spatialentity",{"_index":816,"title":{"interfaces/SpatialEntity.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{}}}],["spatially",{"_index":3326,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["spatialobjectreference",{"_index":955,"title":{"interfaces/SpatialObjectReference.html":{}},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["spatialorbulk",{"_index":2514,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["spatialplacement",{"_index":959,"title":{"interfaces/SpatialPlacement.html":{}},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["spatialscenenode",{"_index":480,"title":{"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spec",{"_index":2558,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["special",{"_index":3909,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["specific",{"_index":97,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/SearchableItem.html":{},"miscellaneous/typealiases.html":{}}}],["specified",{"_index":3591,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["specifying",{"_index":3574,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["specimen_type",{"_index":2860,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["spinner",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["spinneractive",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["spinneroverlaycomponent",{"_index":375,"title":{"components/SpinnerOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["spinneroverlaymodule",{"_index":402,"title":{"modules/SpinnerOverlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["spinning",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1074,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sprint",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["src/.../data.state.ts",{"_index":4663,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../drawer.component.ts",{"_index":4736,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../image",{"_index":4738,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../messages.ts",{"_index":4734,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../ontology",{"_index":4737,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":1909,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/header/header.component.ts",{"_index":2439,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:18",{"_index":2449,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:23",{"_index":2450,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:28",{"_index":2448,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:33",{"_index":2453,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:38",{"_index":2452,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.module.ts",{"_index":2482,"title":{},"body":{"modules/HeaderModule.html":{}}}],["src/app/core/models/color",{"_index":1423,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["src/app/core/models/flat",{"_index":2418,"title":{},"body":{"classes/FlatNode.html":{}}}],["src/app/core/models/image",{"_index":3095,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/json",{"_index":2959,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["src/app/core/models/ontology",{"_index":3754,"title":{},"body":{"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{}}}],["src/app/core/services/data",{"_index":1926,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["src/app/core/services/ontology",{"_index":3849,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/theming/theming.module.ts",{"_index":4281,"title":{},"body":{"modules/ThemingModule.html":{}}}],["src/app/core/services/theming/theming.service.ts",{"_index":4286,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:13",{"_index":4310,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:15",{"_index":4312,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:17",{"_index":4313,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:20",{"_index":4303,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:23",{"_index":4295,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:37",{"_index":4300,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:46",{"_index":4309,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:56",{"_index":4307,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:67",{"_index":4306,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:82",{"_index":4297,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/store/data/data.state.ts",{"_index":1971,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/store/data/data.state.ts:101",{"_index":2012,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:103",{"_index":2015,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:107",{"_index":2006,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:111",{"_index":2032,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:116",{"_index":2017,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:118",{"_index":2009,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:120",{"_index":2034,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:123",{"_index":2029,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:130",{"_index":1987,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:155",{"_index":1997,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:169",{"_index":1992,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:181",{"_index":1989,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:193",{"_index":1994,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:92",{"_index":2001,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:94",{"_index":1999,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:96",{"_index":2002,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:98",{"_index":2018,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/icon",{"_index":2100,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["src/app/core/store/ontology/ontology.state.ts",{"_index":4009,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["src/app/core/store/ontology/ontology.state.ts:39",{"_index":4015,"title":{},"body":{"injectables/OntologyState.html":{}}}],["src/app/core/store/ontology/ontology.state.ts:42",{"_index":4017,"title":{},"body":{"injectables/OntologyState.html":{}}}],["src/app/core/store/ontology/ontology.state.ts:50",{"_index":4012,"title":{},"body":{"injectables/OntologyState.html":{}}}],["src/app/core/store/store.module.ts",{"_index":4255,"title":{},"body":{"modules/StoreModule.html":{}}}],["src/app/core/store/viewer/viewer.state.ts",{"_index":4461,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:116",{"_index":4470,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:40",{"_index":4484,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:44",{"_index":4478,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:49",{"_index":4468,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:71",{"_index":4474,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:96",{"_index":4472,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/modules/body/body",{"_index":714,"title":{},"body":{"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{}}}],["src/app/modules/body/body.module.ts",{"_index":443,"title":{},"body":{"modules/BodyModule.html":{}}}],["src/app/modules/color",{"_index":1331,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["src/app/modules/filters/filters",{"_index":2341,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{}}}],["src/app/modules/image",{"_index":3045,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{}}}],["src/app/modules/info/info",{"_index":3255,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["src/app/modules/ontology",{"_index":3746,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["src/app/modules/results",{"_index":4085,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["src/app/modules/scheme",{"_index":4183,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts",{"_index":1267,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts:16",{"_index":1277,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts:21",{"_index":1282,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts:26",{"_index":1286,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts:31",{"_index":1291,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts:38",{"_index":1296,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.module.ts",{"_index":1328,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts",{"_index":1690,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:101",{"_index":1726,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:111",{"_index":1716,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:120",{"_index":1728,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:37",{"_index":1713,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:41",{"_index":1744,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:45",{"_index":1736,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:48",{"_index":1740,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:50",{"_index":1748,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:55",{"_index":1751,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:58",{"_index":1731,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:60",{"_index":1709,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:79",{"_index":1722,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts",{"_index":1805,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:100",{"_index":1835,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:113",{"_index":1830,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:28",{"_index":1820,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:30",{"_index":1821,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:32",{"_index":1823,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:34",{"_index":1824,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:36",{"_index":1818,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:39",{"_index":1836,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:41",{"_index":1816,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:58",{"_index":1829,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:68",{"_index":1826,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/drawer.module.ts",{"_index":2126,"title":{},"body":{"modules/DrawerModule.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":3414,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:33",{"_index":3423,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":3422,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":3424,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:42",{"_index":3425,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:52",{"_index":3427,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:59",{"_index":3426,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/messages.ts",{"_index":1882,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/components/drawer/toggle",{"_index":4336,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts",{"_index":2132,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:16",{"_index":2139,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:21",{"_index":2141,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:26",{"_index":2143,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:31",{"_index":2144,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:36",{"_index":2150,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:41",{"_index":2147,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:49",{"_index":2146,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.module.ts",{"_index":2187,"title":{},"body":{"modules/DropdownModule.html":{}}}],["src/app/shared/components/dual",{"_index":2193,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["src/app/shared/components/spinner",{"_index":4235,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{}}}],["src/app/shared/services/message/message.service.ts",{"_index":3565,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["src/app/shared/services/message/message.service.ts:101",{"_index":3615,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:110",{"_index":3616,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:126",{"_index":3622,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message/message.service.ts:128",{"_index":3619,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message/message.service.ts:151",{"_index":3621,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message/message.service.ts:161",{"_index":3620,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message/message.service.ts:48",{"_index":3612,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:68",{"_index":3617,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:81",{"_index":3613,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:91",{"_index":3614,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/environments/environment",{"_index":3889,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["srcevent",{"_index":584,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["standards",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["stanford",{"_index":2629,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["start",{"_index":1767,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":1872,"title":{},"body":{"components/ContentComponent.html":{}}}],["start?.opened",{"_index":1871,"title":{},"body":{"components/ContentComponent.html":{}}}],["startdrawers",{"_index":1792,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":1796,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":1800,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":4520,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["startexpanded",{"_index":1870,"title":{},"body":{"components/ContentComponent.html":{}}}],["starts",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":2104,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["startwith",{"_index":1755,"title":{},"body":{"components/ContainerComponent.html":{},"components/OntologySearchComponent.html":{}}}],["stat",{"_index":4137,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.count",{"_index":4135,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.label",{"_index":4136,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["state",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state('closed",{"_index":3453,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":3458,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('extended",{"_index":3462,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":1843,"title":{},"body":{"components/ContentComponent.html":{}}}],["state('full",{"_index":3463,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('half",{"_index":3459,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('true",{"_index":1844,"title":{},"body":{"components/ContentComponent.html":{}}}],["state(`open",{"_index":3452,"title":{},"body":{"classes/InitializationState.html":{}}}],["state.data.filter(d",{"_index":692,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["state.nodes[state.root",{"_index":4016,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["state.zoomopacity",{"_index":702,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["statechange",{"_index":3483,"title":{},"body":{"classes/InitializationState.html":{}}}],["staterepository",{"_index":2035,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["states",{"_index":1186,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"modules/StoreModule.html":{}}}],["states.every(state",{"_index":2059,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["states[view.id",{"_index":1245,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["static",{"_index":606,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["statictiff",{"_index":3636,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["staticzarr",{"_index":3630,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["stats",{"_index":4088,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["status",{"_index":2010,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["stay",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1594,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["still",{"_index":731,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["store",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/HuBMAPEntity.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"modules/StoreModule.html":{}}}],["store.forsubjects((subject",{"_index":1010,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["store/ontology/ontology.state",{"_index":3894,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["store/store.module",{"_index":1915,"title":{},"body":{"modules/CoreModule.html":{}}}],["stored_fields",{"_index":2891,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["storemodule",{"_index":1907,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":4266,"title":{},"body":{"modules/StoreModule.html":{}}}],["strategic",{"_index":3378,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["streaming",{"_index":4651,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["string[]>(map",{"_index":2987,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["stroke",{"_index":1313,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["structure",{"_index":2963,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["styilng",{"_index":3150,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["style",{"_index":1380,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{}}}],["style.margin",{"_index":1813,"title":{},"body":{"components/ContentComponent.html":{}}}],["styled",{"_index":2464,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":3506,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["styling",{"_index":1370,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{}}}],["sub",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":483,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"license.html":{}}}],["subject.id",{"_index":1012,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["subject.next(dataquerystate.completed",{"_index":2064,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sublicense",{"_index":4694,"title":{},"body":{"license.html":{}}}],["subpath",{"_index":4226,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["subscribe(event",{"_index":4134,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["subscription",{"_index":1745,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["subscriptions",{"_index":1700,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["substantial",{"_index":4706,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":3405,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["subtree",{"_index":3928,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["subtrees",{"_index":3918,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["successful",{"_index":2919,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["such",{"_index":2230,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["suffix",{"_index":3833,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["super",{"_index":2080,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["support",{"_index":3398,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules.html":{}}}],["supported",{"_index":3655,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["supporting",{"_index":3348,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["svg",{"_index":2112,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["swatch",{"_index":1618,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["switch",{"_index":763,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{}}}],["switchmap",{"_index":2044,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["switchmap(query",{"_index":2075,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["switchmap(value",{"_index":3815,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["syncexpanded(other",{"_index":3548,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":3545,"title":{},"body":{"classes/InitializationState.html":{}}}],["synonym",{"_index":3871,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["synonymlabels",{"_index":2995,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["synonyms",{"_index":2967,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"interfaces/ValueObject.html":{}}}],["synonymsextractor",{"_index":2985,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsextractor(json",{"_index":2996,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsproperty",{"_index":2984,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["systems",{"_index":3350,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["t",{"_index":989,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"miscellaneous/typealiases.html":{}}}],["t.x",{"_index":3734,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["t.y",{"_index":3736,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["t.z",{"_index":3738,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tab",{"_index":4158,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["table",{"_index":3903,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["take",{"_index":4154,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["taken",{"_index":2637,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["takes",{"_index":1556,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["takewhile",{"_index":3569,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tap",{"_index":2045,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["tap(linkchildren",{"_index":3950,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["tap(next",{"_index":2076,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["target",{"_index":555,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{}}}],["target['@id",{"_index":1110,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["targetiri",{"_index":964,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["tealgreen",{"_index":1445,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["team",{"_index":3370,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["technologies",{"_index":79,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["technology",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":1303,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["template",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["templateurl",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["temporary",{"_index":3905,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["term",{"_index":843,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["termdata",{"_index":3986,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["termoccurencesdata",{"_index":1983,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["termoccurencesdata(filter",{"_index":1993,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["termoccurencesdataquerystatus",{"_index":1984,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["terms",{"_index":66,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{}}}],["terms.indexof(rui.body.id",{"_index":1067,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["terms.indexof(rui.kidney.id",{"_index":1069,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["terms.indexof(rui.left_kidney.id",{"_index":1073,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["terms.indexof(rui.right_kidney.id",{"_index":1071,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["terms.indexof(rui.spleen.id",{"_index":1075,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["test",{"_index":2058,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["testing",{"_index":2057,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["testinggroup",{"_index":2623,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["text",{"_index":2332,"title":{},"body":{"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["th",{"_index":2663,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["theme",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["themes",{"_index":4311,"title":{},"body":{"injectables/ThemingService.html":{}}}],["theming",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemingService.html":{}}}],["theming.gettheme",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["theming.service",{"_index":4283,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":1908,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":164,"title":{"injectables/ThemingService.html":{}},"body":{"components/AppComponent.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":4284,"title":{},"body":{"modules/ThemingModule.html":{}}}],["then(r",{"_index":2896,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["thin",{"_index":3838,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["this._afterconnected",{"_index":1964,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.completed",{"_index":2083,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.running",{"_index":2095,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.pipe(distinct",{"_index":2008,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._channelconfigs",{"_index":1181,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._expanded",{"_index":3476,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._height",{"_index":1171,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._layers",{"_index":3200,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["this._listdataquerystatus$.next(dataquerystate.completed",{"_index":2082,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._listdataquerystatus$.next(dataquerystate.running",{"_index":2093,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._listdataquerystatus$.pipe(distinct",{"_index":2016,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._loaders",{"_index":1176,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._measuredmargin",{"_index":3504,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":3494,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._onclick",{"_index":535,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this._onhover",{"_index":533,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this._onviewstatechange",{"_index":537,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this._opened",{"_index":3472,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":3468,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._sources",{"_index":1174,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["this._sources.length",{"_index":4421,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this._sources.map(source",{"_index":4427,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this._termoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":2084,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._termoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":2097,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._termoccurencesdataquerystatus$.pipe(distinct",{"_index":2033,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._width",{"_index":1170,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.addentitiesmany(ids.map((id",{"_index":4502,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.addspatialentity(getspatialentity(store",{"_index":1015,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.addspatialobjectreference(getspatialobjectreference(store",{"_index":1011,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.addspatialplacement(getspatialplacement(store",{"_index":1018,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.age",{"_index":2734,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.aggregatedata",{"_index":2004,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.aggregatedataquerystatus",{"_index":2022,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.ancestors",{"_index":2702,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.ancestors.find(e",{"_index":2707,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.ancestors[0].rui_location",{"_index":2761,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.animationsenabled",{"_index":1861,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.applyfilter({highlightedentities",{"_index":781,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.applyfilter({ontologyterms",{"_index":767,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.applyfilters.emit(this.filters",{"_index":2362,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.applythemeclass(theme",{"_index":4323,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":4322,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.assaytypes",{"_index":2799,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.assaytypes.join",{"_index":2865,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.assaytypes].map(l",{"_index":2802,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.assetsapi}/${d.uuid}/${f.rel_path",{"_index":2779,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.atscrollbottom",{"_index":4131,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.bmi",{"_index":2736,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.bmi?.tofixed(1",{"_index":2846,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.bodycanvas.nativeelement",{"_index":747,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui",{"_index":748,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui.nodeclick$.subscribe(async",{"_index":762,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui.setscene(scene",{"_index":761,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyuilayer",{"_index":531,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.bodyuilayer.setstate({data",{"_index":568,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.bodyuilayer.state",{"_index":562,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.bottom",{"_index":1679,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["this.brightnesshigh",{"_index":1585,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.brightnesslow",{"_index":1588,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.brightnessslideroptions",{"_index":1597,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.cdr.markforcheck",{"_index":1786,"title":{},"body":{"components/ContainerComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.channel",{"_index":1777,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":3600,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed",{"_index":3602,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":3605,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.next",{"_index":3581,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":1784,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.channelconfigs",{"_index":1222,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.clear",{"_index":4425,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.closeviewer.emit",{"_index":3085,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["this.color",{"_index":3131,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme",{"_index":1374,"title":{},"body":{"components/ColorBarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["this.colorscheme.colors",{"_index":3132,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme.positions",{"_index":3133,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme.type",{"_index":3130,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.component",{"_index":4325,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.containshumangeneticsequences",{"_index":2796,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.content",{"_index":1788,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":1787,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":1774,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":1776,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":1775,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.contentsvisible",{"_index":2307,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.creategraph",{"_index":1007,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.createlayerconfigs",{"_index":1214,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.createselectionlabel(ontologyselection",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createvivviews",{"_index":1203,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.ctx.patchstate",{"_index":4511,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.ctx.setstate(ontology",{"_index":4018,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["this.cursor",{"_index":540,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.data",{"_index":2838,"title":{},"body":{"classes/HuBMAPEntity.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["this.data.ancestors",{"_index":2703,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.data.descendants",{"_index":2705,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.data.entity_type",{"_index":2701,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.data.filter$.subscribe(async",{"_index":757,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.data.querystatus$.pipe",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.data.resulttype",{"_index":4156,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["this.data.specimen_type",{"_index":2861,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.data.updatefilter",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["this.data.uuid",{"_index":2699,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.dataloading",{"_index":4130,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.datasource",{"_index":1951,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource.connect(this.dboptions",{"_index":1965,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasourceservice.datasource.connect",{"_index":759,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.datasourceservice.datasource.getscene(f",{"_index":760,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.datasourceservice.getimageviewerdata(result['@id",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["this.datatypes",{"_index":2797,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.datatypes.join",{"_index":2863,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.db.getspatialentities(filter).map((entity",{"_index":1097,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.db.graph.gettransformationmatrix(sourceid",{"_index":1109,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.db.store",{"_index":1008,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.dboptions",{"_index":1953,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.deck",{"_index":547,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.finalize",{"_index":1201,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.props.viewstate",{"_index":573,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.deck.redraw(true",{"_index":1206,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.setprops",{"_index":571,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.deck.setprops(props",{"_index":1248,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.setprops({viewstate",{"_index":549,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.defaulttheme",{"_index":4320,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":3445,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.descendants",{"_index":2704,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.description",{"_index":2741,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":3271,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialogref.close",{"_index":3299,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.doi",{"_index":2739,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor",{"_index":2706,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.description",{"_index":2713,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.display_doi",{"_index":2856,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.group_name",{"_index":2749,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.group_uuid",{"_index":2745,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.protocol_url",{"_index":2758,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.uuid",{"_index":2841,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.drawer",{"_index":4357,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":4355,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":1857,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":1782,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":1791,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.element.nativeelement",{"_index":3495,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.entities$.pipe",{"_index":4479,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.entities[id",{"_index":4503,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.entitytype",{"_index":2700,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.ethnicity",{"_index":2737,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.expanded",{"_index":3529,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":3537,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":3517,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":3488,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.faded",{"_index":1876,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.filter",{"_index":784,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filter$.pipe(querydata",{"_index":2003,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.filter?.highlightedentities",{"_index":778,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filterchange.emit(newfilter",{"_index":785,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filteredresults",{"_index":3812,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.filters",{"_index":2360,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(filters",{"_index":2400,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(this.filters",{"_index":2361,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.filtersvisible",{"_index":2399,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.formatlabel(node.label",{"_index":3966,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.formcontrol.reset",{"_index":3827,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.formcontrol.valuechanges",{"_index":3811,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.get(s",{"_index":927,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.getarguments(definition",{"_index":2933,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getautocolor(autocolorindex",{"_index":4510,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.getbrightness",{"_index":3139,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.getchildren",{"_index":3940,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getchildren.bind(this",{"_index":3941,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getentityscenenodes(filter",{"_index":1128,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.getids(filter)].map((s",{"_index":926,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.getindexofmatch(label",{"_index":3971,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getindexofmatch(node.label",{"_index":3965,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":3590,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":2931,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getreferencebody(filter",{"_index":1064,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.getreferenceorgans(filter).map((organ",{"_index":1078,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.getreferencescenenodes(filter",{"_index":1127,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.getscenenode(body",{"_index":1076,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.getscenenode(entity",{"_index":1098,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.getscenenode(getspatialentity(store",{"_index":1080,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.getscenenode(organ",{"_index":1079,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.getstate().filter",{"_index":2092,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.graph",{"_index":896,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{}}}],["this.graph.creategraph",{"_index":922,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.graph.getedgeattribute(source",{"_index":1032,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.hasnode(sourceiri",{"_index":1025,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.hasnode(targetiri",{"_index":1026,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergedirectededge(placement.source['@id",{"_index":1022,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergenode(entity['@id",{"_index":1020,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergenode(ref['@id",{"_index":1021,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.groupname",{"_index":2746,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.groupuuid",{"_index":2743,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.handlemessage(msg",{"_index":1780,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.highvalue",{"_index":2291,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.http.get(environment.ontologyurl",{"_index":3943,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.id",{"_index":2698,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.imageproviders",{"_index":2787,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.images",{"_index":2786,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.initialized",{"_index":3444,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":3510,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":3518,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":3541,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initializedeck(reqprops",{"_index":1189,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.initializesliderpopover",{"_index":2308,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isdemo",{"_index":4420,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.issliderinitialized",{"_index":2305,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isslideropen",{"_index":2306,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.label",{"_index":2738,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.lasthovered",{"_index":582,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.layer",{"_index":1604,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.brightness[0",{"_index":1582,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.brightness[1",{"_index":1586,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.transparency",{"_index":1589,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layerchange.emit(layer",{"_index":3173,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["this.layerchange.emit(new",{"_index":3169,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["this.layerchange.emit(this.layer",{"_index":1601,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layerconfigs",{"_index":1197,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layerfilter",{"_index":1251,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layers",{"_index":1196,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layers$.pipe",{"_index":4475,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.leftmargin",{"_index":1868,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.listdata",{"_index":2013,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.listdataquerystatus",{"_index":2021,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.loaders[0",{"_index":4084,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["this.lookup(nodes",{"_index":3957,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.lowvalue",{"_index":2289,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.margin2",{"_index":3491,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":3490,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":3542,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":3599,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter(msg",{"_index":3587,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nextmessageid",{"_index":3582,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodeclicksubject.next({node",{"_index":586,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":481,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":583,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":485,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":581,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":488,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.ontologyselectionlabel",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ontologyservice.filter(value",{"_index":3816,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologyservice.loadontology",{"_index":3809,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologystate.nodes$.pipe",{"_index":3956,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologystate.rootnode",{"_index":3939,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologystate.setontology(ontology",{"_index":3955,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologyterms",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"classes/HuBMAPEntity.html":{}}}],["this.ontologyterms[this.ontologyterms.length",{"_index":2756,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.ontologytermsfulldata",{"_index":2088,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.onviewstatechange",{"_index":1252,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.opened",{"_index":3515,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":3533,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":3516,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openimageviewer.emit",{"_index":4157,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["this.options",{"_index":900,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DualSliderComponent.html":{}}}],["this.options.ccfowlurl",{"_index":903,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.ceil",{"_index":2297,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.floor",{"_index":2296,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.hubmapassetsurl",{"_index":913,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataservice",{"_index":911,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataurl",{"_index":907,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataurl.endswith('.jsonld",{"_index":908,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapportalurl",{"_index":914,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmaptoken",{"_index":912,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.optionschanged",{"_index":2285,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionsvisible",{"_index":2151,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.organ",{"_index":2755,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.organname",{"_index":2750,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.organsample",{"_index":2710,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.organsample.display_doi",{"_index":2858,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.original.children.length",{"_index":2437,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.original.label",{"_index":2436,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.overlayref",{"_index":2281,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.detach",{"_index":2304,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.dispose",{"_index":2298,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.patchstate",{"_index":2089,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.popupvisible",{"_index":1676,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["this.portalurl",{"_index":2818,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.position",{"_index":3467,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.props",{"_index":686,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.protocolurl",{"_index":2757,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.registericonimpl(definition",{"_index":2922,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(safedef",{"_index":2917,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry",{"_index":2926,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.removebox",{"_index":2401,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.removeentitiesmany(this.ids",{"_index":4501,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.resetchannelconfigs",{"_index":1213,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.resolve",{"_index":3421,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.result",{"_index":3239,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.resulttype",{"_index":2823,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.resulturl",{"_index":2821,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.resulturl.split('/').slice",{"_index":2827,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.rightmargin",{"_index":1869,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.rootnode",{"_index":3938,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.scene",{"_index":898,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.scene.getscene(filter",{"_index":941,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.schemechange.emit(this.colorscheme",{"_index":4204,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemechanged(0",{"_index":4201,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeidx",{"_index":4203,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions",{"_index":4198,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions.filter(scheme",{"_index":4199,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions[idx",{"_index":4202,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.selected.emit(node",{"_index":3826,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.selection",{"_index":1307,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selection.filter(selection",{"_index":1308,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.selectionchange.emit(this.selection",{"_index":1309,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selectionchange.emit(value",{"_index":2152,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.sendtoggle",{"_index":3519,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.sensor",{"_index":4436,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.sensor.detach",{"_index":4439,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.setsources(reqprops.sources",{"_index":1193,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.setsourceurls(result",{"_index":3240,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.setstate({data",{"_index":687,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.settheme(this.defaulttheme",{"_index":4324,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.sex",{"_index":2735,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.snapshot",{"_index":4499,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.sortbysynonymresult",{"_index":3819,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.sortlexically",{"_index":3820,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.source",{"_index":3583,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.source.getaggregateresults(filter",{"_index":2096,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.source.getlistresults(filter",{"_index":2094,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.source.getontologytermoccurences(filter",{"_index":2098,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.sourcesfromurls(urls",{"_index":4419,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.sourceurls",{"_index":3241,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.spatialentity",{"_index":2768,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.spatialorbulk",{"_index":2808,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.state",{"_index":690,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.state$.pipe(map(state",{"_index":4013,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["this.state$.pipe(pluck('filter",{"_index":2011,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.statechange.emit",{"_index":3543,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.states",{"_index":1198,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.store",{"_index":895,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.store.getquads(datafactory.namednode(id",{"_index":924,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.store.selectsnapshot(ontologystate",{"_index":3976,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.store.size",{"_index":901,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":4354,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":1854,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":1779,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.subscriptions.unsubscribe",{"_index":1789,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.syncexpanded(other",{"_index":3544,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.termoccurencesdata",{"_index":2030,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.termoccurencesdataquerystatus",{"_index":2023,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.theme",{"_index":4321,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.theming.settheme(this.theming.gettheme",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["this.thumbnailurl",{"_index":2805,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":3474,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":3513,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":3512,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":3478,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":3525,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":3522,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.transparencyslideroptions",{"_index":1599,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.tree.expandandselect(ontologynode",{"_index":4001,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.update",{"_index":1199,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatedeckprops",{"_index":1227,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updateentitiesmany",{"_index":4512,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.updateentitiesmany(changes",{"_index":4517,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.updatefaded",{"_index":1859,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updatelayer",{"_index":1584,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.updatelayers",{"_index":1226,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["this.updatemargin(position",{"_index":1866,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updatesources",{"_index":4426,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.updatestate((_view",{"_index":1265,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatestate((view",{"_index":1204,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatestate(view",{"_index":1215,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updateviews",{"_index":1225,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.validatedrawers",{"_index":1783,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.valuerange",{"_index":2293,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[0",{"_index":2294,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[1",{"_index":2295,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.viewer",{"_index":4431,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.finalize",{"_index":4440,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.setsize(width",{"_index":4438,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer?.clear",{"_index":4451,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewervisible",{"_index":3238,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.views",{"_index":1228,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.virtualscroll.elementscrolled",{"_index":4133,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.virtualscroll.measurescrolloffset('bottom",{"_index":4132,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.vivviews",{"_index":1195,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews.map(viv",{"_index":1230,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews.reduce((states",{"_index":1243,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.width",{"_index":3489,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.zoomto(node",{"_index":567,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["those",{"_index":3585,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["through",{"_index":3376,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["throw",{"_index":1770,"title":{},"body":{"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"interfaces/OMEZarrInfo.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{}}}],["throwduplicatedrawerserror('end",{"_index":1799,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":1797,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":1766,"title":{},"body":{"components/ContainerComponent.html":{}}}],["thrown",{"_index":1765,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":1761,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumb",{"_index":2826,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["thumbnailurl",{"_index":35,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["thymus",{"_index":2677,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tiff",{"_index":2771,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["tiff2",{"_index":3631,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["tiffinfo",{"_index":1142,"title":{"interfaces/TiffInfo.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["tiffinfo).url",{"_index":4428,"title":{},"body":{"components/ViewerComponent.html":{}}}],["tiffs",{"_index":2772,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tiffs.length",{"_index":2781,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["time",{"_index":1290,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/OldRuiData.html":{}}}],["timing",{"_index":1879,"title":{},"body":{"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["tissue",{"_index":29,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["tissue_id",{"_index":2859,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tissue_object_rotation",{"_index":3670,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_object_size",{"_index":3671,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_position_mass_point",{"_index":3672,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_position_vertices",{"_index":3673,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissues",{"_index":25,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["title",{"_index":3061,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["tmc",{"_index":78,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["todo",{"_index":752,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["toeuler",{"_index":974,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["toeuler(fromeuler(r_rad[1",{"_index":998,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["toggle",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["toggle(opened",{"_index":3514,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglebuttoncomponent",{"_index":377,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["toggled",{"_index":1862,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["toggleexpanded(expanded",{"_index":3528,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglefiltervisible",{"_index":2386,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["toggleoptions",{"_index":2138,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggles",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{}}}],["togglescheme",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["togglesliderpopover",{"_index":2212,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["tojsonld",{"_index":2515,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["token",{"_index":887,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["token=${servicetoken",{"_index":2780,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tolowercase",{"_index":2714,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tonumber",{"_index":2560,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tonumber(agematch[1",{"_index":2720,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tonumber(md.data_value",{"_index":2728,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tools",{"_index":3308,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["tooltip",{"_index":648,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["top",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["toradians",{"_index":967,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tort",{"_index":4725,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1804,"title":{},"body":{"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{}}}],["track",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["trackbyid",{"_index":3148,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["trackbyid(layer",{"_index":3162,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["tracks",{"_index":3801,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["transform",{"_index":1108,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{}}}],["transform.scale(scale",{"_index":1122,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["transformmatrix",{"_index":647,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["transition",{"_index":1839,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{}}}],["transition('closed",{"_index":3454,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":1845,"title":{},"body":{"components/ContentComponent.html":{}}}],["translated",{"_index":3685,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["translatey",{"_index":2181,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["translation",{"_index":4234,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["translation_units",{"_index":3739,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["transparency",{"_index":1541,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["transparency(value",{"_index":1590,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["transparencychanged",{"_index":1536,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["transparencyslideroptions",{"_index":1534,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["tree",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tree'},{'name",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["tree.component",{"_index":4000,"title":{},"body":{"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{}}}],["tree.module",{"_index":3753,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["tree.module.ts",{"_index":4022,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["tree/ontology",{"_index":3752,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["trigger",{"_index":1840,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["trigger('expandcollapse",{"_index":3457,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":1842,"title":{},"body":{"components/ContentComponent.html":{}}}],["trigger('openclose",{"_index":3451,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggered",{"_index":3791,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["triple",{"_index":820,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{}}}],["true",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["try",{"_index":2934,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ts",{"_index":4127,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["tslib",{"_index":4657,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":633,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["tslint:disable",{"_index":544,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["tslint:enable",{"_index":667,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["tuned",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":1790,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tx",{"_index":1027,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["tx.translate(t).rotatexyz(r).scale(s",{"_index":1005,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":4732,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1241,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"interfaces/TiffInfo.html":{}}}],["types",{"_index":872,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/typealiases.html":{}}}],["types.ts",{"_index":4220,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["typessearch",{"_index":2801,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typessearch.indexof('10x",{"_index":2804,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typessearch.indexof('af",{"_index":2809,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typessearch.indexof('codex",{"_index":2811,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typessearch.indexof('imc",{"_index":2813,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typessearch.indexof('lc",{"_index":2815,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typing",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":638,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["u",{"_index":1148,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["u2cdk114886",{"_index":3387,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ucsd",{"_index":2611,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ufl",{"_index":2563,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ui",{"_index":454,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["ui'},{'name",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["ui.component",{"_index":791,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":719,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.scss",{"_index":718,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts",{"_index":715,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:18",{"_index":728,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:23",{"_index":735,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:25",{"_index":743,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:27",{"_index":727,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:31",{"_index":739,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:71",{"_index":738,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.module",{"_index":447,"title":{},"body":{"modules/BodyModule.html":{}}}],["ui.module.ts",{"_index":790,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.ts",{"_index":451,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["ui.ts:112",{"_index":496,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:119",{"_index":502,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:20",{"_index":479,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:21",{"_index":477,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:23",{"_index":484,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:24",{"_index":487,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:25",{"_index":490,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:27",{"_index":482,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:28",{"_index":486,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:29",{"_index":489,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:31",{"_index":478,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:32",{"_index":473,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:66",{"_index":505,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:80",{"_index":507,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:94",{"_index":500,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui/body",{"_index":446,"title":{},"body":{"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{}}}],["ui/src/lib/body",{"_index":450,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["unchecked",{"_index":1304,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["undefined",{"_index":578,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["undefined).catch",{"_index":2874,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["under",{"_index":2114,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/InfoDialogComponent.html":{}}}],["underline",{"_index":2162,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["underlying",{"_index":1941,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["understanding",{"_index":3316,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["unique",{"_index":3166,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologyNode.html":{}}}],["units",{"_index":4223,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["university",{"_index":3365,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["unknown",{"_index":593,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["unknown.svg",{"_index":2817,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["unlike",{"_index":2105,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unparsed",{"_index":2764,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["unpickable",{"_index":640,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["unsafe",{"_index":649,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialGraph.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["unselected",{"_index":3168,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["unset",{"_index":3060,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["until",{"_index":2265,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["up",{"_index":1546,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["update",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatechannelconfigs",{"_index":3000,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatechannelconfigs(configs",{"_index":1217,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updated",{"_index":1289,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["updatedeckprops",{"_index":3001,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatedeckprops(props",{"_index":1247,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatefaded",{"_index":1809,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatefilter",{"_index":1985,"title":{},"body":{"injectables/DataState.html":{},"components/FiltersContentComponent.html":{}}}],["updatefilter(filter",{"_index":1995,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["updatefilter(value",{"_index":2356,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatelayer",{"_index":1537,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/ViewerState.html":{}}}],["updatelayer(id",{"_index":4473,"title":{},"body":{"injectables/ViewerState.html":{}}}],["updatelayer(updates",{"_index":1562,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["updatelayers",{"_index":1232,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["updatemargin",{"_index":1810,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatemargin(position",{"_index":1833,"title":{},"body":{"components/ContentComponent.html":{}}}],["updates",{"_index":1359,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["updatesources",{"_index":4372,"title":{},"body":{"components/ViewerComponent.html":{}}}],["updatestate",{"_index":1239,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatestate(args",{"_index":3030,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updateviews",{"_index":1229,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updating",{"_index":3159,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["upgraded",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":2225,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ur",{"_index":2665,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ureter",{"_index":2678,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["url",{"_index":34,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SearchableItem.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["url).map(url",{"_index":4453,"title":{},"body":{"components/ViewerComponent.html":{}}}],["urls",{"_index":2913,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ViewerComponent.html":{}}}],["urls.filter(url",{"_index":4452,"title":{},"body":{"components/ViewerComponent.html":{}}}],["use",{"_index":1642,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"injectables/DataSourceService.html":{},"components/DualSliderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["used",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["useful",{"_index":1763,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":1287,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"index.html":{}}}],["users",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["util/prefixes",{"_index":977,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode.html":{}}}],["utils",{"_index":860,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["utils.ts",{"_index":3663,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["uuid",{"_index":2604,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["v",{"_index":2633,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["v.id",{"_index":2635,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["v0.5.0",{"_index":3664,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["v1.0.0",{"_index":3331,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["v1.selectionorder",{"_index":3203,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["v2",{"_index":3202,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["v2.selectionorder",{"_index":3204,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["validatedrawers",{"_index":1703,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":1729,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validation",{"_index":3802,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["value",{"_index":20,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"miscellaneous/enumerations.html":{}}}],["value.tolowercase",{"_index":3958,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["valuechanges",{"_index":3810,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valuechanges.pipe",{"_index":3813,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valueextractor",{"_index":2975,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valueobject",{"_index":2962,"title":{"interfaces/ValueObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valueof",{"_index":3418,"title":{},"body":{"classes/InitializationState.html":{}}}],["valueorgenerator",{"_index":1146,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["valueproperty",{"_index":2974,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valuerange",{"_index":2213,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["values",{"_index":1890,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{}}}],["van0003",{"_index":2577,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0005",{"_index":2586,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0006",{"_index":2590,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0007",{"_index":2593,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0008",{"_index":2596,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0011",{"_index":2599,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0012",{"_index":2601,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["vanderbilt",{"_index":2627,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["var",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["variable",{"_index":1902,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["variables",{"_index":1361,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["version",{"_index":2883,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["vertical",{"_index":4455,"title":{},"body":{"components/ViewerComponent.html":{}}}],["vertices",{"_index":3676,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["via",{"_index":4424,"title":{},"body":{"components/ViewerComponent.html":{}}}],["video",{"_index":3360,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["view",{"_index":1134,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["view.filterviewstate(argsgenerator(view",{"_index":1246,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.getlayers",{"_index":1236,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.id",{"_index":1205,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.initialviewstate",{"_index":1216,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewchild",{"_index":744,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{}}}],["viewchild('bodycanvas",{"_index":741,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["viewchild('canvas",{"_index":4388,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewchild('content",{"_index":1661,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["viewchild('popover",{"_index":2263,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(cdkportal",{"_index":2267,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(cdkvirtualscrollviewport",{"_index":4124,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["viewchild(ontologytreecomponent",{"_index":3997,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["viewchildren",{"_index":1754,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":1739,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewer",{"_index":48,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["viewer.channelnames",{"_index":4445,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.close",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer.component",{"_index":4460,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewer.component.html",{"_index":4368,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.component.scss",{"_index":4367,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.loaders.some((loader",{"_index":4442,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.module",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.module.ts",{"_index":3216,"title":{},"body":{"modules/ImageViewerModule.html":{}}}],["viewer.open(data",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer.setsources(sources",{"_index":4441,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.ts",{"_index":1131,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer.ts:110",{"_index":3017,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:114",{"_index":3024,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:133",{"_index":3025,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:148",{"_index":3027,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:16",{"_index":4029,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:168",{"_index":3016,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:169",{"_index":3015,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:171",{"_index":3026,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:181",{"_index":3032,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:185",{"_index":3029,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:195",{"_index":3031,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:208",{"_index":3028,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:212",{"_index":3018,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:231",{"_index":3023,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:24",{"_index":4044,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:244",{"_index":3020,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:250",{"_index":3022,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:51",{"_index":4043,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:64",{"_index":3010,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:66",{"_index":3034,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:67",{"_index":3036,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:68",{"_index":3007,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:69",{"_index":3004,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:71",{"_index":3038,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:72",{"_index":3040,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:73",{"_index":3006,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:74",{"_index":3005,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:76",{"_index":3042,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:77",{"_index":3044,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:78",{"_index":3003,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:80",{"_index":3013,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:81",{"_index":3012,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:82",{"_index":3009,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:83",{"_index":3008,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:84",{"_index":3011,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:86",{"_index":3002,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:99",{"_index":3014,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.updatechannelconfigs(configs",{"_index":4450,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/image",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["viewer/src/lib/image",{"_index":1130,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/src/lib/loader.ts",{"_index":3623,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/src/lib/picture",{"_index":4026,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/viewer.module",{"_index":3217,"title":{},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["viewer/viewer.state",{"_index":4262,"title":{},"body":{"modules/StoreModule.html":{}}}],["viewer/viewer/viewer.component.ts",{"_index":4366,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:121",{"_index":4381,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:126",{"_index":4385,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:138",{"_index":4384,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:156",{"_index":4379,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:160",{"_index":4383,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:52",{"_index":4377,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:63",{"_index":4393,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:66",{"_index":4387,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:69",{"_index":4376,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:73",{"_index":4395,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:74",{"_index":4386,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:76",{"_index":4378,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:78",{"_index":4389,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:80",{"_index":4390,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:81",{"_index":4392,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:82",{"_index":4375,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:86",{"_index":4380,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.module.ts",{"_index":4459,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewercomponent",{"_index":378,"title":{"components/ViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["viewermodule",{"_index":3215,"title":{"modules/ViewerModule.html":{}},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["viewerstate",{"_index":3224,"title":{"injectables/ViewerState.html":{}},"body":{"components/ImageViewerPopoverComponent.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["viewerstatemodel",{"_index":4494,"title":{"interfaces/ViewerStateModel.html":{}},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["viewervisible",{"_index":3221,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["viewid",{"_index":1155,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewing",{"_index":3219,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["viewport",{"_index":1135,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ResultsBrowserComponent.html":{}}}],["viewportid",{"_index":1262,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["views",{"_index":528,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"changelog.html":{}}}],["viewstate",{"_index":572,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewstates",{"_index":1237,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viridis",{"_index":1494,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["virtual",{"_index":4089,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["virtualscroll",{"_index":4096,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["visibility",{"_index":1667,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visible",{"_index":1113,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visual",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["visualizing",{"_index":1426,"title":{},"body":{"interfaces/ColorScheme-1.html":{}}}],["vitessce",{"_index":3640,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["viv.getdeckglview",{"_index":1231,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["vivview",{"_index":1137,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["vivviews",{"_index":1184,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["vocab",{"_index":2690,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["void",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["vu",{"_index":2825,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["vu/${thumb",{"_index":2832,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["w",{"_index":4231,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["w_rotation",{"_index":4232,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["wait",{"_index":3419,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":3538,"title":{},"body":{"classes/InitializationState.html":{}}}],["warning",{"_index":4454,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["warranties",{"_index":4713,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4708,"title":{},"body":{"license.html":{}}}],["way",{"_index":4120,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["webgl2",{"_index":1254,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["webkit",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{}}}],["week",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":1317,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["well",{"_index":3158,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["whenever",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{}}}],["whether",{"_index":82,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["white",{"_index":1314,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["whole",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["wholebody",{"_index":1062,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{}}}],["whose",{"_index":3778,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["width",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["widths",{"_index":3546,"title":{},"body":{"classes/InitializationState.html":{}}}],["window",{"_index":3243,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["window.innerheight",{"_index":1680,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["window.open(this.data.resulturl",{"_index":4159,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["wireframe",{"_index":641,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["wireframes",{"_index":695,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["within",{"_index":3990,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["without",{"_index":1741,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["won't",{"_index":3908,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["work",{"_index":3363,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["workaround",{"_index":3556,"title":{},"body":{"classes/InitializationState.html":{}}}],["worker",{"_index":1947,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["worker('./data",{"_index":1949,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["wrap",{"_index":1320,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/DataSourceService.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["wrap(worker",{"_index":1952,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["wrapped",{"_index":1738,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":453,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["wrapper/container",{"_index":2321,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["wrapping",{"_index":1742,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{}}}],["x",{"_index":3677,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_dimension",{"_index":3709,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_rotation",{"_index":3723,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_scaling",{"_index":3718,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_translation",{"_index":3733,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["xyz",{"_index":3730,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["xyz').tovector",{"_index":1001,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["y",{"_index":551,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_dimension",{"_index":3711,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_rotation",{"_index":3725,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_scaling",{"_index":3719,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_translation",{"_index":3735,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["yes",{"_index":824,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/HuBMAPEntity.html":{},"components/OntologySearchComponent.html":{}}}],["youtube",{"_index":3361,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["z",{"_index":1615,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["z_dimension",{"_index":3713,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_rotation",{"_index":3727,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_scaling",{"_index":3720,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_translation",{"_index":3737,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["zarr",{"_index":3627,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["zarrinfo",{"_index":1143,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/typealiases.html":{}}}],["zone.js",{"_index":4659,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["zoombasedopacity",{"_index":645,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["zoomopacity",{"_index":561,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["zoomto",{"_index":469,"title":{},"body":{"classes/BodyUI.html":{}}}],["zoomto(node",{"_index":506,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["zoomtoonload",{"_index":646,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AggregateResult.html":{"url":"interfaces/AggregateResult.html","title":"interface - AggregateResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AggregateResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Aggregate query result. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Aggregate value. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Queried field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main angular component that all the other components branch off from.\nIt is in charge of the header and drawer components who have many sub-components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelectionLabel\n                            \n                            \n                                    Readonly\n                                ontologyTerms$\n                            \n                            \n                                    Readonly\n                                spinnerActive$\n                            \n                            \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ontologySelectionLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'body'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                        Used to keep track of the ontology label to be passed down to the\nresults-browser component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ontologyTerms$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            spinnerActive$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        Emits true whenever the overlay spinner should activate. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            string\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ListResult } from 'ccf-database';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\n\nimport { OntologySelection } from './core/models/ontology-selection';\nimport { DataSourceService } from './core/services/data-source/data-source.service';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { DataQueryState, DataState } from './core/store/data/data.state';\nimport { FiltersPopoverComponent } from './modules/filters/filters-popover/filters-popover.component';\nimport { ImageViewerPopoverComponent } from './modules/image-viewer/image-viewer-popover/image-viewer-popover.component';\nimport { DrawerComponent } from './shared/components/drawer/drawer/drawer.component';\n\n/**\n * This is the main angular component that all the other components branch off from.\n * It is in charge of the header and drawer components who have many sub-components.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Used to keep track of the ontology label to be passed down to the\n   * results-browser component.\n   */\n  ontologySelectionLabel = 'body';\n\n  /** Emits true whenever the overlay spinner should activate. */\n  readonly spinnerActive$ = this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  );\n\n  readonly ontologyTerms$: Observable;\n\n  /**\n   * Creates an instance of app component.\n   *\n   * @param data The data state.\n   */\n  constructor(readonly data: DataState, readonly dataSourceService: DataSourceService, readonly theming: ThemingService) {\n    data.listData$.subscribe();\n    data.aggregateData$.subscribe();\n    data.termOccurencesData$.subscribe();\n    this.ontologyTerms$ = data.filter$.pipe(pluck('ontologyTerms'));\n  }\n\n  /**\n   * Resets the drawers and filter components to their default state.\n   * @param left The left drawer component gets passed in so we can call it's methods to control it's state\n   * @param right The right drawer component gets passed in so we can call it's methods to control it's state\n   * @param filterbox The filter's popover component gets passed in so we can control it's popover's state\n   */\n  reset(\n    left: DrawerComponent,\n    right: DrawerComponent,\n    filterbox: FiltersPopoverComponent,\n    viewer: ImageViewerPopoverComponent\n  ): void {\n    viewer.close();\n    left.open();\n    left.closeExpanded();\n    right.open();\n    right.closeExpanded();\n    filterbox.removeBox();\n  }\n\n  /**\n   * Fetches relevant data from the database and calls the open function on the image viewer with the data\n   * @param viewer The image viewer component\n   * @param iri URL containing the image data\n   */\n  openViewer(viewer: ImageViewerPopoverComponent, result: ListResult): void {\n    const source = this.dataSourceService.getImageViewerData(result['@id']);\n    source.subscribe(data => viewer.open(data, result));\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.theming.setTheme(this.theming.getTheme() === 'light-theme' ? 'dark-theme' : 'light-theme');\n  }\n\n  /**\n   * Captures changes in the ontologySelection and uses them to update the results-browser label\n   * and the filter object in the data store.\n   * @param ontologySelection the list of currently selected organ nodes\n   */\n  ontologySelected(ontologySelection: OntologySelection[]): void {\n    if (!!ontologySelection) {\n      this.data.updateFilter({ ontologyTerms: ontologySelection.map(selection => selection.id)});\n      this.ontologySelectionLabel = this.createSelectionLabel(ontologySelection);\n      return;\n    }\n\n    this.data.updateFilter({ ontologyTerms: [] });\n    this.ontologySelectionLabel = '';\n  }\n\n  /**\n   * Creates selection label for the results-browser to display based on an\n   * array of selected ontology nodes.\n   */\n  createSelectionLabel(ontolgySelection: OntologySelection[]): string{\n    if (ontolgySelection.length === 0){\n      return '';\n    }\n\n    if (ontolgySelection.length === 1){\n      return ontolgySelection[0].label;\n    }\n\n    let selectionString = '';\n    ontolgySelection.forEach((selection, index) => {\n      selectionString += selection.label;\n\n      // Don't add a comma if it's the last item in the array.\n      if (index  0;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n  \n    \n      \n      \n    \n    \n      \n        \n        \n          {{ right.expanded ? 'fullscreen_exit' : 'fullscreen' }}\n        \n        \n          {{ theming.getTheme() === 'light-theme' ? 'brightness_2' : 'brightness_5' }}\n        \n      \n      \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .ccf-app {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n\n  ccf-drawer-container {\n    flex-grow: 1;\n    position: fixed;\n    top: 4rem;\n    height: 100%;\n    width: 100%;\n    opacity: 1;\n\n    ccf-drawer-content {\n      overflow: hidden;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    ccf-drawer {\n      width: 28.5rem;\n\n      .drawer-icons {\n        display: flex;\n        padding-left: 1.5rem;\n\n        .scheme-toggle {\n          mat-icon {\n            font-size: 2rem !important;\n          }\n        }\n\n        .button {\n          width: 3rem;\n          height: 3rem;\n          padding: 0;\n          background: none;\n          border: none;\n          cursor: pointer;\n          outline: none;\n\n          mat-icon {\n            width: 100%;\n            height: 100%;\n            font-size: 2.5rem;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n        }\n      }\n    }\n\n    .left-drawer {\n      ::ng-deep .cff-drawer-inner-container {\n        height: calc(100% - 5.5rem);\n      }\n    }\n  }\n}\n\n::-webkit-scrollbar {\n  width: 7.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ right.expanded ? \\'fullscreen_exit\\' : \\'fullscreen\\' }}                          {{ theming.getTheme() === \\'light-theme\\' ? \\'brightness_2\\' : \\'brightness_5\\' }}                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBodyModule\n\nBodyModule\n\nAppModule -->\n\nBodyModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nAppModule -->\n\nImageViewerModule->AppModule\n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nAppModule -->\n\nInfoDialogModule->AppModule\n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BodyModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            FiltersPopoverModule\n                        \n                        \n                            ImageViewerModule\n                        \n                        \n                            InfoDialogModule\n                        \n                        \n                            OntologyExplorationModule\n                        \n                        \n                            ResultsBrowserModule\n                        \n                        \n                            SpinnerOverlayModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { BodyModule } from './modules/body/body.module';\nimport { FiltersPopoverModule } from './modules/filters/filters-popover/filters-popover.module';\nimport { ImageViewerModule } from './modules/image-viewer/image-viewer.module';\nimport { InfoDialogModule } from './modules/info/info-dialog/info-dialog.module';\nimport { OntologyExplorationModule } from './modules/ontology-exploration/ontology-exploration.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\nimport { DualSliderModule } from './shared/components/dual-slider/dual-slider.module';\nimport { ResultsBrowserModule } from './modules/results-browser/results-browser/results-browser.module';\nimport { SpinnerOverlayModule } from './shared/components/spinner-overlay/spinner-overlay.module';\n\nimport { DEFAULT_THEME } from '../app/core/services/theming/theming.service';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    DrawerModule,\n    FiltersPopoverModule,\n    OntologyExplorationModule,\n    InfoDialogModule,\n    MatIconModule,\n    DualSliderModule,\n    ResultsBrowserModule,\n    SpinnerOverlayModule,\n    ImageViewerModule,\n    BodyModule\n  ],\n  declarations: [AppComponent],\n  providers: [{provide: DEFAULT_THEME, useValue: 'light-theme'}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyModule.html":{"url":"modules/BodyModule.html","title":"module - BodyModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_exports\n\n\n\n\nBodyUiModule\n\nBodyUiModule\n\n\n\nBodyModule\n\nBodyModule\n\nBodyModule -->\n\nBodyUiModule->BodyModule\n\n\n\n\n\nBodyUiModule \n\nBodyUiModule \n\nBodyUiModule  -->\n\nBodyModule->BodyUiModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/body/body.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BodyUiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BodyUiModule } from './body-ui/body-ui.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BodyUiModule\n  ],\n  exports: [\n    BodyUiModule\n  ]\n})\nexport class BodyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyUI.html":{"url":"classes/BodyUI.html","title":"class - BodyUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n            \n                Description\n            \n            \n                A convenience wrapper class for the CCF Body UI\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bodyUILayer\n                            \n                            \n                                    Private\n                                    Optional\n                                cursor\n                            \n                            \n                                deck\n                            \n                            \n                                    Private\n                                    Optional\n                                lastHovered\n                            \n                            \n                                    Readonly\n                                nodeClick$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeClickSubject\n                            \n                            \n                                    Readonly\n                                nodeHoverStart$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeHoverStartSubject\n                            \n                            \n                                    Readonly\n                                nodeHoverStop$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeHoverStopSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _onClick\n                            \n                            \n                                    Private\n                                _onHover\n                            \n                            \n                                    Private\n                                _onViewStateChange\n                            \n                            \n                                setScene\n                            \n                            \n                                zoomTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deckProps: Partial)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui/src/lib/body-ui.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deckProps\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bodyUILayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BodyUILayer({})\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            cursor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            lastHovered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpatialSceneNode\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeClick$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeClickSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeClickSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeHoverStart$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeHoverStartSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeHoverStartSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeHoverStop$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeHoverStopSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeHoverStopSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onClick(e: literal type, mouseEvent: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mouseEvent\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onHover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onHover(e: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onViewStateChange(event: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \nsetScene(data: SpatialSceneNode[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            zoomTo\n                        \n                        \n                    \n                \n            \n            \n                \nzoomTo(node: SpatialSceneNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({viewState: {\n      orbitAxis: 'Y',\n      minRotationX: -15,\n      maxRotationX: 15,\n      target: [0.5, 0.5, 0],\n      rotationX: 0,\n      rotationOrbit: 0,\n      zoom: 9.5\n    }});\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      }\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            layerName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'BodyUILayer'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:72\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPickingInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeState\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderLayers\n                        \n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { load, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { CubeGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\n\n// Programmers Note: had to disable tslint in a few places due to deficient typings.\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\n// tslint:disable: no-unsafe-any\nasync function loadGLTF(model: SpatialSceneNode): Promise {\n  const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n\n  const scenegraphNode = model.scenegraphNode ? gltf.nodes?.find((n) => n.name === model.scenegraphNode) : undefined;\n  if (scenegraphNode) {\n    if (!scenegraphNode.rotation && gltf.scene?.nodes?.length > 0) {\n      scenegraphNode.rotation = gltf.scene.nodes[gltf.scene.nodes.length-1].rotation;\n    }\n    gltf.scene = {\n      id: 'scene-1',\n      name: 'Scene',\n      nodes: [scenegraphNode]\n    };\n    gltf.scenes = [gltf.scene, ...gltf.scenes];\n  }\n  return gltf;\n}\n// tslint:enable: no-unsafe-any\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: {[key: string]: unknown}): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // tslint:disable-next-line: no-unsafe-any\n        mesh: new CubeGeometry(),\n        wireframe: false,\n        getTransformMatrix: (d) => (d as {transformMatrix: number[][]}).transformMatrix,\n        getColor: (d) => (d as {color: [number, number, number, number]}).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({data: data || [], zoomOpacity: 0.8});\n\n    // tslint:disable-next-line: no-unsafe-any\n    registerLoaders([DracoWorkerLoader, GLTFLoader]);\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as {data: SpatialSceneNode[], zoomOpacity: number};\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    return [\n      meshLayer('cubes', cubes, {wireframe: false}),\n      meshLayer('wireframes', wireframes, {wireframe: true, pickable: false}),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          ...{\n            id: 'models-' + model['@id'],\n            opacity: model.zoomBasedOpacity ? state.zoomOpacity : 1.0,\n            pickable: !model.unpickable,\n            coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n            data: [model],\n            scenegraph: model.scenegraphNode ? loadGLTF(model) : model.scenegraph,\n            _lighting: model._lighting,  // 'pbr' | undefined\n            getTransformMatrix: model.transformMatrix,\n            getColor: model.color || [0, 255, 0, 0.5*255],\n          }\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(e: {info: object}): unknown {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canvas\n                                \n                                \n                                        id\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({viewState: {\n      orbitAxis: 'Y',\n      minRotationX: -15,\n      maxRotationX: 15,\n      target: [0.5, 0.5, 0],\n      rotationX: 0,\n      rotationOrbit: 0,\n      zoom: 9.5\n    }});\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      }\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BodyUiComponent.html":{"url":"components/BodyUiComponent.html","title":"component - BodyUiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BodyUiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/body/body-ui/body-ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-body-ui\n            \n\n            \n                styleUrls\n                ./body-ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./body-ui.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bodyCanvas\n                            \n                            \n                                bodyUI\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyFilter\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DataState, dataSourceService: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/body/body-ui/body-ui.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DataState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSourceService\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:18\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:23\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilter(filter: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyCanvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('bodyCanvas', {read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyUI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BodyUI\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { BodyUI } from 'ccf-body-ui';\nimport { Filter } from 'ccf-database';\n\nimport { DataSourceService } from './../../../core/services/data-source/data-source.service';\nimport { DataState } from './../../../core/store/data/data.state';\n\n\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss']\n})\nexport class BodyUiComponent implements AfterViewInit {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filter: Filter;\n\n  /**\n   * Emits the current filters\n   */\n  @Output() filterChange = new EventEmitter();\n\n  bodyUI: BodyUI;\n\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  constructor(readonly data: DataState, readonly dataSourceService: DataSourceService) { }\n\n  ngAfterViewInit(): void {\n    const canvas = this.bodyCanvas.nativeElement;\n    this.bodyUI = new BodyUI({ id: 'body-ui', canvas });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n\n    // TODO: Replace with a single @Input with scene provided by ngxs\n    this.data.filter$.subscribe(async (f: Filter) => {\n      await this.dataSourceService.dataSource.connect();\n      const scene = await this.dataSourceService.dataSource.getScene(f);\n      this.bodyUI.setScene(scene);\n    });\n\n    this.bodyUI.nodeClick$.subscribe(async ({node, ctrlClick}) => {\n      switch (node['@id']) {\n        case 'http://purl.org/ccf/latest/ccf.owl#VHRightKidney':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0004539']});\n          break;\n        case 'http://purl.org/ccf/latest/ccf.owl#VHLeftKidney':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0004538']});\n          break;\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleen':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC1':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC2':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC3':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0002106']});\n          break;\n        default:\n          if (node.entityId) {\n            const highlightedEntities = ctrlClick ? this.filter?.highlightedEntities ?? [] : [];\n            if (highlightedEntities.length === 1 && highlightedEntities[0] === node.entityId) {\n              this.applyFilter({highlightedEntities: []});\n            } else {\n              this.applyFilter({highlightedEntities: highlightedEntities.concat([node.entityId])});\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  private applyFilter(filter: Partial): void {\n    const newFilter = { ...this.filter, ...filter } as Filter;\n    this.filter = newFilter;\n    this.filterChange.emit(newFilter);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./body-ui.component.scss\n                \n                .body-ui {\n  position: relative !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BodyUiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/body/body-ui/body-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFDatabase.html":{"url":"classes/CCFDatabase.html","title":"class - CCFDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-database.ts\n        \n\n            \n                Description\n            \n            \n                Database provider. \n\n            \n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                scene\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connect\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                getAggregateResults\n                            \n                            \n                                getIds\n                            \n                            \n                                    Async\n                                getImageViewerData\n                            \n                            \n                                    Async\n                                getListResults\n                            \n                            \n                                    Async\n                                getOntologyTermOccurences\n                            \n                            \n                                    Async\n                                getScene\n                            \n                            \n                                getSpatialEntities\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: CCFDatabaseOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-database.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of ccfdatabase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        CCFDatabaseOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initialization options.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFSpatialGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:49\n                            \n                        \n\n                \n                    \n                        The spatial graph \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFDatabaseOptions\n\n                        \n                    \n                    \n                        \n                            Default value : DEFAULT_CCF_DB_OPTIONS\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:58\n                            \n                        \n\n                \n                    \n                        Initialization options.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFSpatialScene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:51\n                            \n                        \n\n                \n                    \n                        Creates SpatialEntity Scenes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     N3Store\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:47\n                            \n                        \n\n                \n                    \n                        The triple store. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    connect(options?: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:70\n                \n            \n\n\n            \n                \n                    Connects the database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CCFDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options used to initialize.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise resolving to true if data has been loaded into the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:116\n                \n            \n\n\n            \n                \n                    Gets the data for an object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the requested object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Quad[]\n\n                    \n                    \n                        The object data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:161\n                \n            \n\n\n            \n                \n                    Gets all aggregate results for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A list of aggregate data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIds\n                        \n                        \n                    \n                \n            \n            \n                \ngetIds(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:106\n                \n            \n\n\n            \n                \n                    Gets all ids matching the filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {} as Filter\n                                    \n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Set\n\n                    \n                    \n                        A set of all matching ids.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageViewerData(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:181\n                \n            \n\n\n            \n                \n                    Gets image data for the associated id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The identifier.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The image data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:147\n                \n            \n\n\n            \n                \n                    Gets all list results for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A list of results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOntologyTermOccurences\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:171\n                \n            \n\n\n            \n                \n                    Get number of occurrences of ontology terms for a set of ids.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        Ontology term counts.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:190\n                \n            \n\n\n            \n                \n                    Get all nodes to form the 3D scene of reference body, organs, and tissues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A list of Spatial Scene Nodes for the 3D Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpatialEntities\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpatialEntities(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:136\n                \n            \n\n\n            \n                \n                    Gets all spatial entities for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity[]\n\n                    \n                    \n                        A list of spatial entities.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:126\n                \n            \n\n\n            \n                \n                    Gets the data for objects matching a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {} as Filter\n                                    \n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        An array of data.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, N3Store, Quad, Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { addHubmapDataToStore } from './hubmap/hubmap-data';\nimport { AggregateResult, DataSource, Filter, ImageViewerData, ListResult } from './interfaces';\nimport { getAggregateResults } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getImageViewerData } from './queries/image-viewer-data-n3';\nimport { getListResult } from './queries/list-result-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** An url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase implements DataSource {\n  /** The triple store. */\n  store: N3Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store();\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions): Promise {\n    if (options) {\n      this.options = options;\n    }\n    if (this.store.size === 0) {\n      const ops: Promise[] = [];\n      const ccfOwlUrl = this.options.ccfOwlUrl;\n      if (ccfOwlUrl.endsWith('.n3')) {\n        ops.push(addN3ToStore(this.options.ccfOwlUrl, this.store));\n      } else {\n        ops.push(addRdfXmlToStore(this.options.ccfOwlUrl, this.store));\n      }\n      if (this.options.hubmapDataUrl) {\n        if (this.options.hubmapDataUrl.endsWith('.jsonld')) {\n          ops.push(addJsonLdToStore(this.options.hubmapDataUrl, this.store));\n        } else {\n          ops.push(addHubmapDataToStore(\n            this.store, this.options.hubmapDataUrl, this.options.hubmapDataService, this.options.hubmapToken,\n            this.options.hubmapAssetsUrl, this.options.hubmapPortalUrl\n          ));\n        }\n      }\n      await Promise.all(ops);\n      // Add a small delay to allow the triple store to settle\n      await new Promise(r => setTimeout(r, 500));\n      this.graph.createGraph();\n    }\n    return this.store.size > 0;\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set {\n    return findIds(this.store, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  /**\n   * Gets all list results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getListResults(filter?: Filter): Promise {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    const highlighted = new Set(filter.highlightedEntities);\n    return [...this.getIds(filter)].map((s) => getListResult(this.store, s))\n      .map((s) => Object.assign(s, {highlighted: highlighted.has(s['@id'])}))\n      .sort((a, b) => (a.highlighted ? 0 : 1) - (b.highlighted ? 0 : 1));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Gets image data for the associated id.\n   *\n   * @param id The identifier.\n   * @returns The image data.\n   */\n  async getImageViewerData(id: string): Promise {\n    return getImageViewerData(id, this.store);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseOptions.html":{"url":"interfaces/CCFDatabaseOptions.html","title":"interface - CCFDatabaseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CCFDatabaseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-database.ts\n        \n\n            \n                Description\n            \n            \n                Database initialization options. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ccfContextUrl\n                                \n                                \n                                        ccfOwlUrl\n                                \n                                \n                                        hubmapAssetsUrl\n                                \n                                \n                                        hubmapDataService\n                                \n                                \n                                        hubmapDataUrl\n                                \n                                \n                                        hubmapPortalUrl\n                                \n                                \n                                            Optional\n                                        hubmapToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ccfContextUrl\n                                    \n                                \n                                \n                                    \n                                        ccfContextUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Context. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccfOwlUrl\n                                    \n                                \n                                \n                                    \n                                        ccfOwlUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An url to load data from. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapAssetsUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapAssetsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap assets api url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapDataService\n                                    \n                                \n                                \n                                    \n                                        hubmapDataService:     \"static\" | \"search-api\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"static\" | \"search-api\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data service type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapDataUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapDataUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap data url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapPortalUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapPortalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap Portal url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    HuBMAP Service Token. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, N3Store, Quad, Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { addHubmapDataToStore } from './hubmap/hubmap-data';\nimport { AggregateResult, DataSource, Filter, ImageViewerData, ListResult } from './interfaces';\nimport { getAggregateResults } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getImageViewerData } from './queries/image-viewer-data-n3';\nimport { getListResult } from './queries/list-result-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** An url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase implements DataSource {\n  /** The triple store. */\n  store: N3Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store();\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions): Promise {\n    if (options) {\n      this.options = options;\n    }\n    if (this.store.size === 0) {\n      const ops: Promise[] = [];\n      const ccfOwlUrl = this.options.ccfOwlUrl;\n      if (ccfOwlUrl.endsWith('.n3')) {\n        ops.push(addN3ToStore(this.options.ccfOwlUrl, this.store));\n      } else {\n        ops.push(addRdfXmlToStore(this.options.ccfOwlUrl, this.store));\n      }\n      if (this.options.hubmapDataUrl) {\n        if (this.options.hubmapDataUrl.endsWith('.jsonld')) {\n          ops.push(addJsonLdToStore(this.options.hubmapDataUrl, this.store));\n        } else {\n          ops.push(addHubmapDataToStore(\n            this.store, this.options.hubmapDataUrl, this.options.hubmapDataService, this.options.hubmapToken,\n            this.options.hubmapAssetsUrl, this.options.hubmapPortalUrl\n          ));\n        }\n      }\n      await Promise.all(ops);\n      // Add a small delay to allow the triple store to settle\n      await new Promise(r => setTimeout(r, 500));\n      this.graph.createGraph();\n    }\n    return this.store.size > 0;\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set {\n    return findIds(this.store, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  /**\n   * Gets all list results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getListResults(filter?: Filter): Promise {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    const highlighted = new Set(filter.highlightedEntities);\n    return [...this.getIds(filter)].map((s) => getListResult(this.store, s))\n      .map((s) => Object.assign(s, {highlighted: highlighted.has(s['@id'])}))\n      .sort((a, b) => (a.highlighted ? 0 : 1) - (b.highlighted ? 0 : 1));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Gets image data for the associated id.\n   *\n   * @param id The identifier.\n   * @returns The image data.\n   */\n  async getImageViewerData(id: string): Promise {\n    return getImageViewerData(id, this.store);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFSpatialGraph.html":{"url":"classes/CCFSpatialGraph.html","title":"class - CCFSpatialGraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFSpatialGraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-graph.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSpatialEntity\n                            \n                            \n                                addSpatialObjectReference\n                            \n                            \n                                addSpatialPlacement\n                            \n                            \n                                createGraph\n                            \n                            \n                                getTransformationMatrix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: CCFDatabase)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DirectedGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:38\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialEntity\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialEntity(entity: SpatialEntity)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialObjectReference\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialObjectReference(ref: SpatialObjectReference)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                SpatialObjectReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialPlacement\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialPlacement(placement: SpatialPlacement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    placement\n                                    \n                                                SpatialPlacement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGraph\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransformationMatrix\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransformationMatrix(sourceIRI: string, targetIRI: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIRI\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetIRI\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Matrix4 | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CCFDatabase } from './ccf-database';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { DirectedGraph } from 'graphology';\nimport shortestPath from 'graphology-shortest-path/unweighted';\nimport { fromEuler } from 'quaternion';\nimport toEuler from 'quaternion-to-euler';\n\nimport { SpatialEntity, SpatialObjectReference, SpatialPlacement } from './spatial-types';\nimport { rdf, ccf } from './util/prefixes';\nimport { getSpatialEntity, getSpatialObjectReference, getSpatialPlacement } from './queries/spatial-result-n3';\n\n\nexport function applySpatialPlacement(tx: Matrix4, placement: SpatialPlacement): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R_RAD = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians);\n  // tslint:disable-next-line: no-unsafe-any\n  const R = toEuler(fromEuler(R_RAD[1], R_RAD[0], R_RAD[2], 'XYZ').toVector()) as number[];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport class CCFSpatialGraph {\n  graph: DirectedGraph;\n\n  constructor(private db: CCFDatabase) {\n    this.createGraph();\n  }\n\n  createGraph(): void {\n    this.graph = new DirectedGraph();\n    const store = this.db.store;\n    // Add all Spatial Object References\n    store.forSubjects((subject) => {\n      this.addSpatialObjectReference(getSpatialObjectReference(store, subject.id));\n    }, rdf.type, ccf.SpatialObjectReference, null);\n\n    // Add all Spatial Entities\n    store.forSubjects((subject) => {\n      this.addSpatialEntity(getSpatialEntity(store, subject.id));\n    }, rdf.type, ccf.SpatialEntity, null);\n\n    // Add all Spatial Placements\n    store.forSubjects((subject) => {\n      this.addSpatialPlacement(getSpatialPlacement(store, subject.id));\n    }, rdf.type, ccf.SpatialPlacement, null);\n  }\n\n  addSpatialEntity(entity: SpatialEntity): void {\n    this.graph.mergeNode(entity['@id'], {type: 'SpatialEntity', object: entity});\n  }\n  addSpatialObjectReference(ref: SpatialObjectReference): void {\n    this.graph.mergeNode(ref['@id'], {type: 'SpatialObjectReference', object: ref});\n  }\n  addSpatialPlacement(placement: SpatialPlacement): void {\n    this.graph.mergeDirectedEdge(placement.source['@id'], placement.target['@id'], {type: 'SpatialPlacement', placement});\n  }\n\n  getTransformationMatrix(sourceIRI: string, targetIRI: string): Matrix4 | undefined {\n    if (sourceIRI === targetIRI) {\n      return new Matrix4(); // identity\n    }\n    if (!this.graph.hasNode(sourceIRI) || !this.graph.hasNode(targetIRI)) {\n      return undefined;\n    }\n\n    const tx = new Matrix4();\n    const path = shortestPath(this.graph, sourceIRI, targetIRI);\n    if (path && path.length > 0) {\n      path.reverse();\n      let target: string | number = '';\n      for (const source of path) {\n        if (target) {\n          const p = this.graph.getEdgeAttribute(source, target, 'placement') as SpatialPlacement;\n          applySpatialPlacement(tx, p);\n        }\n        target = source;\n      }\n      return tx;\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFSpatialScene.html":{"url":"classes/CCFSpatialScene.html","title":"class - CCFSpatialScene","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFSpatialScene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-scene.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEntitySceneNodes\n                            \n                            \n                                getReferenceBody\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceSceneNodes\n                            \n                            \n                                getScene\n                            \n                            \n                                getSceneNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: CCFDatabase)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEntitySceneNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetEntitySceneNodes(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceBody\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceBody(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceOrgans\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceSceneNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceSceneNodes(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSceneNode\n                        \n                        \n                    \n                \n            \n            \n                \ngetSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    nodeAttrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport { getSpatialEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { ccf, rui } from './util/prefixes';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': 'SpatialSceneNode';\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return getSpatialEntity(this.db.store, bodyId);\n  }\n\n  getReferenceOrgans(filter?: Filter): SpatialEntity[] {\n    let organsId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        organsId = ccf.spatial.MaleOrgans.id;\n        break;\n      case 'Female':\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n      case 'Both':\n      default:\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n    }\n    return [getSpatialEntity(this.db.store, organsId)];\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const wholeBody = getSpatialEntity(this.db.store, ccf.spatial.Body.id);\n    const body = this.getReferenceBody(filter);\n    const organs = getSpatialEntity(this.db.store, ccf.spatial.MaleOrgans.id);\n    const store = this.db.store;\n    const terms = filter?.ontologyTerms || [];\n    const hasTerm = {\n      body: terms.indexOf(rui.body.id) === 0,\n      kidney: terms.indexOf(rui.kidney.id) === 0,\n      right_kidney: terms.indexOf(rui.right_kidney.id) === 0,\n      left_kidney: terms.indexOf(rui.left_kidney.id) === 0,\n      spleen: terms.indexOf(rui.spleen.id) === 0,\n    };\n\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      this.getSceneNode(body, wholeBody, {unpickable: true, color: [255, 255, 255, 1*255]}),\n      ...this.getReferenceOrgans(filter).map((organ) =>\n        this.getSceneNode(organ, body, {unpickable: true, _lighting: 'pbr', zoomBasedOpacity: true,  color: [255, 0, 0, 1*255]})\n      ),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.right_kidney, zoomToOnLoad: hasTerm.right_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.left_kidney, zoomToOnLoad: hasTerm.left_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleen').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.spleen, zoomToOnLoad: hasTerm.spleen})\n    ];\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), wholeBody, {color: [0, 0, 255, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), wholeBody, {color: [255, 0, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC1').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC2').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC3').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true})\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const highlighted = new Set(filter?.highlightedEntities);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, {\n        color: highlighted.has(entity.entityId as string) ? [10, 10, 229, 0.9*255] : [255, 255, 255, 0.9*255]\n      })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial = {}): SpatialSceneNode | undefined {\n    const has3dObject = source.object && source.object.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4().rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId || undefined,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      } as SpatialSceneNode;\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChannelConfig.html":{"url":"interfaces/ChannelConfig.html","title":"interface - ChannelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChannelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        color\n                                \n                                \n                                        slider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slider\n                                    \n                                \n                                \n                                    \n                                        slider:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterOnChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/checkbox/checkbox.component.ts:16\n                            \n                        \n                \n                    \n                        The label that describes the overall question the checkbox is asking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/checkbox/checkbox.component.ts:21\n                            \n                        \n                \n                    \n                        Used to generate the individual checkboxes and their individual labels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/checkbox/checkbox.component.ts:26\n                            \n                        \n                \n                    \n                        A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/checkbox/checkbox.component.ts:31\n                            \n                        \n                \n                    \n                        Any time a checkbox changes we emit that value so the parent component has that information\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nfilterOnChange(event: MatCheckboxChange, option: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/checkbox/checkbox.component.ts:38\n                \n            \n\n\n            \n                \n                    This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event object from the checkbox that contains the boolean property 'checked'\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tells us which option was checked or unchecked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\n\n/**\n * Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n */\n@Component({\n  selector: 'ccf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\n  /**\n   * The label that describes the overall question the checkbox is asking\n   */\n  @Input() label: string;\n\n  /**\n   * Used to generate the individual checkboxes and their individual labels\n   */\n  @Input() options: string[];\n\n  /**\n   * A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n   */\n  @Input() selection: string[] = [];\n\n  /**\n   * Any time a checkbox changes we emit that value so the parent component has that information\n   */\n  @Output() selectionChange = new EventEmitter();\n\n  /**\n   * This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n   * @param event Event object from the checkbox that contains the boolean property 'checked'\n   * @param option Tells us which option was checked or unchecked\n   */\n  filterOnChange(event: MatCheckboxChange, option: string): void {\n    const checked = event.checked;\n\n    if (checked) {\n      this.selection = [...this.selection, option];\n    } else {\n      this.selection = this.selection.filter(selection => selection !== option);\n    }\n\n    this.selectionChange.emit(this.selection);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n  \n    \n      \n        {{ option }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                ::ng-deep  .mat-checkbox.mat-accent {\n  .mat-checkbox-checkmark-path {\n    stroke: white !important;\n  }\n\n  .mat-checkbox-inner-container {\n    margin-right: 1rem;\n  }\n}\n\n.filter-label {\n  margin-bottom: 0.5em;\n  font-weight: bold;\n}\n\n.options-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.option {\n  margin-right: 1.5em;\n  width: 8em;\n  color: #fafafa;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ option }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckboxModule.html":{"url":"modules/CheckboxModule.html","title":"module - CheckboxModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/checkbox/checkbox.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CheckboxComponent } from './checkbox.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent]\n})\nexport class CheckboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorBarComponent.html":{"url":"components/ColorBarComponent.html","title":"component - ColorBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/color-scheme/color-bar/color-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Color bar component for the color scheme popup and color scheme selector\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-bar\n            \n\n            \n                styleUrls\n                ./color-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                colorChanged\n                            \n                            \n                                gradientHighlight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                enableSelection\n                            \n                            \n                                selected\n                            \n                            \n                                selectedColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gradientStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colorScheme\n                    \n                \n                \n                    \n                        Type :         ColorScheme\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Color scheme to be displayed in the color bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSelection\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:33\n                            \n                        \n                \n                    \n                        Determines if colors are able to be selected on the color bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:23\n                            \n                        \n                \n                    \n                        Whether or not the scheme is currently selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedColor\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:28\n                            \n                        \n                \n                    \n                        Currently selected color in colorScheme.colors\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        colorChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:38\n                            \n                        \n                \n                    \n                        Emits the newly selected color index\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncolorChanged(color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:64\n                \n            \n\n\n            \n                \n                    When a color is selected, this updates relavant variables and emits the\nselected color\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the color the user selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gradientHighlight\n                        \n                        \n                    \n                \n            \n            \n                \ngradientHighlight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:55\n                \n            \n\n\n            \n                \n                    Returns whether or not the scheme is a selected gradient (for highlighting purposes)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gradientStyle\n                    \n                \n\n                \n                    \n                        getgradientStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:43\n                                \n                            \n                    \n                        \n                                Enables dynamic styling for gradient bars\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ColorScheme } from '../color-schemes';\n\n\n/**\n * Color bar component for the color scheme popup and color scheme selector\n */\n@Component({\n  selector: 'ccf-color-bar',\n  templateUrl: './color-bar.component.html',\n  styleUrls: ['./color-bar.component.scss']\n})\nexport class ColorBarComponent {\n  /**\n   * Color scheme to be displayed in the color bar\n   */\n  @Input() colorScheme: ColorScheme;\n\n  /**\n   * Whether or not the scheme is currently selected\n   */\n  @Input() selected = false;\n\n  /**\n   * Currently selected color in colorScheme.colors\n   */\n  @Input() selectedColor = '';\n\n  /**\n   * Determines if colors are able to be selected on the color bar\n   */\n  @Input() enableSelection = false;\n\n  /**\n   * Emits the newly selected color index\n   */\n  @Output() colorChange = new EventEmitter();\n\n  /**\n   * Enables dynamic styling for gradient bars\n   */\n  get gradientStyle(): string {\n    const { colors, positions } = this.colorScheme;\n    const result: string[] = [];\n    for (let i = 0; i \n    \n\n    \n        \n  \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./color-bar.component.scss\n                \n                .scheme-container {\n  width: 7rem;\n  height: 1rem;\n  display: flex;\n  .discrete {\n    width: 1rem;\n  }\n  .gradient {\n    width: 7rem;\n  }\n\n  &.selected-scheme {\n    .discrete {\n      &.selected-color {\n        border-radius: 10px;\n      }\n    }\n  }\n\n  &.highlighted {\n    outline-width: 1px;\n    outline-style: solid;\n  }\n\n  :hover {\n    cursor: pointer;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorBarModule.html":{"url":"modules/ColorBarModule.html","title":"module - ColorBarModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorBarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorBarModule\n\n\n\ncluster_ColorBarModule_declarations\n\n\n\ncluster_ColorBarModule_exports\n\n\n\n\nColorBarComponent\n\nColorBarComponent\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorBarModule -->\n\nColorBarComponent->ColorBarModule\n\n\n\n\n\nColorBarComponent \n\nColorBarComponent \n\nColorBarComponent  -->\n\nColorBarModule->ColorBarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-bar/color-bar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorBarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorBarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ColorBarComponent } from './color-bar.component';\n\n\n@NgModule({\n  declarations: [ColorBarComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ColorBarComponent]\n})\nexport class ColorBarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorPickerLauncherComponent.html":{"url":"components/ColorPickerLauncherComponent.html","title":"component - ColorPickerLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorPickerLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts\n\n\n    \n        Description\n    \n    \n        Component dynamically displays a div with a shape and background that corresponds to the color scheme\nor color of the layer that it gets passed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-picker-launcher\n            \n\n            \n                styleUrls\n                ./color-picker-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-picker-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts:20\n                            \n                        \n                \n                    \n                        An image-viewer layer which contains the styling information required to render this component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts:25\n                            \n                        \n                \n                    \n                        Output that passes along changes made to the layer's properties from the color picker\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\n/**\n * Component dynamically displays a div with a shape and background that corresponds to the color scheme\n * or color of the layer that it gets passed.\n */\n@Component({\n  selector: 'ccf-color-picker-launcher',\n  templateUrl: './color-picker-launcher.component.html',\n  styleUrls: ['./color-picker-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPickerLauncherComponent {\n  /**\n   * An image-viewer layer which contains the styling information required to render this component.\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Output that passes along changes made to the layer's properties from the color picker\n   */\n  @Output() layerChange = new EventEmitter();\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./color-picker-launcher.component.scss\n                \n                .launch-button {\n  width: 1rem;\n  height: 1rem;\n  cursor: pointer;\n}\n\n.circle {\n  border-radius: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorPickerLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorPickerLauncherModule.html":{"url":"modules/ColorPickerLauncherModule.html","title":"module - ColorPickerLauncherModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorPickerLauncherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorPickerLauncherModule\n\n\n\ncluster_ColorPickerLauncherModule_declarations\n\n\n\ncluster_ColorPickerLauncherModule_imports\n\n\n\ncluster_ColorPickerLauncherModule_exports\n\n\n\n\nColorPickerLauncherComponent\n\nColorPickerLauncherComponent\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule -->\n\nColorPickerLauncherComponent->ColorPickerLauncherModule\n\n\n\n\n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent  -->\n\nColorPickerLauncherModule->ColorPickerLauncherComponent \n\n\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorPickerLauncherModule -->\n\nColorSchemePopupModule->ColorPickerLauncherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorPickerLauncherComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorSchemePopupModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorPickerLauncherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorPickerLauncherComponent } from './color-picker-launcher.component';\nimport { ColorSchemePopupModule } from '../color-scheme-popup/color-scheme-popup.module';\n\n\n@NgModule({\n  declarations: [ColorPickerLauncherComponent],\n  imports: [CommonModule, ColorSchemePopupModule],\n  exports: [ColorPickerLauncherComponent]\n})\nexport class ColorPickerLauncherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme.html":{"url":"interfaces/ColorScheme.html","title":"interface - ColorScheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/color-scheme.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colors\n                                \n                                \n                                        name\n                                \n                                \n                                        positions\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"discrete\" | \"gradient\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"discrete\" | \"gradient\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n    type: 'discrete' | 'gradient';\n    name: string;\n    colors: string[];\n    positions: number[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme-1.html":{"url":"interfaces/ColorScheme-1.html","title":"interface - ColorScheme-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-schemes.ts\n        \n\n            \n                Description\n            \n            \n                Color scheme to be used in visualizing layers of the image\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colors\n                                \n                                \n                                        name\n                                \n                                \n                                        positions\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Colors used in the scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions for mapping the data to colors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"discrete\" | \"gradient\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"discrete\" | \"gradient\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the scheme is discrete or gradient\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n\n  /**\n   * Whether the scheme is discrete or gradient\n   */\n  type: 'discrete' | 'gradient';\n\n  /**\n   * Name of scheme\n   */\n  name: string;\n\n  /**\n   * Colors used in the scheme\n   */\n  colors: string[];\n\n  /**\n   * Positions for mapping the data to colors\n   */\n  positions: number[];\n}\n\n/**\n * Default Qualitative Scheme1 (discrete)\n */\nexport const GREEENORANGE: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative1',\n  colors: ['#66BB6A', '#B39DDB', '#FFCC80', '#FFFF8D', '#1565C0', '#E91E63', '#E65100'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Qualitative Scheme2 (discrete)\n */\nexport const TEALGREEN: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative2',\n  colors: ['#80CBC4', '#FFFF8D', '#B39DDB', '#EF9A9A', '#64B5F6', '#FFB74D', '#AED581'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme1 (discrete)\n */\nexport const BLUERED: ColorScheme = {\n  type: 'discrete',\n  name: 'bluered',\n  colors: ['#2166AC', '#67A9CF', '#D1E5F0', '#F7F7F7', '#FDDBC7', '#EF8A62', '#B2182B'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme2 (discrete)\n */\nexport const GREENRED: ColorScheme = {\n  type: 'discrete',\n  name: 'greenred',\n  colors: ['#1A9850', '#91CF60', '#D9EF8B', '#FFFFBF', '#FEE08B', '#FC8D59', '#D73027'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme3 (discrete)\n */\nexport const PURPLEBROWN: ColorScheme = {\n  type: 'discrete',\n  name: 'purplebrown',\n  colors: ['#542788', '#998EC3', '#D8DAEB', '#F7F7F7', '#FEE0B6', '#F1A340', '#B35806'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme4 (discrete)\n */\nexport const REDTAN: ColorScheme = {\n  type: 'discrete',\n  name: 'redtan',\n  colors: ['#990000', '#D7301F', '#EF6548', '#FC8D59', '#FDBB84', '#FDD49E', '#FEF0D9'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme5 (discrete)\n */\nexport const PURPLELIGHTBLUE: ColorScheme = {\n  type: 'discrete',\n  name: 'purplelightblue',\n  colors: ['#6E016B', '#88419D', '#8C6BB1', '#8C96C6', '#9EBCDA', '#BFD3E6', '#EDF8FB'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme6 (gradient)\n */\nexport const VIRIDIS: ColorScheme = {\n  type: 'gradient',\n  name: 'viridis',\n  colors: ['#FFE31C', '#B5C740', '#6BAB65', '#21908A', '#2D6379', '#393768', '#450B57'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme7 (gradient)\n */\nexport const MAGMA: ColorScheme = {\n  type: 'gradient',\n  name: 'magma',\n  colors: ['#F8FC9D', '#E1B986', '#CA7670', '#B4335A', '#78223C', '#3D121F', '#020202'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme8 (gradient)\n */\nexport const PLASMA: ColorScheme = {\n  type: 'gradient',\n  name: 'plasma',\n  colors: ['#F2F424', '#E3B842', '#D47D60', '#C6427E', '#883381', '#4A2484', '#0C1687'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default scheme options\n */\nexport const DEFAULT_COLOR_SCHEMES = [\n  GREEENORANGE,\n  TEALGREEN,\n  BLUERED,\n  GREENRED,\n  PURPLEBROWN,\n  // REDTAN,\n  // PURPLELIGHTBLUE,\n  // VIRIDIS,\n  // MAGMA,\n  // PLASMA\n];\n\n/**\n * Object containing scheme and color index info to be emitted when a change is made\n */\nexport interface ColorSchemeSelection {\n\n  /**\n   * Current scheme selected\n   */\n  scheme: ColorScheme;\n\n  /**\n   * Index of the selected color in scheme\n   */\n  coloridx: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSchemeContentsComponent.html":{"url":"components/ColorSchemeContentsComponent.html","title":"component - ColorSchemeContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSchemeContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts\n\n\n    \n        Description\n    \n    \n        Contains the color menu and brightness/transparency sliders\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-scheme-contents\n            \n\n            \n                styleUrls\n                ./color-scheme-contents.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-scheme-contents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightnessSliderOptions\n                            \n                            \n                                transparencySliderOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                brightnessChanged\n                            \n                            \n                                colorChanged\n                            \n                            \n                                transparencyChanged\n                            \n                            \n                                    Private\n                                updateLayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                layer\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    brightnessLow\n                                \n                                \n                                    brightnessHigh\n                                \n                                \n                                    transparency\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:70\n                            \n                        \n\n                \n                    \n                            Initiates slider options\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:21\n                            \n                        \n                \n                    \n                        Determines if the popup opens up or down from the icon position\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:31\n                            \n                        \n                \n                    \n                        Layer that the component is currently rendering, used to pull relevant properties from.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:26\n                            \n                        \n                \n                    \n                        List of available schemes\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:36\n                            \n                        \n                \n                    \n                        Used to emit any changes made to the layer or its properties\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            brightnessChanged\n                        \n                        \n                    \n                \n            \n            \n                \nbrightnessChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:91\n                \n            \n\n\n            \n                \n                    Emits new brightness selection\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncolorChanged(color: string, scheme: ColorScheme)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:106\n                \n            \n\n\n            \n                \n                    Takes in the selected color and scheme and adds them to the Layer\nbefore emitting the changed layer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scheme\n                                    \n                                                ColorScheme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transparencyChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntransparencyChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:98\n                \n            \n\n\n            \n                \n                    Emits new transparency value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateLayer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayer(updates: Partial<>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:118\n                \n            \n\n\n            \n                \n                    Updates layer with new layer settings\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    updates\n                                    \n                                            Partial<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains updated layer settings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brightnessSliderOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:41\n                            \n                        \n\n                \n                    \n                        Options for the brightness slider\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transparencySliderOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:46\n                            \n                        \n\n                \n                    \n                        Options for the transparency slider\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        brightnessLow\n                    \n                \n\n                \n                    \n                        getbrightnessLow()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:51\n                                \n                            \n                    \n                        \n                                Updates current low brightness value with new low brightness value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbrightnessLow(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        brightnessHigh\n                    \n                \n\n                \n                    \n                        getbrightnessHigh()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:59\n                                \n                            \n                    \n                        \n                                Updates current high brightness value with new high brightness value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbrightnessHigh(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        transparency\n                    \n                \n\n                \n                    \n                        gettransparency()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:67\n                                \n                            \n                    \n                        \n                                Updates current transparency value with new transparency value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settransparency(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:68\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Options } from 'ng5-slider';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../color-schemes';\n\n\n/**\n * Contains the color menu and brightness/transparency sliders\n */\n@Component({\n  selector: 'ccf-color-scheme-contents',\n  templateUrl: './color-scheme-contents.component.html',\n  styleUrls: ['./color-scheme-contents.component.scss']\n})\nexport class ColorSchemeContentsComponent {\n\n  /**\n   * Determines if the popup opens up or down from the icon position\n   */\n  @Input() bottom = false;\n\n  /**\n   * List of available schemes\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * Layer that the component is currently rendering, used to pull relevant properties from.\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Used to emit any changes made to the layer or its properties\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /**\n   * Options for the brightness slider\n   */\n  brightnessSliderOptions: Options;\n\n  /**\n   * Options for the transparency slider\n   */\n  transparencySliderOptions: Options;\n\n  /**\n   * Updates current low brightness value with new low brightness value\n   */\n  get brightnessLow(): number { return this.layer.brightness[0]; }\n  set brightnessLow(value: number) {\n    this.updateLayer({ brightness: [value, this.brightnessHigh] });\n  }\n\n  /**\n   * Updates current high brightness value with new high brightness value\n   */\n  get brightnessHigh(): number { return this.layer.brightness[1]; }\n  set brightnessHigh(value: number) {\n    this.updateLayer({ brightness: [this.brightnessLow, value] });\n  }\n\n  /**\n   * Updates current transparency value with new transparency value\n   */\n  get transparency(): number { return this.layer.transparency; }\n  set transparency(value: number) {\n    this.updateLayer({ transparency: value });\n  }\n\n  /**\n   * Initiates slider options\n   */\n  constructor() {\n    const COMMON_OPTIONS = {\n      floor: 0,\n      ceil: 100,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n\n    this.brightnessSliderOptions = { ...COMMON_OPTIONS, inputEventsInterval: 1000 };\n    this.transparencySliderOptions = { ...COMMON_OPTIONS, showSelectionBar: true };\n  }\n\n  /**\n   * Emits new brightness selection\n   */\n  brightnessChanged(): void {\n    this.layerChange.emit(this.layer);\n  }\n\n  /**\n   * Emits new transparency value\n   */\n  transparencyChanged(): void {\n    this.layerChange.emit(this.layer);\n  }\n\n  /**\n   * Takes in the selected color and scheme and adds them to the Layer\n   * before emitting the changed layer\n   */\n  colorChanged(color: string, scheme: ColorScheme): void {\n    this.updateLayer({\n      colorScheme: scheme,\n      color,\n      customizedColor: true\n    });\n  }\n\n  /**\n   * Updates layer with new layer settings\n   * @param updates Contains updated layer settings\n   */\n  private updateLayer(\n    updates: Partial[0]>\n  ): void {\n    const { layer: current, layerChange } = this;\n    const layer = new ImageViewerLayer({\n      ...current,\n      ...updates\n    });\n\n    this.layer = layer;\n    layerChange.emit(layer);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    Brightness\n    \n    \n\n    Transparency\n    \n     -->\n  \n\n\n    \n\n    \n                \n                    ./color-scheme-contents.component.scss\n                \n                .color-scheme-contents-container {\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 4px;\n  width: 10rem;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 1;\n  right: -1.125rem;\n  top: -1.125rem;\n\n  &.bottom {\n    top: auto;\n    bottom: 0rem;\n  }\n\n  .scheme-contents {\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .swatch {\n      display: flex;\n      width: 7rem;\n      height: 1rem;\n      margin-bottom: 0.5rem;\n\n      :hover {\n        cursor: pointer;\n      }\n    }\n\n    .brightness-slider-label {\n      margin-top: .5rem;\n    }\n  }\n\n  ::ng-deep .slider {\n    margin-top: 0.75rem;\n    margin-bottom: 1rem;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: 0.15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: -0.5rem;\n      border-width: 0.1rem;\n      border-style: solid;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Brightness            Transparency         -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSchemeContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorSchemeContentsModule.html":{"url":"modules/ColorSchemeContentsModule.html","title":"module - ColorSchemeContentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorSchemeContentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorSchemeContentsModule\n\n\n\ncluster_ColorSchemeContentsModule_declarations\n\n\n\ncluster_ColorSchemeContentsModule_imports\n\n\n\ncluster_ColorSchemeContentsModule_exports\n\n\n\n\nColorSchemeContentsComponent\n\nColorSchemeContentsComponent\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule -->\n\nColorSchemeContentsComponent->ColorSchemeContentsModule\n\n\n\n\n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent  -->\n\nColorSchemeContentsModule->ColorSchemeContentsComponent \n\n\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorSchemeContentsModule -->\n\nColorBarModule->ColorSchemeContentsModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nColorSchemeContentsModule -->\n\nDualSliderModule->ColorSchemeContentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorSchemeContentsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorBarModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorSchemeContentsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { ColorSchemeContentsComponent } from './color-scheme-contents.component';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { ColorBarModule } from '../color-bar/color-bar.module';\n\n\n@NgModule({\n  imports: [CommonModule, DualSliderModule, Ng5SliderModule, ColorBarModule],\n  declarations: [ColorSchemeContentsComponent],\n  exports: [ColorSchemeContentsComponent]\n})\n\nexport class ColorSchemeContentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSchemePopupComponent.html":{"url":"components/ColorSchemePopupComponent.html","title":"component - ColorSchemePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSchemePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the scheme selector popup\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-scheme-popup\n            \n\n            \n                styleUrls\n                ./color-scheme-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-scheme-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                contentElement\n                            \n                            \n                                    Private\n                                    Optional\n                                owner\n                            \n                            \n                                popupVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:25\n                            \n                        \n                \n                    \n                        The Layer which we use to pull the properties we need from\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:20\n                            \n                        \n                \n                    \n                        Schemes available to choose from\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:30\n                            \n                        \n                \n                    \n                        Output we use to emit any changes to the layer or its properties\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:53\n                \n            \n\n\n            \n                \n                    Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(event: MouseEvent, owner?: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:64\n                \n            \n\n\n            \n                \n                    Opens popup and calculates which direction the popup opens based on click position\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    owner\n                                    \n                                            Element\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:45\n                            \n                        \n\n                \n                    \n                        Controls direction the popup opens\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content', {static: true, read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:40\n                            \n                        \n\n                \n                    \n                        Owner button element which when clicked will not close on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:37\n                            \n                        \n\n                \n                    \n                        Controls visibility of the popup\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostListener, Input, Output, ViewChild, ElementRef } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../color-schemes';\n\n\n/**\n * Component for the scheme selector popup\n */\n@Component({\n  selector: 'ccf-color-scheme-popup',\n  templateUrl: './color-scheme-popup.component.html',\n  styleUrls: ['./color-scheme-popup.component.scss']\n})\nexport class ColorSchemePopupComponent {\n\n  /**\n   * Schemes available to choose from\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * The Layer which we use to pull the properties we need from\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Output we use to emit any changes to the layer or its properties\n   */\n  @Output() layerChange = new EventEmitter();\n\n  @ViewChild('content', { static: true, read: ElementRef }) contentElement: ElementRef;\n\n  /**\n   * Controls visibility of the popup\n   */\n  popupVisible = false;\n\n  /** Owner button element which when clicked will not close on. */\n  private owner?: Element;\n\n  /**\n   * Controls direction the popup opens\n   */\n  bottom = false;\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  close(target: HTMLElement): void {\n    const { popupVisible, contentElement: { nativeElement: content } = { nativeElement: undefined }, owner } = this;\n    if (!popupVisible || content?.contains(target) || owner?.contains(target)) {\n      return;\n    }\n    this.popupVisible = !popupVisible;\n  }\n\n  /**\n   * Opens popup and calculates which direction the popup opens based on click position\n   */\n  open(event: MouseEvent, owner?: Element): void {\n    const clickPos = event.pageY;\n    this.bottom = window.innerHeight - clickPos \n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./color-scheme-popup.component.scss\n                \n                .hidden {\n  display: none;\n}\n\n.show {\n  display: block;\n  position: absolute;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSchemePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorSchemePopupModule.html":{"url":"modules/ColorSchemePopupModule.html","title":"module - ColorSchemePopupModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorSchemePopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorSchemePopupModule\n\n\n\ncluster_ColorSchemePopupModule_declarations\n\n\n\ncluster_ColorSchemePopupModule_imports\n\n\n\ncluster_ColorSchemePopupModule_exports\n\n\n\n\nColorSchemePopupComponent\n\nColorSchemePopupComponent\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorSchemePopupModule -->\n\nColorSchemePopupComponent->ColorSchemePopupModule\n\n\n\n\n\nColorSchemePopupComponent \n\nColorSchemePopupComponent \n\nColorSchemePopupComponent  -->\n\nColorSchemePopupModule->ColorSchemePopupComponent \n\n\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemePopupModule -->\n\nColorSchemeContentsModule->ColorSchemePopupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorSchemePopupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorSchemeContentsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorSchemePopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ColorSchemePopupComponent } from './color-scheme-popup.component';\nimport { ColorSchemeContentsModule } from '../color-scheme-contents/color-scheme-contents.module';\n\n\n@NgModule({\n  imports: [CommonModule, ColorSchemeContentsModule],\n  declarations: [ColorSchemePopupComponent],\n  exports: [ColorSchemePopupComponent]\n})\n\nexport class ColorSchemePopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorSchemeSelection.html":{"url":"interfaces/ColorSchemeSelection.html","title":"interface - ColorSchemeSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorSchemeSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-schemes.ts\n        \n\n            \n                Description\n            \n            \n                Object containing scheme and color index info to be emitted when a change is made\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coloridx\n                                \n                                \n                                        scheme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coloridx\n                                    \n                                \n                                \n                                    \n                                        coloridx:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Index of the selected color in scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheme\n                                    \n                                \n                                \n                                    \n                                        scheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current scheme selected\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n\n  /**\n   * Whether the scheme is discrete or gradient\n   */\n  type: 'discrete' | 'gradient';\n\n  /**\n   * Name of scheme\n   */\n  name: string;\n\n  /**\n   * Colors used in the scheme\n   */\n  colors: string[];\n\n  /**\n   * Positions for mapping the data to colors\n   */\n  positions: number[];\n}\n\n/**\n * Default Qualitative Scheme1 (discrete)\n */\nexport const GREEENORANGE: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative1',\n  colors: ['#66BB6A', '#B39DDB', '#FFCC80', '#FFFF8D', '#1565C0', '#E91E63', '#E65100'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Qualitative Scheme2 (discrete)\n */\nexport const TEALGREEN: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative2',\n  colors: ['#80CBC4', '#FFFF8D', '#B39DDB', '#EF9A9A', '#64B5F6', '#FFB74D', '#AED581'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme1 (discrete)\n */\nexport const BLUERED: ColorScheme = {\n  type: 'discrete',\n  name: 'bluered',\n  colors: ['#2166AC', '#67A9CF', '#D1E5F0', '#F7F7F7', '#FDDBC7', '#EF8A62', '#B2182B'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme2 (discrete)\n */\nexport const GREENRED: ColorScheme = {\n  type: 'discrete',\n  name: 'greenred',\n  colors: ['#1A9850', '#91CF60', '#D9EF8B', '#FFFFBF', '#FEE08B', '#FC8D59', '#D73027'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme3 (discrete)\n */\nexport const PURPLEBROWN: ColorScheme = {\n  type: 'discrete',\n  name: 'purplebrown',\n  colors: ['#542788', '#998EC3', '#D8DAEB', '#F7F7F7', '#FEE0B6', '#F1A340', '#B35806'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme4 (discrete)\n */\nexport const REDTAN: ColorScheme = {\n  type: 'discrete',\n  name: 'redtan',\n  colors: ['#990000', '#D7301F', '#EF6548', '#FC8D59', '#FDBB84', '#FDD49E', '#FEF0D9'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme5 (discrete)\n */\nexport const PURPLELIGHTBLUE: ColorScheme = {\n  type: 'discrete',\n  name: 'purplelightblue',\n  colors: ['#6E016B', '#88419D', '#8C6BB1', '#8C96C6', '#9EBCDA', '#BFD3E6', '#EDF8FB'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme6 (gradient)\n */\nexport const VIRIDIS: ColorScheme = {\n  type: 'gradient',\n  name: 'viridis',\n  colors: ['#FFE31C', '#B5C740', '#6BAB65', '#21908A', '#2D6379', '#393768', '#450B57'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme7 (gradient)\n */\nexport const MAGMA: ColorScheme = {\n  type: 'gradient',\n  name: 'magma',\n  colors: ['#F8FC9D', '#E1B986', '#CA7670', '#B4335A', '#78223C', '#3D121F', '#020202'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme8 (gradient)\n */\nexport const PLASMA: ColorScheme = {\n  type: 'gradient',\n  name: 'plasma',\n  colors: ['#F2F424', '#E3B842', '#D47D60', '#C6427E', '#883381', '#4A2484', '#0C1687'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default scheme options\n */\nexport const DEFAULT_COLOR_SCHEMES = [\n  GREEENORANGE,\n  TEALGREEN,\n  BLUERED,\n  GREENRED,\n  PURPLEBROWN,\n  // REDTAN,\n  // PURPLELIGHTBLUE,\n  // VIRIDIS,\n  // MAGMA,\n  // PLASMA\n];\n\n/**\n * Object containing scheme and color index info to be emitted when a change is made\n */\nexport interface ColorSchemeSelection {\n\n  /**\n   * Current scheme selected\n   */\n  scheme: ColorScheme;\n\n  /**\n   * Index of the selected color in scheme\n   */\n  coloridx: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drawer/container/container.component.ts\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-container'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:37\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/container/container.component.ts:111\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/container/container.component.ts:79\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/container/container.component.ts:101\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateDrawers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/container/container.component.ts:120\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessageChannel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:58\n                            \n                        \n\n                \n                    \n                        The connected message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(ContentComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:45\n                            \n                        \n\n                \n                    \n                        Content component if provided already wrapped. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(ContentComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:48\n                            \n                        \n\n                \n                    \n                        Content component if provided without wrapping. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DrawerComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:41\n                            \n                        \n\n                \n                    \n                        Drawer components in this container. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                        All subscriptions managed by the container. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component. \n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped. \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean { return this.content1.length !== 0; }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) { throwDuplicateDrawersError('start'); }\n    if (endDrawers.length > 1) { throwDuplicateDrawersError('end'); }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drawer/content/content.component.ts\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @fadeInOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the content is invisible. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-content'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:28\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.cff-drawer-content-animations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:30\n                            \n                        \n\n                \n                    \n                        Whether animations are enabled. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-left.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:32\n                            \n                        \n\n                \n                    \n                        Left margin size. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-right.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:34\n                            \n                        \n\n                \n                    \n                        Right margin size. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/content/content.component.ts:68\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/content/content.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateFaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/content/content.component.ts:113\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateMargin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/content/content.component.ts:100\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DrawerComponent[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:39\n                            \n                        \n\n                \n                    \n                        References to the side drawers. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if(this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled':\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = startExpanded || endExpanded;\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 7rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: 1.5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when the content component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHeaderModule\n\nHeaderModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { HeaderModule } from './header/header.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [HttpClientModule, HeaderModule, StoreModule, ThemingModule],\n  exports: [HeaderModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Backend query interface. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAggregateResults\n                                \n                                \n                                    getImageViewerData\n                                \n                                \n                                    getListResults\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:92\n                \n            \n\n\n            \n                \n                    Query aggregate items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageViewerData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:94\n                \n            \n\n\n            \n                \n                    Query a specific image. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:90\n                \n            \n\n\n            \n                \n                    Query list items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource-1.html":{"url":"interfaces/DataSource-1.html","title":"interface - DataSource-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         ZarrInfo | OMEZarrInfo | TiffInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZarrInfo | OMEZarrInfo | TiffInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         LoaderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoaderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data-source/data-source.service.ts\n        \n\n            \n                Description\n            \n            \n                Backend data queries.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _afterConnected\n                            \n                            \n                                dataSource\n                            \n                            \n                                dbOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAggregateResults\n                            \n                            \n                                    Private\n                                    Async\n                                getDB\n                            \n                            \n                                getImageViewerData\n                            \n                            \n                                getListResults\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/data-source/data-source.service.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of data source service.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data-source/data-source.service.ts:77\n                \n            \n\n\n            \n                \n                    Queries for aggregate values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getDB\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDB()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data-source/data-source.service.ts:53\n                \n            \n\n\n            \n                \n                    Gets a reference to the database.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise that resolves to the database when ready.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageViewerData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data-source/data-source.service.ts:97\n                \n            \n\n\n            \n                \n                    Queries data for a specific image.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The image identifier ('\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the result.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data-source/data-source.service.ts:67\n                \n            \n\n\n            \n                \n                    Queries for list values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOntologyTermOccurences\n                        \n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data-source/data-source.service.ts:87\n                \n            \n\n\n            \n                \n                    Queries for ontology term counts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _afterConnected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/data-source/data-source.service.ts:21\n                            \n                        \n\n                \n                    \n                        Indicator of when the database is ready. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Remote | CCFDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/data-source/data-source.service.ts:17\n                            \n                        \n\n                \n                    \n                        The underlying database. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFDatabaseOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/data-source/data-source.service.ts:19\n                            \n                        \n\n                \n                    \n                        Database initialization options. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AggregateResult, CCFDatabase, CCFDatabaseOptions, Filter, ImageViewerData, ListResult } from 'ccf-database';\nimport { Remote, wrap } from 'comlink';\nimport { from, Observable } from 'rxjs';\n\nimport { environment } from './../../../../environments/environment';\n\n\n/**\n * Backend data queries.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceService {\n  /** The underlying database. */\n  dataSource: Remote | CCFDatabase;\n  /** Database initialization options. */\n  dbOptions: CCFDatabaseOptions;\n  /** Indicator of when the database is ready. */\n  private _afterConnected: Promise;\n\n  /**\n   * Creates an instance of data source service.\n   */\n  constructor() {\n    if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      const worker = new Worker('./data-source.worker', { type: 'module' });\n      this.dataSource = wrap(worker);\n    } else {\n      this.dataSource = new CCFDatabase();\n    }\n    this.dbOptions = environment.dbOptions as CCFDatabaseOptions;\n\n    if (typeof globalThis === 'object') {\n      // If a global dbOptions object is set, use this for connecting to the db\n      if (globalThis.dbOptions) {\n        this.dbOptions = { ...this.dbOptions, ...globalThis.dbOptions } as CCFDatabaseOptions;\n      }\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        ((globalThis as unknown) as { db: Remote | CCFDatabase }).db = this.dataSource;\n      }\n    }\n  }\n\n  /**\n   * Gets a reference to the database.\n   *\n   * @returns A promise that resolves to the database when ready.\n   */\n  private async getDB(): Promise | CCFDatabase> {\n    if (!this._afterConnected) {\n      this._afterConnected = this.dataSource.connect(this.dbOptions);\n    }\n    await this._afterConnected;\n    return this.dataSource;\n  }\n\n  /**\n   * Queries for list values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getListResults(filter?: Filter): Observable {\n    return from(this.getDB().then((db) => db.getListResults(filter)));\n  }\n\n  /**\n   * Queries for aggregate values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getAggregateResults(filter?: Filter): Observable {\n    return from(this.getDB().then((db) => db.getAggregateResults(filter)));\n  }\n\n  /**\n   * Queries for ontology term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return from(this.getDB().then((db) => db.getOntologyTermOccurences(filter)));\n  }\n\n  /**\n   * Queries data for a specific image.\n   *\n   * @param iri The image identifier ('@id').\n   * @returns An observable emitting the result.\n   */\n  getImageViewerData(iri: string): Observable {\n    return from(this.getDB().then((db) => db.getImageViewerData(iri)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataState.html":{"url":"injectables/DataState.html","title":"injectable - DataState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/data/data.state.ts\n        \n\n            \n                Description\n            \n            \n                Data state repository and service.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _aggregateDataQueryStatus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _listDataQueryStatus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _termOccurencesDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                aggregateData$\n                            \n                            \n                                    Readonly\n                                aggregateDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                filter$\n                            \n                            \n                                    Readonly\n                                listData$\n                            \n                            \n                                    Readonly\n                                listDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                ontologyTermsFullData$\n                            \n                            \n                                    Readonly\n                                queryStatus$\n                            \n                            \n                                    Readonly\n                                termOccurencesData$\n                            \n                            \n                                    Readonly\n                                termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aggregateData\n                            \n                            \n                                    Private\n                                listData\n                            \n                            \n                                    Private\n                                termOccurencesData\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/data/data.state.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of data state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data query service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            aggregateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregateData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/data/data.state.ts:181\n                \n            \n\n\n            \n                \n                    Queries for aggregate data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ObservableInput\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            listData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/data/data.state.ts:169\n                \n            \n\n\n            \n                \n                    Queries for list data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ObservableInput\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            termOccurencesData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    termOccurencesData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/data/data.state.ts:193\n                \n            \n\n\n            \n                \n                    Queries for term occurences data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObservableInput>\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilter(filter: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/data/data.state.ts:155\n                \n            \n\n\n            \n                \n                    Updates the current filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes to be made to the current filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _aggregateDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:94\n                            \n                        \n\n                \n                    \n                        Implementation subject for aggregateDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _listDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:92\n                            \n                        \n\n                \n                    \n                        Implementation subject for listDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:96\n                            \n                        \n\n                \n                    \n                        Implementation subject for termOccurencesDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            aggregateData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:107\n                            \n                        \n\n                \n                    \n                        Latest aggregate query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            aggregateDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._aggregateDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:118\n                            \n                        \n\n                \n                    \n                        Current status of queries in the aggregateData$ observable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('filter'))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:101\n                            \n                        \n\n                \n                    \n                        Current filter. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            listData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:103\n                            \n                        \n\n                \n                    \n                        Latest list query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            listDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._listDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:116\n                            \n                        \n\n                \n                    \n                        Current status of queries in the listData$ observable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ontologyTermsFullData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:98\n                            \n                        \n\n                \n                    \n                        Keeping track of all ontology terms there is data for. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            queryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:123\n                            \n                        \n\n                \n                    \n                        Current status of all queries. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            termOccurencesData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:111\n                            \n                        \n\n                \n                    \n                        Latest term occurences query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._termOccurencesDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:120\n                            \n                        \n\n                \n                    \n                        Current status of queries in the aggregateData$ observable. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, Filter, ListResult } from 'ccf-database';\nimport { combineLatest, Observable, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { distinct, map, pluck, publishReplay, refCount, switchMap, tap } from 'rxjs/operators';\n\nimport { DataSourceService } from '../../services/data-source/data-source.service';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702']\n};\n\n/** Current state of data queries. */\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n}\n\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository {\n  /** Implementation subject for listDataQueryStatus$. */\n  private readonly _listDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for termOccurencesDataQueryStatus$. */\n  private readonly _termOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$: Observable>;\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest list query data. */\n  readonly listData$ = this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest term occurences query data. */\n  readonly termOccurencesData$ = this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ));\n\n  /** Current status of queries in the listData$ observable. */\n  readonly listDataQueryStatus$ = this._listDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly termOccurencesDataQueryStatus$ = this._termOccurencesDataQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._listDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n\n    const ontologyTermsData = new ReplaySubject>(1);\n    source.getOntologyTermOccurences().subscribe(ontologyTermsData);\n    this.ontologyTermsFullData$ = ontologyTermsData;\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: Object.assign({}, this.getState().filter, filter)\n    });\n  }\n\n  /**\n   * Queries for list data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private listData(filter: Filter): ObservableInput {\n    this._listDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getListResults(filter);\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getAggregateResults(filter);\n  }\n\n  /**\n   * Queries for term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private termOccurencesData(filter: Filter): ObservableInput> {\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getOntologyTermOccurences(filter);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataStateModel.html":{"url":"interfaces/DataStateModel.html","title":"interface - DataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/data/data.state.ts\n        \n\n            \n                Description\n            \n            \n                Store data state. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         Filter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current filter. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, Filter, ListResult } from 'ccf-database';\nimport { combineLatest, Observable, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { distinct, map, pluck, publishReplay, refCount, switchMap, tap } from 'rxjs/operators';\n\nimport { DataSourceService } from '../../services/data-source/data-source.service';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702']\n};\n\n/** Current state of data queries. */\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n}\n\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository {\n  /** Implementation subject for listDataQueryStatus$. */\n  private readonly _listDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for termOccurencesDataQueryStatus$. */\n  private readonly _termOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$: Observable>;\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest list query data. */\n  readonly listData$ = this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest term occurences query data. */\n  readonly termOccurencesData$ = this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ));\n\n  /** Current status of queries in the listData$ observable. */\n  readonly listDataQueryStatus$ = this._listDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly termOccurencesDataQueryStatus$ = this._termOccurencesDataQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._listDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n\n    const ontologyTermsData = new ReplaySubject>(1);\n    source.getOntologyTermOccurences().subscribe(ontologyTermsData);\n    this.ontologyTermsFullData$ = ontologyTermsData;\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: Object.assign({}, this.getState().filter, filter)\n    });\n  }\n\n  /**\n   * Queries for list data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private listData(filter: Filter): ObservableInput {\n    this._listDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getListResults(filter);\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getAggregateResults(filter);\n  }\n\n  /**\n   * Queries for term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private termOccurencesData(filter: Filter): ObservableInput> {\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getOntologyTermOccurences(filter);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/icon-registry/default-icons.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  { name: 'logo', namespace: 'app', url: 'assets/icons/app/hubmap-logo.svg' },\n\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n\n  // Add default icons here!\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        drawers\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                    \n                                \n                                \n                                    \n                                        drawers:     [unknown, unknown]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [unknown, unknown]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expanded\n                                \n                                \n                                        margin\n                                \n                                \n                                        opened\n                                \n                                \n                                        type\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/dropdown/dropdown.component.ts\n\n\n    \n        Description\n    \n    \n        Component for a dropdown menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                optionsVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChanged\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:16\n                            \n                        \n                \n                    \n                        What the component is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:21\n                            \n                        \n                \n                    \n                        Choices displayed in the dropdown menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:26\n                            \n                        \n                \n                    \n                        Current option selected.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the new selected option when selection is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:49\n                \n            \n\n\n            \n                \n                    Updates the selected value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value that has been selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleOptions\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:41\n                \n            \n\n\n            \n                \n                    Controls fade-in effect after dropdown menu opens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'invisible'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:36\n                            \n                        \n\n                \n                    \n                        Determines if menu contents are visible (used for fade-in effect).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Component for a dropdown menu.\n */\n@Component({\n  selector: 'ccf-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent {\n\n  /**\n   * What the component is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * Choices displayed in the dropdown menu.\n   */\n  @Input() options: string[];\n\n  /**\n   * Current option selected.\n   */\n  @Input() selection: string;\n\n  /**\n   * Emits the new selected option when selection is changed.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines if menu contents are visible (used for fade-in effect).\n   */\n  optionsVisible = 'invisible';\n\n  /**\n   * Controls fade-in effect after dropdown menu opens\n   */\n  toggleOptions(): void {\n    this.optionsVisible = this.optionsVisible === 'visible' ? 'invisible' : 'visible';\n  }\n\n  /**\n   * Updates the selected value.\n   * @param value The value that has been selected\n   */\n  selectionChanged(value: string): void {\n    this.selection = value;\n    this.selectionChange.emit(value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n      \n        \n          \n            {{ option }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dropdown.component.scss\n                \n                @keyframes slideInHorizontalDropdown {\n  from {\n    width: 0;\n  }\n  to {\n    width: 9.85rem;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.dropdown-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        font-size: 14px;\n        border: none;\n\n        mat-select {\n          font-size: 16px;\n          font-weight: bold;\n        }\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      background-color: black;\n      transform: none;\n      height: 2px;\n    }\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .option-panel {\n  animation: slideInHorizontalDropdown .3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  position: absolute !important;\n  top: 1.55rem;\n  max-width: 152px;\n  border-radius: 0px;\n  border-width: 1px;\n  border-style: solid;\n\n\n  .mat-option {\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    padding-left: 1em;\n  }\n\n  :last-child {\n    border-bottom: none;\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0px !important;\n}\n\n.dropdown-form-field {\n  height: 3rem;\n  width: 100%;\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n  }\n}\n\n::ng-deep .ccf-dropdown {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-.5em);\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}                                    {{ option }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/dropdown/dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DropdownComponent } from './dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent]\n})\n\nexport class DropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualSliderComponent.html":{"url":"components/DualSliderComponent.html","title":"component - DualSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DualSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/dual-slider/dual-slider.component.ts\n\n\n    \n        Description\n    \n    \n        Component containing a button that when clicked will show a slider popover.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dual-slider\n            \n\n            \n                styleUrls\n                ./dual-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsVisible\n                            \n                            \n                                highValue\n                            \n                            \n                                    Private\n                                isSliderInitialized\n                            \n                            \n                                isSliderOpen\n                            \n                            \n                                lowValue\n                            \n                            \n                                options\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                popoverElement\n                            \n                            \n                                popoverPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeSliderPopover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onKeyHigh\n                            \n                            \n                                onKeyLow\n                            \n                            \n                                optionsChanged\n                            \n                            \n                                sliderValueChanged\n                            \n                            \n                                toggleSliderPopover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                selection\n                            \n                            \n                                valueRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rangeLabel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:102\n                            \n                        \n\n                \n                    \n                            Creates an instance of dual slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The overlay service used to create the slider popover.\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the component's element. Used during event handling.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:41\n                            \n                        \n                \n                    \n                        Which criteria the slider is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:51\n                            \n                        \n                \n                    \n                        The current range selected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueRange\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:46\n                            \n                        \n                \n                    \n                        The lower and upper range of the slider.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:56\n                            \n                        \n                \n                    \n                        Emits the new selection range when a change is made to it.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:168\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:214\n                \n            \n\n\n            \n                \n                    Creates and initializes the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:125\n                \n            \n\n\n            \n                \n                    Updates slider options (with optionsChanged) and selection when changes detected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes that have been made to the slider properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:155\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyHigh\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyHigh(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:243\n                \n            \n\n\n            \n                \n                    Updates the slider's high pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyLow\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyLow(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:227\n                \n            \n\n\n            \n                \n                    Updates the slider's low pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionsChanged\n                        \n                        \n                    \n                \n            \n            \n                \noptionsChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:139\n                \n            \n\n\n            \n                \n                    Updates the slider options, and the slider values if necessary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sliderValueChanged\n                        \n                        \n                    \n                \n            \n            \n                \nsliderValueChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:204\n                \n            \n\n\n            \n                \n                    Handler for updates to the slider values.\nEmits the updated selection value array.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:187\n                \n            \n\n\n            \n                \n                    Toggles the visibility of the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'invisible'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:81\n                            \n                        \n\n                \n                    \n                        Determines if slider contents are visible (used for fade-in effect).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:76\n                            \n                        \n\n                \n                    \n                        Value bound to the slider's high pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isSliderInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:102\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover has been created and initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSliderOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:61\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover is shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:71\n                            \n                        \n\n                \n                    \n                        Value bound to the slider's low pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:66\n                            \n                        \n\n                \n                    \n                        Slider options.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OverlayRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:97\n                            \n                        \n\n                \n                    \n                        Reference to the slider popover overlay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popover', {read: ElementRef, static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the popover element.\nThis is undefined until the slider popover is initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverPortal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CdkPortal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CdkPortal, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the template for the slider popover.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rangeLabel\n                    \n                \n\n                \n                    \n                        getrangeLabel()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:86\n                                \n                            \n                    \n                        \n                                Computes the current age range for display in the button.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { Options } from 'ng5-slider';\n\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-dual-slider',\n  templateUrl: './dual-slider.component.html',\n  styleUrls: ['./dual-slider.component.scss']\n})\nexport class DualSliderComponent implements OnDestroy, OnChanges {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement: ElementRef;\n\n  /**\n   * Which criteria the slider is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * The lower and upper range of the slider.\n   */\n  @Input() valueRange: number[];\n\n  /**\n   * The current range selected.\n   */\n  @Input() selection: number[];\n\n  /**\n   * Emits the new selection range when a change is made to it.\n   */\n  @Output() selectionChange = new EventEmitter();\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options: Options;\n\n  /**\n   * Value bound to the slider's low pointer value.\n   */\n  lowValue: number;\n\n  /**\n   * Value bound to the slider's high pointer value.\n   */\n  highValue: number;\n\n  /**\n   * Determines if slider contents are visible (used for fade-in effect).\n   */\n  contentsVisible = 'invisible';\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get rangeLabel(): string {\n    const { lowValue, highValue } = this;\n    if (lowValue === highValue) {\n      return `${lowValue}`;\n    }\n    return `${lowValue}-${highValue}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of dual slider component.\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   */\n  constructor(\n    overlay: Overlay,\n    private element: ElementRef,\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'slider-pane',\n      positionStrategy\n    });\n  }\n\n  /**\n   * Updates slider options (with optionsChanged) and selection when changes detected.\n   * @param changes Changes that have been made to the slider properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.valueRange) {\n      this.optionsChanged();\n    }\n    if (changes.selection) {\n      // Detect when selection is changed and update low/high value.\n      this.lowValue = Math.min(...this.selection);\n      this.highValue = Math.max(...this.selection);\n    }\n  }\n\n  /**\n   * Updates the slider options, and the slider values if necessary.\n   */\n  optionsChanged(): void {\n    this.options = {\n      floor: this.valueRange ? this.valueRange[0] : 0,\n      ceil: this.valueRange ? this.valueRange[1] : 0,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n    this.lowValue = this.options.floor ?? 0;\n    this.highValue = this.options.ceil ?? 0;\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy(): void {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click, mouse movement, and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  // @HostListener('document:mousemove', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  @HostListener('document:touchstart', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    if (!isSliderOpen) {\n      return;\n    } else if (element.nativeElement.contains(target)) {\n      return;\n    } else if (popoverElement && popoverElement.nativeElement.contains(target)) {\n      return;\n    }\n\n    this.overlayRef.detach();\n    this.isSliderInitialized = false;\n    this.isSliderOpen = false;\n    this.contentsVisible = 'invisible';\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (isSliderInitialized) {\n      this.overlayRef.detach();\n      this.isSliderInitialized = false;\n    } else if (!isSliderInitialized && !isSliderOpen) {\n      this.initializeSliderPopover();\n    }\n\n    this.contentsVisible = this.contentsVisible === 'visible' ? 'invisible' : 'visible';\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Emits the updated selection value array.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue } = this;\n\n    this.selection = [lowValue, highValue];\n    this.selectionChange.emit(this.selection);\n  }\n\n  /**\n   * Creates and initializes the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n\n  /**\n   * Updates the slider's low pointer value when Enter key is pressed.\n   * @param event Event passed into the component\n   */\n  onKeyLow(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue = Number(this.options.floor) && newValue \n    \n\n    \n        \n  \n    \n      \n         {{ options.floor }}> \n        \n      \n\n      \n      \n\n      \n         {{ options.ceil }} \n        \n      \n    \n\n    \n      \n        {{ label }}\n        {{ rangeLabel }}\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual-slider.component.scss\n                \n                .slider-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        border: none;\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      background-color: black;\n      transform: none;\n      height: 2px;\n    }\n  }\n}\n\n\n.slider-labels {\n  display: flex;\n  flex-direction: column;\n  .name-label {\n    font-size: 14px;\n  }\n\n  .range-label {\n    font-weight: bold;\n  }\n}\n\n::ng-deep .ccf-slider.wrapper {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-1.5em);\n  }\n}\n\n// Styles for the popover slider\n// NOTE: This must NOT be nested inside the wrapper/container!\n\n@keyframes slideInHorizontalSlider {\n  from {\n    width: 0;\n  }\n  to {\n    width: 20em;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .slider-pane {\n  border-width: 1px;\n  border-style: solid;\n  position: absolute !important;\n  top: -1px;\n}\n\n.ccf-slider.detached {\n  animation: slideInHorizontalSlider 0.3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 0rem;\n  height: 70px;\n  padding: .75rem; // NOTE: Use padding instead of margin!\n\n  .slider ::ng-deep {\n    visibility: hidden;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: .15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: 0.095rem - ($pointer-size / 2);\n      border-width: .1rem;\n      border-style: solid;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    width: 32px;\n    \n    &.min {\n      margin-right: 1rem;\n    }\n    \n    &.max {\n      margin-left: 1rem;\n      align-items: flex-end;\n\n      .ceil, input {\n        text-align: right;\n      }\n    }\n\n    .floor, .ceil {\n      font-size: 14px;\n    }\n\n    input {\n      border: none;\n      width: 28px;\n      font-size: 16px;\n      font-weight: bold;\n      padding: 0;\n    }\n\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{ options.floor }}>                                          {{ options.ceil }}                                     {{ label }}        {{ rangeLabel }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualSliderModule.html":{"url":"modules/DualSliderModule.html","title":"module - DualSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    DualSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/dual-slider/dual-slider.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { DualSliderComponent } from './dual-slider.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    Ng5SliderModule\n  ],\n  declarations: [DualSliderComponent],\n  exports: [DualSliderComponent]\n})\nexport class DualSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtDeckProps.html":{"url":"interfaces/ExtDeckProps.html","title":"interface - ExtDeckProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtDeckProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DeckProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canvas\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Options applied during queries. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ageRange\n                                \n                                \n                                        bmiRange\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        hasSpatialEntity\n                                \n                                \n                                            Optional\n                                        highlightedEntities\n                                \n                                \n                                        ontologyTerms\n                                \n                                \n                                        sex\n                                \n                                \n                                        technologies\n                                \n                                \n                                        tmc\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                    \n                                \n                                \n                                    \n                                        ageRange:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Age range. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                    \n                                \n                                \n                                    \n                                        bmiRange:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    BMI range. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Include optional debugging information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSpatialEntity\n                                    \n                                \n                                \n                                    \n                                        hasSpatialEntity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether it has a spatial entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedEntities\n                                    \n                                \n                                \n                                    \n                                        highlightedEntities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Entities to be highlighted \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ontology terms. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:     \"Both\" | \"Male\" | \"Female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Both\" | \"Male\" | \"Female\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gender. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technologies. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tmc\n                                    \n                                \n                                \n                                    \n                                        tmc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TMC. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersContentComponent.html":{"url":"components/FiltersContentComponent.html","title":"component - FiltersContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/filters/filters-content/filters-content.component.ts\n\n\n    \n        Description\n    \n    \n        Contains components of the filters popup and handles changes in filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-content\n            \n\n            \n                styleUrls\n                ./filters-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyButtonClick\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:21\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:16\n                            \n                        \n                \n                    \n                        Determines if the filters are visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        applyFilters\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the filters to be applied\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the filter change when they happen\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \napplyButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:46\n                \n            \n\n\n            \n                \n                    Emits the current filters when the apply button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilter(value: unknown, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:38\n                \n            \n\n\n            \n                \n                    Updates the filter object with a new key/value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be saved for the filter\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the filter to be saved at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Contains components of the filters popup and handles changes in filter settings\n */\n@Component({\n  selector: 'ccf-filters-content',\n  templateUrl: './filters-content.component.html',\n  styleUrls: ['./filters-content.component.scss']\n})\nexport class FiltersContentComponent {\n\n  /**\n   * Determines if the filters are visible\n   */\n  @Input() hidden: boolean;\n\n  /**\n   * Allows the filters to be set from outside the component\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emits the filter change when they happen\n   */\n  @Output() filtersChange = new EventEmitter>();\n\n  /**\n   * Emits the filters to be applied\n   */\n  @Output() applyFilters = new EventEmitter>();\n\n  /**\n   * Updates the filter object with a new key/value\n   * @param value The value to be saved for the filter\n   * @param key The key for the filter to be saved at\n   */\n  updateFilter(value: unknown, key: string): void {\n    this.filters = { ...this.filters, [key]: value };\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits the current filters when the apply button is clicked\n   */\n  applyButtonClick(): void {\n    this.applyFilters.emit(this.filters);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n  \n\n\n\n  \n\n\n\n  APPLY FILTERS\n\n\n    \n\n    \n                \n                    ./filters-content.component.scss\n                \n                .filter {\n  &.hidden {\n    display: none !important;\n  }\n\n  margin-top: 2em;\n}\n\n.button-container {\n  &.hidden {\n    display: none !important;\n  }\n  \n  margin-top: 2em;\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.outline-button {\n  box-shadow: 0.1rem 0.1rem 0.2rem 0rem #000000;\n  border-radius: 4px;\n  background: none;\n  border-width: 1px;\n  border-style: solid;\n  padding: 0.4em;\n  cursor: pointer;\n}\n\n.outline-button:active {\n  background: #69f0ae;\n  color: black;\n}\n\n.patient-filters {\n  display: flex;\n  width: 90%;\n\n  &.hidden {\n    display: none !important;\n  }\n\n  ccf-dual-slider {\n    margin-left: .5em;\n    width: 33%;\n  }\n\n  ccf-dropdown {\n    width: 33%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            APPLY FILTERS'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersContentModule.html":{"url":"modules/FiltersContentModule.html","title":"module - FiltersContentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/filters/filters-content/filters-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CheckboxModule\n                        \n                        \n                            DropdownModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CheckboxModule } from '../../../shared/components/checkbox/checkbox.module';\nimport { DropdownModule } from '../../../shared/components/dropdown/dropdown.module';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { FiltersContentComponent } from './filters-content.component';\n\n\n@NgModule({\n  imports: [CommonModule, CheckboxModule, DropdownModule, DualSliderModule],\n  declarations: [FiltersContentComponent],\n  exports: [FiltersContentComponent]\n})\nexport class FiltersContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersPopoverComponent.html":{"url":"components/FiltersPopoverComponent.html","title":"component - FiltersPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/filters/filters-popover/filters-popover.component.ts\n\n\n    \n        Description\n    \n    \n        Popover box for filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-popover\n            \n\n            \n                styleUrls\n                ./filters-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                removeBox\n                            \n                            \n                                toggleFilterVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawerExpanded\n                            \n                            \n                                filters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawerExpanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:21\n                            \n                        \n                \n                    \n                        Keeps track of whether or not the containing drawer is expanded\nBecause the styles need to change accordingly\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:15\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilters(filters: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:51\n                \n            \n\n\n            \n                \n                    Emits the current filters, and hides the popover box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object containing all the currently set filters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBox\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:43\n                \n            \n\n\n            \n                \n                    Hides the filters popover box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFilterVisible\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFilterVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:36\n                \n            \n\n\n            \n                \n                    Toggles filter visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:31\n                            \n                        \n\n                \n                    \n                        Keeps track of whether or not the filters popover box is visible or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Popover box for filter settings\n */\n@Component({\n  selector: 'ccf-filters-popover',\n  templateUrl: './filters-popover.component.html',\n  styleUrls: ['./filters-popover.component.scss']\n})\nexport class FiltersPopoverComponent {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filters: Record;\n\n  /**\n   * Keeps track of whether or not the containing drawer is expanded\n   * Because the styles need to change accordingly\n   */\n  @Input() drawerExpanded: boolean;\n\n  /**\n   * Emits the current filters\n   */\n  @Output() filtersChange = new EventEmitter>();\n\n  /**\n   * Keeps track of whether or not the filters popover box is visible or not\n   */\n  filtersVisible = false;\n\n  /**\n   * Toggles filter visible\n   */\n  toggleFilterVisible(): void {\n    this.filtersVisible = !this.filtersVisible;\n  }\n\n  /**\n   * Hides the filters popover box\n   */\n  removeBox(): void {\n    this.filtersVisible = false;\n  }\n\n  /**\n   * Emits the current filters, and hides the popover box\n   * @param filters The object containing all the currently set filters\n   */\n  applyFilters(filters: Record): void {\n    this.filters = filters;\n    this.filtersChange.emit(filters);\n    this.removeBox();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./filters-popover.component.scss\n                \n                .filters-popover {\n  position: inherit;\n\n  &.expanded {\n    position: relative;\n\n    .popup-container {\n      right: inherit;\n    }\n\n    .popup-body {\n      padding-left: 4em !important;\n    }\n  }\n}\n\n.popup-container {\n  position: absolute;\n  border-width: 0px;\n  border-style: solid;\n  width: 0em;\n  height: 16.5rem; // 22.5rem\n  z-index: 5;\n  top: 0;\n  right: 24rem;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  transition-property: width;\n  transition-duration: 0.3s;\n\n  .popup-body {\n    position: relative;\n    opacity: 0;\n    transition-property: opacity;\n    transition-duration: 0s;\n    transition-delay: 0s;\n  }\n\n  &.visible {\n    width: 35rem;\n    border-width: 1px;\n\n    .popup-body {\n      padding: 1.5rem;\n      opacity: 1;\n      transition-delay: 0.3s;\n      transition-duration: 0.3s;\n    }\n  }\n}\n\n.show-hide {\n  width: 3rem;\n  height: 3rem;\n  background: none;\n  border: none;\n  z-index: 10;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersPopoverModule.html":{"url":"modules/FiltersPopoverModule.html","title":"module - FiltersPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_imports\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/filters/filters-popover/filters-popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FiltersContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FiltersContentModule } from '../filters-content/filters-content.module';\nimport { FiltersPopoverComponent } from './filters-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FiltersContentModule],\n  declarations: [FiltersPopoverComponent],\n  exports: [FiltersPopoverComponent]\n})\nexport class FiltersPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlatNode.html":{"url":"classes/FlatNode.html","title":"class - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/flat-node.ts\n        \n\n            \n                Description\n            \n            \n                Node type used by ontology tree component.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    expandable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(original: OntologyNode, level: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/flat-node.ts:29\n                            \n                        \n\n                \n                    \n                            Creates an instance of flat node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        original\n                                                  \n                                                        \n                                                                        OntologyNode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The original ontology node object.\n\n                                                        \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The level of the new flat node in the tree.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(original: OntologyNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/flat-node.ts:27\n                \n            \n\n\n            \n                \n                    Creates a flat node from a ontology node object and a level in the tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original ontology node object.\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The level of the new flat node in the tree.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlatNode\n\n                    \n                    \n                        The newly created flat node.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/models/flat-node.ts:11\n                                \n                            \n                    \n                        \n                                Gets this node's label.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expandable\n                    \n                \n\n                \n                    \n                        getexpandable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/models/flat-node.ts:16\n                                \n                            \n                    \n                        \n                                Indicates whether this node has children.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { OntologyNode } from './ontology-node';\n\n\n/**\n * Node type used by ontology tree component.\n */\nexport class FlatNode {\n  /**\n   * Gets this node's label.\n   */\n  get label(): string { return this.original.label; }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean {\n    return this.original.children.length > 0;\n  }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(readonly original: OntologyNode, readonly level: number) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header which is always displayed on the site; contains current filter info,\na link to download data, and a logo which resets the page when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hubmapPortalUrl\n                            \n                            \n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                downloadClicked\n                            \n                            \n                                refreshClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/header/header.component.ts:28\n                            \n                        \n                \n                    \n                        Current filter settings\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapPortalUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/header/header.component.ts:18\n                            \n                        \n                \n                    \n                        URL to Hubmap Portal site\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedIn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/header/header.component.ts:23\n                            \n                        \n                \n                    \n                        Is the user logged in?\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        downloadClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/header/header.component.ts:38\n                            \n                        \n                \n                    \n                        Emitted when download button is clicked\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/header/header.component.ts:33\n                            \n                        \n                \n                    \n                        Emitted when refresh button is clicked\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Header which is always displayed on the site; contains current filter info,\n * a link to download data, and a logo which resets the page when clicked.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n\n  /**\n   * URL to Hubmap Portal site\n   */\n  @Input() hubmapPortalUrl: string;\n\n  /**\n   * Is the user logged in?\n   */\n  @Input() loggedIn: boolean;\n\n  /**\n   * Current filter settings\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emitted when refresh button is clicked\n   */\n  @Output() refreshClicked = new EventEmitter();\n\n  /**\n   * Emitted when download button is clicked\n   */\n  @Output() downloadClicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n  \n    Sex: {{filters?.sex}}\n    Age: {{filters?.ageRange[0]}}-{{filters?.ageRange[1]}}\n    BMI: {{filters?.bmiRange[0]}}-{{filters?.bmiRange[1]}}\n  \n\n  refresh\n\n  \n    \n      cloud_download\n    \n  \n  \n\n  Login\n  Logout\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .ccf-header {\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  display: flex;\n\n  .logo {\n    width: 6rem;\n  }\n\n  .download {\n    height: 1.5rem;\n  }\n\n  // Styled to match the HuBMAP Portal\n  .authentication {\n    width: 8.25rem;\n    border-radius: 2px;\n  }\n\n  .logo, .download, .refresh {\n    display: flex;\n    align-items: center;\n    transition: color 1s;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  :not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n\n  .filter-labels {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    font: 400 16px/20px Inter, sans-serif;\n  }\n\n  ::ng-deep ccf-info-button {\n    height: 2rem;\n    width: 2rem;\n    display: flex;\n    justify-content: center;\n    .mat-icon {\n      height: 2rem;\n      width: 2rem;\n      font-size: 2rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Sex: {{filters?.sex}}    Age: {{filters?.ageRange[0]}}-{{filters?.ageRange[1]}}    BMI: {{filters?.bmiRange[0]}}-{{filters?.bmiRange[1]}}    refresh            cloud_download          Login  Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoButtonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { InfoButtonModule } from '../../modules/info/info-button/info-button.module';\nimport { HeaderComponent } from './header.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule, MatTooltipModule, InfoButtonModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HuBMAPEntity.html":{"url":"classes/HuBMAPEntity.html","title":"class - HuBMAPEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HuBMAPEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/hubmap/hubmap-data.ts\n        \n\n            \n                Description\n            \n            \n                A HuBMAP Entity derived from raw data coming from the search-api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                age\n                            \n                            \n                                ancestors\n                            \n                            \n                                assayTypes\n                            \n                            \n                                    Public\n                                assetsApi\n                            \n                            \n                                    Optional\n                                bmi\n                            \n                            \n                                containsHumanGeneticSequences\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                dataTypes\n                            \n                            \n                                descendants\n                            \n                            \n                                description\n                            \n                            \n                                doi\n                            \n                            \n                                donor\n                            \n                            \n                                entityType\n                            \n                            \n                                    Optional\n                                ethnicity\n                            \n                            \n                                groupName\n                            \n                            \n                                groupUUID\n                            \n                            \n                                id\n                            \n                            \n                                imageProviders\n                            \n                            \n                                images\n                            \n                            \n                                label\n                            \n                            \n                                ontologyTerms\n                            \n                            \n                                organ\n                            \n                            \n                                organName\n                            \n                            \n                                organSample\n                            \n                            \n                                portalUrl\n                            \n                            \n                                protocolUrl\n                            \n                            \n                                resultType\n                            \n                            \n                                resultUrl\n                            \n                            \n                                    Optional\n                                sex\n                            \n                            \n                                    Optional\n                                spatialEntity\n                            \n                            \n                                spatialOrBulk\n                            \n                            \n                                thumbnailUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJsonLd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: JsonDict, assetsApi: string, portalUrl: string, serviceToken?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:133\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        JsonDict\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetsApi\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        portalUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ancestors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JsonDict[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            assayTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assetsApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bmi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            containsHumanGeneticSequences\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JsonDict\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descendants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JsonDict[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            donor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JsonDict\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"Donor\" | \"Sample\" | \"Dataset\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ethnicity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupUUID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Iri[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            images\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Url[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ontologyTerms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Iri[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organ\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Iri\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organSample\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JsonDict\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            portalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Url\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            protocolUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Url\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resultType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resultUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"Male\" | \"Female\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            spatialEntity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JsonLd\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:126\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spatialOrBulk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"Spatial\" | \"Bulk\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:130\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnailUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:131\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonLd\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonLd()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     JsonLd\n\n                    \n                    \n                        the hubmap data in JSON-LD format\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri, JsonLd, Url } from 'jsonld/jsonld-spec';\nimport { get, omit, toNumber } from 'lodash';\nimport { addJsonLdToStore, N3Store } from 'triple-store-utils';\n\nimport { ccf, rui } from '../util/prefixes';\nimport { fixUflRuiLocation } from './hubmap-ufl-patch';\nimport { convertOldRuiToJsonLd, OldRuiData } from './old-rui-utils';\n\n\ntype JsonDict = { [key: string]: unknown };\nconst HBM_PREFIX = 'https://entity-api.hubmapconsortium.org/entities/';\n\nconst DR1_VU_THUMBS = new Set(['VAN0003-LK-32-21-AF_preIMS_registered_thumbnail.png', 'VAN0003-LK-32-21-IMS_NegMode_multilayer_thumbnail.png', 'VAN0003-LK-32-21-IMS_PosMode_multilayer_thumbnail.png', 'VAN0003-LK-32-21-PAS_registered_thumbnail.png', 'VAN0003-LK-32-22-AF_preMxIF_registered_thumbnail.png', 'VAN0003-LK-32-22-MxIF_cyc1_registered_thumbnail.png', 'VAN0003-LK-32-22-MxIF_cyc2_registered_thumbnail.png', 'VAN0003-LK-32-22-MxIF_cyc3_registered_thumbnail.png', 'VAN0005-RK-1-1-AF_preIMS_registered_thumbnail.png', 'VAN0005-RK-1-1-IMS_NegMode_multilayer_thumbnail.png', 'VAN0005-RK-1-1-IMS_PosMode_multilayer_thumbnail.png', 'VAN0005-RK-1-1-PAS_registered_thumbnail.png', 'VAN0005-RK-4-172-AF_preIMS_registered_thumbnail.png', 'VAN0005-RK-4-172-IMS_NegMode_multilayer_thumbnail.png', 'VAN0005-RK-4-172-IMS_PosMode_multilayer_thumbnail.png', 'VAN0005-RK-4-172-PAS_registered_thumbnail.png', 'VAN0006-LK-2-85-AF_preIMS_registered_thumbnail.png', 'VAN0006-LK-2-85-IMS_NegMode_multilayer_thumbnail.png', 'VAN0006-LK-2-85-IMS_PosMode_multilayer_thumbnail.png', 'VAN0006-LK-2-85-PAS_registered_thumbnail.png', 'VAN0006-LK-2-86-AF_preMxIF_registered_thumbnail.png', 'VAN0006-LK-2-86-MxIF_cyc1_registered_thumbnail.png', 'VAN0006-LK-2-86-MxIF_cyc2_registered_thumbnail.png', 'VAN0006-LK-2-86-MxIF_cyc3_registered_thumbnail.png', 'VAN0007-LK-203-103-AF_preIMS_registered_thumbnail.png', 'VAN0007-LK-203-103-IMS_NegMode_multilayer_thumbnail.png', 'VAN0007-LK-203-103-IMS_PosMode_multilayer_thumbnail.png', 'VAN0007-LK-203-103-PAS_registered_thumbnail.png', 'VAN0008-RK-403-100-AF_preIMS_registered_thumbnail.png', 'VAN0008-RK-403-100-IMS_NegMode_multilayer_thumbnail.png', 'VAN0008-RK-403-100-IMS_PosMode_multilayer_thumbnail.png', 'VAN0008-RK-403-100-PAS_registered_thumbnail.png', 'VAN0008-RK-403-101-AF_preMxIF_registered_thumbnail.png', 'VAN0008-RK-403-101-MxIF_cyc1_registered_thumbnail.png', 'VAN0008-RK-403-101-MxIF_cyc2_registered_thumbnail.png', 'VAN0008-RK-403-101-MxIF_cyc3_registered_thumbnail.png', 'VAN0011-RK-3-10-AF_preIMS_registered_thumbnail.png', 'VAN0011-RK-3-10-IMS_NegMode_multilayer_thumbnail.png', 'VAN0011-RK-3-10-IMS_PosMode_multilayer_thumbnail.png', 'VAN0011-RK-3-10-PAS_registered_thumbnail.png', 'VAN0011-RK-3-11-AF_preMxIF_registered_thumbnail.png', 'VAN0011-RK-3-11-MxIF_cyc1_registered_thumbnail.png', 'VAN0011-RK-3-11-MxIF_cyc2_registered_thumbnail.png', 'VAN0011-RK-3-11-MxIF_cyc3_registered_thumbnail.png', 'VAN0012-RK-103-75-AF_preIMS_registered_thumbnail.png', 'VAN0012-RK-103-75-IMS_NegMode_multilayer_thumbnail.png', 'VAN0012-RK-103-75-IMS_PosMode_multilayer_thumbnail.png', 'VAN0012-RK-103-75-PAS_registered_thumbnail.png', 'VAN0012-RK-103-76-AF_preMxIF_registered_thumbnail.png', 'VAN0012-RK-103-76-MxIF_cyc1_registered_thumbnail.png', 'VAN0012-RK-103-76-MxIF_cyc2_registered_thumbnail.png', 'VAN0012-RK-103-76-MxIF_cyc3_registered_thumbnail.png']);\n\n/** UUID to TMC mapping. */\nconst GROUP_UUID_MAPPING: { [uuid: string]: string } = {\n  '03b3d854-ed44-11e8-8bce-0e368f3075e8': 'TMC-UCSD',\n  '07a29e4c-ed43-11e8-b56a-0e8017bdda58': 'TMC-Florida',\n  '308f5ffc-ed43-11e8-b56a-0e8017bdda58': 'TMC-CalTech',\n  '5bd084c8-edc2-11e8-802f-0e368f3075e8': 'HBM-TestingGroup',\n  '73bb26e4-ed43-11e8-8f19-0a7c1eab007a': 'TMC-Vanderbilt',\n  'def5fd76-ed43-11e8-b56a-0e8017bdda58': 'TMC-Stanford'\n};\n\nfunction createRuiOrganLookup(): { [organName: string]: string } {\n  const lookup: { [organName: string]: string } = {};\n  Object.entries(rui).forEach(([k, v]) => lookup[k] = v.id);\n  return lookup;\n}\n\n/** RUI organ name to entity identifier. */\nconst RUI_ORGANS: { [organName: string]: string } = createRuiOrganLookup();\n\n// Taken from: https://github.com/hubmapconsortium/commons/blob/master/hubmap_commons/hubmap_const.py#L101\n/** HBM organ names to set of RUI organs. */\nconst HBM_ORGANS: { [organName: string]: string[] } = {\n  BL: [RUI_ORGANS.body, RUI_ORGANS.bladder],\n  RK: [RUI_ORGANS.body, RUI_ORGANS.kidney, RUI_ORGANS.right_kidney],\n  LK: [RUI_ORGANS.body, RUI_ORGANS.kidney, RUI_ORGANS.left_kidney],\n  HT: [RUI_ORGANS.body, RUI_ORGANS.heart],\n  LI: [RUI_ORGANS.body, RUI_ORGANS.colon], // large_intestine\n  SI: [RUI_ORGANS.body, RUI_ORGANS.small_instestine],\n  LL: [RUI_ORGANS.body, RUI_ORGANS.lung, RUI_ORGANS.left_lung],\n  RL: [RUI_ORGANS.body, RUI_ORGANS.lung, RUI_ORGANS.right_lung],\n  LY: [RUI_ORGANS.body, RUI_ORGANS.lymph_node],\n  SP: [RUI_ORGANS.body, RUI_ORGANS.spleen],\n  TH: [RUI_ORGANS.body, RUI_ORGANS.thymus],\n  UR: [RUI_ORGANS.body, RUI_ORGANS.ureter],\n  LV: [RUI_ORGANS.body, RUI_ORGANS.liver],\n  OT: [RUI_ORGANS.body], // other_organ\n};\n\n/** HBM organ names to display name. */\nconst HBM_ORGAN_LABELS: { [organName: string]: string } = {\n  BL: 'Bladder',\n  RK: 'Right Kidney',\n  LK: 'Left Kidney',\n  HT: 'Heart',\n  LI: 'Large Intestine',\n  SI: 'Small Intestine',\n  LL: 'Left Lung',\n  RL: 'Right Lung',\n  LY: 'Lymph Node',\n  SP: 'Spleen',\n  TH: 'Thymus',\n  UR: 'Ureter',\n  LV: 'Liver',\n  OT: 'Other Organ',\n};\n\n/**\n * Converts a hubmap response object into JsonLd.\n *\n * @param data The hubmap data.\n * @returns The converted data.\n */\nexport function hubmapResponseAsJsonLd(data: object, assetsApi = '', portalUrl = '', serviceToken?: string): JsonLd {\n  const entries = (get(data, 'hits.hits', []) as JsonDict[])\n    .map(e => get(e, '_source', {}) as { [key: string]: unknown });\n\n  return {\n    '@context': {\n      '@vocab': 'http://purl.org/ccf/latest/ccf-entity.owl#',\n      ontologyTerms: { '@type': '@id' },\n      ancestors: { '@type': '@id' },\n      descendants: { '@type': '@id' },\n      organ: { '@type': '@id' },\n      images: { '@id': 'hasImage', '@type': '@id' },\n      imageProviders: { '@id': 'hasImageProvider', '@type': '@id'}\n    },\n    '@graph': entries.map(e => new HuBMAPEntity(e, assetsApi, portalUrl, serviceToken).toJsonLd())\n  };\n}\n\n/**\n * A HuBMAP Entity derived from raw data coming from the search-api.\n */\nexport class HuBMAPEntity {\n  donor: JsonDict;\n  organSample: JsonDict;\n  ancestors: JsonDict[];\n  descendants: JsonDict[];\n\n  id: string;\n  entityType: 'Donor' | 'Sample' | 'Dataset';\n\n  sex?: 'Male' | 'Female';\n  age?: number;\n  bmi?: number;\n  ethnicity?: string;\n  label: string;\n  description: string;\n  doi: string;\n\n  groupUUID: string;\n  groupName: string;\n  protocolUrl: Url;\n  portalUrl: Url;\n\n  images: Url[];\n  imageProviders: Iri[];\n\n  ontologyTerms: Iri[];\n  organ: Iri;\n  organName: string;\n  spatialEntity?: JsonLd;\n  dataTypes: string[];\n  assayTypes: string[];\n  containsHumanGeneticSequences: boolean;\n  spatialOrBulk: 'Spatial' | 'Bulk';\n  thumbnailUrl: string;\n  resultUrl: string;\n  resultType: string;\n\n  constructor(public data: JsonDict, public assetsApi = '', portalUrl = '', serviceToken?: string) {\n    this.id = this.data.uuid as string;\n    this.entityType = this.data.entity_type as 'Donor' | 'Sample' | 'Dataset';\n\n    this.ancestors = (this.data.ancestors || []) as JsonDict[];\n    this.descendants = (this.data.descendants || []) as JsonDict[];\n\n    if (this.entityType === 'Donor') {\n      this.donor = data;\n    } else {\n      this.donor = this.ancestors.find(e => e.entity_type === 'Donor') as JsonDict;\n    }\n    if (this.entityType === 'Sample' && data.specimen_type === 'organ') {\n      this.organSample = data;\n    } else {\n      this.organSample = this.ancestors.find(e => e.entity_type === 'Sample' && e.specimen_type === 'organ') as JsonDict;\n    }\n\n    const donorDescription = (this.donor.description as string || '').toLowerCase();\n    let sex: 'Male' | 'Female' | undefined;\n    if (donorDescription.includes('female')) {\n      sex = 'Female';\n    } else if (donorDescription.includes('male')) {\n      sex = 'Male';\n    }\n    const ageMatch = donorDescription.match(/age\\ ([0-9]+)/);\n    let age: number | undefined;\n    if (ageMatch) {\n      age = toNumber(ageMatch[1]);\n    }\n    let bmi: number | undefined;\n    let ethnicity: string | undefined;\n    for (const md of get(this.donor, 'metadata.organ_donor_data', []) as JsonDict[]) {\n      if (md.preferred_term === 'Feminine gender' || md.preferred_term === 'Female') {\n        sex = 'Female';\n      } else if (md.preferred_term === 'Masculine gender' || md.preferred_term === 'Male') {\n        sex = 'Male';\n      } else if (md.preferred_term === 'Current chronological age' || md.preferred_term === 'Age') {\n        age = toNumber(md.data_value);\n      } else if (md.preferred_term === 'Body mass index') {\n        bmi = toNumber(md.data_value);\n      } else if (md.grouping_concept_preferred_term === 'Racial group' || md.grouping_concept_preferred_term === 'Race') {\n        ethnicity = md.preferred_term as string;\n      }\n    }\n    let label = '';\n    if (sex && age) {\n      label += `${sex}, Age ${age}`;\n      if (bmi) {\n        label += `, BMI ${bmi.toFixed(1)}`;\n      }\n    }\n\n    this.age = age;\n    this.sex = sex;\n    this.bmi = bmi;\n    this.ethnicity = ethnicity;\n    this.label = label;\n\n    this.doi = data.display_doi as string;\n    this.description = data.description as string;\n\n    const groupUUID = this.groupUUID = (data.group_uuid || this.donor.group_uuid) as string;\n    this.groupName = (GROUP_UUID_MAPPING[groupUUID] || data.group_name || this.donor.group_name) as string;\n    this.organName = [ data, ...this.ancestors, ...this.descendants ]\n      .map((d) => d.organ as string)\n      .find((organ) => !!organ) as string;\n    this.ontologyTerms = HBM_ORGANS[this.organName] || [RUI_ORGANS.body];\n    this.organ = this.ontologyTerms[this.ontologyTerms.length - 1];\n    this.protocolUrl = this.donor.protocol_url as string;\n\n    let ruiLocation = (data.rui_location || this.ancestors[0].rui_location) as OldRuiData;\n    if (ruiLocation) {\n      // RUI Location may come in as an unparsed string\n      if (typeof ruiLocation === 'string') {\n        ruiLocation = JSON.parse(ruiLocation as string) as OldRuiData;\n      }\n      if (groupUUID === '07a29e4c-ed43-11e8-b56a-0e8017bdda58') { // UFL\n        ruiLocation = fixUflRuiLocation(ruiLocation, data);\n      }\n      let refOrganId: string | undefined;\n      if (this.organ === RUI_ORGANS.left_kidney) {\n        refOrganId = ccf.x('VHLeftKidney').id;\n      } else if (this.organ === RUI_ORGANS.right_kidney) {\n        refOrganId = ccf.x('VHRightKidney').id;\n      }\n      this.spatialEntity = convertOldRuiToJsonLd(ruiLocation, 'SpatialEntity for ' + this.label, refOrganId);\n    }\n\n    // Find TIFF Images for use in the HuBMAP Tissue Viewer\n    let images: Url[] = [];\n    const imageProviders: Iri[] = [];\n    for (const d of [ data, ...this.ancestors, ...this.descendants ]) {\n      const tiffs = (get(d, 'metadata.files', []) as {rel_path: string}[])\n        .filter(f => /\\.(ome\\.tif|ome\\.tiff)$/.test(f.rel_path))\n        .map(f => `${this.assetsApi}/${d.uuid}/${f.rel_path}` + (serviceToken ? `?token=${serviceToken}` : ''));\n      if (tiffs.length > 0) {\n        images = images.concat(tiffs);\n        imageProviders.push(HBM_PREFIX + d.uuid);\n      }\n    }\n    if (images.length > 0) {\n      this.images = images;\n      this.imageProviders = imageProviders;\n    }\n\n    const dataTypes = new Map();\n    const assayTypes = new Map();\n    let containsSequence = false;\n    for (const e of [...this.ancestors, data, ...this.descendants] as JsonDict[]) {\n      (e.data_types as string[] || []).forEach(t => dataTypes.set(t, e));\n      const assayType = (e as {metadata: { metadata: JsonDict }}).metadata?.metadata?.assay_type as string;\n      if (assayType) {\n        assayTypes.set(assayType, e);\n      }\n      if (e.contains_human_genetic_sequences === 'yes') {\n        containsSequence = true;\n      }\n    }\n    this.containsHumanGeneticSequences = containsSequence;\n    this.dataTypes = [...dataTypes.keys()].sort();\n    this.assayTypes = [...assayTypes.keys()].sort();\n\n    const typesSearch = [ ...this.dataTypes, ...this.assayTypes].map(l => l.toLowerCase()).join('|');\n    if (typesSearch.indexOf('10x') !== -1) {\n      this.thumbnailUrl = 'assets/icons/ico-bulk-10x.svg';\n      this.spatialOrBulk = 'Bulk';\n    } else if (typesSearch.indexOf('af') !== -1) {\n      this.thumbnailUrl = 'assets/icons/ico-spatial-af.svg';\n      this.spatialOrBulk = 'Spatial';\n    } else if (typesSearch.indexOf('codex') !== -1) {\n      this.thumbnailUrl = 'assets/icons/ico-spatial-codex.svg';\n      this.spatialOrBulk = 'Spatial';\n    } else if (typesSearch.indexOf('imc') !== -1) {\n      this.thumbnailUrl = 'assets/icons/ico-spatial-imc.svg';\n      this.spatialOrBulk = 'Spatial';\n    } else if ((typesSearch.indexOf('lc') !== -1) && (typesSearch.indexOf('af') === -1)) {\n      this.thumbnailUrl = 'assets/icons/ico-bulk-lc.svg';\n      this.spatialOrBulk = 'Bulk';\n    } else {\n      this.thumbnailUrl = 'assets/icons/ico-unknown.svg';\n      this.spatialOrBulk = 'Bulk';\n    }\n\n    this.portalUrl = `${portalUrl}browse/sample/${this.id}`;\n    // this.portalUrl = `${portalUrl}search?ancestor_ids[0]=${this.id}&entity_type[0]=Dataset`;\n\n    if (images.length > 0 && typesSearch.indexOf('codex') === -1) {\n      this.resultUrl = images[0];\n      this.resultType = 'image_viewer';\n      this.thumbnailUrl = 'assets/histology3.jpg';\n      if (groupUUID === '73bb26e4-ed43-11e8-8f19-0a7c1eab007a') { // VU\n        const thumb = this.resultUrl.split('/').slice(-1)[0].split('?')[0].replace('.ome.tif', '_thumbnail.png');\n        if (DR1_VU_THUMBS.has(thumb)) {\n          this.thumbnailUrl = `assets/thumbnails/DR1-VU/${thumb}`;\n        }\n      }\n    } else {\n      if (dataTypes.has('codex_cytokit')) {\n        const uuid = dataTypes.get('codex_cytokit')?.uuid;\n        this.resultUrl = `${portalUrl}browse/dataset/${uuid}#visualization`;\n      } else if (dataTypes.has('salmon_rnaseq_10x')) {\n        const uuid = dataTypes.get('salmon_rnaseq_10x')?.uuid;\n        this.resultUrl = `${portalUrl}browse/dataset/${uuid}#visualization`;\n      } else {\n        this.resultUrl = this.portalUrl;\n      }\n      this.resultType = 'external_link';\n    }\n  }\n\n  /**\n   * @returns the hubmap data in JSON-LD format\n   */\n  toJsonLd(): JsonLd {\n    const data = this.data;\n    return {\n      '@id': HBM_PREFIX + this.id,\n      '@type': 'Entity',\n      ...omit(this, [\n        'data', 'donor', 'organ_sample', 'ancestors', 'descendants', 'assetsApi'\n      ]),\n      donor: HBM_PREFIX + this.donor.uuid,\n      shortInfo0: this.doi,\n      shortInfo1: this.groupName,\n      shortInfo2: data.description || this.donor.description,\n      downloadUrl: this.portalUrl,\n      downloadTooltip: 'View in the HuBMAP Data Portal',\n\n      // image viewer metadata\n      organName: HBM_ORGAN_LABELS[this.organName] || this.organName,\n      sex: this.sex,\n      age: this.age,\n      bmi: this.bmi?.toFixed(1),\n      ethnicity: this.ethnicity,\n      authorGroup: this.groupName,\n      creator: data.created_by_user_displayname,\n      creation_date: new Date(data.create_timestamp as number || 0).toLocaleDateString(),\n      modified_date: new Date(data.last_modified_timestamp as number || 0).toLocaleDateString(),\n      donor_id: this.donor.display_doi,\n      organ_id: this.organSample.display_doi,\n      tissue_id: this.doi,\n      specimen_type: this.data.specimen_type,\n      data_types: this.dataTypes.join(', '),\n      assay_types: this.assayTypes.join(', '),\n      spatial_bulk: this.spatialOrBulk,\n      contains_sequence: this.containsHumanGeneticSequences ? 'Yes' : 'No',\n      description: data.description || this.donor.description,\n    };\n  }\n}\n\n/**\n * Adds hubmap data from a url to the triple store.\n *\n * @param store The triple store.\n * @param dataUrl The data url.\n * @param serviceType The service type.\n */\nexport async function addHubmapDataToStore(\n  store: N3Store, dataUrl: string, serviceType: 'static' | 'search-api', serviceToken?: string, assetsApi = '', portalUrl = ''\n): Promise {\n  let hubmapData: object | undefined;\n  if (serviceType === 'static') {\n    hubmapData = await fetch(dataUrl).then(r => r.ok ? r.json() : undefined).catch(() => {}) as object;\n  } else if (serviceType === 'search-api') {\n    const headers: Record = { 'Content-type': 'application/json' };\n    if (serviceToken && serviceToken.length > 0) {\n      headers.Authorization = `Bearer ${serviceToken}`;\n    }\n    hubmapData = await fetch(dataUrl, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({\n        version: true,\n        size: 10000,\n        _source: {\n          excludes: ['donor', 'immediate_ancestors', 'immediate_descendants', 'origin_sample', 'ancestor_ids', 'descendant_ids']\n        },\n        stored_fields: ['*'],\n        script_fields: {},\n        docvalue_fields: [],\n        query: { exists: { field: 'rui_location' } }\n      })\n    }).then(r => r.ok ? r.json() : undefined).catch(() => {}) as object;\n  }\n  if (hubmapData) {\n    await addJsonLdToStore(hubmapResponseAsJsonLd(hubmapData, assetsApi, portalUrl, serviceToken), store);\n  } else {\n    console.warn(`Unable to load ${dataUrl} as HuBMAP Data`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getArguments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/store/icon-registry/icon-registry.state.ts:120\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown[]\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMethodName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/store/icon-registry/icon-registry.state.ts:106\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerIcon\n                        \n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/icon-registry/icon-registry.state.ts:72\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerIconImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/store/icon-registry/icon-registry.state.ts:82\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdObject.html":{"url":"interfaces/IdObject.html","title":"interface - IdObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IdObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@id' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@id' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageViewer.html":{"url":"classes/ImageViewer.html","title":"class - ImageViewer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageViewer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channelConfigs\n                            \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _loaders\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                deck\n                            \n                            \n                                    Protected\n                                layerConfigs\n                            \n                            \n                                    Protected\n                                layers\n                            \n                            \n                                    Readonly\n                                props\n                            \n                            \n                                    Protected\n                                states\n                            \n                            \n                                    Protected\n                                views\n                            \n                            \n                                    Protected\n                                vivViews\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createVivViews\n                            \n                            \n                                finalize\n                            \n                            \n                                    Private\n                                initializeDeck\n                            \n                            \n                                    Private\n                                layerFilter\n                            \n                            \n                                    Private\n                                onViewStateChange\n                            \n                            \n                                    Private\n                                resetChannelConfigs\n                            \n                            \n                                    Async\n                                setSize\n                            \n                            \n                                    Async\n                                setSources\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Async\n                                updateChannelConfigs\n                            \n                            \n                                    Protected\n                                updateDeckProps\n                            \n                            \n                                    Protected\n                                updateLayers\n                            \n                            \n                                    Protected\n                                updateState\n                            \n                            \n                                    Protected\n                                updateViews\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    sources\n                                \n                                \n                                    loaders\n                                \n                                \n                                    channelNames\n                                \n                                \n                                    channelConfigs\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Props)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:86\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    Props\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _channelConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Loader[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayerConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Layer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            props\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            vivViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VivView[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:80\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalize\n                        \n                        \n                    \n                \n            \n            \n                \nfinalize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeDeck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDeck(props)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Deck\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            layerFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerFilter(undefined: LayerFilterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LayerFilterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewStateChange(undefined: OnViewStateChangeArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OnViewStateChangeArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChannelConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize(width: number, height: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSources(sources: DataSource[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            DataSource[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChannelConfigs(configs: Record>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Record>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateDeckProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDeckProps(props: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(args: ValueOrGenerator | >)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ValueOrGenerator | >\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n\n                \n                    \n                        getsources()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loaders\n                    \n                \n\n                \n                    \n                        getloaders()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        channelNames\n                    \n                \n\n                \n                    \n                        getchannelNames()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        channelConfigs\n                    \n                \n\n                \n                    \n                        getchannelConfigs()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:77\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerAccordionComponent.html":{"url":"components/ImageViewerAccordionComponent.html","title":"component - ImageViewerAccordionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerAccordionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts\n\n\n    \n        Description\n    \n    \n        Expandable accordion panel for the image viewer\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-accordion\n            \n\n            \n                styleUrls\n                ./image-viewer-accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                            \n                                metadata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:25\n                            \n                        \n                \n                    \n                        The list of layers used to render this and child components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metadata\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:20\n                            \n                        \n                \n                    \n                        Metadata of image to be displayed in the About panel\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:30\n                            \n                        \n                \n                    \n                        Output to pass up the changes made to the layers to parent components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:33\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.  \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme } from '../../color-scheme/color-schemes';\n\n\n/**\n * Expandable accordion panel for the image viewer\n */\n@Component({\n  selector: 'ccf-image-viewer-accordion',\n  templateUrl: './image-viewer-accordion.component.html',\n  styleUrls: ['./image-viewer-accordion.component.scss']\n})\nexport class ImageViewerAccordionComponent {\n\n  /**\n   * Metadata of image to be displayed in the About panel\n   */\n  @Input() metadata: { label: string; value: string; }[];\n\n  /**\n   * The list of layers used to render this and child components\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Output to pass up the changes made to the layers to parent components\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /** Emits when the default scheme has changed.  */\n  @Output() schemeChange = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n      Layers\n    \n    \n  \n\n  \n    \n      About\n    \n    \n      \n        {{ entry.label }}:\n        {{ entry.value }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-accordion.component.scss\n                \n                .mat-expansion-panel {\n  margin-left: 1.5rem;\n  margin-right: 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  border-radius: 0 !important;\n  position: unset;\n\n  .mat-expansion-panel-header {\n    padding: 0;\n\n    mat-panel-title {\n      font-weight: bold;\n    }\n\n    ::ng-deep .mat-expansion-indicator {\n      position: relative;\n      right: 1em;\n    }\n  }\n\n  .data-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    font-size: 0.75rem;\n\n    .data-entry {\n      display: flex;\n      text-overflow: ellipsis;\n      justify-content: center;\n      margin-bottom: .25rem;\n\n      .label,\n      .value {\n        display: flex;\n        height: 1rem;\n        line-height: 1rem;\n      }\n\n      .label {\n        justify-content: flex-end;\n        width: 50%;\n      }\n\n      .value {\n        justify-content: flex-start;\n        margin-left: 1rem;\n        width: 50%;\n        flex-wrap: wrap;\n        height: 100%;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Layers                      About                      {{ entry.label }}:        {{ entry.value }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerAccordionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerAccordionModule.html":{"url":"modules/ImageViewerAccordionModule.html","title":"module - ImageViewerAccordionModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerAccordionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerAccordionModule\n\n\n\ncluster_ImageViewerAccordionModule_declarations\n\n\n\ncluster_ImageViewerAccordionModule_imports\n\n\n\ncluster_ImageViewerAccordionModule_exports\n\n\n\n\nImageViewerAccordionComponent\n\nImageViewerAccordionComponent\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule -->\n\nImageViewerAccordionComponent->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent  -->\n\nImageViewerAccordionModule->ImageViewerAccordionComponent \n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerAccordionModule -->\n\nImageViewerLayersModule->ImageViewerAccordionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerAccordionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImageViewerLayersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerAccordionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\nimport { ImageViewerAccordionComponent } from './image-viewer-accordion.component';\nimport { ImageViewerLayersModule } from '../image-viewer-layers/image-viewer-layers.module';\n\n\n@NgModule({\n  imports: [CommonModule, MatExpansionModule, ImageViewerLayersModule],\n  declarations: [ImageViewerAccordionComponent],\n  exports: [ImageViewerAccordionComponent]\n})\nexport class ImageViewerAccordionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerContentComponent.html":{"url":"components/ImageViewerContentComponent.html","title":"component - ImageViewerContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts\n\n\n    \n        Description\n    \n    \n        Content for the image viewer sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-content\n            \n\n            \n                styleUrls\n                ./image-viewer-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeViewer\n                            \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ImageViewerData\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:21\n                            \n                        \n                \n                    \n                        Image data to be displayed in the sidebar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:26\n                            \n                        \n                \n                    \n                        The list of layers used to render this and child components\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeViewer\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:31\n                            \n                        \n                \n                    \n                        Emits closeViewer on close button click\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:36\n                            \n                        \n                \n                    \n                        Output to pass up the changes made to the layers to parent components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:39\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.  \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:44\n                \n            \n\n\n            \n                \n                    Hides the viewer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ImageViewerData } from 'ccf-database';\n\nimport { ColorScheme } from '../../../core/models/color-scheme';\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\n/**\n * Content for the image viewer sidebar\n */\n@Component({\n  selector: 'ccf-image-viewer-content',\n  templateUrl: './image-viewer-content.component.html',\n  styleUrls: ['./image-viewer-content.component.scss']\n})\nexport class ImageViewerContentComponent {\n\n  /**\n   * Image data to be displayed in the sidebar\n   */\n  @Input() data: ImageViewerData;\n\n  /**\n   * The list of layers used to render this and child components\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Emits closeViewer on close button click\n   */\n  @Output() closeViewer = new EventEmitter();\n\n  /**\n   * Output to pass up the changes made to the layers to parent components\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /** Emits when the default scheme has changed.  */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Hides the viewer\n   */\n  close(): void {\n    this.closeViewer.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n  \n  \n    {{ data.organName }}\n    {{ data.label }}\n  \n  \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-content.component.scss\n                \n                .viewer-sidebar {\n  .viewer-close-header {\n    display: flex;\n    justify-content: flex-end;\n    height: 3rem;\n    padding-right: 1.5rem;\n    padding-left: 1.5rem;\n    \n    .viewer-close-button {\n      border: none;\n      padding: 0;\n      background: inherit;\n      cursor: pointer;\n    }\n  }\n}\n  \n.sample-info {\n  padding-right: 1.5rem;\n  padding-left: 1.5rem;\n  padding-top: 1.5rem;\n  padding-bottom: 1rem;\n  \n  .sample-region {\n    font-weight: bold;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close            {{ data.organName }}    {{ data.label }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerContentModule.html":{"url":"modules/ImageViewerContentModule.html","title":"module - ImageViewerContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerContentModule\n\n\n\ncluster_ImageViewerContentModule_declarations\n\n\n\ncluster_ImageViewerContentModule_imports\n\n\n\ncluster_ImageViewerContentModule_exports\n\n\n\n\nImageViewerContentComponent\n\nImageViewerContentComponent\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerContentModule -->\n\nImageViewerContentComponent->ImageViewerContentModule\n\n\n\n\n\nImageViewerContentComponent \n\nImageViewerContentComponent \n\nImageViewerContentComponent  -->\n\nImageViewerContentModule->ImageViewerContentComponent \n\n\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerContentModule -->\n\nImageViewerAccordionModule->ImageViewerContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer-content/image-viewer-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImageViewerAccordionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ImageViewerAccordionModule } from '../image-viewer-accordion/image-viewer-accordion.module';\nimport { ImageViewerContentComponent } from './image-viewer-content.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, ImageViewerAccordionModule],\n  declarations: [ImageViewerContentComponent],\n  exports: [ImageViewerContentComponent]\n})\nexport class ImageViewerContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageViewerData.html":{"url":"interfaces/ImageViewerData.html","title":"interface - ImageViewerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageViewerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Data for image viewer display. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        metadata\n                                \n                                \n                                        organName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Other metadata. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Containing organ name. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageViewerLayer.html":{"url":"classes/ImageViewerLayer.html","title":"class - ImageViewerLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageViewerLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/image-viewer-layer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PureImageViewerLayer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightness\n                            \n                            \n                                color\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customizedColor\n                            \n                            \n                                defaultOrder\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                selected\n                            \n                            \n                                selectionOrder\n                            \n                            \n                                transparency\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrightness\n                            \n                            \n                                isDark\n                            \n                            \n                                isLight\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    background\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ImageViewerLayerArgs)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/image-viewer-layer.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ImageViewerLayerArgs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brightness\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [number, number]\n\n                        \n                    \n                    \n                        \n                            Default value : [20, 60]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customizedColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectionOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transparency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrightness\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrightness()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/image-viewer-layer.ts:70\n                \n            \n\n\n            \n                \n                    Converts the layer's hex color code to RGB and calculates a value for the color brightness\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDark\n                        \n                        \n                    \n                \n            \n            \n                \nisDark()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/image-viewer-layer.ts:102\n                \n            \n\n\n            \n                \n                    Determines whether the color icon is dark enough to require a border (dark mode only)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLight\n                        \n                        \n                    \n                \n            \n            \n                \nisLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/image-viewer-layer.ts:95\n                \n            \n\n\n            \n                \n                    Determines whether the color icon is light enough to require a border (light mode only)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/models/image-viewer-layer.ts:47\n                                \n                            \n                    \n                        \n                                Dynamically creates a background style based on the layer's color or color scheme\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ColorScheme } from './color-scheme';\n\nexport interface PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number];\n  transparency: number;\n\n  selected: boolean;\n  customizedColor: boolean;\n  selectionOrder: number;\n  defaultOrder: number;\n}\n\nexport type ImageViewerLayerRequiredArgNames = 'id' | 'colorScheme';\nexport type ImageViewerLayerArgs =\n  Pick &\n  Partial>;\n\nexport class ImageViewerLayer implements PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number] = [20, 60];\n  transparency = 100;\n\n  selected = false;\n  customizedColor = false;\n  selectionOrder = 0;\n  defaultOrder = -1;\n\n  constructor(data: ImageViewerLayerArgs) {\n    Object.assign(this, {\n      label: data.id,\n      color: data.colorScheme.colors[0]\n    }, data);\n  }\n\n  /**\n   * Dynamically creates a background style based on the layer's color or color scheme\n   */\n  get background(): string {\n    if (this.colorScheme.type === 'discrete') {\n      return this.color;\n    }\n\n    const colors = this.colorScheme.colors;\n    const positions = this.colorScheme.positions;\n\n    let gradient = 'linear-gradient(to right, ';\n    colors.forEach((color, index) => {\n      gradient += `${color} ${positions[index] * 100}%`;\n      if (index  225 ? true : false;\n  }\n\n  /**\n   * Determines whether the color icon is dark enough to require a border (dark mode only)\n   */\n  isDark(): boolean {\n    return this.getBrightness() \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerLayersComponent.html":{"url":"components/ImageViewerLayersComponent.html","title":"component - ImageViewerLayersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerLayersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts\n\n\n    \n        Description\n    \n    \n        Component in charge of rendering list of the image layers along with the ability\nto choose which ones are to be showm and what display properties they have.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-layers\n            \n\n            \n                styleUrls\n                ./image-viewer-layers.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-layers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxOnChange\n                            \n                            \n                                layerChanged\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:21\n                            \n                        \n                \n                    \n                        The list of layers to be displayed which contain the styilng properties needed\nto make rendering decisions.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:26\n                            \n                        \n                \n                    \n                        A sorted list of selected layers containing information such as selectionOrder and colorScheme.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:31\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkboxOnChange\n                        \n                        \n                    \n                \n            \n            \n                \ncheckboxOnChange(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:49\n                \n            \n\n\n            \n                \n                    Function in charge of handling the layers' checkbox change events.  It keeps track of layers' selected\nand selectionOrder properties as well as emitting the updated layer list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the layer that needs updating based on the event passed with it.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            layerChanged\n                        \n                        \n                    \n                \n            \n            \n                \nlayerChanged(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:62\n                \n            \n\n\n            \n                \n                    This method captures changes to a layer's color options and updates the layers list accordingly\nbefore emitting the new set of active layers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the updated layer object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackById\n                        \n                        \n                    \n                \n            \n            \n                \ntrackById(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:39\n                \n            \n\n\n            \n                \n                    Used by ngFor to track changes across ImageViewerLayer instances.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The layer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The layer's unique id.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme } from '../../color-scheme/color-schemes';\n\n\n/**\n * Component in charge of rendering list of the image layers along with the ability\n * to choose which ones are to be showm and what display properties they have.\n */\n@Component({\n  selector: 'ccf-image-viewer-layers',\n  templateUrl: './image-viewer-layers.component.html',\n  styleUrls: ['./image-viewer-layers.component.scss']\n})\nexport class ImageViewerLayersComponent {\n  /**\n   * The list of layers to be displayed which contain the styilng properties needed\n   * to make rendering decisions.\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * A sorted list of selected layers containing information such as selectionOrder and colorScheme.\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /**\n   * Emits when the default scheme has changed.\n   */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Used by ngFor to track changes across ImageViewerLayer instances.\n   *\n   * @param layer The layer.\n   * @returns The layer's unique id.\n   */\n  trackById(layer: ImageViewerLayer): string {\n    return layer.id;\n  }\n\n  /**\n   * Function in charge of handling the layers' checkbox change events.  It keeps track of layers' selected\n   * and selectionOrder properties as well as emitting the updated layer list.\n   * @param event contains whether or not the layer was selected or unselected.\n   * @param layer is the layer that needs updating based on the event passed with it.\n   */\n  checkboxOnChange(layer: ImageViewerLayer): void {\n    this.layerChange.emit(new ImageViewerLayer({\n      ...layer,\n      selected: !layer.selected\n    }));\n  }\n\n  /**\n   * This method captures changes to a layer's color options and updates the layers list accordingly\n   * before emitting the new set of active layers.\n   * @param layer the updated layer object.\n   * @param referenceLayer the layer object before the changes, used for referencing which layer in the list to update.\n   */\n  layerChanged(layer: ImageViewerLayer): void {\n    this.layerChange.emit(layer);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n    \n      \n        {{ layer.label }}\n      \n      \n      \n    \n  \n\n\n  \n    RGB Images are not customizable.\n  \n\n\n    \n\n    \n                \n                    ./image-viewer-layers.component.scss\n                \n                :host {\n  .layer {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 1.5rem;\n  }\n\n  .hidden {\n    visibility: hidden !important;\n  }\n\n  .color-selector-placeholder {\n    height: 1rem;\n    width: 1rem;\n    border-radius: 100%;\n  }\n\n  .no-layers-text {\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ layer.label }}                              RGB Images are not customizable.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerLayersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerLayersModule.html":{"url":"modules/ImageViewerLayersModule.html","title":"module - ImageViewerLayersModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerLayersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerLayersModule\n\n\n\ncluster_ImageViewerLayersModule_declarations\n\n\n\ncluster_ImageViewerLayersModule_imports\n\n\n\ncluster_ImageViewerLayersModule_exports\n\n\n\n\nImageViewerLayersComponent\n\nImageViewerLayersComponent\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerLayersModule -->\n\nImageViewerLayersComponent->ImageViewerLayersModule\n\n\n\n\n\nImageViewerLayersComponent \n\nImageViewerLayersComponent \n\nImageViewerLayersComponent  -->\n\nImageViewerLayersModule->ImageViewerLayersComponent \n\n\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nImageViewerLayersModule -->\n\nColorPickerLauncherModule->ImageViewerLayersModule\n\n\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nImageViewerLayersModule -->\n\nSchemeDropdownModule->ImageViewerLayersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerLayersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorPickerLauncherModule\n                        \n                        \n                            SchemeDropdownModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerLayersComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ImageViewerLayersComponent } from './image-viewer-layers.component';\nimport { SchemeDropdownModule } from '../../scheme-dropdown/scheme-dropdown.module';\nimport { ColorPickerLauncherModule } from '../../color-scheme/color-picker-launcher/color-picker-launcher.module';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule, ColorPickerLauncherModule, SchemeDropdownModule],\n  declarations: [ImageViewerLayersComponent],\n  exports: [ImageViewerLayersComponent]\n})\nexport class ImageViewerLayersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerLegendComponent.html":{"url":"components/ImageViewerLegendComponent.html","title":"component - ImageViewerLegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerLegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts\n\n\n    \n        Description\n    \n    \n        Legend in the image viewer displaying the selected layers and their colors\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-legend\n            \n\n            \n                styleUrls\n                ./image-viewer-legend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _layers\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layers\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:18\n                            \n                        \n                \n                    \n                        The list of layers used to render this components\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ImageViewerLayer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n\n                \n                    \n                        getlayers()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:21\n                                \n                            \n\n                \n                    \n                        setlayers(layers: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:18\n                                \n                            \n                    \n                        \n                                The list of layers used to render this components\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layers\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n/**\n * Legend in the image viewer displaying the selected layers and their colors\n */\n@Component({\n  selector: 'ccf-image-viewer-legend',\n  templateUrl: './image-viewer-legend.component.html',\n  styleUrls: ['./image-viewer-legend.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageViewerLegendComponent {\n  /**\n   * The list of layers used to render this components\n   */\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set layers(layers: ImageViewerLayer[]) {\n    this._layers = [...layers].sort((v1, v2) => v1.selectionOrder - v2.selectionOrder);\n  }\n  get layers(): ImageViewerLayer[] { return this._layers; }\n  private _layers: ImageViewerLayer[];\n}\n\n    \n\n    \n        \n  \n    \n    {{ layer.label }}\n  \n\n\n    \n\n    \n                \n                    ./image-viewer-legend.component.scss\n                \n                .legend {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  height: 3rem;\n\n  .legend-item {\n    margin-right: 1rem;\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .item-color {\n      margin-right: 1rem;\n      height: 1rem;\n      width: 1rem;\n    }\n\n    .item-title {\n      font-size: 14px;\n      display: flex;\n      align-items: center;\n    }\n  }\n}\n\n.circle {\n  border-radius: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ layer.label }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerLegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerLegendModule.html":{"url":"modules/ImageViewerLegendModule.html","title":"module - ImageViewerLegendModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerLegendModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerLegendModule\n\n\n\ncluster_ImageViewerLegendModule_declarations\n\n\n\ncluster_ImageViewerLegendModule_exports\n\n\n\n\nImageViewerLegendComponent\n\nImageViewerLegendComponent\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerLegendModule -->\n\nImageViewerLegendComponent->ImageViewerLegendModule\n\n\n\n\n\nImageViewerLegendComponent \n\nImageViewerLegendComponent \n\nImageViewerLegendComponent  -->\n\nImageViewerLegendModule->ImageViewerLegendComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerLegendComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerLegendComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageViewerLegendComponent } from './image-viewer-legend.component';\n\n\n\n@NgModule({\n  declarations: [ImageViewerLegendComponent],\n  imports: [CommonModule],\n  exports: [ImageViewerLegendComponent]\n})\nexport class ImageViewerLegendModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerModule.html":{"url":"modules/ImageViewerModule.html","title":"module - ImageViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerModule\n\n\n\ncluster_ImageViewerModule_imports\n\n\n\ncluster_ImageViewerModule_exports\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nImageViewerModule -->\n\nImageViewerContentModule->ImageViewerModule\n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerModule -->\n\nImageViewerLayersModule->ImageViewerModule\n\n\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerModule -->\n\nImageViewerPopoverModule->ImageViewerModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerModule -->\n\nViewerModule->ImageViewerModule\n\n\n\n\n\nImageViewerContentModule \n\nImageViewerContentModule \n\nImageViewerContentModule  -->\n\nImageViewerModule->ImageViewerContentModule \n\n\n\n\n\nImageViewerLayersModule \n\nImageViewerLayersModule \n\nImageViewerLayersModule  -->\n\nImageViewerModule->ImageViewerLayersModule \n\n\n\n\n\nImageViewerPopoverModule \n\nImageViewerPopoverModule \n\nImageViewerPopoverModule  -->\n\nImageViewerModule->ImageViewerPopoverModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLayersModule\n                        \n                        \n                            ImageViewerPopoverModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLayersModule\n                        \n                        \n                            ImageViewerPopoverModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { ImageViewerContentModule } from './image-viewer-content/image-viewer-content.module';\nimport { ImageViewerLayersModule } from './image-viewer-layers/image-viewer-layers.module';\nimport { ImageViewerPopoverModule } from './image-viewer-popover/image-viewer-popover.module';\nimport { ViewerModule } from './viewer/viewer.module';\n\n\n@NgModule({\n  imports: [ImageViewerPopoverModule, ImageViewerContentModule, ViewerModule, ImageViewerLayersModule],\n  providers: [],\n  declarations: [],\n  exports: [ImageViewerPopoverModule, ImageViewerContentModule, ImageViewerLayersModule]\n})\nexport class ImageViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerPopoverComponent.html":{"url":"components/ImageViewerPopoverComponent.html","title":"component - ImageViewerPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts\n\n\n    \n        Description\n    \n    \n        Popup that displays detailed information on a selected image along with viewing options\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-popover\n            \n\n            \n                styleUrls\n                ./image-viewer-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                result\n                            \n                            \n                                sourceUrls\n                            \n                            \n                                viewerVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                            \n                                    Private\n                                setSourceUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: ViewerState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:52\n                            \n                        \n\n                \n                    \n                            Initializes the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        ViewerState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The image viewer state.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to this components change detector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:65\n                \n            \n\n\n            \n                \n                    Returns viewer to closed state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(data: ImageViewerData, result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:74\n                \n            \n\n\n            \n                \n                    Changes viewer to opened state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ImageViewerData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data of the image to be passed into the viewer\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSourceUrls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSourceUrls(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EMPTY_DATA\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:37\n                            \n                        \n\n                \n                    \n                        Data of the image to be passed into the viewer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EMPTY_RESULT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:42\n                            \n                        \n\n                \n                    \n                        Currently active result.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceUrls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:47\n                            \n                        \n\n                \n                    \n                        Urls to load image data from.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewerVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:52\n                            \n                        \n\n                \n                    \n                        Whether or not the image viewer is visible\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ImageViewerData, ListResult } from 'ccf-database';\n\nimport { ViewerState } from '../../../core/store/viewer/viewer.state';\n\n\nconst EMPTY_DATA: ImageViewerData = {\n  '@id': '',\n  '@type': 'ImageViewerData',\n  id: '',\n  label: '',\n  organName: '',\n  metadata: []\n};\n\nconst EMPTY_RESULT: ListResult = {\n  '@id': '',\n  '@type': 'ListResult',\n  id: '',\n  label: ''\n};\n\n\n/**\n * Popup that displays detailed information on a selected image along with viewing options\n */\n@Component({\n  selector: 'ccf-image-viewer-popover',\n  templateUrl: './image-viewer-popover.component.html',\n  styleUrls: ['./image-viewer-popover.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageViewerPopoverComponent {\n  /**\n   * Data of the image to be passed into the viewer\n   */\n  data = EMPTY_DATA;\n\n  /**\n   * Currently active result.\n   */\n  result = EMPTY_RESULT;\n\n  /**\n   * Urls to load image data from.\n   */\n  sourceUrls: string[] = [];\n\n  /**\n   * Whether or not the image viewer is visible\n   */\n  viewerVisible = false;\n\n  /**\n   * Initializes the component.\n   *\n   * @param state The image viewer state.\n   * @param cdr Reference to this components change detector.\n   */\n  constructor(readonly state: ViewerState, private readonly cdr: ChangeDetectorRef) { }\n\n  /**\n   * Returns viewer to closed state\n   */\n  close(): void {\n    this.viewerVisible = false;\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Changes viewer to opened state\n   * @param data Data of the image to be passed into the viewer\n   */\n  open(data: ImageViewerData, result: ListResult): void {\n    this.viewerVisible = true;\n    this.data = data;\n    this.result = result;\n    this.setSourceUrls(result);\n    this.cdr.markForCheck();\n  }\n\n  private setSourceUrls(result: ListResult): void {\n    const { resultType, resultUrl } = result;\n    if (resultType !== 'image_viewer' || resultUrl === undefined) {\n      this.sourceUrls = [];\n    } else {\n      this.sourceUrls = [resultUrl];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n    \n  \n  \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-popover.component.scss\n                \n                .image-viewer-container {\n  position: fixed;\n  top: 4rem;\n  overflow: hidden;\n  z-index: 10;\n  flex-grow: 1;\n  height: calc(100% - 1.5rem);\n  width: 100%;\n  left: 100%;\n  transition-property: left;\n  transition-duration: .5s;\n  transition-timing-function: ease-in-out;\n\n  &.expanded {\n    left: 0%;\n  }\n\n  .image-viewer-window {\n    margin-top: 1.5rem;\n    height: calc(100% - 2rem);\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .viewer {\n      width: 100%;\n      height: calc(100% - 8rem);\n      margin-left: 1.5rem;\n    }\n\n    .legend {\n      width: 100%;\n      height: 3.5rem;\n      margin-top: 1.5rem;\n      margin-left: 1.5rem;\n    }\n  }\n\n  .image-viewer-drawer {\n    width: 25.5rem;\n    margin: 0 1.5rem;\n\n    .drawer-icons {\n      display: flex;\n\n      .button {\n        width: 3rem;\n        height: 3rem;\n        color: #9e9e9e;\n        background: none;\n        border: none;\n        cursor: pointer;\n        outline: none;\n\n        :hover {\n          color: #1e88e5;\n        }\n\n        mat-icon {\n          font-size: 2.2rem;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerPopoverModule.html":{"url":"modules/ImageViewerPopoverModule.html","title":"module - ImageViewerPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerPopoverModule\n\n\n\ncluster_ImageViewerPopoverModule_declarations\n\n\n\ncluster_ImageViewerPopoverModule_imports\n\n\n\ncluster_ImageViewerPopoverModule_exports\n\n\n\n\nImageViewerPopoverComponent\n\nImageViewerPopoverComponent\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule -->\n\nImageViewerPopoverComponent->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent  -->\n\nImageViewerPopoverModule->ImageViewerPopoverComponent \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nImageViewerPopoverModule -->\n\nDrawerModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerPopoverModule -->\n\nImageViewerContentModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerPopoverModule -->\n\nImageViewerLegendModule->ImageViewerPopoverModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerPopoverModule -->\n\nViewerModule->ImageViewerPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DrawerModule\n                        \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLegendModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DrawerModule } from '../../../shared/components/drawer/drawer.module';\nimport { ImageViewerContentModule } from '../image-viewer-content/image-viewer-content.module';\nimport { ImageViewerLegendModule } from '../image-viewer-legend/image-viewer-legend.module';\nimport { ViewerModule } from '../viewer/viewer.module';\nimport { ImageViewerPopoverComponent } from './image-viewer-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, ImageViewerContentModule, DrawerModule, ViewerModule, ImageViewerLegendModule],\n  declarations: [ImageViewerPopoverComponent],\n  exports: [ImageViewerPopoverComponent]\n})\nexport class ImageViewerPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageViewerProps.html":{"url":"interfaces/ImageViewerProps.html","title":"interface - ImageViewerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageViewerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canvas\n                                \n                                \n                                            Optional\n                                        channelNames\n                                \n                                \n                                            Optional\n                                        defaultChannelConfig\n                                \n                                \n                                            Optional\n                                        height\n                                \n                                \n                                        id\n                                \n                                \n                                        initialViewState\n                                \n                                \n                                            Optional\n                                        sources\n                                \n                                \n                                            Optional\n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLCanvasElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelNames\n                                    \n                                \n                                \n                                    \n                                        channelNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultChannelConfig\n                                    \n                                \n                                \n                                    \n                                        defaultChannelConfig:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialViewState\n                                    \n                                \n                                \n                                    \n                                        initialViewState:         State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sources\n                                    \n                                \n                                \n                                    \n                                        sources:     DataSource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DataSource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/info/info-button/info-button.component.ts\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/info/info-button/info-button.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            launchInfoDialog\n                        \n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/info/info-button/info-button.component.ts:26\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent {\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(): void {\n    this.dialog.open(InfoDialogComponent, {\n      width: '60em',\n      data: {}\n    });\n  }\n}\n\n    \n\n    \n        \n  info_outline\n\n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info {\n  cursor: pointer;\n  transition: color 1s;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  info_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/info/info-button/info-button.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/info/info-dialog/info-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: unknown)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/info/info-dialog/info-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/info/info-dialog/info-dialog.component.ts:27\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/info/info-dialog/info-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                        Data being injected into the dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/info/info-dialog/info-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                        A reference to the dialog that this component creates, used to call the dialog's methods\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent {\n  /**\n   * Creates an instance of info dialog component.\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown\n  ) { }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      HuBMAP\n      The Human Biomolecular Atlas Project\n\n      \n        \n          The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis\n          technologies, computational tools, and generate foundational tissue maps in order to accelerate the\n          construction of an atlas of the human body at single-cell resolution for understanding the relationship\n          between tissue organization and function.\n          \n          https://hubmapconsortium.org\n        \n\n        Common Coordinate Framework (CCF)\n        \n          The HuBMAP common coordinate framework (CCF) is under active development. It aims to semantically annotate and\n          spatially index HuBMAP data for efficient spatial and semantic search, browsing, and filtering. The CCF v1.0.0\n          became available in June 2020. The CCF Ontology is available as an OWL file,\n          on GitHub, and\n          on BioPortal. For\n          documentation, see CCF Portal and preprint of CCF\n          Ontology publication on arxiv.\n        \n\n        CCF Exploration User Interface (EUI)\n        \n          The CCF Exploration User Interface (EUI) represents data across multiple scales, supporting navigation by\n          multiple coordinate systems, including spatial, physiologic, and organ-based browsing. The first\n          proof-of-concept user interface for the CCF v1.0.0 became available in June 2020. The EUI continues to evolve\n          as more data becomes available. The CCF EUI code is available\n          on GitHub.\n          A demo video is on YouTube.\n        \n\n        Acknowledgements\n        \n          The CCF work is under active development by the Indiana University Mapping Component as part of the HuBMAP\n          HIVE effort with expert input by the HuBMAP team. Data was provided by the HuBMAP Tissue Mapping Centers. This\n          research is funded by the NIH Common Fund through the Office of Strategic Coordination/Office of the NIH\n          Director under award OT2OD026671, by the NIDDK Kidney Precision Medicine Project grant U2CDK114886, and the\n          NIH National Institute of Allergy and Infectious Diseases (NIAID), Department of Health and Human Services\n          under BCBB Support Services Contract HHSN316201300006W/HHSN27200002.\n        \n      \n\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.ccf-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n      background-color: white;\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .heading {\n      margin-bottom: 0;\n      font-size: 0.875rem;\n      font-weight: bold;\n    }\n\n    .close {\n      .close-icon {\n        float: right;\n        margin-top: 1rem;\n        margin-right: 1rem;\n        cursor: pointer;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin-bottom: 0;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .footer {\n      padding-top: 1.5rem;\n      .nih-logo {\n        height: 2.25rem;\n        display: block;\n        margin: auto;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              HuBMAP      The Human Biomolecular Atlas Project                        The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis          technologies, computational tools, and generate foundational tissue maps in order to accelerate the          construction of an atlas of the human body at single-cell resolution for understanding the relationship          between tissue organization and function.                    https://hubmapconsortium.org                Common Coordinate Framework (CCF)                  The HuBMAP common coordinate framework (CCF) is under active development. It aims to semantically annotate and          spatially index HuBMAP data for efficient spatial and semantic search, browsing, and filtering. The CCF v1.0.0          became available in June 2020. The CCF Ontology is available as an OWL file,          on GitHub, and          on BioPortal. For          documentation, see CCF Portal and preprint of CCF          Ontology publication on arxiv.                CCF Exploration User Interface (EUI)                  The CCF Exploration User Interface (EUI) represents data across multiple scales, supporting navigation by          multiple coordinate systems, including spatial, physiologic, and organ-based browsing. The first          proof-of-concept user interface for the CCF v1.0.0 became available in June 2020. The EUI continues to evolve          as more data becomes available. The CCF EUI code is available          on GitHub.          A demo video is on YouTube.                Acknowledgements                  The CCF work is under active development by the Indiana University Mapping Component as part of the HuBMAP          HIVE effort with expert input by the HuBMAP team. Data was provided by the HuBMAP Tissue Mapping Centers. This          research is funded by the NIH Common Fund through the Office of Strategic Coordination/Office of the NIH          Director under award OT2OD026671, by the NIDDK Kidney Precision Medicine Project grant U2CDK114886, and the          NIH National Institute of Allergy and Infectious Diseases (NIAID), Department of Health and Human Services          under BCBB Support Services Contract HHSN316201300006W/HHSN27200002.                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deferred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Promise(resolve => this.resolve = resolve)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                            \n                        \n\n                \n                    \n                        Promise used to await on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:33\n                            \n                        \n\n                \n                    \n                        Whether this state is true or false. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                            \n                        \n\n                \n                    \n                        Resolve function for the promise. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:42\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueOf\n                        \n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:59\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:52\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => this.resolve = resolve);\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise { return this.deferred; }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean { return this.initialized; }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(`open, open-instant`, style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('1.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('1.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// tslint:disable-line: no-unsafe-any\n  get position(): 'start' | 'end' { return this._position; }\n  set position(value: 'start' | 'end') { this._position = value || 'start'; }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-opened') // tslint:disable-line: no-unsafe-any\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { this.toggle(coerceBooleanProperty(value)); }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-expanded') // tslint:disable-line: no-unsafe-any\n  get expanded(): boolean { return this._expanded; }\n  set expanded(value: boolean) { this.toggleExpanded(coerceBooleanProperty(value)); }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // tslint:disable-line: no-unsafe-any\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    }};\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) { return this._measuredWidth; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) { return 0; }\n\n    return this._measuredWidth = width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) { return this._measuredMargin; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    return this._measuredMargin = margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void { this.toggle(true); }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void { this.toggle(false); }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) { return; }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void { this.toggleExpanded(true); }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void { this.toggleExpanded(false); }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) { return; }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // tslint:disable-line: no-unsafe-any\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // tslint:disable-line: no-unsafe-any\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled':\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_position: '' | 'start' | 'end'; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_opened: BooleanInput; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_expanded: BooleanInput; // tslint:disable-line: variable-name member-ordering\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JsonOntologyNode.html":{"url":"interfaces/JsonOntologyNode.html","title":"interface - JsonOntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JsonOntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Structure of a single json ontology node.\n\n            \n\n            \n                Extends\n            \n            \n                        IdObject\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                \n                                \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                    \n                                \n                                \n                                    \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym:         ValueObject[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValueObject[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Json synonyms property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                    \n                                \n                                \n                                    \n                                        http://www.w3.org/2000/01/rdf-schema#label:         [ValueObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [ValueObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json label property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         [IdObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [IdObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json parent property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResult.html":{"url":"interfaces/ListResult.html","title":"interface - ListResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Result for list of tissues. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        downloadTooltip\n                                \n                                \n                                            Optional\n                                        downloadUrl\n                                \n                                \n                                            Optional\n                                        highlighted\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        resultType\n                                \n                                \n                                            Optional\n                                        resultUrl\n                                \n                                \n                                            Optional\n                                        shortInfo\n                                \n                                \n                                            Optional\n                                        thumbnailUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadTooltip\n                                    \n                                \n                                \n                                    \n                                        downloadTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of data download. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadUrl\n                                    \n                                \n                                \n                                    \n                                        downloadUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url for data download. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlighted\n                                    \n                                \n                                \n                                    \n                                        highlighted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the result should be highlighted \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultType\n                                    \n                                \n                                \n                                    \n                                        resultType:     \"external_link\" | \"local_link\" | \"image_viewer\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"external_link\" | \"local_link\" | \"image_viewer\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of result url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultUrl\n                                    \n                                \n                                \n                                    \n                                        resultUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Result url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortInfo\n                                    \n                                \n                                \n                                    \n                                        shortInfo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Short description. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnailUrl\n                                    \n                                \n                                \n                                    \n                                        thumbnailUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Small icon url. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        payload\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sender of the message. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: unknown, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                        Counter used to give each message a unique id. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:81\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:91\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSources\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:101\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            nextMessageId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:161\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:151\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/message/message.service.ts:126\n                            \n                        \n\n                \n                    \n                        The message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                        The message listener. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isolated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OMEZarrInfo.html":{"url":"interfaces/OMEZarrInfo.html","title":"interface - OMEZarrInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OMEZarrInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Loader, createZarrLoader, OMEZarrReader, createOMETiffLoader } from '@hubmap/vitessce-image-viewer';\n\nexport enum LoaderType {\n  Zarr = 'zarr',\n  OMEZarr = 'ome-zarr',\n  StaticZarr = 'static',\n\n  Tiff = 'tiff',\n  Tiff2 = 'tiff 2',\n  BFTiff = 'bf tiff',\n  CovidTiff = 'covid tiff',\n  StaticTiff = 'static tiff'\n}\n\n// createLoader info argument types\nexport type ZarrInfo = Parameters[0];\nexport interface OMEZarrInfo {\n  url: string;\n}\nexport interface TiffInfo {\n  url: string;\n  offsets?: string | number[];\n}\n\n// Copied from vitessce-image-viewer demo source\nexport async function createLoader(\n  type: LoaderType,\n  info: ZarrInfo | OMEZarrInfo | TiffInfo\n): Promise {\n  switch (type) {\n    case LoaderType.Zarr:\n    case LoaderType.StaticZarr:\n      return createZarrLoader(info as ZarrInfo);\n\n    case LoaderType.OMEZarr: {\n      const { url } = info as OMEZarrInfo;\n      const reader = await OMEZarrReader.fromUrl(url);\n      const { loader } = await reader.loadOMEZarr();\n      return loader;\n    }\n\n    case LoaderType.Tiff:\n    case LoaderType.Tiff2:\n    case LoaderType.BFTiff:\n    case LoaderType.CovidTiff:\n    case LoaderType.StaticTiff: {\n      const { url, offsets = [] } = info as TiffInfo;\n      return createOMETiffLoader({ url, offsets: await loadOffsets(offsets) });\n    }\n\n    default:\n      throw Error(`Pyramid type (${type}) is not supported`);\n  }\n}\n\nasync function loadOffsets(url: string | number[]): Promise {\n  if (typeof url !== 'string') { return url; }\n  const res = await fetch(url);\n  return res.status !== 404 ? await res.json() as number[] : [];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OldRuiData.html":{"url":"interfaces/OldRuiData.html","title":"interface - OldRuiData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OldRuiData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/hubmap/old-rui-utils.ts\n        \n\n            \n                Description\n            \n            \n                RUI v0.5.0 format \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alignment_datetime\n                                \n                                \n                                        alignment_id\n                                \n                                \n                                        alignment_operator_first_name\n                                \n                                \n                                        alignment_operator_last_name\n                                \n                                \n                                        reference_organ_id\n                                \n                                \n                                        tissue_object_rotation\n                                \n                                \n                                        tissue_object_size\n                                \n                                \n                                        tissue_position_mass_point\n                                \n                                \n                                        tissue_position_vertices\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_datetime\n                                    \n                                \n                                \n                                    \n                                        alignment_datetime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creation time. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_id\n                                    \n                                \n                                \n                                    \n                                        alignment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_operator_first_name\n                                    \n                                \n                                \n                                    \n                                        alignment_operator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creator first name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_operator_last_name\n                                    \n                                \n                                \n                                    \n                                        alignment_operator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creator last name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ_id\n                                    \n                                \n                                \n                                    \n                                        reference_organ_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organ reference identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_object_rotation\n                                    \n                                \n                                \n                                    \n                                        tissue_object_rotation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue object rotation. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_object_size\n                                    \n                                \n                                \n                                    \n                                        tissue_object_size:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue object size. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_position_mass_point\n                                    \n                                \n                                \n                                    \n                                        tissue_position_mass_point:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue point of mass. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_position_vertices\n                                    \n                                \n                                \n                                    \n                                        tissue_position_vertices:     unknown[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Position vertices. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ccf } from '../util/prefixes';\n\n/** RUI v0.5.0 format */\nexport interface OldRuiData {\n  /** Identifier. */\n  alignment_id: string;\n  /** Creator first name. */\n  alignment_operator_first_name: string;\n  /** Creator last name. */\n  alignment_operator_last_name: string;\n  /** Creation time. */\n  alignment_datetime: string;\n  /** Organ reference identifier. */\n  reference_organ_id: string;\n  /** Position vertices. */\n  tissue_position_vertices: unknown[];\n  /** Tissue point of mass. */\n  tissue_position_mass_point: {\n    x: number,\n    y: number,\n    z: number\n  };\n  /** Tissue object rotation. */\n  tissue_object_rotation: {\n    x: number,\n    y: number,\n    z: number\n  };\n  /** Tissue object size. */\n  tissue_object_size: {\n    x: number,\n    y: number,\n    z: number\n  };\n}\n\n/**\n * Fixes old RUI data from VU.\n *\n * @param data The original RUI data\n * @returns The fixed RUI data\n */\nfunction fixOldRuiKidneyData(data: OldRuiData): OldRuiData {\n  return {\n    ...data,\n    tissue_position_mass_point: {\n      x: data.tissue_position_mass_point.x - 60 / 2,\n      y: data.tissue_position_mass_point.y - 100 / 2,\n      z: data.tissue_position_mass_point.z - 60 / 2\n    }\n  };\n}\n\n/**\n * Converts version 0.5.0 RUI data to new JSONLD format.\n * @param data The old data.\n * @param [externalId] An optional label.\n * @param [refOrganId] The organ id.\n * @returns The translated JSONLD data.\n */\nexport function convertOldRuiToJsonLd(data: OldRuiData, label?: string, refOrganId?: string): object {\n  let placementTarget: string | undefined;\n  if (refOrganId) {\n    placementTarget = refOrganId;\n  } else if (data.reference_organ_id === 'uuid-1234-5678') {\n    placementTarget = ccf.x('VHKidney').id;\n  } else if(data.reference_organ_id) {\n    placementTarget = data.reference_organ_id;\n  }\n\n  if (placementTarget?.endsWith('Kidney')) {\n    data = fixOldRuiKidneyData(data);\n  }\n\n  const D = data.tissue_object_size;\n  const R = data.tissue_object_rotation;\n  const T = data.tissue_position_mass_point;\n\n  return {\n    '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n    '@id': 'http://purl.org/ccf/0.5/' + data.alignment_id,\n    '@type': 'SpatialEntity',\n    label: label || undefined,\n    creator: `${data.alignment_operator_first_name} ${data.alignment_operator_last_name}`,\n    creator_first_name: data.alignment_operator_first_name,\n    creator_last_name: data.alignment_operator_last_name,\n    // creator_orcid: data.alignment_operator_orcid,\n    creation_date: data.alignment_datetime,\n    ccf_annotations: [],\n    x_dimension: D.x, y_dimension: D.y, z_dimension: D.z, dimension_units: 'millimeter',\n\n    placement: {\n      '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n      '@id': 'http://purl.org/ccf/0.5/' + data.alignment_id + '_placement',\n      '@type': 'SpatialPlacement',\n      target: placementTarget,\n      placement_date: data.alignment_datetime,\n\n      x_scaling: 1, y_scaling: 1, z_scaling: 1, scaling_units: 'ratio',\n      x_rotation: R.x, y_rotation: R.y, z_rotation: R.z, rotation_order: 'XYZ', rotation_units: 'degree',\n      x_translation: T.x, y_translation: T.y, z_translation: T.z, translation_units: 'millimeter'\n    }\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyExplorationModule.html":{"url":"modules/OntologyExplorationModule.html","title":"module - OntologyExplorationModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyExplorationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/ontology-exploration/ontology-exploration.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from './ontology-search/ontology-search.module';\nimport { OntologySelectionModule } from './ontology-selection/ontology-selection.module';\nimport { OntologyTreeModule } from './ontology-tree/ontology-tree.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule,\n    OntologySelectionModule\n  ],\n  exports: [OntologySearchModule, OntologyTreeModule, OntologySelectionModule]\n})\nexport class OntologyExplorationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyNode.html":{"url":"interfaces/OntologyNode.html","title":"interface - OntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/ontology-node.ts\n        \n\n            \n                Description\n            \n            \n                A node in the ontology tree.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        parent\n                                \n                                \n                                        synonymLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of child identifiers.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of this node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for this ontology node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The identifier of the parent node. undefined if this is the root node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synonymLabels\n                                    \n                                \n                                \n                                    \n                                        synonymLabels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Labels for the synonyms of the label of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface OntologyNode {\n  /**\n   * The unique identifier of this node.\n   */\n  id: string;\n\n  /**\n   * Label for this ontology node.\n   */\n  label: string;\n\n  /**\n   * The identifier of the parent node. `undefined` if this is the root node.\n   */\n  parent: string;\n\n  /**\n   * An array of child identifiers.\n   */\n  children: string[];\n\n  /**\n   * Labels for the synonyms of the label of this node.\n   */\n  synonymLabels: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySearchComponent.html":{"url":"components/OntologySearchComponent.html","title":"component - OntologySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n\n\n    \n        Description\n    \n    \n        Componenet for searching the Ontology nodes.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-search\n            \n\n            \n                styleUrls\n                ./ontology-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleteOpen\n                            \n                            \n                                filteredResults$\n                            \n                            \n                                formControl\n                            \n                            \n                                    Public\n                                ontologyService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFormatter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                sortBySynonymResult\n                            \n                            \n                                sortLexically\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologyService: OntologySearchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologyService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of searchService which provides all the search functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:25\n                            \n                        \n                \n                    \n                        Output event-emitter which emits the id of the OntologyNode whose label was\nselected by the user in the search-results\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFormatter\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFormatter(option?: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:72\n                \n            \n\n\n            \n                \n                    A formatter function to enable different display and selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a part of the search result entry to be displayed as a display value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:54\n                \n            \n\n\n            \n                \n                    on-init lifecycle hook for this component -\ngets the searched value from the view, sends it to the filter function in the OntologyService,\nand gets the search results from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:98\n                \n            \n\n\n            \n                \n                    Callback function triggered when the user selects a value from search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of MatAutocompleteSelectedEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortBySynonymResult\n                        \n                        \n                    \n                \n            \n            \n                \nsortBySynonymResult(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:81\n                \n            \n\n\n            \n                \n                    Sorts by results which have synonyms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 or -1\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortLexically\n                        \n                        \n                    \n                \n            \n            \n                \nsortLexically(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:90\n                \n            \n\n\n            \n                \n                    Sorts lexically\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        lower case value of node label\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoCompleteOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:36\n                            \n                        \n\n                \n                    \n                        Determines if autocomplete is open or close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredResults$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:41\n                            \n                        \n\n                \n                    \n                        Observable which provides the filtered search results\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:30\n                            \n                        \n\n                \n                    \n                        Instance of FormControl - tracks the value and validation status of an individual form control\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ontologyService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologySearchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:47\n                            \n                        \n\n                \n                    \n                        instance of searchService which provides all the search functionality\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { get, sortBy } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../../core/models/ontology-node';\nimport { OntologySearchService, SearchResult } from '../../../core/services/ontology-search/ontology-search.service';\n\n\n/**\n * Componenet for searching the Ontology nodes.\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss']\n})\nexport class OntologySearchComponent implements OnInit {\n  /**\n   * Output event-emitter which emits the id of the OntologyNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() selected = new EventEmitter();\n\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new FormControl('');\n\n\n  /**\n   * Determines if autocomplete is open or close.\n   */\n  autoCompleteOpen = false;\n\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$: Observable;\n\n  /**\n   * Creates an instance of ontology search component.\n   * @param ontologyService instance of searchService which provides all the search functionality\n   */\n  constructor(public ontologyService: OntologySearchService) { }\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit(): void {\n    this.ontologyService.loadOntology();\n    const valueChanges = this.formControl.valueChanges as Observable;\n    this.filteredResults$ = valueChanges.pipe(\n      filter(value => typeof value === 'string'),\n      startWith(''),\n      switchMap(value => this.ontologyService.filter(value)),\n      map(searchResults => sortBy(searchResults, [\n        this.sortBySynonymResult, 'index', this.sortLexically\n      ]))\n    );\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option?: SearchResult): string {\n    return (option?.displayLabel ?? []).join('');\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Sorts lexically\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, ['option', 'value', 'node']) as OntologyNode;\n    if (node) {\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        \n          {{option.displayLabel[0]}}\n          {{option.displayLabel[1]}}\n          {{option.displayLabel[2]}}\n        \n      \n    \n\n    search\n  \n\n\n    \n\n    \n                \n                    ./ontology-search.component.scss\n                \n                .ccf-ontology-search {\n  width: 25rem;\n  margin-top: 1.5rem;\n\n  .field {\n    margin-left: 1.5rem;\n    width: 100%;\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-end {\n      border-radius: 0 500px 500px 0;\n      margin: 0;\n    }\n\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n          height: 3rem;\n\n          input {\n            margin-left: .4rem;\n          }\n        }\n        .mat-form-field-suffix {\n          top: .5rem;\n          border: none;\n        }\n      }\n    }\n\n    .mat-form-field-outline-start {\n      border-radius: 500px 0 0 500px;\n      min-width: 40px;\n\t  }\n  }\n}\n\n::ng-deep .ccf-ontology-search.detached {\n  border: 2px solid;\n  border-top: none;\n  border-radius: 0 0 1rem 1rem;\n  max-height: 18rem;\n\n  .results-container {\n    width: 380px;\n    margin-bottom: 1rem;\n    overflow: auto;\n    max-height: 15rem;\n    scrollbar-width: thin;\n\n    mat-option {\n      height: 1.5rem;\n      width: 380px;\n      \n      .search-term {\n        text-decoration: underline;\n      }\n    }\n  }\n\n}\n\n.autocomplete-open {\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-start {\n      border-radius: 50% 0 0 0;\n      border-bottom: none;\n    }\n\n    .mat-form-field-outline-end {\n      border-radius: 0 1rem 0 0;\n      border-bottom: none;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{option.displayLabel[0]}}          {{option.displayLabel[1]}}          {{option.displayLabel[2]}}                      search  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySearchModule.html":{"url":"modules/OntologySearchModule.html","title":"module - OntologySearchModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/ontology-exploration/ontology-search/ontology-search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OntologySearchComponent } from './ontology-search.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  declarations: [OntologySearchComponent],\n  exports: [OntologySearchComponent]\n})\nexport class OntologySearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologySearchService.html":{"url":"injectables/OntologySearchService.html","title":"injectable - OntologySearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologySearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable OntologySearchService responsible for search result computations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootNode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                formatLabel\n                            \n                            \n                                getChildren\n                            \n                            \n                                getIndexOfMatch\n                            \n                            \n                                loadOntology\n                            \n                            \n                                    Private\n                                lookup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, store: Store, ontologyState: OntologyState)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/ontology-search/ontology-search.service.ts:107\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http requests service.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global data store.\n\n                                                        \n                                                \n                                                \n                                                        ontologyState\n                                                  \n                                                        \n                                                                        OntologyState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global ontology state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:142\n                \n            \n\n\n            \n                \n                    Searches the ontology with the search-term\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an array of search-results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatLabel\n                        \n                        \n                    \n                \n            \n            \n                \nformatLabel(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:200\n                \n            \n\n\n            \n                \n                    Formats label based on where the search-term was found in the OntologyNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        label or first synonym-label of OntologyNode which has the search-term\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search-term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        an array in the form of [prefix, search-term, suffix]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChildren\n                        \n                        \n                    \n                \n            \n            \n                \ngetChildren(node: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:216\n                \n            \n\n\n            \n                \n                    Fetches the children of an ontology node.\nNote: This can be called without a reference to this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node for which to get children.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyNode[]\n\n                    \n                    \n                        An array of children, empty if the node has no children.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIndexOfMatch\n                        \n                        \n                    \n                \n            \n            \n                \ngetIndexOfMatch(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:190\n                \n            \n\n\n            \n                \n                    Gets index of match in the ontology label\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the provided ontology node label or synonym label\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the searched text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the index of the match in the label\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadOntology\n                        \n                        \n                    \n                \n            \n            \n                \nloadOntology()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:124\n                \n            \n\n\n            \n                \n                    Loads ontology.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lookup(nodes: Immutable[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:154\n                \n            \n\n\n            \n                \n                    looks up ontology nodes and composes search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                Immutable[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ontology nodes\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SearchResult[]\n\n                    \n                    \n                        search results\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:107\n                            \n                        \n\n                \n                    \n                        Root node in ontology. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Immutable } from '@ngxs-labs/data/typings';\nimport { Store } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nimport { JsonOntologyNode, jsonToOntologyNode } from '../../models/json-ontology';\nimport { OntologyNode } from '../../models/ontology-node';\nimport { OntologyState, OntologyStateModel } from '../../store/ontology/ontology.state';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/** Type of function for getting child nodes from a parent node. */\nexport type GetChildrenFunc = (o: OntologyNode) => OntologyNode[];\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[''] = { parent: '', children: [] } as unknown as OntologyNode;\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[''].children) as string;\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[''];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = {\n    id: 'http://purl.obolibrary.org/obo/UBERON_0013702',\n    label: 'body',\n    parent: '',\n    children: organIds,\n    synonymLabels: []\n  };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /** Root node in ontology. */\n  rootNode: Observable>;\n\n  /**\n   * Creates an instance of ontology search service.\n   *\n   * @param http The http requests service.\n   * @param store The global data store.\n   * @param ontologyState The global ontology state.\n   */\n  constructor(private http: HttpClient, private store: Store, private ontologyState: OntologyState) {\n    this.rootNode = this.ontologyState.rootNode$;\n    this.getChildren = this.getChildren.bind(this) as GetChildrenFunc;\n  }\n\n  /**\n   * Loads ontology.\n   */\n  loadOntology(): void {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => this.ontologyState.setOntology(ontology));\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.ontologyState.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologySelection.html":{"url":"interfaces/OntologySelection.html","title":"interface - OntologySelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologySelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/ontology-selection.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         OntologyNode | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OntologyNode } from './ontology-node';\n\nexport interface OntologySelection {\n  location: OntologyNode | undefined;\n  id: string;\n  label: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySelectionComponent.html":{"url":"components/OntologySelectionComponent.html","title":"component - OntologySelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Ontology selection component that encapsulates ontology search and tree components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-selection\n            \n\n            \n                styleUrls\n                ./ontology-selection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ontologySearchService\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                occurenceData\n                            \n                            \n                                ontologyFilter\n                            \n                            \n                                termData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologySearchService: OntologySearchService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology selection component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologySearchService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for searching the ontology.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global state store.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        occurenceData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:28\n                            \n                        \n                \n                    \n                        A record of terms within the current filter.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ontologyFilter\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:40\n                            \n                        \n                \n                    \n                        Input list of selected ontology terms passed down to ontology-tree.\nUsed to change display of ontology tree when selection is made from\noutside the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        termData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:33\n                            \n                        \n                \n                    \n                        A record of terms the app currently has data for.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ontologySelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n                \n                    \n                        Captures and passes along the change in ontologySelections.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(ontologyNode: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:61\n                \n            \n\n\n            \n                \n                    Ontology selection event when node is selected from the search results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontologyNode\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected ontology node.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ontologySearchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologySearchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n\n                \n                    \n                        Service for searching the ontology.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tree\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologyTreeComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(OntologyTreeComponent, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        View child of search component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Output, EventEmitter, Input } from '@angular/core';\nimport { Store } from '@ngxs/store';\n\nimport { OntologyNode } from '../../../core/models/ontology-node';\nimport { OntologySearchService } from '../../../core/services/ontology-search/ontology-search.service';\nimport { OntologyState, OntologyStateModel } from '../../../core/store/ontology/ontology.state';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\nimport { OntologySelection } from '../../../core/models/ontology-selection';\n\n\n/**\n * Ontology selection component that encapsulates ontology search and tree components.\n */\n@Component({\n  selector: 'ccf-ontology-selection',\n  templateUrl: './ontology-selection.component.html',\n  styleUrls: ['./ontology-selection.component.scss']\n})\nexport class OntologySelectionComponent {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree: OntologyTreeComponent;\n\n  /**\n   * A record of terms within the current filter.  To be passed on to ontology-tree\n   */\n  @Input() occurenceData: Record;\n\n  /**\n   * A record of terms the app currently has data for.  To be passed on to ontology-tree\n   */\n  @Input() termData: Record;\n\n  /**\n   * Input list of selected ontology terms passed down to ontology-tree.\n   * Used to change display of ontology tree when selection is made from\n   * outside the component.\n   */\n  @Input() ontologyFilter: string[];\n\n  /**\n   * Captures and passes along the change in ontologySelections.\n   */\n  @Output() ontologySelection = new EventEmitter();\n\n  /**\n   * Creates an instance of ontology selection component.\n   * @param ontologySearchService Service for searching the ontology.\n   * @param store The global state store.\n   */\n  constructor(\n    public ontologySearchService: OntologySearchService,\n    private readonly store: Store\n  ) { }\n\n  /**\n   * Ontology selection event when node is selected from the search results.\n   * @param ontologyNode selected ontology node.\n   */\n  selected(ontologyNode: OntologyNode): void {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    this.tree.expandAndSelect(ontologyNode, node => nodes[node.parent]);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ontology-selection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySelectionModule.html":{"url":"modules/OntologySelectionModule.html","title":"module - OntologySelectionModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySelectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_imports\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/ontology-exploration/ontology-selection/ontology-selection.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { OntologySelectionComponent } from './ontology-selection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule\n  ],\n  declarations: [OntologySelectionComponent],\n  exports: [OntologySelectionComponent],\n})\nexport class OntologySelectionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologyState.html":{"url":"injectables/OntologyState.html","title":"injectable - OntologyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologyState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Ontology tree state.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                nodes$\n                            \n                            \n                                    Public\n                                    Readonly\n                                rootNode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setOntology\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOntology\n                        \n                        \n                    \n                \n            \n            \n                \nsetOntology(ontology: OntologyStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/ontology/ontology.state.ts:50\n                \n            \n\n\n            \n                \n                    Sets the ontology state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontology\n                                    \n                                                OntologyStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new state.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            nodes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(map(state => Object.values(state.nodes)))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/ontology/ontology.state.ts:39\n                            \n                        \n\n                \n                    \n                        All nodes in the ontology tree. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            rootNode$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(map(state => state.nodes[state.root]))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/ontology/ontology.state.ts:42\n                            \n                        \n\n                \n                    \n                        Root node of the ontology tree. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../models/ontology-node';\n\n\n/**\n * Data model for the ontology state.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n/**\n * Ontology tree state.\n */\n@StateRepository()\n@State({\n  name: 'ontology',\n  defaults: {\n    root: '',\n    nodes: {}\n  }\n})\n@Injectable()\nexport class OntologyState extends NgxsDataRepository {\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.state$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.state$.pipe(map(state => state.nodes[state.root]));\n\n  /**\n   * Sets the ontology state.\n   *\n   * @param ontology The new state.\n   */\n  @DataAction()\n  setOntology(ontology: OntologyStateModel): void {\n    this.ctx.setState(ontology);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyStateModel.html":{"url":"interfaces/OntologyStateModel.html","title":"interface - OntologyStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Data model for the ontology state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        nodes\n                                \n                                \n                                        root\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hash table of nodes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier of the root node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../models/ontology-node';\n\n\n/**\n * Data model for the ontology state.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n/**\n * Ontology tree state.\n */\n@StateRepository()\n@State({\n  name: 'ontology',\n  defaults: {\n    root: '',\n    nodes: {}\n  }\n})\n@Injectable()\nexport class OntologyState extends NgxsDataRepository {\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.state$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.state$.pipe(map(state => state.nodes[state.root]));\n\n  /**\n   * Sets the ontology state.\n   *\n   * @param ontology The new state.\n   */\n  @DataAction()\n  setOntology(ontology: OntologyStateModel): void {\n    this.ctx.setState(ontology);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyTreeModule.html":{"url":"modules/OntologyTreeModule.html","title":"module - OntologyTreeModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyTreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/ontology-exploration/ontology-tree/ontology-tree.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PictureInPictureViewer.html":{"url":"classes/PictureInPictureViewer.html","title":"class - PictureInPictureViewer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PictureInPictureViewer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ImageViewer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channelConfigs\n                            \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _loaders\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                deck\n                            \n                            \n                                    Protected\n                                layerConfigs\n                            \n                            \n                                    Protected\n                                layers\n                            \n                            \n                                    Readonly\n                                props\n                            \n                            \n                                    Protected\n                                states\n                            \n                            \n                                    Protected\n                                views\n                            \n                            \n                                    Protected\n                                vivViews\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Async\n                                createVivViews\n                            \n                            \n                                clear\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createVivViews\n                            \n                            \n                                finalize\n                            \n                            \n                                    Private\n                                initializeDeck\n                            \n                            \n                                    Private\n                                layerFilter\n                            \n                            \n                                    Private\n                                onViewStateChange\n                            \n                            \n                                    Private\n                                resetChannelConfigs\n                            \n                            \n                                    Async\n                                setSize\n                            \n                            \n                                    Async\n                                setSources\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Async\n                                updateChannelConfigs\n                            \n                            \n                                    Protected\n                                updateDeckProps\n                            \n                            \n                                    Protected\n                                updateLayers\n                            \n                            \n                                    Protected\n                                updateState\n                            \n                            \n                                    Protected\n                                updateViews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: PictureInPictureViewerProps)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        PictureInPictureViewerProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _channelConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:78\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:69\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Loader[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:74\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:73\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:68\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:86\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayerConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:83\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Layer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:82\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            props\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:84\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:81\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            vivViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VivView[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:80\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:169\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:168\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalize\n                        \n                        \n                    \n                \n            \n            \n                \nfinalize()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:110\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeDeck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDeck(props)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:212\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Deck\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            layerFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerFilter(undefined: LayerFilterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:244\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LayerFilterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewStateChange(undefined: OnViewStateChangeArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:250\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OnViewStateChangeArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChannelConfigs()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:231\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize(width: number, height: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:114\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSources(sources: DataSource[])\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:133\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            DataSource[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:171\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChannelConfigs(configs: Record>)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:148\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Record>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateDeckProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDeckProps(props: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:208\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(args: ValueOrGenerator | >)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:195\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ValueOrGenerator | >\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViews()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DetailView, OverviewView, OverviewViewNewArgs, VivView } from '@hubmap/vitessce-image-viewer';\n\nimport { ImageViewer, ImageViewerProps, LayerConfig } from './image-viewer';\n\nexport type OverviewArgs = Omit;\nexport interface PictureInPictureViewerProps extends ImageViewerProps {\n  overview: OverviewArgs;\n}\n\nconst OVERVIEW_DEFAULTS: Partial = {\n  margin: 25,\n  scale: 0.15,\n  position: 'bottom-left'\n};\n\nexport class PictureInPictureViewer extends ImageViewer {\n  constructor(props: PictureInPictureViewerProps) {\n    super({\n      ...props,\n      overview: { ...OVERVIEW_DEFAULTS, ...props.overview }\n    });\n  }\n\n  protected async createVivViews(): Promise {\n    const { loaders, width, height, props: { initialViewState, overview } } = this;\n    if (loaders.length === 0) { return []; }\n\n    const detailView = new DetailView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'detail',\n        width,\n        height\n      }\n    });\n\n    const overviewView = new OverviewView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'overview',\n        width,\n        height\n      },\n      loader: loaders[0],\n      ...overview\n    });\n\n    return [detailView, overviewView];\n  }\n\n  protected async createLayerConfigs(): Promise {\n    const { loaders, channelConfigs } = this;\n    if (loaders.length === 0) { return []; }\n\n    const loaderSelection: { channel: string }[] = [];\n    const channelIsOn: boolean[] = [];\n    const colorValues: [number, number, number][] = [];\n    const sliderValues: [number, number][] = [];\n    for (const [key, { active, color, slider }] of Object.entries(channelConfigs)) {\n      loaderSelection.push({ channel: key });\n      channelIsOn.push(active);\n      colorValues.push(color);\n      sliderValues.push(slider);\n    }\n\n    const isRgb = loaders[0].isRgb;\n    return [\n      {\n        loader: this.loaders[0],\n        loaderSelection,\n        channelIsOn: isRgb ? [true, true, true] : channelIsOn,\n        colorValues: isRgb ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]] : colorValues,\n        sliderValues: isRgb ? [[0, 255], [0, 255], [0, 255]] : sliderValues\n      }\n    ];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PictureInPictureViewerProps.html":{"url":"interfaces/PictureInPictureViewerProps.html","title":"interface - PictureInPictureViewerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PictureInPictureViewerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ImageViewerProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        overview\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                    \n                                \n                                \n                                    \n                                        overview:         OverviewArgs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OverviewArgs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DetailView, OverviewView, OverviewViewNewArgs, VivView } from '@hubmap/vitessce-image-viewer';\n\nimport { ImageViewer, ImageViewerProps, LayerConfig } from './image-viewer';\n\nexport type OverviewArgs = Omit;\nexport interface PictureInPictureViewerProps extends ImageViewerProps {\n  overview: OverviewArgs;\n}\n\nconst OVERVIEW_DEFAULTS: Partial = {\n  margin: 25,\n  scale: 0.15,\n  position: 'bottom-left'\n};\n\nexport class PictureInPictureViewer extends ImageViewer {\n  constructor(props: PictureInPictureViewerProps) {\n    super({\n      ...props,\n      overview: { ...OVERVIEW_DEFAULTS, ...props.overview }\n    });\n  }\n\n  protected async createVivViews(): Promise {\n    const { loaders, width, height, props: { initialViewState, overview } } = this;\n    if (loaders.length === 0) { return []; }\n\n    const detailView = new DetailView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'detail',\n        width,\n        height\n      }\n    });\n\n    const overviewView = new OverviewView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'overview',\n        width,\n        height\n      },\n      loader: loaders[0],\n      ...overview\n    });\n\n    return [detailView, overviewView];\n  }\n\n  protected async createLayerConfigs(): Promise {\n    const { loaders, channelConfigs } = this;\n    if (loaders.length === 0) { return []; }\n\n    const loaderSelection: { channel: string }[] = [];\n    const channelIsOn: boolean[] = [];\n    const colorValues: [number, number, number][] = [];\n    const sliderValues: [number, number][] = [];\n    for (const [key, { active, color, slider }] of Object.entries(channelConfigs)) {\n      loaderSelection.push({ channel: key });\n      channelIsOn.push(active);\n      colorValues.push(color);\n      sliderValues.push(slider);\n    }\n\n    const isRgb = loaders[0].isRgb;\n    return [\n      {\n        loader: this.loaders[0],\n        loaderSelection,\n        channelIsOn: isRgb ? [true, true, true] : channelIsOn,\n        colorValues: isRgb ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]] : colorValues,\n        sliderValues: isRgb ? [[0, 255], [0, 255], [0, 255]] : sliderValues\n      }\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PureImageViewerLayer.html":{"url":"interfaces/PureImageViewerLayer.html","title":"interface - PureImageViewerLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PureImageViewerLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/image-viewer-layer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        brightness\n                                \n                                \n                                        color\n                                \n                                \n                                        colorScheme\n                                \n                                \n                                        customizedColor\n                                \n                                \n                                        defaultOrder\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        selected\n                                \n                                \n                                        selectionOrder\n                                \n                                \n                                        transparency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brightness\n                                    \n                                \n                                \n                                    \n                                        brightness:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                    \n                                \n                                \n                                    \n                                        colorScheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customizedColor\n                                    \n                                \n                                \n                                    \n                                        customizedColor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOrder\n                                    \n                                \n                                \n                                    \n                                        defaultOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionOrder\n                                    \n                                \n                                \n                                    \n                                        selectionOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transparency\n                                    \n                                \n                                \n                                    \n                                        transparency:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColorScheme } from './color-scheme';\n\nexport interface PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number];\n  transparency: number;\n\n  selected: boolean;\n  customizedColor: boolean;\n  selectionOrder: number;\n  defaultOrder: number;\n}\n\nexport type ImageViewerLayerRequiredArgNames = 'id' | 'colorScheme';\nexport type ImageViewerLayerArgs =\n  Pick &\n  Partial>;\n\nexport class ImageViewerLayer implements PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number] = [20, 60];\n  transparency = 100;\n\n  selected = false;\n  customizedColor = false;\n  selectionOrder = 0;\n  defaultOrder = -1;\n\n  constructor(data: ImageViewerLayerArgs) {\n    Object.assign(this, {\n      label: data.id,\n      color: data.colorScheme.colors[0]\n    }, data);\n  }\n\n  /**\n   * Dynamically creates a background style based on the layer's color or color scheme\n   */\n  get background(): string {\n    if (this.colorScheme.type === 'discrete') {\n      return this.color;\n    }\n\n    const colors = this.colorScheme.colors;\n    const positions = this.colorScheme.positions;\n\n    let gradient = 'linear-gradient(to right, ';\n    colors.forEach((color, index) => {\n      gradient += `${color} ${positions[index] * 100}%`;\n      if (index  225 ? true : false;\n  }\n\n  /**\n   * Determines whether the color icon is dark enough to require a border (dark mode only)\n   */\n  isDark(): boolean {\n    return this.getBrightness() \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserComponent.html":{"url":"components/ResultsBrowserComponent.html","title":"component - ResultsBrowserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsBrowserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/results-browser/results-browser/results-browser.component.ts\n\n\n    \n        Description\n    \n    \n        ResultsBrowser is the container component in charge of rendering the label and stats of\nthe results as well as handling the virtual scrolling and click emitters of\nResultsBrowserItems.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser\n            \n\n            \n                styleUrls\n                ./results-browser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atScrollBottom\n                            \n                            \n                                selectedResult\n                            \n                            \n                                virtualScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aggregateData\n                            \n                            \n                                data\n                            \n                            \n                                dataLoading\n                            \n                            \n                                resultLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resultClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aggregateData\n                    \n                \n                \n                    \n                        Type :         AggregateResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:26\n                            \n                        \n                \n                    \n                        Input used to add a list of stats at the top the results browser.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ListResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:21\n                            \n                        \n                \n                    \n                        Input array of items used to generate the list of results in the results browser.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dataLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:36\n                            \n                        \n                \n                    \n                        Whether or not the state is currently loading in data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resultLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:31\n                            \n                        \n                \n                    \n                        Input allowing the title of the result browser to be set outside of the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resultClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:42\n                            \n                        \n                \n                    \n                        Output emitting the result that was clicked on and its relevant information.\nUsed for opening and rendering the result viewer.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:74\n                \n            \n\n\n            \n                \n                    After the view is initialized this is listening for scroll events to check whether or not the\nuser has reached the bottom of the virtual scroll viewport to properly display / hide the\ngradient at the bottom.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:63\n                \n            \n\n\n            \n                \n                    Re-Checks whether or not we need the gradient to be displayed everytime the data reloads.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            atScrollBottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:53\n                            \n                        \n\n                \n                    \n                        Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\nUsed to determine whether or not to render the gradient at the bottom.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListResult\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:58\n                            \n                        \n\n                \n                    \n                        Keeps track of the selected result for highlighting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            virtualScroll\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CdkVirtualScrollViewport\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CdkVirtualScrollViewport)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:47\n                            \n                        \n\n                \n                    \n                        Linking the virtual scroll viewport in the html page to the ts page.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { AggregateResult, ListResult } from 'ccf-database';\n\n\n/**\n * ResultsBrowser is the container component in charge of rendering the label and stats of\n * the results as well as handling the virtual scrolling and click emitters of\n * ResultsBrowserItems.\n */\n@Component({\n  selector: 'ccf-results-browser',\n  templateUrl: './results-browser.component.html',\n  styleUrls: ['./results-browser.component.scss']\n})\nexport class ResultsBrowserComponent implements AfterViewInit, OnChanges {\n\n  /**\n   * Input array of items used to generate the list of results in the results browser.\n   */\n  @Input() data: ListResult[];\n\n  /**\n   * Input used to add a list of stats at the top the results browser.\n   */\n  @Input() aggregateData: AggregateResult[];\n\n  /**\n   * Input allowing the title of the result browser to be set outside of the component.\n   */\n  @Input() resultLabel: string;\n\n  /**\n   * Whether or not the state is currently loading in data.\n   */\n  @Input() dataLoading: boolean;\n\n  /**\n   * Output emitting the result that was clicked on and its relevant information.\n   * Used for opening and rendering the result viewer.\n   */\n  @Output() resultClicked = new EventEmitter();\n\n  /**\n   * Linking the virtual scroll viewport in the html page to the ts page.\n   */\n  @ViewChild(CdkVirtualScrollViewport) virtualScroll: CdkVirtualScrollViewport;\n\n  /**\n   * Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\n   * Used to determine whether or not to render the gradient at the bottom.\n   */\n  atScrollBottom = false;\n\n  /**\n   * Keeps track of the selected result for highlighting\n   */\n  selectedResult: ListResult;\n\n  /**\n   * Re-Checks whether or not we need the gradient to be displayed everytime the data reloads.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.dataLoading && !this.dataLoading) {\n      this.atScrollBottom = this.virtualScroll.measureScrollOffset('bottom') === 0;\n    }\n  }\n\n  /**\n   * After the view is initialized this is listening for scroll events to check whether or not the\n   * user has reached the bottom of the virtual scroll viewport to properly display / hide the\n   * gradient at the bottom.\n   */\n  ngAfterViewInit(): void {\n    this.virtualScroll.elementScrolled()\n      .subscribe(event => {\n        if (this.virtualScroll.measureScrollOffset('bottom') \n    \n\n    \n        \n  \n    {{ resultLabel }}\n    \n      {{stat.count}}\n      {{stat.label}}\n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./results-browser.component.scss\n                \n                .results-browser-container {\n    display: flex;\n    flex-direction: column;\n    height: calc(100% - 7rem);\n    padding: .75rem 1.5rem 1.5rem 1.5rem;\n\n    .stat-box {\n        margin-bottom: 1.5rem;\n        line-height: 1.25;\n\n        #title {\n            margin-bottom: .75rem;\n            font-weight: bold;\n        }\n\n        .stat-row {\n            display: flex;\n            flex-direction: row;\n\n            .stat-value {\n                margin-right: 1rem;\n                width: 5.5rem;\n                text-align: right;\n            }\n        }\n    }\n\n    .results-virtual-scroll {\n        flex-grow: 1;\n        scrollbar-width: thin;\n\n        .results-browser-list {\n            display: flex;\n            flex-direction: row;\n            flex-wrap: wrap;\n        }\n    }\n\n    .scroll-gradient {\n        position: absolute;\n        height: 9rem;\n        width: 95%;\n        bottom: 0;\n    }\n    .scroll-gradient.hidden {\n        display: none;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ resultLabel }}          {{stat.count}}      {{stat.label}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserItemComponent.html":{"url":"components/ResultsBrowserItemComponent.html","title":"component - ResultsBrowserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsBrowserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts\n\n\n    \n        Description\n    \n    \n        Component in charge of rendering the individual result browser items that are\nused in the ResultsBrowserComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser-item\n            \n\n            \n                styleUrls\n                ./results-browser-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                openImageViewer\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ListResult\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:19\n                            \n                        \n                \n                    \n                        Input object containing the label, download, click action,\nand image information for the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        openImageViewer\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:24\n                            \n                        \n                \n                    \n                        Output used to pass up the intent to open the ImageViewer\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openResult\n                        \n                        \n                    \n                \n            \n            \n                \nopenResult()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:30\n                \n            \n\n\n            \n                \n                    Decided which action to take based on the result's resultType property\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ListResult } from 'ccf-database';\n\n\n/**\n * Component in charge of rendering the individual result browser items that are\n * used in the ResultsBrowserComponent.\n */\n@Component({\n  selector: 'ccf-results-browser-item',\n  templateUrl: './results-browser-item.component.html',\n  styleUrls: ['./results-browser-item.component.scss']\n})\nexport class ResultsBrowserItemComponent {\n  /**\n   * Input object containing the label, download, click action,\n   * and image information for the component.\n   */\n  @Input() data: ListResult;\n\n  /**\n   * Output used to pass up the intent to open the ImageViewer\n   */\n  @Output() openImageViewer = new EventEmitter();\n\n  /**\n   * Decided which action to take based on the result's resultType property\n   * @param result the result which was clicked on\n   */\n  openResult(): void {\n    switch (this.data.resultType) {\n      case ('image_viewer'): {\n        // Open the image-viewer\n        this.openImageViewer.emit();\n        break;\n      }\n      case ('external_link'): {\n        // Open link in new tab\n        window.open(this.data.resultUrl, '_blank');\n        break;\n      }\n      case ('local_link'): {\n        // Open link in current tab\n        window.open(this.data.resultUrl, '_self');\n        break;\n      }\n      default: {\n        // When no resultType is set, image viewer is the default\n        this.openImageViewer.emit();\n        break;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n\n    \n      {{ data.label }}\n      {{ info }}\n    \n  \n\n  \n    \n      cloud_download\n    \n  \n  \n    \n      cloud_download\n    \n  \n\n\n    \n\n    \n                \n                    ./results-browser-item.component.scss\n                \n                @use '~@angular/material/theming' as *;\n\n.result-item {\n    border-top: 1px solid;\n    padding: .5rem;\n    display: flex;\n    flex-direction: row;\n    height: 4rem;\n\n    .result-item-click-area {\n        display: flex;\n        cursor: pointer;\n\n        .result-image {\n            width: 5rem;\n            height: 100%;\n            object-fit: cover;\n        }\n\n        .result-image-placeholder {\n            width: 5rem;\n        }\n\n        .result-description {\n            width: 15rem;\n            font-size: .625rem;\n            margin-left: 1rem;\n            margin-right: 1rem;\n            line-height: 1.25;\n\n            div {\n                width: 10rem;\n            }\n\n            .description-label {\n                font-weight: bold !important;\n            }\n\n            .description-data {\n                text-overflow: ellipsis;\n                overflow: hidden;\n                white-space: nowrap;\n                font-weight: lighter;\n            }\n        }\n    }\n\n    .result-download {\n        width: 1.5rem;\n\n        .download {\n            cursor: pointer;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ data.label }}      {{ info }}                  cloud_download                  cloud_download      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserItemModule.html":{"url":"modules/ResultsBrowserItemModule.html","title":"module - ResultsBrowserItemModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResultsBrowserItemModule\n\n\n\ncluster_ResultsBrowserItemModule_declarations\n\n\n\ncluster_ResultsBrowserItemModule_exports\n\n\n\n\nResultsBrowserItemComponent\n\nResultsBrowserItemComponent\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule -->\n\nResultsBrowserItemComponent->ResultsBrowserItemModule\n\n\n\n\n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent  -->\n\nResultsBrowserItemModule->ResultsBrowserItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/results-browser/results-browser-item/results-browser-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResultsBrowserItemComponent } from './results-browser-item.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [ResultsBrowserItemComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [ResultsBrowserItemComponent]\n})\nexport class ResultsBrowserItemModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserModule.html":{"url":"modules/ResultsBrowserModule.html","title":"module - ResultsBrowserModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_imports\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserModule -->\n\nResultsBrowserItemModule->ResultsBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/results-browser/results-browser/results-browser.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResultsBrowserItemModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResultsBrowserItemModule } from '../results-browser-item/results-browser-item.module';\nimport { ResultsBrowserComponent } from './results-browser.component';\n\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\n\n@NgModule({\n  declarations: [ResultsBrowserComponent],\n  imports: [\n    CommonModule,\n    ResultsBrowserItemModule,\n    ScrollingModule\n  ],\n  exports: [ResultsBrowserComponent]\n})\nexport class ResultsBrowserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchemeDropdownComponent.html":{"url":"components/SchemeDropdownComponent.html","title":"component - SchemeDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SchemeDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/scheme-dropdown/scheme-dropdown.component.ts\n\n\n    \n        Description\n    \n    \n        Scheme dropdown menu (for the Layers section)\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-scheme-dropdown\n            \n\n            \n                styleUrls\n                ./scheme-dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scheme-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                schemeIdx\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                schemeChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colorScheme\n                    \n                \n                \n                    \n                        Type :         ColorScheme\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES[0]\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Current color scheme\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:18\n                            \n                        \n                \n                    \n                        All scheme options available\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Emits ColorSchemeSelection of a selected scheme\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:38\n                \n            \n\n\n            \n                \n                    Filters out scheme options to include only discrete schemes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            schemeChanged\n                        \n                        \n                    \n                \n            \n            \n                \nschemeChanged(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:46\n                \n            \n\n\n            \n                \n                    Updates the current scheme index and emits the currently selected scheme\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeIdx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:33\n                            \n                        \n\n                \n                    \n                        Index of the currently selected scheme\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../../modules/color-scheme/color-schemes';\n\n/**\n * Scheme dropdown menu (for the Layers section)\n */\n@Component({\n  selector: 'ccf-scheme-dropdown',\n  templateUrl: './scheme-dropdown.component.html',\n  styleUrls: ['./scheme-dropdown.component.scss']\n})\nexport class SchemeDropdownComponent implements OnInit {\n\n  /**\n   * All scheme options available\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * Current color scheme\n   */\n  @Input() colorScheme: ColorScheme = DEFAULT_COLOR_SCHEMES[0];\n\n  /**\n   * Emits ColorSchemeSelection of a selected scheme\n   */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Index of the currently selected scheme\n   */\n  schemeIdx = 0;\n\n  /**\n   * Filters out scheme options to include only discrete schemes\n   */\n  ngOnInit(): void {\n    this.schemeOptions = this.schemeOptions.filter(scheme => scheme.type === 'discrete');\n    this.schemeChanged(0);\n  }\n\n  /**\n   * Updates the current scheme index and emits the currently selected scheme\n   */\n  schemeChanged(idx: number): void {\n    this.colorScheme = this.schemeOptions[idx];\n    this.schemeIdx = idx;\n    this.schemeChange.emit(this.colorScheme);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./scheme-dropdown.component.scss\n                \n                .container {\n  display: flex;\n  justify-content: flex-end;\n  width: 104%;\n  height: 3rem;\n\n  mat-form-field {\n    width: 9rem;\n\n    ::ng-deep .mat-form-field-wrapper {\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n// Disable label resizing effect\n::ng-deep .mat-form-field-label {\n  transform: none !important;\n}\n\n::ng-deep .scheme-option-panel {\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  border-width: 1px;\n  border-style: solid;\n  position: absolute;\n  right: -10rem;\n  top: -1rem;\n  display: flex;\n  flex-direction: column;\n  width: 12rem;\n  height: 9rem;\n\n  mat-option:first-child {\n    margin-top: 0.75rem;\n  }\n  mat-option:last-of-type {\n    margin-bottom: 0.75rem;\n  }\n\n  mat-option {\n    .mat-option-text {\n      display: flex;\n      justify-content: center;\n\n      .mat-radio-checked {\n        .mat-radio-label {\n          .mat-radio-container {\n            .mat-radio-outer-circle {\n              border-width: 0 !important;\n            }\n          }\n        }\n      }\n\n      .scheme-radio-button {\n        .mat-radio-label {\n          .mat-radio-container {\n            width: 1rem;\n            height: 1rem;\n            .mat-radio-outer-circle {\n              width: 1rem;\n              height: 1rem;\n              border-width: 1px; \n              border-style: solid;\n            }\n            .mat-radio-inner-circle {\n              width: 1rem;\n              height: 1rem;\n            }\n          }\n          .mat-radio-label-content {\n            padding-left: 1rem;\n          }\n        }\n\n        .swatch {\n          display: flex;\n          width: 7rem;\n          height: 1rem;\n\n          :hover {\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SchemeDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchemeDropdownModule.html":{"url":"modules/SchemeDropdownModule.html","title":"module - SchemeDropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    SchemeDropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchemeDropdownModule\n\n\n\ncluster_SchemeDropdownModule_declarations\n\n\n\ncluster_SchemeDropdownModule_imports\n\n\n\ncluster_SchemeDropdownModule_exports\n\n\n\n\nSchemeDropdownComponent\n\nSchemeDropdownComponent\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nSchemeDropdownModule -->\n\nSchemeDropdownComponent->SchemeDropdownModule\n\n\n\n\n\nSchemeDropdownComponent \n\nSchemeDropdownComponent \n\nSchemeDropdownComponent  -->\n\nSchemeDropdownModule->SchemeDropdownComponent \n\n\n\n\n\nColorBarModule\n\nColorBarModule\n\nSchemeDropdownModule -->\n\nColorBarModule->SchemeDropdownModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/scheme-dropdown/scheme-dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SchemeDropdownComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorBarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SchemeDropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ColorBarModule } from '../../modules/color-scheme/color-bar/color-bar.module';\nimport { SchemeDropdownComponent } from './scheme-dropdown.component';\n\n@NgModule({\n  declarations: [SchemeDropdownComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRadioModule,\n    ColorBarModule\n  ],\n  exports: [SchemeDropdownComponent]\n})\nexport class SchemeDropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Search result interface type for the search results\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayLabel\n                                \n                                \n                                        index\n                                \n                                \n                                        node\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayLabel\n                                    \n                                \n                                \n                                    \n                                        displayLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label to be displayed in the view \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ensures order of search-results \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:         OntologyNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    instance of OntologyNode, provides data associated with a search result \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Immutable } from '@ngxs-labs/data/typings';\nimport { Store } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nimport { JsonOntologyNode, jsonToOntologyNode } from '../../models/json-ontology';\nimport { OntologyNode } from '../../models/ontology-node';\nimport { OntologyState, OntologyStateModel } from '../../store/ontology/ontology.state';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/** Type of function for getting child nodes from a parent node. */\nexport type GetChildrenFunc = (o: OntologyNode) => OntologyNode[];\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[''] = { parent: '', children: [] } as unknown as OntologyNode;\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[''].children) as string;\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[''];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = {\n    id: 'http://purl.obolibrary.org/obo/UBERON_0013702',\n    label: 'body',\n    parent: '',\n    children: organIds,\n    synonymLabels: []\n  };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /** Root node in ontology. */\n  rootNode: Observable>;\n\n  /**\n   * Creates an instance of ontology search service.\n   *\n   * @param http The http requests service.\n   * @param store The global data store.\n   * @param ontologyState The global ontology state.\n   */\n  constructor(private http: HttpClient, private store: Store, private ontologyState: OntologyState) {\n    this.rootNode = this.ontologyState.rootNode$;\n    this.getChildren = this.getChildren.bind(this) as GetChildrenFunc;\n  }\n\n  /**\n   * Loads ontology.\n   */\n  loadOntology(): void {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => this.ontologyState.setOntology(ontology));\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.ontologyState.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchableItem.html":{"url":"interfaces/SearchableItem.html","title":"interface - SearchableItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchableItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Item that can be searched for. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        age\n                                \n                                \n                                            Optional\n                                        bmi\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        ontologyTerms\n                                \n                                \n                                            Optional\n                                        sex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Age. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                    \n                                \n                                \n                                    \n                                        bmi:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    BMI. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ontology terms. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Gender. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntity.html":{"url":"interfaces/SpatialEntity.html","title":"interface - SpatialEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                A spatial entity. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        creation_date\n                                \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                            Optional\n                                        creator_first_name\n                                \n                                \n                                            Optional\n                                        creator_last_name\n                                \n                                \n                                            Optional\n                                        creator_orcid\n                                \n                                \n                                        dimension_units\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        object\n                                \n                                \n                                        x_dimension\n                                \n                                \n                                        y_dimension\n                                \n                                \n                                        z_dimension\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Coloring. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creation date. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator first name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator last name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_orcid\n                                    \n                                \n                                \n                                    \n                                        creator_orcid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units dimensions are in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    IRI of the Entity this Spatial Entity represents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Entity label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Data references. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z-dimension. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReference.html":{"url":"interfaces/SpatialObjectReference.html","title":"interface - SpatialObjectReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialObjectReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                A reference to a spatial object. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        file\n                                \n                                \n                                        file_format\n                                \n                                \n                                            Optional\n                                        file_subpath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data file name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data format. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_subpath\n                                    \n                                \n                                \n                                    \n                                        file_subpath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File subpath. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacement.html":{"url":"interfaces/SpatialPlacement.html","title":"interface - SpatialPlacement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialPlacement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                Object describing the placement of an entity. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        placement_date\n                                \n                                \n                                            Optional\n                                        rotation_order\n                                \n                                \n                                        rotation_units\n                                \n                                \n                                        scaling_units\n                                \n                                \n                                        source\n                                \n                                \n                                        target\n                                \n                                \n                                        translation_units\n                                \n                                \n                                            Optional\n                                        w_rotation\n                                \n                                \n                                        x_rotation\n                                \n                                \n                                        x_scaling\n                                \n                                \n                                        x_translation\n                                \n                                \n                                        y_rotation\n                                \n                                \n                                        y_scaling\n                                \n                                \n                                        y_translation\n                                \n                                \n                                        z_rotation\n                                \n                                \n                                        z_scaling\n                                \n                                \n                                        z_translation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date placement was made. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_order\n                                    \n                                \n                                \n                                    \n                                        rotation_order:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Order rotations should be applied in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units rotation is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units scaling is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     SpatialEntity | SpatialObjectReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialEntity | SpatialObjectReference\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Source entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         SpatialEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialEntity\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Target entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units translation is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        w_rotation\n                                    \n                                \n                                \n                                    \n                                        w_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Rotation in w-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in z-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in z-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in z-dimension. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-scene.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _lighting\n                                \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        scenegraph\n                                \n                                \n                                            Optional\n                                        scenegraphNode\n                                \n                                \n                                        tooltip\n                                \n                                \n                                        transformMatrix\n                                \n                                \n                                            Optional\n                                        unpickable\n                                \n                                \n                                            Optional\n                                        wireframe\n                                \n                                \n                                            Optional\n                                        zoomBasedOpacity\n                                \n                                \n                                            Optional\n                                        zoomToOnLoad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport { getSpatialEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { ccf, rui } from './util/prefixes';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': 'SpatialSceneNode';\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return getSpatialEntity(this.db.store, bodyId);\n  }\n\n  getReferenceOrgans(filter?: Filter): SpatialEntity[] {\n    let organsId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        organsId = ccf.spatial.MaleOrgans.id;\n        break;\n      case 'Female':\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n      case 'Both':\n      default:\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n    }\n    return [getSpatialEntity(this.db.store, organsId)];\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const wholeBody = getSpatialEntity(this.db.store, ccf.spatial.Body.id);\n    const body = this.getReferenceBody(filter);\n    const organs = getSpatialEntity(this.db.store, ccf.spatial.MaleOrgans.id);\n    const store = this.db.store;\n    const terms = filter?.ontologyTerms || [];\n    const hasTerm = {\n      body: terms.indexOf(rui.body.id) === 0,\n      kidney: terms.indexOf(rui.kidney.id) === 0,\n      right_kidney: terms.indexOf(rui.right_kidney.id) === 0,\n      left_kidney: terms.indexOf(rui.left_kidney.id) === 0,\n      spleen: terms.indexOf(rui.spleen.id) === 0,\n    };\n\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      this.getSceneNode(body, wholeBody, {unpickable: true, color: [255, 255, 255, 1*255]}),\n      ...this.getReferenceOrgans(filter).map((organ) =>\n        this.getSceneNode(organ, body, {unpickable: true, _lighting: 'pbr', zoomBasedOpacity: true,  color: [255, 0, 0, 1*255]})\n      ),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.right_kidney, zoomToOnLoad: hasTerm.right_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.left_kidney, zoomToOnLoad: hasTerm.left_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleen').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.spleen, zoomToOnLoad: hasTerm.spleen})\n    ];\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), wholeBody, {color: [0, 0, 255, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), wholeBody, {color: [255, 0, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC1').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC2').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC3').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true})\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const highlighted = new Set(filter?.highlightedEntities);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, {\n        color: highlighted.has(entity.entityId as string) ? [10, 10, 229, 0.9*255] : [255, 255, 255, 0.9*255]\n      })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial = {}): SpatialSceneNode | undefined {\n    const has3dObject = source.object && source.object.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4().rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId || undefined,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      } as SpatialSceneNode;\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode-1.html":{"url":"interfaces/SpatialSceneNode-1.html","title":"interface - SpatialSceneNode-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _lighting\n                                \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        scenegraph\n                                \n                                \n                                            Optional\n                                        scenegraphNode\n                                \n                                \n                                        tooltip\n                                \n                                \n                                        transformMatrix\n                                \n                                \n                                            Optional\n                                        unpickable\n                                \n                                \n                                            Optional\n                                        wireframe\n                                \n                                \n                                            Optional\n                                        zoomBasedOpacity\n                                \n                                \n                                            Optional\n                                        zoomToOnLoad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { load, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { CubeGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\n\n// Programmers Note: had to disable tslint in a few places due to deficient typings.\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\n// tslint:disable: no-unsafe-any\nasync function loadGLTF(model: SpatialSceneNode): Promise {\n  const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n\n  const scenegraphNode = model.scenegraphNode ? gltf.nodes?.find((n) => n.name === model.scenegraphNode) : undefined;\n  if (scenegraphNode) {\n    if (!scenegraphNode.rotation && gltf.scene?.nodes?.length > 0) {\n      scenegraphNode.rotation = gltf.scene.nodes[gltf.scene.nodes.length-1].rotation;\n    }\n    gltf.scene = {\n      id: 'scene-1',\n      name: 'Scene',\n      nodes: [scenegraphNode]\n    };\n    gltf.scenes = [gltf.scene, ...gltf.scenes];\n  }\n  return gltf;\n}\n// tslint:enable: no-unsafe-any\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: {[key: string]: unknown}): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // tslint:disable-next-line: no-unsafe-any\n        mesh: new CubeGeometry(),\n        wireframe: false,\n        getTransformMatrix: (d) => (d as {transformMatrix: number[][]}).transformMatrix,\n        getColor: (d) => (d as {color: [number, number, number, number]}).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({data: data || [], zoomOpacity: 0.8});\n\n    // tslint:disable-next-line: no-unsafe-any\n    registerLoaders([DracoWorkerLoader, GLTFLoader]);\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as {data: SpatialSceneNode[], zoomOpacity: number};\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    return [\n      meshLayer('cubes', cubes, {wireframe: false}),\n      meshLayer('wireframes', wireframes, {wireframe: true, pickable: false}),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          ...{\n            id: 'models-' + model['@id'],\n            opacity: model.zoomBasedOpacity ? state.zoomOpacity : 1.0,\n            pickable: !model.unpickable,\n            coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n            data: [model],\n            scenegraph: model.scenegraphNode ? loadGLTF(model) : model.scenegraph,\n            _lighting: model._lighting,  // 'pbr' | undefined\n            getTransformMatrix: model.transformMatrix,\n            getColor: model.color || [0, 255, 0, 0.5*255],\n          }\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(e: {info: object}): unknown {\n    return e.info;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerOverlayComponent.html":{"url":"components/SpinnerOverlayComponent.html","title":"component - SpinnerOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n\n\n    \n        Description\n    \n    \n        Overlay component that displays a progress spinner and\nan optional text description.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spinner-overlay\n            \n\n            \n                styleUrls\n                ./spinner-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:19\n                            \n                        \n                \n                    \n                        Whether the overlay is active/showing. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:22\n                            \n                        \n                \n                    \n                        Optional text description displayed alongside the spinner. \n\n                    \n                \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-spinner-overlay'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Overlay component that displays a progress spinner and\n * an optional text description.\n */\n@Component({\n  selector: 'ccf-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerOverlayComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spinner-overlay';\n\n  /** Whether the overlay is active/showing. */\n  @Input() @HostBinding('class.active') active = false;\n\n  /** Optional text description displayed alongside the spinner. */\n  @Input() text: string;\n}\n\n    \n\n    \n        \n{{ text }}\n\n    \n\n    \n                \n                    ./spinner-overlay.component.scss\n                \n                :host {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 4rem);\n  top: 4rem;\n  z-index: 100;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.6s, opacity 0.4s ease-in-out;\n\n  mat-spinner {\n    margin-bottom: 1rem;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out 0.3s;\n  }\n\n  &.active {\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n\n    mat-spinner {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpinnerOverlayModule.html":{"url":"modules/SpinnerOverlayModule.html","title":"module - SpinnerOverlayModule","body":"\n                   \n\n\n\n\n    Modules\n    SpinnerOverlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/spinner-overlay/spinner-overlay.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerOverlayComponent],\n  exports: [SpinnerOverlayComponent]\n})\nexport class SpinnerOverlayModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/store/store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { environment } from '../../../environments/environment';\nimport { DataState } from './data/data.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { OntologyState } from './ontology/ontology.state';\nimport { ViewerState } from './viewer/viewer.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  IconRegistryState,\n  DataState,\n  OntologyState,\n  ViewerState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/theming/theming.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                component\n                            \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                    Private\n                                initializeImpl\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/theming/theming.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyThemeClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:82\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:37\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:20\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeImpl(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:67\n                \n            \n\n\n            \n                \n                    Implementation of initialize.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The top level component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetTheme\n                        \n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:56\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:46\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theming/theming.service.ts:13\n                            \n                        \n\n                \n                    \n                        Top level component on which themes are applied. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theming/theming.service.ts:15\n                            \n                        \n\n                \n                    \n                        Default theme class. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theming/theming.service.ts:17\n                            \n                        \n\n                \n                    \n                        Currently active theme class. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, Inject, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  /** Top level component on which themes are applied. */\n  private component?: ComponentRef;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const service = component.injector.get(ThemingService);\n    service.initializeImpl(component);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme || '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) { return; }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Implementation of initialize.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  private initializeImpl(component: ComponentRef): void {\n    if (this.component) {\n      throw new Error('Theming service has already been initialized!');\n    }\n\n    this.component = component;\n    this.applyThemeClass(this.theme);\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const component = this.component;\n    if (!cls || !component) { return; }\n\n    const renderer = component.injector.get(Renderer2, null);\n    if (!renderer) { return; }\n\n    const root = component.location.nativeElement as HTMLElement;\n    const overlay = component.injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) { renderer[methodName](overlay, cls); }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TiffInfo.html":{"url":"interfaces/TiffInfo.html","title":"interface - TiffInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TiffInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        offsets\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offsets\n                                    \n                                \n                                \n                                    \n                                        offsets:     string | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Loader, createZarrLoader, OMEZarrReader, createOMETiffLoader } from '@hubmap/vitessce-image-viewer';\n\nexport enum LoaderType {\n  Zarr = 'zarr',\n  OMEZarr = 'ome-zarr',\n  StaticZarr = 'static',\n\n  Tiff = 'tiff',\n  Tiff2 = 'tiff 2',\n  BFTiff = 'bf tiff',\n  CovidTiff = 'covid tiff',\n  StaticTiff = 'static tiff'\n}\n\n// createLoader info argument types\nexport type ZarrInfo = Parameters[0];\nexport interface OMEZarrInfo {\n  url: string;\n}\nexport interface TiffInfo {\n  url: string;\n  offsets?: string | number[];\n}\n\n// Copied from vitessce-image-viewer demo source\nexport async function createLoader(\n  type: LoaderType,\n  info: ZarrInfo | OMEZarrInfo | TiffInfo\n): Promise {\n  switch (type) {\n    case LoaderType.Zarr:\n    case LoaderType.StaticZarr:\n      return createZarrLoader(info as ZarrInfo);\n\n    case LoaderType.OMEZarr: {\n      const { url } = info as OMEZarrInfo;\n      const reader = await OMEZarrReader.fromUrl(url);\n      const { loader } = await reader.loadOMEZarr();\n      return loader;\n    }\n\n    case LoaderType.Tiff:\n    case LoaderType.Tiff2:\n    case LoaderType.BFTiff:\n    case LoaderType.CovidTiff:\n    case LoaderType.StaticTiff: {\n      const { url, offsets = [] } = info as TiffInfo;\n      return createOMETiffLoader({ url, offsets: await loadOffsets(offsets) });\n    }\n\n    default:\n      throw Error(`Pyramid type (${type}) is not supported`);\n  }\n}\n\nasync function loadOffsets(url: string | number[]): Promise {\n  if (typeof url !== 'string') { return url; }\n  const res = await fetch(url);\n  return res.status !== 404 ? await res.json() as number[] : [];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-toggle-button'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether this button is attach to a drawer in position 'end'. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:79\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:59\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:69\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:91\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the owning drawer is opened. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"start\" | \"end\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'start'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:34\n                            \n                        \n\n                \n                    \n                        Position of the owning side drawer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:25\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'keyboard_arrow_right';\n    let collapse = 'keyboard_arrow_left';\n    if (this.position === 'end') { ([expand, collapse] = [collapse, expand]); }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0px 4px 4px 0px;\n  cursor: pointer;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 4px 0px 0px 4px;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  transform: scale(1,2);\n  top: .6rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValueObject.html":{"url":"interfaces/ValueObject.html","title":"interface - ValueObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValueObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@value' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @value\n                                    \n                                \n                                \n                                    \n                                        @value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@value' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerComponent.html":{"url":"components/ViewerComponent.html","title":"component - ViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/viewer/viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-viewer\n            \n\n            \n                styleUrls\n                ./viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _layers\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                canvas\n                            \n                            \n                                isDemo\n                            \n                            \n                                    Private\n                                sensor\n                            \n                            \n                                    Private\n                                viewer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                sourcesFromUrls\n                            \n                            \n                                    Private\n                                    Async\n                                updateLayers\n                            \n                            \n                                    Private\n                                    Async\n                                updateSources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                            \n                                sources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                channelsChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sources\n                                \n                                \n                                    layers\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(container: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        channelsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:76\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sourcesFromUrls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sourcesFromUrls(urls: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urls\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DataSource[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            updateSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSources()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ImageViewerLayer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDemo\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sensor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResizeSensor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageViewer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:81\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n\n                \n                    \n                        getsources()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:63\n                                \n                            \n\n                \n                    \n                        setsources(urls: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            urls\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n\n                \n                    \n                        getlayers()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:73\n                                \n                            \n\n                \n                    \n                        setlayers(layers: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:69\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layers\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { ChannelConfig, DataSource, ImageViewer, LoaderType, PictureInPictureViewer, TiffInfo } from 'ccf-image-viewer';\nimport { ResizeSensor } from 'css-element-queries';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\nconst DEMO_SOURCE: DataSource = {\n  type: LoaderType.Tiff,\n  info: {\n    url: 'https://vitessce-demo-data.storage.googleapis.com/test-data/hubmap/pyramid_0.0.2/spraggins.ome.tif'\n  }\n};\n\nfunction hexToRgbTriple(hex: string): [number, number, number] {\n  // tslint:disable: no-bitwise\n  if (hex === undefined || hex.length !== 7) {\n    return [255, 255, 255];\n  }\n\n  const value = Number.parseInt(hex.slice(1), 16) | 0;\n  if (Number.isNaN(value)) {\n    return [255, 255, 255];\n  }\n\n  const red = (value >> 16) & 0xff;\n  const green = (value >> 8) & 0xff;\n  const blue = value & 0xff;\n\n  return [red, green, blue];\n  // tslint:enable: no-bitwise\n}\n\nfunction brightnessToSlider(brightness: [number, number]): [number, number] {\n  const SLIDER_MAX = 2 ** 16 - 1;\n  return [\n    Math.trunc(SLIDER_MAX * brightness[0] / 100),\n    Math.trunc(SLIDER_MAX * brightness[1] / 100)\n  ];\n}\n\n@Component({\n  selector: 'ccf-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewerComponent implements AfterViewInit, OnDestroy {\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set sources(urls: string[]) {\n    this._sources = this.sourcesFromUrls(urls);\n    this.isDemo = false;\n    if (this._sources.length === 0) {\n      this._sources = []; // Disabled showing demo image via [DEMO_SOURCE]\n      this.isDemo = true;\n    }\n\n    this.clear();\n    this.updateSources();\n  }\n  get sources(): string[] {\n    return this._sources.map(source => (source.info as TiffInfo).url);\n  }\n  private _sources: DataSource[] = []; // Disabled showing demo image via [DEMO_SOURCE]\n\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set layers(layers: ImageViewerLayer[]) {\n    this._layers = layers;\n    this.updateLayers();\n  }\n  get layers(): ImageViewerLayer[] { return this._layers; }\n  private _layers: ImageViewerLayer[] = [];\n\n  @Output() channelsChange = new EventEmitter();\n\n  @ViewChild('canvas', { read: ElementRef }) canvas: ElementRef;\n\n  isDemo = true;\n  private viewer: ImageViewer;\n  private sensor: ResizeSensor;\n\n  constructor(private readonly container: ElementRef) { }\n\n  ngAfterViewInit(): void {\n    const {\n      container: { nativeElement: container },\n      canvas: { nativeElement: element }\n    } = this;\n    const { clientWidth, clientHeight } = element;\n\n    this.viewer = new PictureInPictureViewer({\n      id: 'image-viewer',\n      initialViewState: {\n        zoom: -6,\n        target: [25000, 10000, 0]\n      },\n      canvas: element,\n      width: clientWidth,\n      height: clientHeight,\n      overview: {\n        detailWidth: clientWidth,\n        detailHeight: clientHeight\n      },\n      defaultChannelConfig: {\n        active: false\n      }\n    });\n\n    this.sensor = new ResizeSensor(container, ({ width, height }) => {\n      this.viewer.setSize(width, height);\n    });\n\n    (async () => {\n      await this.updateSources();\n      await this.updateLayers();\n    })();\n  }\n\n  ngOnDestroy(): void {\n    this.sensor.detach();\n    this.viewer.finalize();\n  }\n\n  private async updateSources(): Promise {\n    const { _sources: sources, viewer, channelsChange } = this;\n    if (!viewer) {\n      return;\n    }\n\n    await viewer.setSources(sources);\n\n    const isRgb = viewer.loaders.some((loader: { isRgb: boolean }) => loader.isRgb);\n    channelsChange.emit(!isRgb ? viewer.channelNames : []);\n  }\n\n  private async updateLayers(): Promise {\n    const { layers, viewer } = this;\n    if (!viewer || layers.length === 0) {\n      return;\n    }\n\n    const configs: Record> = layers.reduce((result, layer) => ({\n      ...result,\n      [layer.id]: {\n        active: layer.selected,\n        color: hexToRgbTriple(layer.color),\n        slider: brightnessToSlider(layer.brightness)\n      }\n    }), {});\n\n    await viewer.updateChannelConfigs(configs);\n  }\n\n  private clear(): void {\n    this.viewer?.clear();\n  }\n\n  private sourcesFromUrls(urls: string[]): DataSource[] {\n    return urls.filter(url => !!url).map(url => ({\n      type: LoaderType.Tiff,\n      info: { url }\n    }));\n  }\n}\n\n    \n\n    \n        \n  warning\n  This is a demo image\n\n\n\n    \n\n    \n                \n                    ./viewer.component.scss\n                \n                :host {\n  .demo-warning {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n    text-align: center;\n\n    .text {\n      vertical-align: top;\n    }\n  }\n\n  canvas {\n    position: relative !important;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  warning  This is a demo image'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewerModule.html":{"url":"modules/ViewerModule.html","title":"module - ViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nViewerComponent\n\nViewerComponent\n\n\n\nViewerModule\n\nViewerModule\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/viewer/viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ViewerComponent } from './viewer.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [ViewerComponent],\n  exports: [ViewerComponent]\n})\nexport class ViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewerState.html":{"url":"injectables/ViewerState.html","title":"injectable - ViewerState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ViewerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/viewer/viewer.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsDataEntityCollectionsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                activeLayers$\n                            \n                            \n                                    Readonly\n                                layers$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLayers\n                            \n                            \n                                    Private\n                                getAutoColor\n                            \n                            \n                                setDefaultScheme\n                            \n                            \n                                updateLayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createLayers\n                        \n                        \n                    \n                \n            \n            \n                \ncreateLayers(ids: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/viewer/viewer.state.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAutoColor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAutoColor(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/store/viewer/viewer.state.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDefaultScheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetDefaultScheme(scheme: ColorScheme)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/viewer/viewer.state.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scheme\n                                    \n                                                ColorScheme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLayer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLayer(id: string, changes: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/viewer/viewer.state.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changes\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            activeLayers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/viewer/viewer.state.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            layers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/viewer/viewer.state.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { EntityUpdate, NgxsEntityCollections } from '@ngxs-labs/data/typings';\nimport { createEntityCollections } from '@ngxs-labs/data/utils';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { DEFAULT_COLOR_SCHEMES } from '../../../modules/color-scheme/color-schemes';\nimport { ColorScheme } from '../../models/color-scheme';\nimport { ImageViewerLayer, PureImageViewerLayer } from '../../models/image-viewer-layer';\n\n\nconst NUM_LAYERS_SELECTED_ON_CREATION = 3;\nconst IMAGE_VIEWER_LAYER_DEFAULTS = {\n  brightness: [2, 31] as [number, number],\n  transparency: 100,\n  customizedColor: false,\n  defaultOrder: -1\n};\n\nexport interface ViewerStateModel extends NgxsEntityCollections {\n  defaultScheme: ColorScheme;\n  autoColorIndex: number;\n  selectionCounter: number;\n}\n\n@StateRepository()\n@State({\n  name: 'viewer',\n  defaults: {\n    ...createEntityCollections(),\n    defaultScheme: DEFAULT_COLOR_SCHEMES[0],\n    autoColorIndex: 0,\n    selectionCounter: 0\n  }\n})\n@Injectable()\nexport class ViewerState extends NgxsDataEntityCollectionsRepository {\n  readonly layers$ = this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  );\n  readonly activeLayers$ = this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  );\n\n  @DataAction()\n  createLayers(ids: string[]): void {\n    const maxSelected = NUM_LAYERS_SELECTED_ON_CREATION;\n    const { defaultScheme } = this.snapshot;\n    const length = ids.length;\n\n    this.removeEntitiesMany(this.ids);\n    this.addEntitiesMany(ids.map((id, index) => ({\n      id,\n      label: id,\n      colorScheme: defaultScheme,\n      color: index ): void {\n    const { autoColorIndex, selectionCounter } = this.snapshot;\n    const layer = this.entities[id];\n    let color = changes.color || layer.color;\n    let defaultOrder = layer.defaultOrder;\n    if (!layer.customizedColor && !changes.customizedColor &&\n        changes.selected && layer.defaultOrder === -1) {\n      color = this.getAutoColor(autoColorIndex);\n      defaultOrder = autoColorIndex;\n      this.ctx.patchState({ autoColorIndex: autoColorIndex + 1 });\n    }\n\n    this.updateEntitiesMany([{\n      id,\n      changes: {\n        ...changes,\n        color,\n        selectionOrder: selectionCounter,\n        defaultOrder\n      }\n    }]);\n    this.ctx.patchState({ selectionCounter: selectionCounter + 1 });\n  }\n\n  @DataAction()\n  setDefaultScheme(scheme: ColorScheme): void {\n    const { entities } = this;\n    const changes: EntityUpdate[] = [];\n    for (const [id, layer] of Object.entries(entities)) {\n      if (!layer.customizedColor) {\n        const index = layer.colorScheme.colors.indexOf(layer.color);\n        changes.push({\n          id,\n          changes: {\n            colorScheme: scheme,\n            color: scheme.colors[index]\n          }\n        });\n      }\n    }\n\n    this.updateEntitiesMany(changes);\n    this.ctx.patchState({ defaultScheme: scheme });\n  }\n\n  private getAutoColor(index: number): string {\n    const { defaultScheme: { colors } } = this.snapshot;\n    const order = [0, 6, 3, 1, 5, 2, 4];\n    return colors[order[index % order.length]];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewerStateModel.html":{"url":"interfaces/ViewerStateModel.html","title":"interface - ViewerStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewerStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/viewer/viewer.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsEntityCollections\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        autoColorIndex\n                                \n                                \n                                        defaultScheme\n                                \n                                \n                                        selectionCounter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoColorIndex\n                                    \n                                \n                                \n                                    \n                                        autoColorIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultScheme\n                                    \n                                \n                                \n                                    \n                                        defaultScheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionCounter\n                                    \n                                \n                                \n                                    \n                                        selectionCounter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { EntityUpdate, NgxsEntityCollections } from '@ngxs-labs/data/typings';\nimport { createEntityCollections } from '@ngxs-labs/data/utils';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { DEFAULT_COLOR_SCHEMES } from '../../../modules/color-scheme/color-schemes';\nimport { ColorScheme } from '../../models/color-scheme';\nimport { ImageViewerLayer, PureImageViewerLayer } from '../../models/image-viewer-layer';\n\n\nconst NUM_LAYERS_SELECTED_ON_CREATION = 3;\nconst IMAGE_VIEWER_LAYER_DEFAULTS = {\n  brightness: [2, 31] as [number, number],\n  transparency: 100,\n  customizedColor: false,\n  defaultOrder: -1\n};\n\nexport interface ViewerStateModel extends NgxsEntityCollections {\n  defaultScheme: ColorScheme;\n  autoColorIndex: number;\n  selectionCounter: number;\n}\n\n@StateRepository()\n@State({\n  name: 'viewer',\n  defaults: {\n    ...createEntityCollections(),\n    defaultScheme: DEFAULT_COLOR_SCHEMES[0],\n    autoColorIndex: 0,\n    selectionCounter: 0\n  }\n})\n@Injectable()\nexport class ViewerState extends NgxsDataEntityCollectionsRepository {\n  readonly layers$ = this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  );\n  readonly activeLayers$ = this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  );\n\n  @DataAction()\n  createLayers(ids: string[]): void {\n    const maxSelected = NUM_LAYERS_SELECTED_ON_CREATION;\n    const { defaultScheme } = this.snapshot;\n    const length = ids.length;\n\n    this.removeEntitiesMany(this.ids);\n    this.addEntitiesMany(ids.map((id, index) => ({\n      id,\n      label: id,\n      colorScheme: defaultScheme,\n      color: index ): void {\n    const { autoColorIndex, selectionCounter } = this.snapshot;\n    const layer = this.entities[id];\n    let color = changes.color || layer.color;\n    let defaultOrder = layer.defaultOrder;\n    if (!layer.customizedColor && !changes.customizedColor &&\n        changes.selected && layer.defaultOrder === -1) {\n      color = this.getAutoColor(autoColorIndex);\n      defaultOrder = autoColorIndex;\n      this.ctx.patchState({ autoColorIndex: autoColorIndex + 1 });\n    }\n\n    this.updateEntitiesMany([{\n      id,\n      changes: {\n        ...changes,\n        color,\n        selectionOrder: selectionCounter,\n        defaultOrder\n      }\n    }]);\n    this.ctx.patchState({ selectionCounter: selectionCounter + 1 });\n  }\n\n  @DataAction()\n  setDefaultScheme(scheme: ColorScheme): void {\n    const { entities } = this;\n    const changes: EntityUpdate[] = [];\n    for (const [id, layer] of Object.entries(entities)) {\n      if (!layer.customizedColor) {\n        const index = layer.colorScheme.colors.indexOf(layer.color);\n        changes.push({\n          id,\n          changes: {\n            colorScheme: scheme,\n            color: scheme.colors[index]\n          }\n        });\n      }\n    }\n\n    this.updateEntitiesMany(changes);\n    this.ctx.patchState({ defaultScheme: scheme });\n  }\n\n  private getAutoColor(index: number): string {\n    const { defaultScheme: { colors } } = this.snapshot;\n    const order = [0, 6, 3, 1, 5, 2, 4];\n    return colors[order[index % order.length]];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) - Exploration User Interface (EUI).\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, gender, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.11\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.11\n        \n            @angular/compiler : ^9.1.11\n        \n            @angular/core : ^9.1.11\n        \n            @angular/forms : ^9.1.11\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.11\n        \n            @angular/platform-browser-dynamic : ^9.1.11\n        \n            @angular/router : ^9.1.11\n        \n            @deck.gl/core : ^8.2.3\n        \n            @deck.gl/geo-layers : ^8.2.3\n        \n            @deck.gl/layers : ^8.2.3\n        \n            @deck.gl/mesh-layers : ^8.2.3\n        \n            @hubmap/vitessce-image-viewer : ^0.3.2\n        \n            @loaders.gl/core : ^2.2.8\n        \n            @loaders.gl/draco : ^2.2.8\n        \n            @loaders.gl/gltf : ^2.2.8\n        \n            @luma.gl/core : ^8.2.0\n        \n            @math.gl/core : ^3.2.2\n        \n            @ngxs-labs/data : ^3.0.5\n        \n            @ngxs/store : ^3.6.2\n        \n            @rdfjs/data-model : ^1.1.2\n        \n            bind-decorator : ^1.0.11\n        \n            comlink : ^4.3.0\n        \n            css-element-queries : ^1.2.3\n        \n            graphology : ^0.17.1\n        \n            graphology-shortest-path : ^1.3.3\n        \n            jsonld : ^3.1.1\n        \n            lodash : ^4.17.15\n        \n            n3 : ^1.4.0\n        \n            ng5-slider : ^1.2.4\n        \n            quaternion : ^1.1.0\n        \n            quaternion-to-euler : ^0.5.0\n        \n            rdf-literal : ^1.1.1\n        \n            rdfxml-streaming-parser : ^1.3.6\n        \n            react : ^16.13.1\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^1.13.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataQueryState   (src/.../data.state.ts)\n                        \n                        \n                            LoaderType   (projects/.../loader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/store/data/data.state.ts\n    \n        \n            \n                \n                    \n                        \n                        DataQueryState\n                    \n                \n                    \n                        \n                            Current state of data queries. \n\n                        \n                    \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : running\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    projects/ccf-image-viewer/src/lib/loader.ts\n    \n        \n            \n                \n                    \n                        \n                        LoaderType\n                    \n                \n                        \n                            \n                                 Zarr\n                            \n                        \n                        \n                            \n                                Value : zarr\n                            \n                        \n                        \n                            \n                                 OMEZarr\n                            \n                        \n                        \n                            \n                                Value : ome-zarr\n                            \n                        \n                        \n                            \n                                 StaticZarr\n                            \n                        \n                        \n                            \n                                Value : static\n                            \n                        \n                        \n                            \n                                 Tiff\n                            \n                        \n                        \n                            \n                                Value : tiff\n                            \n                        \n                        \n                            \n                                 Tiff2\n                            \n                        \n                        \n                            \n                                Value : tiff 2\n                            \n                        \n                        \n                            \n                                 BFTiff\n                            \n                        \n                        \n                            \n                                Value : bf tiff\n                            \n                        \n                        \n                            \n                                 CovidTiff\n                            \n                        \n                        \n                            \n                                Value : covid tiff\n                            \n                        \n                        \n                            \n                                 StaticTiff\n                            \n                        \n                        \n                            \n                                Value : static tiff\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - Exploration User Interface (EUI)\n\n\n\n\n\n\n\n\nCCF-EUI: Common Coordinate Framework (CCF) - Exploration User Interface (EUI)\nBackground and More Information\nFor more information, see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nCCF-EUI is developed at the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorBarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorPickerLauncherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorSchemeContentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorSchemePopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerAccordionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerLayersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerLegendModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyExplorationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySelectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyTreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchemeDropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpinnerOverlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_exports\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\ncluster_ColorBarModule\n\n\n\ncluster_ColorBarModule_declarations\n\n\n\ncluster_ColorBarModule_exports\n\n\n\ncluster_ColorPickerLauncherModule\n\n\n\ncluster_ColorPickerLauncherModule_declarations\n\n\n\ncluster_ColorPickerLauncherModule_imports\n\n\n\ncluster_ColorPickerLauncherModule_exports\n\n\n\ncluster_ColorSchemeContentsModule\n\n\n\ncluster_ColorSchemeContentsModule_declarations\n\n\n\ncluster_ColorSchemeContentsModule_exports\n\n\n\ncluster_ColorSchemePopupModule\n\n\n\ncluster_ColorSchemePopupModule_declarations\n\n\n\ncluster_ColorSchemePopupModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_ImageViewerAccordionModule\n\n\n\ncluster_ImageViewerAccordionModule_declarations\n\n\n\ncluster_ImageViewerAccordionModule_imports\n\n\n\ncluster_ImageViewerAccordionModule_exports\n\n\n\ncluster_ImageViewerContentModule\n\n\n\ncluster_ImageViewerContentModule_declarations\n\n\n\ncluster_ImageViewerContentModule_exports\n\n\n\ncluster_ImageViewerLayersModule\n\n\n\ncluster_ImageViewerLayersModule_declarations\n\n\n\ncluster_ImageViewerLayersModule_imports\n\n\n\ncluster_ImageViewerLayersModule_exports\n\n\n\ncluster_ImageViewerLegendModule\n\n\n\ncluster_ImageViewerLegendModule_declarations\n\n\n\ncluster_ImageViewerLegendModule_exports\n\n\n\ncluster_ImageViewerModule\n\n\n\ncluster_ImageViewerModule_imports\n\n\n\ncluster_ImageViewerModule_exports\n\n\n\ncluster_ImageViewerPopoverModule\n\n\n\ncluster_ImageViewerPopoverModule_declarations\n\n\n\ncluster_ImageViewerPopoverModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_ResultsBrowserItemModule\n\n\n\ncluster_ResultsBrowserItemModule_declarations\n\n\n\ncluster_ResultsBrowserItemModule_exports\n\n\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_SchemeDropdownModule\n\n\n\ncluster_SchemeDropdownModule_declarations\n\n\n\ncluster_SchemeDropdownModule_exports\n\n\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBodyModule\n\nBodyModule\n\nAppModule -->\n\nBodyModule->AppModule\n\n\n\n\n\nBodyUiModule \n\nBodyUiModule \n\nBodyUiModule  -->\n\nBodyModule->BodyUiModule \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule -->\n\nDrawerModule->ImageViewerPopoverModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule -->\n\nDualSliderModule->ColorSchemeContentsModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nAppModule -->\n\nImageViewerModule->AppModule\n\n\n\n\n\nImageViewerContentModule \n\nImageViewerContentModule \n\nImageViewerContentModule  -->\n\nImageViewerModule->ImageViewerContentModule \n\n\n\n\n\nImageViewerLayersModule \n\nImageViewerLayersModule \n\nImageViewerLayersModule  -->\n\nImageViewerModule->ImageViewerLayersModule \n\n\n\n\n\nImageViewerPopoverModule \n\nImageViewerPopoverModule \n\nImageViewerPopoverModule  -->\n\nImageViewerModule->ImageViewerPopoverModule \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nAppModule -->\n\nInfoDialogModule->AppModule\n\n\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyModule -->\n\nBodyUiModule->BodyModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nColorBarComponent\n\nColorBarComponent\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorBarModule -->\n\nColorBarComponent->ColorBarModule\n\n\n\n\n\nColorBarComponent \n\nColorBarComponent \n\nColorBarComponent  -->\n\nColorBarModule->ColorBarComponent \n\n\n\nColorSchemeContentsModule -->\n\nColorBarModule->ColorSchemeContentsModule\n\n\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nSchemeDropdownModule -->\n\nColorBarModule->SchemeDropdownModule\n\n\n\n\n\nColorPickerLauncherComponent\n\nColorPickerLauncherComponent\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule -->\n\nColorPickerLauncherComponent->ColorPickerLauncherModule\n\n\n\n\n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent  -->\n\nColorPickerLauncherModule->ColorPickerLauncherComponent \n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerLayersModule -->\n\nColorPickerLauncherModule->ImageViewerLayersModule\n\n\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorPickerLauncherModule -->\n\nColorSchemePopupModule->ColorPickerLauncherModule\n\n\n\n\n\nColorSchemePopupComponent \n\nColorSchemePopupComponent \n\nColorSchemePopupComponent  -->\n\nColorSchemePopupModule->ColorSchemePopupComponent \n\n\n\n\n\nColorSchemeContentsComponent\n\nColorSchemeContentsComponent\n\nColorSchemeContentsModule -->\n\nColorSchemeContentsComponent->ColorSchemeContentsModule\n\n\n\nColorSchemePopupModule -->\n\nColorSchemeContentsModule->ColorSchemePopupModule\n\n\n\n\n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent  -->\n\nColorSchemeContentsModule->ColorSchemeContentsComponent \n\n\n\n\n\nColorSchemePopupComponent\n\nColorSchemePopupComponent\n\nColorSchemePopupModule -->\n\nColorSchemePopupComponent->ColorSchemePopupModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nImageViewerAccordionComponent\n\nImageViewerAccordionComponent\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule -->\n\nImageViewerAccordionComponent->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent  -->\n\nImageViewerAccordionModule->ImageViewerAccordionComponent \n\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerContentModule -->\n\nImageViewerAccordionModule->ImageViewerContentModule\n\n\n\nImageViewerModule -->\n\nImageViewerLayersModule->ImageViewerModule\n\n\n\nImageViewerAccordionModule -->\n\nImageViewerLayersModule->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerLayersComponent \n\nImageViewerLayersComponent \n\nImageViewerLayersComponent  -->\n\nImageViewerLayersModule->ImageViewerLayersComponent \n\n\n\n\n\nImageViewerContentComponent\n\nImageViewerContentComponent\n\nImageViewerContentModule -->\n\nImageViewerContentComponent->ImageViewerContentModule\n\n\n\nImageViewerModule -->\n\nImageViewerContentModule->ImageViewerModule\n\n\n\n\n\nImageViewerContentComponent \n\nImageViewerContentComponent \n\nImageViewerContentComponent  -->\n\nImageViewerContentModule->ImageViewerContentComponent \n\n\n\nImageViewerPopoverModule -->\n\nImageViewerContentModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerLayersComponent\n\nImageViewerLayersComponent\n\nImageViewerLayersModule -->\n\nImageViewerLayersComponent->ImageViewerLayersModule\n\n\n\nImageViewerLayersModule -->\n\nSchemeDropdownModule->ImageViewerLayersModule\n\n\n\n\n\nSchemeDropdownComponent \n\nSchemeDropdownComponent \n\nSchemeDropdownComponent  -->\n\nSchemeDropdownModule->SchemeDropdownComponent \n\n\n\n\n\nImageViewerLegendComponent\n\nImageViewerLegendComponent\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerLegendModule -->\n\nImageViewerLegendComponent->ImageViewerLegendModule\n\n\n\n\n\nImageViewerLegendComponent \n\nImageViewerLegendComponent \n\nImageViewerLegendComponent  -->\n\nImageViewerLegendModule->ImageViewerLegendComponent \n\n\n\nImageViewerPopoverModule -->\n\nImageViewerLegendModule->ImageViewerPopoverModule\n\n\n\nImageViewerModule -->\n\nImageViewerPopoverModule->ImageViewerModule\n\n\n\n\n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent  -->\n\nImageViewerPopoverModule->ImageViewerPopoverComponent \n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerModule -->\n\nViewerModule->ImageViewerModule\n\n\n\nImageViewerPopoverModule -->\n\nViewerModule->ImageViewerPopoverModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\nImageViewerPopoverComponent\n\nImageViewerPopoverComponent\n\nImageViewerPopoverModule -->\n\nImageViewerPopoverComponent->ImageViewerPopoverModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nResultsBrowserItemComponent\n\nResultsBrowserItemComponent\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule -->\n\nResultsBrowserItemComponent->ResultsBrowserItemModule\n\n\n\nResultsBrowserModule -->\n\nResultsBrowserItemModule->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent  -->\n\nResultsBrowserItemModule->ResultsBrowserItemComponent \n\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nSchemeDropdownComponent\n\nSchemeDropdownComponent\n\nSchemeDropdownModule -->\n\nSchemeDropdownComponent->SchemeDropdownModule\n\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        34 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    42 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContainerPayload   (src/.../messages.ts)\n                        \n                        \n                            DeckCallbackArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            DeckProps   (projects/.../image-viewer.ts)\n                        \n                        \n                            DrawerPayload   (src/.../messages.ts)\n                        \n                        \n                            ExpandedState   (src/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (src/.../drawer.component.ts)\n                        \n                        \n                            GetChildrenFunc   (src/.../ontology-search.service.ts)\n                        \n                        \n                            ImageViewerLayerArgs   (src/.../image-viewer-layer.ts)\n                        \n                        \n                            ImageViewerLayerRequiredArgNames   (src/.../image-viewer-layer.ts)\n                        \n                        \n                            JsonDict   (projects/.../hubmap-data.ts)\n                        \n                        \n                            LayerConfig   (projects/.../image-viewer.ts)\n                        \n                        \n                            LayerFilterArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            Message   (src/.../messages.ts)\n                        \n                        \n                            MessageChannel   (src/.../messages.ts)\n                        \n                        \n                            MessageService   (src/.../messages.ts)\n                        \n                        \n                            OnViewStateChangeArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            OpenedState   (src/.../drawer.component.ts)\n                        \n                        \n                            OverviewArgs   (projects/.../picture-in-picture-viewer.ts)\n                        \n                        \n                            Payload   (src/.../messages.ts)\n                        \n                        \n                            State   (projects/.../image-viewer.ts)\n                        \n                        \n                            ValueOrGenerator   (projects/.../image-viewer.ts)\n                        \n                        \n                            ZarrInfo   (projects/.../loader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container. \n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers. \n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type. \n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type. \n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type. \n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components. \n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/image-viewer.ts\n    \n    \n        \n            \n                \n                    \n                    DeckCallbackArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeckProps\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerConfig\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerFilterArgs\n                \n            \n            \n                \n                            DeckCallbackArgs\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OnViewStateChangeArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    State\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValueOrGenerator\n                \n            \n            \n                \n                        T | \n\n                \n            \n        \n    \n    src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer. \n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    src/app/core/services/ontology-search/ontology-search.service.ts\n    \n    \n        \n            \n                \n                    \n                    GetChildrenFunc\n                \n            \n            \n                \n                    Type of function for getting child nodes from a parent node. \n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/core/models/image-viewer-layer.ts\n    \n    \n        \n            \n                \n                    \n                    ImageViewerLayerArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ImageViewerLayerRequiredArgNames\n                \n            \n            \n                \n                        \"id\" | \"colorScheme\"\n\n                \n            \n        \n    \n    projects/ccf-database/src/lib/hubmap/hubmap-data.ts\n    \n    \n        \n            \n                \n                    \n                    JsonDict\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n    \n    \n        \n            \n                \n                    \n                    OverviewArgs\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/loader.ts\n    \n    \n        \n            \n                \n                    \n                    ZarrInfo\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
