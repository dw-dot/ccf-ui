var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.788,1,1.425]],["body/components/AboutComponent.html",[0,1.33,1,2.061,2,1.72,3,0.087,4,0.087,5,1.179,6,1.147,7,1.179,8,1.005,9,0.143,10,2.793,11,0.679,12,5.722,13,4.75,14,4.75,15,4.75,16,0.886,17,2.78,18,3.108,19,1.768,20,5.698,21,1.768,22,4.75,23,0.593,24,1.363,25,7.121,26,0.765,27,3.168,28,5.581,29,0.922,30,3.168,31,1.016,32,1.042,33,0.662,34,0.01,35,0.952,36,0.319,37,0.615,38,4.75,39,3.168,40,4.187,41,0.765,42,1.674,43,0.259,44,0.383,45,2.361,46,0.087,47,0.08,48,0.571,49,3.168,50,1.116,51,2.091,52,3.168,53,3.168,54,1.453,55,1.005,56,3.168,57,4.75,58,3.88,59,7.121,60,6.331,61,7.121,62,5.581,63,4.75,64,3.817,65,4.75,66,4.75,67,4.75,68,2.977,69,4.75,70,4.75,71,4.75,72,4.75,73,2.318,74,2.717,75,3.817,76,4.75,77,4.75,78,2.33,79,4.75,80,4.75,81,3.319,82,2.717,83,1.768,84,4.75,85,2.903,86,5.307,87,4.718,88,2.415,89,4.187,90,2.178,91,4.75,92,4.75,93,6.331,94,4.75,95,2.269,96,4.75,97,4.75,98,4.75,99,6.331,100,6.331,101,6.673,102,4.75,103,5.087,104,1.198,105,3.319,106,5.722,107,4.75,108,6.331,109,3.54,110,4.178,111,1.228,112,5.307,113,4.187,114,5.087,115,4.187,116,4.75,117,2.607,118,6.331,119,3.817,120,4.75,121,4.75,122,1.983,123,2.977,124,3.817,125,3.319,126,4.187,127,4.187,128,4.75,129,4.75,130,4.75,131,4.187,132,4.75,133,4.75,134,4.187,135,3.817,136,4.75,137,4.75,138,4.75,139,5.581,140,4.75,141,4.75,142,4.75,143,4.75,144,4.75,145,4.75,146,4.75,147,4.75,148,4.75,149,4.75,150,4.75,151,4.75,152,4.187,153,5.087,154,4.75,155,4.75,156,4.75,157,4.75,158,4.75,159,4.75,160,4.75,161,4.75,162,4.75,163,4.75,164,4.75,165,4.75,166,4.75,167,4.75,168,2.607,169,4.75,170,2.607,171,2.977,172,2.415,173,1.768,174,2.607,175,4.187,176,5.024,177,4.187,178,4.187,179,1.894,180,1.407,181,2.091,182,2.793,183,2.109,184,2.897,185,2.116,186,3.168,187,1.768,188,2.793,189,3.579,190,3.001,191,4.75,192,1.986,193,2.109,194,3.982,195,4.008,196,3.785,197,3.341,198,3.168,199,2.091,200,2.361,201,1.501,202,2.793,203,2.415,204,2.613,205,1.812,206,1.672,207,2.793,208,2.793,209,2.361,210,2.793,211,2.361,212,2.545,213,1.031,214,2.793,215,2.361,216,0.662,217,1.507,218,1.768,219,1.179,220,2.356,221,1.179,222,1.179,223,1.059,224,0.678,225,1.768,226,1.059,227,1.179,228,1.031,229,1.179,230,1.059,231,1.179,232,1.179,233,1.059,234,0.662,235,1.059,236,1.179,237,1.031,238,1.179,239,1.059,240,1.179,241,1.059,242,1.179,243,1.059,244,1.179,245,1.059,246,1.768,247,1.059,248,1.179,249,1.059,250,1.179,251,1.031,252,1.179,253,1.059,254,0.712,255,1.179,256,1.059,257,1.031,258,1.179,259,1.031,260,1.355,261,1.179,262,1.059,263,1.446,264,1.179,265,1.059,266,1.587,267,1.179,268,1.059,269,1.031,270,1.179,271,1.179,272,0.003,273,0.005,274,0.003]],["title/modules/AboutModule.html",[275,0.749,276,3.057]],["body/modules/AboutModule.html",[1,2.957,3,0.169,4,0.169,9,0.155,11,0.662,12,6.009,34,0.01,43,0.468,44,0.746,45,4.599,46,0.169,47,0.155,216,1.289,272,0.006,273,0.008,274,0.006,275,1.378,276,6.157,277,1.727,278,2.062,279,2.913,280,2.234,281,2.234,282,2.427,283,5.44,284,5.44,285,5.44,286,2.042,287,2.174,288,2.117,289,6.171,290,2.862,291,2.296,292,2.255,293,6.592,294,4.278,295,3.387,296,6.171,297,1.861]],["title/components/AgeSelectorComponent.html",[0,0.788,223,1.462]],["body/components/AgeSelectorComponent.html",[0,1.18,1,0.747,2,1.338,3,0.063,4,0.063,5,1.727,6,1.338,7,0.854,8,0.728,9,0.058,11,0.397,16,0.642,17,2.734,18,2.928,19,1.375,21,1.375,23,0.239,24,1.06,26,0.893,29,1.523,31,1.138,32,0.81,33,0.479,34,0.01,35,0.775,36,0.661,37,0.445,40,3.258,41,1.409,42,2.402,43,0.34,44,0.277,46,0.063,47,0.093,48,0.958,50,1.874,88,3.466,104,0.7,172,1.879,179,2.774,180,2.06,183,1.019,184,3.168,185,1.235,187,1.375,188,2.023,190,2.521,193,1.641,195,3.078,196,2.209,197,2.449,203,1.167,204,2.127,206,3.714,213,1.732,216,0.479,217,1.173,218,2.8,219,0.854,220,1.979,221,0.854,222,0.854,223,1.778,224,1.804,225,1.375,226,0.767,227,0.854,228,0.747,229,0.854,230,0.767,231,0.854,232,0.854,233,0.767,234,0.479,235,0.767,236,0.854,237,0.747,238,0.854,239,0.767,240,0.854,241,0.767,242,0.854,243,0.767,244,0.854,245,0.767,246,1.375,247,0.767,248,0.854,249,0.767,250,0.854,251,0.747,252,0.854,253,0.767,254,1.659,255,0.854,256,0.767,257,0.747,258,0.854,259,0.747,260,1.138,261,0.854,262,0.767,263,1.177,264,0.854,265,0.767,266,1.235,267,0.854,268,0.767,269,2.757,270,0.854,271,0.854,272,0.002,273,0.004,274,0.002,298,6.375,299,5.913,300,1.844,301,1.498,302,4.113,303,3.695,304,2.754,305,6.099,306,1.813,307,4.075,308,4.09,309,3.258,310,0.602,311,7.037,312,2.533,313,5.832,314,6.817,315,7.037,316,5.384,317,5.777,318,5.832,319,5.319,320,5.319,321,3.717,322,5.319,323,5.319,324,3.695,325,3.695,326,2.316,327,4.64,328,2.295,329,3.098,330,5.478,331,3.043,332,3.695,333,1.604,334,2.439,335,3.695,336,2.754,337,4.325,338,2.439,339,3.695,340,2.754,341,3.258,342,1.926,343,1.71,344,4.64,345,2.295,346,3.695,347,2.295,348,3.695,349,3.695,350,3.695,351,3.695,352,3.258,353,2.582,354,3.695,355,2.295,356,6.232,357,2.295,358,2.582,359,2.028,360,2.439,361,1.59,362,2.295,363,3.695,364,3.511,365,2.209,366,0.984,367,2.704,368,2.295,369,2.969,370,3.964,371,1.349,372,1.715,373,1.676,374,3.695,375,2.295,376,4.689,377,5.319,378,3.695,379,3.597,380,3.18,381,2.521,382,3.258,383,2.295,384,3.258,385,3.695,386,2.295,387,3.695,388,5.319,389,3.258,390,6.232,391,3.258,392,3.695,393,1.752,394,3.695,395,3.458,396,3.695,397,2.295,398,2.295,399,1.641,400,3.695,401,3.695,402,2.156,403,2.023,404,1.224,405,3.695,406,4.09,407,3.258,408,2.295,409,2.295,410,2.295,411,3.695,412,1.59,413,0.617,414,3.258,415,1.71,416,1.71,417,2.295,418,1.71,419,4.274,420,1.71,421,1.603,422,1.788,423,1.603,424,1.673,425,2.295,426,2.295,427,1.313,428,2.023,429,2.209,430,2.023,431,2.023,432,2.023,433,3.258,434,2.023,435,2.023,436,2.023,437,2.295,438,3.695,439,2.023,440,2.295,441,2.295,442,2.295,443,2.295,444,2.295,445,2.295,446,2.295,447,3.695,448,2.295,449,1.694,450,2.276,451,2.295,452,2.295,453,2.023,454,2.295,455,3.695,456,3.695,457,1.372,458,2.023,459,1.71,460,1.372,461,2.06,462,2.295,463,3.458,464,2.295,465,3.231,466,3.231,467,1.95,468,2.295,469,2.295,470,2.295,471,2.028,472,2.582,473,1.844,474,2.295,475,2.295,476,1.259,477,1.71,478,1.313,479,1.313,480,2.295,481,1.126,482,1.844,483,3.242,484,1.844,485,2.969,486,1.372,487,1.844,488,4.64,489,2.295,490,3.511,491,2.295,492,1.844,493,2.295,494,2.295,495,3.695,496,2.969,497,2.654,498,1.603,499,2.023,500,1.313,501,0.728]],["title/modules/AgeSelectorModule.html",[275,0.749,502,3.057]],["body/modules/AgeSelectorModule.html",[3,0.163,4,0.163,9,0.15,34,0.01,43,0.489,44,0.72,46,0.163,47,0.15,216,1.244,223,3.022,224,1.274,272,0.006,273,0.008,274,0.006,275,1.02,277,1.666,278,1.99,279,2.868,280,2.156,281,2.156,282,2.389,286,1.998,287,2.098,288,2.043,290,2.8,291,2.216,292,2.207,294,4.186,295,3.268,297,1.796,298,4.785,299,4.438,305,4.161,415,4.438,416,4.438,419,4.785,460,3.56,502,6.112,503,5.249,504,5.249,505,5.249,506,5.249,507,6.451,508,6.451,509,6.451,510,4.438,511,7.317,512,5.955,513,7.317,514,5.955,515,7.317,516,5.249]],["title/interfaces/Annotated.html",[111,0.849,517,2.401]],["body/interfaces/Annotated.html",[3,0.105,4,0.15,9,0.096,11,0.412,16,2.051,23,0.399,34,0.01,36,0.768,46,0.22,58,1.882,73,2.829,74,2.194,82,2.194,85,1.759,88,1.95,95,1.989,104,0.726,111,1.555,173,2.727,174,2.105,180,1.703,213,2.258,224,1.169,234,1.141,260,0.821,272,0.004,273,0.006,274,0.004,286,1.047,301,1.555,310,0.889,329,3.087,333,1.648,361,2.351,371,1.614,404,0.883,413,1.476,467,2.024,481,1.882,501,2.2,517,4.302,518,1.468,519,2.194,520,3.835,521,3.835,522,3.835,523,2.155,524,2.998,525,2.214,526,2.351,527,3.125,528,3.358,529,3.804,530,3.401,531,2.194,532,2.293,533,3.278,534,4.02,535,4.145,536,2.293,537,2.293,538,2.194,539,2.194,540,2.194,541,2.194,542,3.804,543,2.194,544,2.194,545,2.293,546,1.51,547,1.51,548,2.998,549,1.601,550,2.105,551,2.024,552,2.293,553,2.293,554,2.293,555,3.125,556,2.105,557,1.95,558,1.882,559,1.555,560,1.759,561,2.293,562,2.293,563,2.194,564,2.194,565,2.293,566,2.984,567,3.016,568,2.915,569,2.505,570,3.266,571,4.074,572,3.525,573,3.266,574,3.715,575,2.73,576,2.151,577,2.293,578,2.194,579,2.194,580,2.194,581,2.194,582,2.194,583,1.882,584,2.293,585,2.105,586,2.293,587,2.998,588,2.293,589,2.293,590,2.293,591,2.194,592,2.293,593,2.194,594,2.293,595,2.293,596,2.293,597,2.293,598,2.293,599,2.194,600,2.194,601,2.194,602,2.194,603,3.266,604,3.266,605,3.121,606,1.555,607,2.505,608,3.266,609,2.998,610,2.293,611,2.293,612,2.777,613,3.509,614,2.883,615,3.121,616,3.235,617,3.121,618,2.194,619,2.293,620,2.293,621,2.293,622,2.194,623,2.194,624,1.759,625,2.293,626,2.505,627,2.68]],["title/components/AppComponent.html",[0,0.788,226,1.462]],["body/components/AppComponent.html",[0,1.487,1,1.767,2,2.5,3,0.149,4,0.149,5,2.019,6,1.964,7,2.019,8,1.722,9,0.136,11,0.582,16,1.518,17,2.92,18,3.168,19,2.569,21,2.569,34,0.009,35,1.153,43,0.296,44,0.656,46,0.149,47,0.136,104,1.307,187,2.019,216,1.133,217,2.191,218,2.569,219,2.019,220,2.974,221,2.019,222,2.019,223,1.813,224,1.161,225,2.569,226,2.671,227,2.019,228,1.767,229,2.019,230,1.813,231,2.019,232,2.019,233,1.813,234,1.133,235,1.813,236,2.019,237,1.767,238,2.019,239,1.813,240,2.019,241,1.813,242,2.019,243,1.813,244,2.019,245,1.813,246,2.569,247,1.813,248,2.019,249,1.813,250,2.019,251,1.767,252,2.019,253,1.813,254,1.219,255,2.019,256,1.813,257,1.767,258,2.019,259,1.767,260,1.71,261,2.019,262,1.813,263,1.926,264,2.019,265,1.813,266,2.307,267,2.019,268,1.813,269,1.767,270,2.019,271,2.019,272,0.006,273,0.007,274,0.006,628,4.783,629,3.788,630,4.824,631,7.594,632,6.904]],["title/modules/AppModule.html",[275,0.749,633,3.261]],["body/modules/AppModule.html",[3,0.157,4,0.157,9,0.144,34,0.01,43,0.483,44,0.693,46,0.157,47,0.144,216,1.198,226,3.007,263,1.455,272,0.006,273,0.007,274,0.006,275,0.983,277,1.605,278,1.917,279,2.82,280,2.82,281,2.077,282,1.73,286,1.952,287,2.021,288,1.968,292,2.156,297,2.156,633,6.776,634,5.057,635,5.057,636,5.057,637,5.057,638,5.978,639,5.978,640,5.978,641,5.978,642,5.736,643,7.15,644,4.609,645,7.15,646,4.719,647,6.303,648,5.057,649,5.142,650,3.786,651,5.057,652,3.786,653,5.736,654,5.736,655,5.736]],["title/modules/AppRenderInitModule.html",[275,0.749,638,3.057]],["body/modules/AppRenderInitModule.html",[3,0.168,4,0.168,9,0.154,34,0.01,35,1.021,36,0.616,43,0.438,44,0.739,46,0.204,47,0.154,172,3.108,185,2.678,272,0.006,273,0.008,274,0.006,277,1.711,282,1.844,286,1.669,292,2.242,297,1.844,366,1.628,422,1.513,465,3.798,466,2.897,523,2.187,587,3.355,629,2.897,638,5.196,650,4.035,656,4.271,657,4.912,658,6.113,659,6.439,660,5.226,661,4.908,662,7.064,663,4.271,664,5.389,665,5.389,666,7.064,667,4.556,668,5.389,669,3.497,670,5.389,671,4.912,672,5.389,673,5.389,674,5.389,675,5.389,676,5.389,677,5.389,678,5.389,679,5.389,680,5.389,681,5.389,682,5.389,683,5.389,684,5.389]],["title/modules/AppRoutingModule.html",[275,0.749,639,3.057]],["body/modules/AppRoutingModule.html",[3,0.162,4,0.162,9,0.148,34,0.01,43,0.431,44,0.714,46,0.2,47,0.148,73,1.924,78,2.899,260,1.265,272,0.006,273,0.008,274,0.006,277,1.654,282,1.782,292,2.197,297,1.782,422,1.463,639,5.089,656,4.129,685,3.901,686,4.166,687,4.333,688,3.005,689,5.428,690,5.91,691,4.749,692,5.91,693,4.004,694,5.211,695,8.464,696,5.91,697,5.91,698,5.91,699,5.91,700,5.91,701,5.91,702,5.91,703,5.91,704,4.129,705,5.91,706,5.91,707,5.91,708,5.91,709,5.91,710,4.749,711,4.129,712,3.704,713,5.089,714,5.91,715,5.21,716,5.91,717,5.21,718,5.21,719,5.91]],["title/modules/AppStateModule.html",[275,0.749,640,3.057]],["body/modules/AppStateModule.html",[3,0.168,4,0.168,9,0.154,34,0.01,43,0.488,44,0.739,46,0.168,47,0.154,106,4.912,204,2.803,272,0.006,273,0.008,274,0.006,277,1.711,292,2.242,297,1.844,422,1.513,429,3.654,528,3.226,629,2.897,640,5.196,649,4.035,656,4.271,720,4.912,721,6.113,722,3.832,723,4.556,724,4.556,725,6.113,726,4.556,727,4.556,728,6.113,729,2.478,730,3.654,731,4.035,732,5.196,733,6.113,734,3.654,735,6.113,736,3.924,737,6.113,738,4.081,739,5.389,740,3.924,741,6.113,742,4.035,743,6.555,744,5.389,745,4.912,746,2.999,747,6.113,748,6.113,749,6.113,750,6.113,751,6.113]],["title/components/BodyComponent.html",[0,0.788,228,1.425]],["body/components/BodyComponent.html",[0,1.4,1,0.901,2,1.551,3,0.076,4,0.076,5,1.03,6,1.002,7,1.03,8,0.878,9,0.069,11,0.725,16,2.136,17,2.734,18,2.977,19,1.594,21,1.594,23,0.288,24,1.229,26,0.669,29,1.551,31,1.263,32,0.939,33,1.334,34,0.01,35,1.298,36,0.784,37,1.239,41,1.845,42,2.565,43,0.349,44,0.334,46,0.076,47,0.069,48,1.311,50,2.08,55,0.878,73,2.199,78,4.192,83,1.594,95,1.229,104,0.811,110,3.896,117,2.351,122,3.466,172,2.178,183,1.902,187,1.594,193,2.621,205,1.583,206,1.46,213,1.707,216,0.578,217,1.359,218,1.594,219,1.03,220,2.197,221,1.03,222,1.03,223,0.925,224,0.592,225,1.594,226,0.925,227,1.03,228,1.922,229,1.03,230,0.925,231,1.03,232,1.03,233,0.925,234,0.578,235,0.925,236,1.03,237,0.901,238,1.03,239,0.925,240,1.03,241,0.925,242,1.03,243,0.925,244,1.03,245,0.925,246,1.594,247,0.925,248,1.03,249,0.925,250,1.03,251,0.901,252,1.03,253,0.925,254,0.622,255,1.03,256,0.925,257,0.901,258,1.03,259,0.901,260,1.263,261,1.03,262,0.925,263,1.33,264,1.03,265,0.925,266,1.432,267,1.03,268,0.925,269,0.901,270,1.03,271,1.03,272,0.003,273,0.004,274,0.003,288,1.47,306,2.102,307,3.663,310,0.697,321,4.125,329,2.588,337,3.896,358,2.994,359,2.351,371,1.713,373,1.294,393,1.311,404,0.986,413,1.466,423,5.879,424,1.504,461,2.328,471,1.518,476,2.877,477,2.062,478,1.583,501,0.878,526,2.541,527,1.583,530,2.102,533,1.844,546,1.687,547,1.687,566,1.844,571,2.178,574,2.621,607,1.964,617,2.102,624,1.964,626,2.707,630,1.933,693,1.964,752,2.439,753,3.777,754,4.284,755,3.193,756,3.907,757,5.243,758,4.284,759,5.243,760,5.243,761,5.243,762,5.243,763,4.622,764,5.903,765,5.204,766,4.284,767,3.777,768,3.777,769,2.767,770,3.896,771,4.4,772,3.377,773,4.284,774,5.243,775,3.443,776,5.243,777,2.767,778,4.284,779,4.284,780,3.777,781,4.284,782,4.284,783,2.767,784,5.034,785,4.284,786,4.284,787,4.284,788,4.284,789,2.767,790,2.994,791,4.284,792,3.119,793,4.284,794,2.767,795,4.284,796,4.284,797,4.284,798,2.767,799,4.284,800,5.848,801,3.443,802,4.284,803,4.4,804,3.777,805,2.767,806,5.706,807,5.204,808,5.204,809,3.777,810,2.767,811,3.777,812,4.213,813,2.994,814,3.193,815,2.767,816,2.767,817,4.284,818,2.767,819,3.777,820,2.767,821,4.462,822,2.451,823,3.777,824,1.03,825,1.121,826,2.439,827,2.062,828,1.654,829,2.062,830,1.191,831,2.767,832,2.767,833,2.767,834,2.767,835,4.284,836,4.284,837,4.284,838,2.767,839,4.284,840,2.439,841,2.439,842,4.284,843,4.284,844,4.284,845,4.284,846,4.284,847,3.777,848,4.284,849,2.767,850,3.027,851,2.223,852,1.583,853,2.767,854,2.439,855,2.062,856,1.734]],["title/injectables/BodyDataService.html",[770,2.888,857,1.628]],["body/injectables/BodyDataService.html",[0,0.786,3,0.078,4,0.177,9,0.134,11,0.693,16,1.807,17,2.164,23,0.295,24,1.252,26,0.685,29,1.517,31,1.28,32,0.957,33,1.424,34,0.01,35,1.078,36,0.8,37,1.253,41,1.918,42,0.999,43,0.433,44,0.343,46,0.078,47,0.071,48,1.322,50,1.538,54,1.3,55,2.328,73,1.947,78,4.118,83,1.055,95,1.957,122,2.848,123,2.737,170,2.396,171,2.737,185,0.947,234,0.912,254,0.981,260,0.934,272,0.006,273,0.005,274,0.003,310,0.711,312,2.898,333,1.803,342,2.165,366,1.163,371,1.517,372,1.284,373,1.762,399,1.938,404,0.653,412,1.879,413,1.257,422,1.816,424,2.105,479,3.421,523,1.759,525,1.769,530,2.142,533,2.291,551,2.304,566,3.157,613,2.574,616,2.219,617,2.933,624,2.742,626,2.742,627,1.391,693,3.762,729,1.149,730,1.695,731,1.871,740,3.156,770,2.881,792,3.655,806,4.766,812,2.278,822,3.902,824,1.055,825,1.149,827,5.915,857,1.625,858,1.556,859,6.996,860,1.871,861,2.737,862,4.278,863,5.324,864,4.693,865,3.848,866,5.98,867,5.98,868,3.848,869,4.278,870,3.508,871,2.499,872,3.694,873,4.675,874,3.848,875,2.881,876,3.508,877,2.835,878,3.254,879,5.895,880,2.881,881,5.481,882,3.508,883,3.947,884,2.835,885,4.366,886,2.835,887,3.508,888,2.835,889,4.805,890,4.457,891,3.902,892,2.737,893,2.499,894,4.457,895,2.835,896,3.05,897,2.881,898,3.04,899,3.86,900,2.881,901,2.275,902,4.262,903,2.61,904,3.508,905,3.748,906,3.254,907,3.508,908,4.366,909,2.835,910,4.178,911,3.848,912,3.848,913,3.508,914,3.254,915,3.254,916,2.835,917,3.508,918,4.366,919,4.366,920,4.366,921,3.508,922,3.508,923,2.497,924,3.508,925,4.366,926,2.499,927,3.156,928,3.848,929,2.835,930,1.149,931,1.581,932,2.113,933,3.05,934,1.871,935,3.05,936,1.871,937,1.344,938,2.737,939,2.113,940,2.278,941,1.871,942,1.777,943,1.777,944,2.835,945,3.254,946,1.777,947,2.835,948,1.871,949,2.499,950,1.981,951,2.499,952,2.835,953,2.835,954,2.835,955,2.113,956,2.835,957,2.835,958,4.457,959,2.835,960,3.254,961,2.278,962,2.835,963,2.835,964,2.835,965,2.835,966,2.835,967,2.835,968,2.278,969,2.278,970,2.278,971,2.278,972,4.366,973,5.98,974,2.499,975,2.835,976,2.835,977,4.366,978,2.499,979,2.835,980,2.835,981,3.508,982,2.499,983,2.278,984,2.835,985,3.508,986,2.499,987,2.278,988,2.835,989,2.278,990,2.835,991,4.366,992,3.508,993,3.508,994,2.499,995,2.835,996,2.499,997,2.499,998,2.499,999,2.278,1000,2.113,1001,2.278,1002,2.278,1003,1.981,1004,1.496,1005,2.278,1006,2.278,1007,2.278,1008,2.278,1009,2.278]],["title/modules/BodyModule.html",[275,0.749,1010,3.261]],["body/modules/BodyModule.html",[3,0.162,4,0.162,9,0.148,34,0.01,43,0.477,44,0.713,46,0.162,47,0.148,78,2.895,216,1.232,228,2.805,272,0.006,273,0.008,274,0.006,275,1.011,277,1.651,278,1.972,279,2.856,280,2.136,281,2.856,282,1.78,286,1.987,287,2.079,288,2.025,290,2.784,291,2.196,292,2.195,297,2.195,652,3.895,770,5.686,826,5.202,827,4.398,828,3.528,1010,6.777,1011,5.202,1012,5.202,1013,5.202,1014,5.202,1015,6.02,1016,5.686,1017,5.401,1018,5.901,1019,5.202,1020,5.202,1021,5.901]],["title/modules/BodyRoutingModule.html",[275,0.749,1015,3.057]],["body/modules/BodyRoutingModule.html",[0,1.182,3,0.18,4,0.18,9,0.165,34,0.01,43,0.451,44,0.793,46,0.18,47,0.165,228,2.527,272,0.007,273,0.008,274,0.007,277,1.837,282,1.98,292,2.34,297,1.98,422,1.625,685,4.332,686,4.439,687,4.534,688,3.337,693,3.558,711,4.587,712,4.115,713,4.587,1015,5.422,1019,5.787,1022,6.564,1023,4.587]],["title/components/CalloutComponent.html",[0,0.788,230,1.462]],["body/components/CalloutComponent.html",[0,1.046,1,0.741,2,1.33,3,0.062,4,0.062,5,1.718,6,0.824,7,0.847,8,0.723,9,0.057,11,0.701,16,0.637,17,2.66,18,2.914,19,1.367,21,1.367,23,0.237,24,1.054,26,0.55,29,1.566,31,1.329,32,0.805,33,1.297,34,0.01,35,1.135,36,0.769,37,1.205,41,1.844,42,2.473,43,0.252,44,0.275,46,0.062,47,0.057,48,1.264,50,1.294,54,1.044,104,0.695,168,2.907,172,3.983,183,1.011,185,1.77,187,0.847,192,4.095,193,2.352,203,3.934,206,1.202,216,0.476,217,1.165,218,3.148,219,0.847,220,1.971,221,0.847,222,0.847,223,0.761,224,0.487,225,1.367,226,0.761,227,0.847,228,0.741,229,0.847,230,1.77,231,3.104,232,0.847,233,0.761,234,0.476,235,0.761,236,0.847,237,0.741,238,0.847,239,0.761,240,0.847,241,0.761,242,0.847,243,0.761,244,0.847,245,0.761,246,1.367,247,0.761,248,0.847,249,0.761,250,0.847,251,0.741,252,0.847,253,0.761,254,1.037,255,0.847,256,0.761,257,0.741,258,0.847,259,0.741,260,1.133,261,0.847,262,0.761,263,1.171,264,0.847,265,0.761,266,1.227,267,0.847,268,0.761,269,0.741,270,0.847,271,0.847,272,0.002,273,0.004,274,0.002,301,1.489,306,1.802,307,4.059,310,0.862,312,2.925,317,5.759,321,3.7,329,3.27,330,4.255,333,1.597,334,2.424,341,3.238,358,4.34,359,3.586,360,2.424,361,1.581,364,3.495,365,1.361,366,0.978,371,1.724,379,1.25,380,2.196,381,2.944,395,2.795,399,1.011,402,1.489,404,0.845,406,4.069,407,3.238,413,0.884,414,4.669,415,1.697,416,1.697,418,1.697,422,1.916,424,1.782,427,4.818,428,3.238,429,3.473,430,3.238,431,3.238,432,3.238,433,5.121,434,2.007,435,2.007,436,2.007,439,2.007,453,2.007,461,2.58,471,4.39,492,2.951,498,2.566,499,2.007,500,1.303,523,1.08,530,1.802,569,3.668,585,2.016,693,3.548,715,3.238,813,3.225,850,1.079,890,3.947,913,2.951,1004,1.938,1024,2.007,1025,3.238,1026,3.673,1027,5.993,1028,5.121,1029,4.668,1030,4.616,1031,3.673,1032,4.616,1033,5.296,1034,6.533,1035,5.296,1036,3.673,1037,3.673,1038,3.673,1039,3.673,1040,4.669,1041,2.951,1042,5.296,1043,4.064,1044,2.101,1045,6.907,1046,5.759,1047,5.809,1048,2.277,1049,3.673,1050,5.296,1051,3.673,1052,7.206,1053,2.277,1054,3.673,1055,2.277,1056,3.673,1057,2.277,1058,3.673,1059,2.277,1060,3.238,1061,5.296,1062,3.673,1063,4.783,1064,2.277,1065,4.863,1066,3.238,1067,3.673,1068,2.277,1069,5.296,1070,3.673,1071,3.673,1072,3.673,1073,2.277,1074,3.238,1075,3.673,1076,2.277,1077,5.296,1078,2.277,1079,3.673,1080,2.737,1081,4.069,1082,2.951,1083,4.255,1084,2.277,1085,3.673,1086,4.34,1087,2.951,1088,2.277,1089,3.673,1090,3.673,1091,3.238,1092,2.277,1093,3.673,1094,3.673,1095,3.238,1096,3.673,1097,2.566,1098,3.673,1099,3.673,1100,3.238,1101,3.673,1102,3.673,1103,2.277,1104,3.238,1105,3.673,1106,2.277,1107,2.951,1108,2.277,1109,3.238,1110,2.277,1111,3.673,1112,2.007,1113,2.277,1114,2.277,1115,3.238,1116,5.296,1117,3.238,1118,3.673,1119,2.277,1120,2.277,1121,2.277,1122,2.277,1123,2.277,1124,2.277,1125,2.277,1126,2.277,1127,2.277,1128,2.277,1129,3.673,1130,2.277,1131,2.277,1132,2.277,1133,2.277,1134,3.673,1135,2.277,1136,2.277,1137,2.277,1138,3.673,1139,2.277,1140,2.277,1141,2.277,1142,2.277,1143,3.673,1144,2.277]],["title/modules/CalloutModule.html",[275,0.749,1016,2.888]],["body/modules/CalloutModule.html",[3,0.173,4,0.173,9,0.158,34,0.01,43,0.47,44,0.76,46,0.173,47,0.158,216,1.314,230,3.042,272,0.007,273,0.008,274,0.007,275,1.077,277,1.76,278,2.102,279,2.937,280,2.277,281,2.277,282,2.447,286,2.065,287,2.216,288,2.158,290,2.895,291,2.341,292,2.282,297,1.897,415,4.688,416,4.688,507,6.669,508,6.669,1016,5.839,1145,5.545,1146,5.545,1147,5.545,1148,6.29,1149,6.29]],["title/interfaces/CountMetaData.html",[111,0.849,943,2.743]],["body/interfaces/CountMetaData.html",[3,0.177,4,0.177,9,0.162,23,0.673,34,0.009,36,0.875,46,0.177,111,1.255,272,0.007,273,0.008,274,0.007,310,1.252,371,2.334,518,2.475,627,4.168,943,4.821,945,5.732,946,4.053,994,7.49,996,7.49,997,7.49,998,7.49,1150,5.701,1151,5.701]],["title/interfaces/CountMetadata.html",[111,0.849,943,2.743]],["body/interfaces/CountMetadata.html",[3,0.099,4,0.099,9,0.131,11,0.388,17,1.952,23,0.376,26,0.873,31,1.12,32,0.792,34,0.01,36,0.776,41,1.487,43,0.451,44,0.437,46,0.144,47,0.091,48,1.42,50,1.844,55,2.369,73,2.617,90,2.821,95,1.765,111,0.701,114,2.903,122,3.215,170,1.983,171,2.264,185,1.207,260,0.773,272,0.007,273,0.005,274,0.004,310,0.852,312,2.642,329,1.464,333,1.578,342,1.308,366,1.394,371,2.27,373,1.637,393,2.48,413,0.874,422,1.848,424,1.935,479,2.993,518,1.382,523,1.81,525,1.464,530,1.772,566,3.081,567,2.48,574,1.604,612,1.837,613,2.648,614,4.063,615,2.567,616,3.128,617,3.309,624,2.821,627,3.777,693,3.283,729,1.464,730,2.16,731,2.384,736,1.906,740,1.906,792,3.407,806,3.656,824,1.344,825,1.464,857,2.289,860,2.384,862,2.903,869,2.903,872,3.519,873,4.463,875,2.384,876,2.903,878,2.692,879,6.336,880,2.384,881,4.944,882,2.903,883,4.061,887,2.903,889,4.944,890,3.9,891,4.27,892,3.857,894,3.9,896,2.524,897,2.384,898,3.128,899,3.678,900,2.384,901,1.844,902,3.454,903,2.16,904,2.903,905,3.28,906,2.692,907,2.903,910,2.524,915,2.692,917,2.903,921,2.903,922,2.903,923,2.066,924,2.903,927,3.247,930,1.464,931,1.308,933,2.524,934,2.384,935,3.656,936,2.384,937,1.712,938,3.28,939,2.692,941,2.384,942,2.264,943,3.28,946,2.264,950,2.524,955,2.692,958,5.027,960,3.9,961,2.903,968,2.903,969,2.903,970,2.903,971,2.903,981,2.903,983,2.903,985,2.903,987,2.903,992,2.903,993,4.205,999,2.903,1000,2.692,1001,2.903,1002,2.903,1003,2.524,1004,1.906,1005,2.903,1006,2.903,1007,2.903,1008,2.903,1009,2.903,1043,2.16,1097,2.524,1152,2.903,1153,4.613,1154,6.311,1155,6.311,1156,6.311,1157,2.384,1158,2.903,1159,3.185,1160,2.264,1161,2.524,1162,3.185,1163,3.185,1164,3.185,1165,3.185,1166,3.377,1167,3.185,1168,2.692,1169,2.903,1170,3.185,1171,3.185,1172,4.613,1173,4.613,1174,3.185,1175,3.185,1176,3.185,1177,3.185,1178,3.185,1179,3.185,1180,2.903,1181,2.692,1182,3.185,1183,3.185,1184,3.185,1185,3.185,1186,3.185,1187,3.185,1188,3.185]],["title/classes/FilterBuilder.html",[47,0.11,938,2.743]],["body/classes/FilterBuilder.html",[3,0.078,4,0.078,9,0.072,11,0.789,23,0.297,24,1.26,26,0.691,29,1.464,31,1.464,32,0.963,33,1.661,34,0.01,35,1.19,36,0.821,37,1.464,41,2.002,43,0.156,46,0.147,47,0.134,48,1.48,54,1.31,64,6.189,83,2.546,88,2.233,171,1.791,185,1.788,272,0.006,273,0.006,274,0.003,312,2.445,329,1.78,334,2.899,343,3.274,365,5.083,366,2.253,373,1.94,404,1.736,422,1.821,424,2.335,467,2.318,481,2.155,556,2.411,563,3.435,564,3.914,613,1.89,693,3.899,814,4.475,824,1.063,894,6.176,896,1.997,899,1.708,901,3.07,902,5.083,905,3.764,906,4.475,938,5.546,1003,1.997,1004,2.318,1104,3.872,1189,1.158,1190,5.382,1191,1.997,1192,3.53,1193,5.91,1194,4.392,1195,4.392,1196,4.392,1197,4.392,1198,4.392,1199,4.392,1200,6.005,1201,6.005,1202,2.858,1203,7.009,1204,2.858,1205,3.061,1206,6.005,1207,4.392,1208,6.001,1209,8.583,1210,2.858,1211,4.828,1212,4.392,1213,5.172,1214,4.825,1215,4.299,1216,4.392,1217,4.392,1218,2.858,1219,4.392,1220,2.858,1221,6.032,1222,4.392,1223,6.842,1224,6.005,1225,4.392,1226,2.858,1227,2.753,1228,3.872,1229,4.392,1230,2.858,1231,4.392,1232,6.005,1233,6.005,1234,2.858,1235,4.392,1236,3.274,1237,2.858,1238,4.392,1239,3.435,1240,4.392,1241,2.858,1242,5.713,1243,4.392,1244,3.872,1245,3.872,1246,3.872,1247,2.296,1248,2.858,1249,3.872,1250,3.872,1251,2.858,1252,2.858,1253,2.858,1254,2.519,1255,2.296,1256,3.53,1257,2.519,1258,2.519,1259,2.519,1260,2.519,1261,2.519,1262,2.519,1263,2.519,1264,2.13,1265,2.296,1266,2.519,1267,2.519,1268,2.519,1269,2.519,1270,2.296,1271,2.519,1272,2.296,1273,2.858,1274,2.858,1275,2.858,1276,2.858,1277,4.825,1278,6.005,1279,6.005,1280,2.858,1281,2.858,1282,4.392,1283,2.858,1284,2.858,1285,2.858,1286,2.858,1287,2.858,1288,2.858,1289,5.35,1290,2.858,1291,2.858,1292,2.858]],["title/classes/FlatNode.html",[47,0.11,1293,3.261]],["body/classes/FlatNode.html",[3,0.137,4,0.137,8,2.705,9,0.125,11,0.783,23,0.519,24,1.875,26,1.204,29,1.502,31,1.656,32,1.433,33,1.365,34,0.01,35,1.091,36,0.659,37,1.268,41,1.87,43,0.272,46,0.137,47,0.125,48,1.394,55,1.581,104,1.561,185,1.665,272,0.005,273,0.007,274,0.005,326,4.096,334,4.313,366,2.141,371,2.092,381,3.098,382,5.761,402,2.955,413,1.091,424,2.092,501,2.55,742,5.907,830,2.145,898,4.192,1004,3.449,1189,2.02,1293,5.768,1294,5.037,1295,7.084,1296,4.393,1297,6.166,1298,3.679,1299,5.859,1300,4.984,1301,2.736,1302,4.984,1303,6.535,1304,6.535,1305,4.984,1306,6.535,1307,4.984,1308,4.984,1309,6.535,1310,6.535,1311,4.984,1312,4.984,1313,4.87,1314,3.738,1315,3.714,1316,4.984,1317,4.984,1318,4.984]],["title/components/GenderSelectorComponent.html",[0,0.788,233,1.462]],["body/components/GenderSelectorComponent.html",[0,1.438,1,1.331,2,2.069,3,0.112,4,0.112,5,1.521,6,1.48,7,1.521,8,1.297,9,0.103,11,0.707,16,1.144,17,2.875,18,3.098,19,2.126,21,2.126,23,0.425,24,1.639,26,0.988,29,1.109,31,1.223,32,1.253,33,1.193,34,0.01,35,1.191,36,0.576,37,1.109,41,0.988,42,2.014,43,0.36,44,0.494,46,0.112,47,0.103,48,1.029,50,2.014,54,1.874,90,2.62,104,1.082,125,2.856,179,2.444,180,1.815,181,3.771,183,1.815,184,2.078,185,2.508,187,2.451,189,2.157,190,3.558,193,1.815,195,3.477,201,3.784,203,2.078,216,0.854,217,1.813,218,2.126,219,1.521,220,2.654,221,1.521,222,1.521,223,1.366,224,0.875,225,2.126,226,1.366,227,1.521,228,1.331,229,1.521,230,1.366,231,1.521,232,1.521,233,2.384,234,1.831,235,1.366,236,1.521,237,1.331,238,1.521,239,1.366,240,1.521,241,1.366,242,1.521,243,1.366,244,1.521,245,1.366,246,2.126,247,1.366,248,1.521,249,1.366,250,1.521,251,1.331,252,1.521,253,1.366,254,1.603,255,1.521,256,1.366,257,1.331,258,1.521,259,1.331,260,1.526,261,1.521,262,1.366,263,1.671,264,1.521,265,1.366,266,1.91,267,1.521,268,1.366,269,1.331,270,1.521,271,1.521,272,0.004,273,0.006,274,0.004,300,3.285,302,5.133,308,5.807,309,5.037,331,4.08,333,1.723,342,2.069,364,3.771,373,1.705,393,1.938,403,3.604,404,0.941,421,2.856,422,1.012,457,2.444,458,3.604,461,1.815,463,3.047,465,2.708,466,3.686,471,2.244,483,4.603,486,3.416,500,2.338,501,1.297,546,3.143,547,3.143,569,1.874,1043,3.416,1255,4.592,1319,5.294,1320,4.91,1321,3.626,1322,5.714,1323,4.088,1324,4.088,1325,5.714,1326,3.582,1327,4.088,1328,3.604,1329,3.604,1330,3.604,1331,4.592,1332,4.348,1333,3.047,1334,3.285,1335,3.993,1336,4.088,1337,4.088,1338,3.993,1339,3.604,1340,3.604]],["title/modules/GenderSelectorModule.html",[275,0.749,1341,3.057]],["body/modules/GenderSelectorModule.html",[3,0.171,4,0.171,9,0.157,34,0.01,43,0.469,44,0.755,46,0.171,47,0.157,216,1.305,233,3.04,234,1.305,272,0.006,273,0.008,274,0.006,275,1.071,277,1.749,278,2.089,279,2.929,280,2.263,281,2.263,282,2.44,286,2.057,287,2.202,288,2.144,290,2.884,291,2.326,292,2.273,294,4.311,295,3.43,297,1.885,506,5.509,510,4.658,516,5.509,1319,5.022,1320,4.658,1332,4.125,1341,6.173,1342,5.509,1343,5.509,1344,5.509,1345,6.643]],["title/components/HeaderComponent.html",[0,0.788,235,1.462]],["body/components/HeaderComponent.html",[0,1.453,1,1.911,2,2.125,3,0.209,4,0.117,5,1.581,6,1.538,7,1.581,8,1.348,9,0.107,11,0.63,12,5.827,16,1.189,17,2.864,18,3.108,19,2.184,21,2.184,23,0.442,24,1.683,26,1.026,28,6.393,29,1.305,31,1.256,32,1.287,33,0.887,34,0.01,35,1.123,36,0.428,37,0.824,41,1.026,42,2.068,43,0.396,44,0.513,45,3.166,46,0.117,47,0.107,48,0.765,50,2.068,54,1.948,55,1.348,58,3.298,104,1.111,172,2.16,182,6.709,183,1.886,184,2.16,185,1.42,187,1.581,189,2.242,190,3.607,193,2.985,197,2.242,201,3.824,204,2.691,205,2.43,206,2.242,211,5.405,212,3.413,213,1.383,216,0.887,217,1.862,218,2.184,219,1.581,220,2.699,221,1.581,222,1.581,223,1.42,224,0.909,225,2.184,226,1.42,227,1.581,228,1.383,229,1.581,230,1.42,231,1.581,232,1.581,233,1.42,234,0.887,235,2.423,236,1.581,237,1.383,238,1.581,239,1.42,240,1.581,241,1.42,242,1.581,243,1.42,244,1.581,245,1.42,246,2.184,247,1.42,248,1.581,249,1.42,250,1.581,251,1.383,252,1.581,253,1.42,254,0.954,255,1.581,256,1.42,257,1.383,258,1.581,259,1.383,260,1.552,261,1.581,262,1.42,263,1.706,264,1.581,265,1.42,266,1.961,267,1.581,268,1.42,269,1.383,270,1.581,271,1.581,272,0.004,273,0.006,274,0.004,302,3.873,310,0.955,333,1.77,372,1.977,373,0.931,379,3.221,381,2.782,457,2.539,461,3.22,465,2.782,466,3.607,476,3.221,478,2.43,479,2.43,526,2.526,717,5.173,800,4.716,803,4.374,850,2.013,856,4.215,1227,3.679,1313,4.374,1346,3.745,1347,3.679,1348,6.724,1349,5.868,1350,6.724,1351,7.252,1352,4.248,1353,5.868,1354,5.173,1355,5.173,1356,5.868,1357,4.248,1358,5.868,1359,5.173,1360,4.374,1361,4.248,1362,4.248,1363,4.248,1364,5.868,1365,3.413,1366,3.413,1367,4.248,1368,3.413,1369,3.745,1370,3.413,1371,3.166,1372,4.248,1373,4.248,1374,4.248]],["title/modules/HeaderModule.html",[275,0.749,1375,3.057]],["body/modules/HeaderModule.html",[1,2.588,3,0.165,4,0.165,9,0.151,34,0.01,43,0.478,44,0.725,45,4.472,46,0.165,47,0.151,216,1.253,235,3.024,272,0.006,273,0.008,274,0.006,275,1.028,276,6.045,277,1.679,278,2.005,279,2.878,280,2.172,281,2.172,282,2.397,286,2.007,287,2.114,288,2.059,290,2.813,291,2.233,292,2.217,293,6.481,294,4.205,295,3.293,297,2.217,1375,6.228,1376,5.29,1377,5.29,1378,6,1379,5.29,1380,6,1381,7.352,1382,6,1383,6,1384,6]],["title/components/HomeComponent.html",[0,0.788,237,1.425]],["body/components/HomeComponent.html",[0,1.217,1,1.397,2,2.139,3,0.118,4,0.118,5,1.596,6,1.553,7,1.596,8,1.361,9,0.108,11,0.46,16,2.137,17,2.866,18,3.129,19,2.199,21,2.199,34,0.009,35,0.987,43,0.234,44,0.518,46,0.118,47,0.108,58,2.898,73,2.57,78,3.572,85,2.709,86,4.403,87,4.403,95,1.695,104,1.379,109,5.427,110,5.21,111,1.532,112,5.427,122,3.04,124,4.748,126,5.209,127,5.209,173,2.199,183,2.623,184,2.181,185,1.974,187,1.596,189,3.567,190,3.203,195,3.843,197,4.166,204,1.967,208,3.782,211,3.197,213,1.397,214,3.782,215,4.403,216,0.896,217,1.875,218,2.199,219,1.596,220,2.71,221,1.596,222,1.596,223,1.434,224,1.446,225,2.199,226,1.434,227,1.596,228,1.397,229,1.596,230,1.434,231,1.596,232,1.596,233,1.434,234,1.411,235,1.434,236,1.596,237,2.371,238,1.596,239,1.434,240,1.596,241,1.434,242,1.596,243,1.434,244,1.596,245,1.434,246,2.199,247,1.434,248,1.596,249,1.434,250,1.596,251,1.397,252,1.596,253,1.434,254,1.518,255,1.596,256,1.434,257,1.397,258,1.596,259,1.397,260,1.558,261,1.596,262,1.434,263,1.715,264,1.596,265,1.434,266,1.974,267,1.596,268,1.434,269,1.397,270,1.596,271,1.596,272,0.004,273,0.006,274,0.008,412,2.543,461,2.623,576,2.326,583,2.898,607,3.339,615,2.898,649,3.9,694,3.9,742,4.806,755,4.403,852,2.454,856,2.689,1080,4.403,1227,3.704,1385,3.782,1386,3.004,1387,5.908,1388,6.758,1389,5.908,1390,5.908,1391,5.908,1392,5.209,1393,5.852,1394,5.908,1395,6.42,1396,4.128,1397,5.908,1398,5.908,1399,5.908,1400,5.209,1401,5.209,1402,5.908,1403,5.908,1404,5.209,1405,6.758,1406,5.908,1407,4.29,1408,4.29,1409,4.29,1410,5.431,1411,5.908,1412,4.29,1413,4.29]],["title/modules/HomeModule.html",[275,0.749,1414,3.261]],["body/modules/HomeModule.html",[3,0.174,4,0.174,9,0.159,34,0.01,43,0.461,44,0.766,46,0.174,47,0.159,216,1.324,237,2.853,272,0.007,273,0.008,274,0.007,275,1.086,277,1.774,278,2.119,279,2.948,280,2.296,281,2.296,282,1.912,286,2.075,287,2.234,288,2.176,290,2.909,291,2.36,292,2.293,297,2.293,652,4.185,694,4.185,1414,6.659,1415,5.59,1416,5.59,1417,5.59,1418,6.124,1419,6.341,1420,6.341]],["title/modules/HomeRoutingModule.html",[275,0.749,1418,3.057]],["body/modules/HomeRoutingModule.html",[0,1.182,3,0.18,4,0.18,9,0.165,34,0.01,43,0.451,44,0.793,46,0.18,47,0.165,237,2.527,272,0.007,273,0.008,274,0.007,277,1.837,282,1.98,292,2.34,297,1.98,422,1.625,685,4.332,686,4.439,687,4.534,688,3.337,693,3.558,711,4.587,712,4.115,713,4.587,1023,4.587,1418,5.422,1421,6.564,1422,6.564]],["title/interfaces/IconDefinition.html",[111,0.849,1423,2.616]],["body/interfaces/IconDefinition.html",[3,0.16,4,0.16,9,0.146,11,0.624,23,0.605,34,0.01,35,1.434,36,0.826,37,1.706,43,0.317,46,0.16,89,7.223,111,1.128,201,4.327,217,2.724,263,1.475,272,0.006,273,0.007,274,0.006,301,2.922,310,1.174,413,1.434,518,2.224,568,3.285,569,3.306,646,3.837,734,3.475,1423,4.31,1424,3.325,1425,5.125,1426,7.209,1427,5.373,1428,6.898,1429,7.223,1430,4.069,1431,6.106,1432,7.223,1433,5.038]],["title/classes/IconRegistryState.html",[47,0.11,732,3.057]],["body/classes/IconRegistryState.html",[3,0.113,4,0.113,9,0.103,11,0.616,23,0.429,24,1.648,26,0.995,29,1.283,31,1.229,32,1.259,33,1.381,34,0.01,35,1.384,36,0.667,37,1.283,41,1.598,42,1.451,43,0.445,46,0.113,47,0.103,48,1.404,50,2.024,54,1.888,83,1.532,181,3.791,201,3.867,217,2.538,263,1.045,272,0.004,273,0.006,274,0.004,295,2.26,301,1.669,306,2.818,312,1.413,333,1.732,338,3.791,342,2.954,343,4.281,359,3.152,366,1.53,372,1.945,380,2.462,399,1.829,404,0.948,413,0.959,422,1.637,424,1.897,481,2.818,568,3.171,646,2.718,722,3.6,729,1.669,732,4.013,734,4.278,756,4.281,792,2.761,824,1.532,825,1.669,897,2.718,898,2.094,899,3.954,901,1.451,931,1.491,932,3.069,1189,1.669,1423,3.954,1424,4.093,1428,5.314,1434,3.309,1435,4.281,1436,6.047,1437,6.263,1438,5.599,1439,4.118,1440,6.871,1441,6.634,1442,6.308,1443,4.118,1444,5.961,1445,5.063,1446,5.063,1447,5.063,1448,4.118,1449,5.961,1450,4.118,1451,5.744,1452,4.118,1453,5.744,1454,4.118,1455,5.744,1456,5.83,1457,3.033,1458,3.63,1459,3.309,1460,2.718,1461,3.791,1462,4.118,1463,3.069,1464,4.615,1465,4.621,1466,3.63,1467,3.63,1468,3.63,1469,3.309,1470,8.159,1471,6.614,1472,4.118,1473,4.118,1474,4.118,1475,4.118,1476,4.118,1477,4.118,1478,4.118,1479,4.118,1480,4.118,1481,4.118,1482,4.118,1483,4.118,1484,5,1485,4.281,1486,4.118,1487,4.118,1488,4.118,1489,5.744,1490,4.118,1491,2.878,1492,4.118,1493,4.118,1494,5.744,1495,4.118,1496,4.118,1497,4.118,1498,4.118,1499,4.118]],["title/interfaces/IdObject.html",[111,0.849,1500,3.057]],["body/interfaces/IdObject.html",[3,0.129,4,0.129,9,0.119,11,0.506,23,0.491,34,0.01,35,1.318,36,0.476,41,1.14,43,0.344,46,0.208,48,0.85,83,3.022,104,1.434,111,1.576,272,0.005,273,0.007,274,0.005,301,2.877,310,1.026,373,1.781,404,1.086,413,1.318,422,2.134,424,1.354,460,4.719,501,2.404,518,1.806,523,2.574,534,2.49,557,4.013,560,3.724,824,1.756,923,5.199,931,1.709,1213,5.867,1298,3.199,1301,2.052,1314,2.7,1500,5.293,1501,3.115,1502,3.115,1503,4.333,1504,5,1505,4.405,1506,3.517,1507,4.959,1508,3.517,1509,4.16,1510,4.698,1511,4.698,1512,4.449,1513,4.698,1514,3.298,1515,5.883,1516,4.405,1517,3.517,1518,3.298,1519,4.959,1520,3.517,1521,3.298,1522,3.298,1523,3.517,1524,4.698,1525,3.298,1526,3.298,1527,3.517,1528,3.298,1529,3.298,1530,3.517,1531,3.517,1532,3.298,1533,3.517,1534,4.698,1535,3.517,1536,3.517,1537,3.792,1538,3.792,1539,3.792,1540,3.115,1541,3.792]],["title/interfaces/JsonOntologyNode.html",[111,0.849,1509,2.888]],["body/interfaces/JsonOntologyNode.html",[3,0.125,4,0.125,9,0.115,11,0.49,23,0.475,34,0.01,35,1.303,36,0.704,37,1.196,41,1.103,43,0.337,46,0.205,48,0.822,83,2.993,104,1.478,111,1.515,272,0.005,273,0.006,274,0.005,301,2.498,310,1.003,373,1.764,404,1.607,413,1.166,422,2.121,424,1.31,460,4.666,501,2.477,518,1.747,523,2.418,534,3.253,557,3.968,560,3.927,824,1.699,923,5.203,931,1.653,1213,5.867,1298,3.26,1301,2.007,1314,2.611,1500,5.222,1501,3.013,1502,3.013,1503,4.275,1504,4.933,1505,4.307,1506,3.402,1507,5.745,1508,4.594,1509,4.607,1510,5.817,1511,5.817,1512,4.685,1513,5.817,1514,3.19,1515,5.817,1516,4.307,1517,3.402,1518,3.19,1519,4.877,1520,3.402,1521,3.19,1522,3.19,1523,3.402,1524,4.594,1525,3.19,1526,3.19,1527,3.402,1528,3.19,1529,3.19,1530,3.402,1531,3.402,1532,3.19,1533,3.402,1534,4.594,1535,3.402,1536,3.402,1537,3.668,1538,3.668,1539,3.668,1540,3.013,1541,3.668]],["title/interfaces/LocalDatabase.html",[111,0.849,624,2.006]],["body/interfaces/LocalDatabase.html",[3,0.101,4,0.145,9,0.092,11,0.394,16,1.026,23,0.382,34,0.01,36,0.798,46,0.217,58,1.799,73,2.872,74,2.097,82,2.097,85,1.681,88,2.689,95,1.517,104,0.694,111,1.536,173,2.68,174,2.012,180,1.628,213,1.722,224,1.132,234,1.105,260,0.785,272,0.004,273,0.005,274,0.004,286,1.001,301,1.486,310,0.861,329,3.041,333,1.595,361,1.578,371,1.574,404,0.844,413,1.456,467,2.791,481,1.799,501,2.155,517,4.118,518,1.403,519,2.097,523,1.556,524,2.012,525,1.486,526,1.578,528,2.791,529,3.162,530,3.332,531,2.097,532,2.192,533,3.408,534,3.96,535,4.061,536,2.192,537,2.192,538,2.097,539,2.097,540,2.097,541,2.097,542,3.709,543,2.097,544,2.097,545,2.192,546,1.444,547,1.444,548,2.903,549,1.531,550,2.012,551,1.935,552,2.192,553,2.192,554,2.192,555,3.026,556,2.012,557,1.864,558,1.799,559,1.486,560,1.681,561,2.192,562,2.192,563,2.097,564,2.097,565,2.192,566,2.923,567,3.413,568,2.871,569,2.425,570,3.162,571,4.025,572,3.815,573,3.162,574,3.721,575,2.954,576,2.082,577,2.192,578,2.097,579,2.097,580,2.097,581,2.097,582,2.097,583,1.799,584,2.192,585,2.012,586,2.192,587,2.903,588,2.192,589,2.192,590,2.192,591,2.097,592,2.192,593,2.097,594,2.192,595,2.192,596,2.192,597,2.192,598,2.192,599,2.097,600,2.097,601,2.097,602,2.097,603,3.162,604,3.162,605,3.533,606,1.486,607,2.425,608,3.162,609,3.728,610,2.192,611,2.192,612,3.453,613,3.753,614,3.96,615,3.884,616,4.025,617,3.884,618,3.026,619,3.162,620,3.162,621,3.162,622,3.026,623,3.026,624,2.425,625,3.162,626,3.44,627,3.681]],["title/injectables/LocalDatabaseService.html",[857,1.628,872,2.503]],["body/injectables/LocalDatabaseService.html",[3,0.075,4,0.075,9,0.131,11,0.779,23,0.285,24,1.221,26,0.663,29,1.528,31,0.911,32,0.933,33,1.557,34,0.01,35,1.245,36,0.782,37,1.408,41,1.84,42,2.372,43,0.423,44,0.332,46,0.075,47,0.069,48,1.342,50,2.071,54,1.258,73,2.802,83,3.255,95,2.41,104,1.528,125,1.917,170,1.506,272,0.005,273,0.004,274,0.003,310,0.693,312,2.844,326,2.668,333,2.375,342,1.888,371,0.696,372,1.252,373,0.933,404,0.632,412,2.738,413,1.062,422,1.575,424,2.138,450,2.088,460,3.513,479,2.983,481,2.088,523,0.807,526,3.389,533,2.897,559,1.112,567,2.472,568,1.629,572,2.651,575,2.053,583,2.088,585,2.336,605,2.558,612,3.69,613,3.743,614,2.246,615,2.088,616,2.164,617,2.088,618,2.435,624,3.328,626,2.695,629,1.3,644,2.204,669,1.569,729,1.112,730,1.64,731,1.811,738,1.506,739,2.419,746,1.346,792,3.563,822,2.435,824,1.021,825,1.112,857,1.584,858,1.506,872,2.435,873,4.198,896,4.106,900,5.198,901,3.124,903,4.708,911,3.752,931,0.993,933,2.974,934,3.442,937,1.3,942,1.72,974,3.752,978,3.752,982,3.752,986,3.752,989,2.204,1000,3.887,1004,3.552,1081,5.181,1205,3.85,1227,1.72,1239,4.505,1298,1.112,1315,2.045,1339,2.419,1430,2.017,1458,2.419,1542,7.034,1543,2.419,1544,4.256,1545,3.752,1546,5.215,1547,5.877,1548,4.597,1549,3.752,1550,4.256,1551,2.419,1552,5.181,1553,4.256,1554,3.752,1555,4.256,1556,2.743,1557,7.875,1558,4.256,1559,2.743,1560,4.256,1561,2.743,1562,4.256,1563,2.743,1564,4.256,1565,2.743,1566,4.256,1567,2.743,1568,4.256,1569,3.513,1570,2.743,1571,2.668,1572,5.877,1573,4.256,1574,3.752,1575,2.743,1576,4.256,1577,3.752,1578,4.256,1579,4.256,1580,2.743,1581,5.877,1582,2.743,1583,2.743,1584,4.256,1585,2.743,1586,2.419,1587,2.419,1588,2.743,1589,2.419,1590,2.743,1591,2.743,1592,2.743,1593,4.256,1594,5.215,1595,2.743,1596,2.419,1597,2.743,1598,2.743,1599,2.743,1600,2.743,1601,2.743,1602,2.204,1603,2.743,1604,2.743,1605,2.743,1606,2.743,1607,2.743,1608,2.743,1609,2.743,1610,2.743,1611,2.743,1612,2.743,1613,2.743,1614,2.743,1615,2.743,1616,2.743,1617,2.743,1618,2.743,1619,2.743,1620,2.743,1621,2.743,1622,5.215,1623,2.743,1624,2.743,1625,2.743,1626,2.743,1627,2.743,1628,2.743,1629,2.743,1630,2.743,1631,2.743,1632,2.743,1633,2.419,1634,2.743,1635,2.743]],["title/components/MainComponent.html",[0,0.788,239,1.462]],["body/components/MainComponent.html",[0,1.358,1,1.348,2,2.087,3,0.114,4,0.114,5,1.541,6,1.499,7,1.541,8,1.314,9,0.104,11,0.77,16,1.158,17,2.857,18,3.101,19,2.145,21,2.145,23,0.431,26,1.393,29,1.119,31,1.234,32,1.264,33,0.865,34,0.01,35,1.108,36,0.417,37,0.803,43,0.392,44,0.5,46,0.114,47,0.104,48,1.038,50,2.527,55,1.829,85,2.643,90,2.643,104,1.091,117,4.396,183,1.838,184,2.931,185,1.383,187,1.541,189,2.185,192,2.595,193,3.627,194,4.634,195,2.185,197,3.042,199,2.732,201,1.962,203,2.931,204,1.898,213,1.877,216,0.865,217,1.829,218,2.145,219,1.541,220,2.669,221,1.541,222,1.541,223,1.383,224,0.886,225,2.145,226,1.383,227,1.541,228,1.348,229,1.541,230,1.383,231,1.541,232,1.541,233,1.383,234,0.865,235,1.383,236,1.541,237,1.348,238,1.541,239,2.397,240,1.541,241,1.383,242,1.541,243,1.383,244,1.541,245,1.383,246,2.145,247,1.383,248,1.541,249,1.383,250,1.541,251,1.348,252,1.541,253,1.383,254,1.963,255,1.541,256,1.383,257,1.348,258,1.541,259,1.348,260,1.535,261,1.541,262,1.383,263,1.683,264,1.541,265,1.383,266,1.926,267,1.541,268,1.383,269,1.348,270,1.541,271,1.541,272,0.004,273,0.006,274,0.004,301,2.336,310,0.938,331,4.103,333,2.163,372,1.218,373,0.908,381,2.732,395,3.042,412,2.481,421,2.893,427,2.368,457,2.475,461,3.348,465,3.144,466,3.144,476,3.164,479,3.298,496,3.327,500,2.368,583,2.828,687,3.164,772,4.103,829,3.085,850,3.4,856,4.157,1027,5.082,1095,6.323,1313,4.296,1365,3.327,1386,2.931,1433,4.028,1466,5.082,1574,3.65,1636,3.65,1637,7.807,1638,5.765,1639,6.632,1640,5.765,1641,5.847,1642,4.14,1643,5.765,1644,5.765,1645,5.765,1646,4.632,1647,5.082,1648,4.14,1649,4.14,1650,4.14,1651,3.085,1652,3.085,1653,4.14,1654,4.14,1655,4.14]],["title/modules/MainModule.html",[275,0.749,641,3.057]],["body/modules/MainModule.html",[3,0.159,4,0.159,9,0.145,34,0.01,43,0.487,44,0.699,46,0.159,47,0.145,216,1.209,239,3.011,272,0.006,273,0.007,274,0.006,275,0.991,277,1.62,278,1.934,279,2.832,280,2.095,281,2.095,282,2.359,286,1.963,287,2.039,288,1.986,290,2.751,291,2.154,292,2.168,294,4.113,295,3.176,297,2.168,641,6.319,646,3.82,647,6.338,648,5.102,686,4.113,688,2.942,1375,5.992,1656,5.102,1657,5.102,1658,5.102,1659,5.102,1660,5.992,1661,5.992,1662,5.787,1663,7.19,1664,5.787,1665,5.787,1666,5.787,1667,5.787,1668,5.787]],["title/components/MetadataComponent.html",[0,0.788,241,1.462]],["body/components/MetadataComponent.html",[0,1.498,1,1.553,2,2.299,3,0.131,4,0.131,5,1.775,6,1.727,7,1.775,8,1.514,9,0.12,11,0.512,16,2.491,17,2.892,18,3.132,19,2.363,21,2.363,23,0.496,29,0.926,34,0.01,35,1.06,36,0.64,43,0.261,44,0.577,46,0.131,47,0.12,85,2.911,104,1.202,122,2.651,168,4.175,183,2.118,184,3.228,187,1.775,189,3.351,190,2.261,194,3.334,195,2.518,197,3.351,199,3.149,200,3.556,202,4.206,203,3.628,204,2.188,216,0.996,217,2.015,218,2.363,219,1.775,220,2.831,221,1.775,222,1.775,223,1.594,224,1.021,225,2.363,226,1.594,227,1.775,228,1.553,229,1.775,230,1.594,231,1.775,232,1.775,233,1.594,234,0.996,235,1.594,236,1.775,237,1.553,238,1.775,239,1.594,240,1.775,241,2.542,242,1.775,243,1.594,244,1.775,245,1.594,246,2.363,247,1.594,248,1.775,249,1.594,250,1.775,251,1.553,252,1.775,253,1.594,254,1.072,255,1.775,256,1.594,257,1.553,258,1.775,259,1.553,260,1.628,261,1.775,262,1.594,263,1.81,264,1.775,265,1.594,266,2.122,267,1.775,268,1.594,269,1.553,270,1.775,271,1.775,272,0.005,273,0.007,274,0.005,373,1.046,413,1.06,471,3.485,472,3.334,478,3.632,501,2.015,527,2.729,627,3.115,852,3.632,891,3.632,1044,3.632,1410,5.102,1669,4.206,1670,6.349,1671,6.349,1672,6.349,1673,7.136,1674,6.349,1675,4.771,1676,6.349,1677,6.349,1678,4.771,1679,3.834,1680,2.991]],["title/modules/MetadataModule.html",[275,0.749,1017,2.743]],["body/modules/MetadataModule.html",[3,0.176,4,0.176,9,0.161,34,0.01,43,0.447,44,0.775,46,0.176,47,0.161,216,1.339,241,3.049,272,0.007,273,0.008,274,0.007,275,1.099,277,1.795,278,2.143,279,2.962,280,2.322,281,2.322,282,2.467,286,2.09,287,2.26,288,2.2,290,2.929,291,2.387,292,2.308,297,1.934,1017,5.567,1681,5.654,1682,5.654,1683,5.654,1684,6.414,1685,6.414]],["title/components/NavigationComponent.html",[0,0.788,243,1.462]],["body/components/NavigationComponent.html",[0,1.373,1,1.137,2,1.849,3,0.096,4,0.096,5,1.3,6,1.265,7,1.3,8,1.108,9,0.088,11,0.548,16,0.977,17,2.81,18,3.054,19,1.9,21,1.9,23,0.363,24,1.465,26,0.844,29,1.432,31,1.093,32,1.12,33,0.73,34,0.01,35,1.008,36,0.515,37,0.678,41,0.844,42,1.799,43,0.363,44,0.422,46,0.096,47,0.088,48,0.629,50,1.799,55,1.915,73,1.663,78,2.505,81,3.568,90,3.494,104,0.967,117,3.312,122,2.132,168,2.802,172,1.776,183,1.551,184,4.173,185,1.706,187,1.9,189,2.695,190,3.497,193,2.68,195,3.504,196,4.223,197,1.843,201,4.125,203,3.376,204,2.341,205,1.998,206,1.843,209,4.948,213,1.137,216,0.73,217,1.62,218,1.9,219,1.3,220,2.471,221,1.3,222,1.3,223,1.167,224,0.748,225,1.9,226,1.167,227,1.3,228,1.137,229,1.3,230,1.167,231,1.3,232,1.3,233,1.167,234,0.73,235,1.167,236,1.3,237,1.137,238,1.3,239,1.167,240,1.3,241,1.167,242,1.3,243,2.219,244,1.3,245,1.167,246,1.9,247,1.167,248,1.3,249,1.167,250,1.3,251,1.137,252,1.3,253,1.167,254,1.819,255,1.3,256,1.167,257,1.137,258,1.3,259,1.137,260,1.421,261,1.3,262,1.167,263,1.531,264,1.3,265,1.167,266,1.706,267,1.3,268,1.167,269,1.137,270,1.3,271,1.3,272,0.004,273,0.005,274,0.004,302,3.37,310,0.831,312,2.071,333,1.54,342,2.404,366,1.769,369,4.103,371,0.886,372,1.953,373,1.323,379,3.644,381,3.147,457,2.088,461,2.267,465,2.861,466,3.703,471,3.644,472,3.568,476,3.312,478,1.998,486,3.053,500,2.921,501,1.108,526,2.598,556,2.802,568,1.954,569,1.602,607,2.341,694,4.662,771,4.498,772,3.798,792,2.52,800,4.103,803,3.806,825,1.416,829,2.603,830,1.503,850,2.42,852,2.921,892,3.201,927,3.504,1044,2.921,1313,4.948,1329,3.079,1334,2.807,1359,4.502,1360,3.806,1365,2.807,1366,2.807,1368,2.807,1370,2.807,1371,2.603,1396,3.568,1641,6.718,1686,3.079,1687,5.106,1688,5.106,1689,5.106,1690,6.035,1691,5.106,1692,6.035,1693,6.035,1694,6.64,1695,4.103,1696,6.035,1697,3.079,1698,5.106,1699,5.106,1700,3.806,1701,4.103,1702,3.493,1703,5.106,1704,3.493,1705,4.103,1706,5.106,1707,3.493,1708,3.493,1709,6.504,1710,5.676,1711,4.103,1712,3.493,1713,3.493,1714,5.106,1715,3.493,1716,5.106,1717,3.493,1718,2.807,1719,2.603,1720,3.493,1721,2.603,1722,3.493,1723,3.493,1724,3.079,1725,3.493,1726,3.493,1727,3.079,1728,3.493,1729,3.493,1730,2.807]],["title/modules/NavigationModule.html",[275,0.749,1660,3.057]],["body/modules/NavigationModule.html",[3,0.171,4,0.171,9,0.157,34,0.01,43,0.469,44,0.755,46,0.171,47,0.157,216,1.305,243,3.04,272,0.006,273,0.008,274,0.006,275,1.071,277,1.749,278,2.089,279,2.929,280,2.263,281,2.263,282,2.44,286,2.057,287,2.202,288,2.144,290,2.884,291,2.326,292,2.273,294,4.311,295,3.43,297,1.885,686,4.311,688,3.177,1660,6.173,1731,5.509,1732,5.509,1733,5.509,1734,6.25,1735,6.25]],["title/injectables/NavigationService.html",[772,2.503,857,1.628]],["body/injectables/NavigationService.html",[3,0.097,4,0.097,9,0.089,11,0.651,23,0.367,24,1.475,29,1.614,31,1.584,33,1.074,34,0.01,35,0.859,36,0.673,37,0.998,41,1.893,43,0.436,44,0.426,46,0.097,47,0.089,48,1.277,55,2.753,73,2.734,78,2.523,83,1.914,90,3.592,117,3.331,122,3.191,260,1.101,263,1.692,272,0.004,273,0.005,274,0.004,310,0.837,312,2.54,342,1.862,366,1.889,372,2.177,373,1.623,380,3.075,381,2.438,399,2.962,413,1.308,422,0.873,424,2.124,523,2.177,525,3.098,549,2.147,558,1.731,568,3.303,629,1.672,649,3.395,669,2.018,693,3.935,694,5.171,722,2.211,723,2.629,724,2.629,726,2.629,727,2.629,729,1.43,736,1.862,772,2.942,792,3.535,821,2.465,824,1.313,825,1.43,857,1.914,858,1.936,883,4.006,892,3.224,897,4.403,927,2.714,930,1.43,931,1.277,934,2.328,937,1.672,955,2.629,1157,2.328,1166,4.063,1192,4.133,1227,3.224,1386,4.41,1485,5.285,1503,2.018,1701,2.835,1710,2.835,1736,2.835,1737,5.143,1738,6.07,1739,6.07,1740,6.07,1741,6.07,1742,6.07,1743,6.07,1744,5.143,1745,5.143,1746,6.671,1747,6.671,1748,5.143,1749,3.528,1750,5.351,1751,6.671,1752,5.143,1753,3.528,1754,4.877,1755,3.528,1756,6.671,1757,6.671,1758,4.661,1759,6.252,1760,3.528,1761,5.143,1762,3.528,1763,5.143,1764,3.528,1765,5.143,1766,3.528,1767,4.133,1768,5.143,1769,3.528,1770,5.143,1771,5.143,1772,5.143,1773,5.143,1774,3.528,1775,5.143,1776,5.143,1777,3.528,1778,5.143,1779,3.528,1780,5.143,1781,3.528,1782,3.528,1783,3.528,1784,3.528,1785,5.143,1786,2.328,1787,3.11,1788,3.11,1789,3.11,1790,3.11,1791,3.528,1792,3.528,1793,3.528,1794,3.528,1795,4.534,1796,4.241,1797,3.11,1798,3.11,1799,3.528,1800,3.528,1801,3.528,1802,3.528]],["title/classes/NavigationState.html",[47,0.11,736,2.309]],["body/classes/NavigationState.html",[3,0.089,4,0.089,9,0.082,11,0.736,17,2.623,23,0.338,24,1.389,26,0.785,29,1.545,31,1.036,32,1.061,33,1.598,34,0.01,35,1.306,36,0.803,37,1.485,41,1.849,42,2.756,43,0.435,44,0.393,46,0.089,47,0.082,48,1.341,54,1.49,73,2.592,90,3.885,117,3.763,122,3.373,123,4.019,260,1.538,272,0.003,273,0.005,274,0.003,306,2.375,307,4.79,310,0.788,312,2.2,321,4.48,342,3.147,358,3.383,359,2.657,360,3.195,361,2.083,364,3.195,399,2.847,402,3.17,404,1.714,413,0.808,422,1.895,424,1.839,523,2.114,527,1.859,575,3.013,612,2.461,613,3.293,688,1.652,722,3.034,726,2.422,727,2.422,729,1.317,736,2.555,740,1.715,790,3.383,821,4.79,825,1.317,872,3.667,873,4.829,875,3.195,898,2.941,901,1.145,902,2.145,931,1.176,936,2.145,937,1.54,940,2.611,941,2.145,958,2.422,960,2.422,1043,3.459,1097,4.043,1166,3.519,1168,5.109,1169,4.649,1189,1.317,1239,2.769,1437,5.509,1449,6.162,1457,2.94,1484,5.023,1571,4.019,1750,4.268,1754,3.89,1767,6.957,1786,5.254,1803,2.864,1804,4.841,1805,4.841,1806,5.786,1807,5.509,1808,4.841,1809,4.841,1810,4.841,1811,2.611,1812,3.249,1813,3.249,1814,3.608,1815,4.841,1816,3.249,1817,4.841,1818,3.249,1819,3.249,1820,4.268,1821,4.268,1822,3.249,1823,3.89,1824,5.983,1825,4.841,1826,6.564,1827,3.249,1828,4.841,1829,3.249,1830,4.841,1831,3.249,1832,4.841,1833,6.411,1834,4.841,1835,3.249,1836,2.611,1837,3.249,1838,3.249,1839,2.611,1840,3.249,1841,4.841,1842,4.841,1843,3.249,1844,2.864,1845,3.249,1846,3.249,1847,3.249,1848,3.249,1849,3.249,1850,3.249,1851,3.249,1852,3.249,1853,3.249,1854,5.1,1855,3.249,1856,4.268,1857,3.249,1858,3.249,1859,3.249,1860,3.249]],["title/interfaces/NavigationStateModel.html",[111,0.849,1786,2.888]],["body/interfaces/NavigationStateModel.html",[3,0.167,4,0.167,9,0.153,11,0.652,23,0.632,34,0.01,36,0.86,43,0.332,46,0.167,73,2.412,90,3.397,111,1.179,117,4.065,122,3.474,213,2.412,260,1.857,263,1.879,272,0.006,273,0.008,274,0.006,310,1.206,342,2.682,413,1.015,518,2.325,523,1.787,527,4.237,575,3.458,607,3.397,1097,4.245,1166,4.065,1168,6.201,1347,5.215,1386,4.411,1700,4.527,1786,4.889,1807,6.685,1836,4.881,1861,5.355,1862,5.176,1863,5.355]],["title/interfaces/OntologyNode.html",[111,0.849,1301,1.425]],["body/interfaces/OntologyNode.html",[3,0.154,4,0.154,8,2.24,9,0.141,11,0.603,23,0.585,34,0.01,36,0.841,46,0.194,104,1.533,111,1.37,272,0.006,273,0.007,274,0.006,310,1.149,404,1.92,413,1.523,501,2.772,518,2.151,523,2.453,524,3.875,525,3.381,550,3.875,558,3.463,559,2.861,560,3.903,629,3.837,1239,4.038,1297,3.928,1298,3.637,1301,2.513,1314,4.631,1338,4.933,1512,4.425,1540,5.344,1569,3.36,1680,3.523,1864,4.517,1865,4.955,1866,4.189]],["title/components/OntologySearchComponent.html",[0,0.788,245,1.462]],["body/components/OntologySearchComponent.html",[0,1.36,1,0.933,2,1.594,3,0.079,4,0.079,5,1.067,6,1.038,7,1.067,8,0.909,9,0.072,11,0.735,16,0.802,17,2.746,18,2.999,19,1.638,21,1.638,23,0.558,24,1.263,26,0.693,29,1.465,31,0.942,32,1.614,33,1.355,34,0.01,35,1.191,36,0.719,37,1.259,41,1.779,42,2.661,43,0.402,44,0.346,46,0.079,47,0.072,48,1.169,50,1.551,51,2.906,54,1.314,83,2.549,104,1.581,110,3.97,179,2.632,180,1.955,181,3.97,185,2.01,187,1.067,201,1.358,204,1.314,205,1.639,206,1.513,213,1.958,216,0.599,217,1.397,218,1.638,219,1.067,220,2.238,221,1.067,222,1.067,223,0.958,224,0.613,225,1.638,226,0.958,227,1.067,228,0.933,229,1.067,230,0.958,231,1.067,232,1.067,233,0.958,234,0.599,235,0.958,236,1.067,237,0.933,238,1.067,239,0.958,240,1.067,241,0.958,242,1.067,243,0.958,244,1.067,245,2.01,246,1.638,247,0.958,248,1.067,249,0.958,250,1.067,251,0.933,252,1.067,253,0.958,254,1.958,255,1.067,256,0.958,257,0.933,258,1.067,259,0.933,260,1.287,261,1.067,262,0.958,263,1.36,264,1.067,265,0.958,266,1.471,267,1.067,268,0.958,269,0.933,270,1.067,271,1.067,272,0.008,273,0.005,274,0.008,306,2.16,310,0.717,312,2.35,331,3.712,337,3.97,340,3.281,359,2.416,366,1.428,371,1.117,372,0.843,373,1.786,393,3.381,413,1.084,422,0.71,424,1.538,429,1.713,449,1.314,459,5.106,460,3.88,461,1.955,465,1.358,466,1.358,483,3.745,501,1.908,523,1.295,756,3.995,765,5.302,790,3.076,792,2.709,813,2.003,822,3.44,824,1.067,825,1.162,850,2.087,852,1.639,861,3.77,892,2.76,901,1.889,927,2.323,931,1.038,936,1.892,937,1.358,1294,4.831,1298,2.438,1301,1.745,1315,2.136,1321,2.238,1326,4.472,1331,4.307,1335,3.076,1347,2.76,1386,2.238,1512,2.76,1695,3.538,1711,4.833,1721,4.482,1724,2.527,1867,5.176,1868,2.527,1869,4.402,1870,4.725,1871,3.881,1872,5.36,1873,7.362,1874,4.402,1875,4.402,1876,4.402,1877,4.402,1878,2.527,1879,4.203,1880,4.402,1881,4.725,1882,2.866,1883,4.402,1884,3.538,1885,4.402,1886,5.386,1887,2.866,1888,4.402,1889,4.402,1890,5.36,1891,8.291,1892,4.402,1893,2.866,1894,4.402,1895,4.402,1896,3.076,1897,4.402,1898,6.85,1899,2.866,1900,4.402,1901,4.402,1902,3.076,1903,4.402,1904,2.866,1905,6.014,1906,4.402,1907,2.866,1908,4.402,1909,3.281,1910,2.906,1911,4.402,1912,2.866,1913,3.881,1914,4.402,1915,3.538,1916,3.538,1917,3.881,1918,2.303,1919,2.527,1920,2.866,1921,4.402,1922,2.866,1923,2.866,1924,2.866,1925,2.866,1926,2.303,1927,2.866,1928,2.866,1929,2.866,1930,2.866,1931,2.866,1932,2.866,1933,2.866,1934,2.866,1935,2.866,1936,2.866,1937,2.866,1938,2.866,1939,2.866,1940,2.866,1941,4.402,1942,4.402,1943,4.402,1944,5.36,1945,2.527,1946,2.003,1947,2.527,1948,2.866,1949,2.866,1950,6.014,1951,2.866,1952,2.866,1953,2.866,1954,2.866,1955,2.866,1956,2.303,1957,2.866]],["title/modules/OntologySearchModule.html",[275,0.749,1958,3.057]],["body/modules/OntologySearchModule.html",[3,0.166,4,0.166,9,0.152,34,0.01,43,0.484,44,0.731,46,0.166,47,0.152,104,1.145,216,1.263,245,3.027,269,1.969,272,0.006,273,0.008,274,0.006,275,1.036,277,1.692,278,2.021,279,2.887,280,2.189,281,2.189,282,2.405,286,2.017,287,2.131,288,2.075,290,2.827,291,2.25,292,2.228,294,4.225,295,3.319,297,1.824,663,4.225,1294,3.79,1867,3.991,1918,4.859,1919,5.331,1958,6.132,1959,5.331,1960,5.331,1961,5.331,1962,6.047,1963,7.386,1964,7.386,1965,7.386,1966,7.386,1967,6.047,1968,6.512,1969,4.859,1970,5.331]],["title/injectables/OntologySearchService.html",[857,1.628,1879,3.057]],["body/injectables/OntologySearchService.html",[3,0.102,4,0.102,9,0.093,11,0.777,23,0.855,24,1.533,29,1.405,32,0.815,33,1.428,34,0.01,35,1.142,36,0.76,37,1.327,41,1.92,43,0.412,44,0.449,46,0.147,47,0.093,48,1.399,51,3.527,75,2.988,95,1.067,104,1.591,111,1.037,123,3.349,125,3.734,170,2.933,254,2.012,272,0.008,273,0.006,274,0.008,310,0.87,312,2.146,342,1.935,361,2.3,366,0.991,371,1.587,373,1.172,399,1.651,413,1.476,422,1.693,423,3.734,424,1.961,459,3.982,501,2.784,559,3.28,629,1.763,669,2.127,729,1.507,738,2.041,792,3.023,822,3.057,825,1.507,852,3.911,857,2.544,858,2.041,861,2.331,901,1.883,903,2.223,905,4.982,930,1.507,931,1.935,937,1.763,1239,3.911,1298,3.148,1301,2.675,1321,2.717,1347,2.331,1386,1.891,1796,3.734,1867,4.976,1879,4.777,1886,4.37,1909,5.095,1910,4.512,1926,4.294,1956,6.752,1971,6.058,1972,2.988,1973,4.711,1974,5.343,1975,5.343,1976,5.343,1977,3.719,1978,3.982,1979,4.711,1980,7.665,1981,3.719,1982,4.711,1983,4.294,1984,5.494,1985,4.711,1986,3.719,1987,4.711,1988,3.719,1989,4.711,1990,4.711,1991,4.711,1992,3.719,1993,2.599,1994,2.988,1995,3.278,1996,5.513,1997,3.278,1998,2.988,1999,3.278,2000,3.278,2001,3.278,2002,3.278,2003,4.294,2004,3.278,2005,4.711,2006,4.711,2007,4.711,2008,4.711,2009,3.278,2010,3.278,2011,3.278,2012,3.278,2013,3.278,2014,3.278,2015,4.711,2016,4.711,2017,3.278]],["title/injectables/OntologyService.html",[857,1.628,1896,3.057]],["body/injectables/OntologyService.html",[3,0.143,4,0.143,8,2.498,9,0.131,11,0.799,23,0.542,24,1.929,26,1.259,29,1.445,31,1.439,32,1.475,33,1.405,34,0.01,35,1.123,36,0.751,37,1.305,41,1.625,43,0.456,44,0.63,46,0.143,47,0.131,48,1.212,50,2.774,54,2.389,88,4.002,104,1.629,272,0.005,273,0.007,274,0.005,310,1.095,342,2.435,399,2.313,412,2.895,422,1.29,424,1.494,467,3.55,559,2.111,629,3.531,669,2.98,729,2.111,738,2.859,784,5.013,792,3.11,824,1.939,825,2.111,857,2.503,858,2.859,873,5.198,875,4.439,899,3.114,930,2.111,1239,3.848,1298,3.554,1301,2.717,1314,4.922,1569,3.114,1602,5.405,1727,4.592,1896,4.7,1993,3.64,1994,4.186,2018,4.592,2019,6.726,2020,6.567,2021,5.929,2022,5.209,2023,6.726,2024,6.726,2025,5.209,2026,5.929,2027,5.986,2028,6.726,2029,5.209,2030,5.209,2031,5.209,2032,4.592,2033,5.209,2034,5.209]],["title/classes/OntologyState.html",[47,0.11,738,2.401]],["body/classes/OntologyState.html",[3,0.101,4,0.101,8,2.563,9,0.093,11,0.668,17,2.291,23,0.384,24,1.525,26,0.892,29,1.322,31,1.458,32,1.165,33,1.423,34,0.01,35,1.206,36,0.687,37,1.322,41,1.745,42,2.194,43,0.423,46,0.187,47,0.093,48,1.455,50,1.873,54,1.692,78,3.342,83,2.535,104,1.615,272,0.004,273,0.006,274,0.004,306,2.607,333,1.113,342,3.038,359,2.917,365,2.206,366,1.416,399,2.36,402,3.048,404,1.223,412,2.68,413,1.206,422,1.862,424,1.954,473,2.966,501,1.171,523,2.333,558,1.811,559,3.458,560,2.437,629,3.759,644,2.966,712,2.314,722,3.331,729,1.496,730,2.206,731,2.436,738,2.917,746,1.811,756,3.961,780,3.254,801,4.27,824,1.373,880,2.436,898,1.876,912,3.254,923,2.111,931,1.924,932,2.751,937,1.749,1189,1.496,1211,2.314,1298,3.324,1301,2.703,1303,2.751,1314,3.04,1437,5.802,1449,5.078,1484,3.713,1505,2.579,1506,2.751,1509,2.436,1532,2.579,1540,2.436,1551,3.254,1552,6.006,1554,6.365,1569,4.902,1589,3.254,1596,3.254,1633,3.254,1680,3.331,1821,4.685,1824,4.27,1839,2.966,1862,4.352,1866,3.961,1884,2.966,1902,4.761,1910,2.436,1998,2.966,2020,4.685,2035,2.966,2036,3.691,2037,3.691,2038,5.314,2039,3.691,2040,5.314,2041,3.691,2042,5.314,2043,3.961,2044,3.691,2045,3.691,2046,4.27,2047,3.691,2048,2.966,2049,2.966,2050,5.49,2051,3.254,2052,3.691,2053,5.314,2054,3.691,2055,3.691,2056,3.691,2057,3.254,2058,5.314,2059,3.691,2060,3.691,2061,3.254,2062,3.691,2063,3.691,2064,2.206,2065,3.691,2066,2.966,2067,3.691,2068,3.254,2069,6.006,2070,3.254,2071,3.254,2072,3.691,2073,6.228,2074,6.228,2075,5.314,2076,3.691,2077,3.691,2078,4.685,2079,3.254,2080,5.49,2081,3.254,2082,2.436,2083,2.966,2084,3.691,2085,3.691,2086,3.254,2087,3.691,2088,3.691,2089,3.691,2090,3.691,2091,3.691,2092,3.691,2093,3.691,2094,3.691,2095,3.691,2096,3.691,2097,3.691,2098,3.691,2099,3.691,2100,3.691]],["title/interfaces/OntologyStateModel.html",[111,0.849,1569,2.616]],["body/interfaces/OntologyStateModel.html",[3,0.162,4,0.162,8,2.313,9,0.149,11,0.635,23,0.616,34,0.01,36,0.831,46,0.2,104,1.496,111,1.415,272,0.006,273,0.008,274,0.006,310,1.187,404,1.678,413,1.485,501,2.507,518,2.265,523,2.144,524,3.248,525,3.342,527,4.17,550,3.248,558,2.903,559,3.494,560,3.343,629,4.141,1239,3.386,1297,5.094,1298,3.541,1301,2.374,1314,3.386,1338,4.136,1512,3.71,1540,3.906,1569,4.358,1680,4.57,1864,4.756,1865,6.427,1866,5.433]],["title/components/OntologyTreeComponent.html",[0,0.788,247,1.462]],["body/components/OntologyTreeComponent.html",[0,1.067,1,0.771,2,1.372,3,0.065,4,0.13,5,0.881,6,0.857,7,0.881,8,2.535,9,0.059,11,0.678,16,0.663,17,2.676,18,2.929,19,1.41,21,1.41,23,0.246,24,1.087,26,0.572,29,1.59,31,0.811,32,0.831,33,1.386,34,0.01,35,1.188,36,0.788,37,1.495,41,1.666,42,2.571,43,0.362,44,0.286,46,0.065,47,0.059,48,1.067,54,1.086,55,2.408,83,2.47,90,1.086,95,1.087,104,1.496,113,3.341,168,2.601,179,1.416,180,1.052,185,0.791,187,0.881,189,2.501,190,1.797,192,1.484,193,2.104,194,3.785,197,2,199,1.563,205,1.355,206,1.25,213,1.543,216,0.495,217,1.203,218,1.41,219,0.881,220,2.016,221,0.881,222,0.881,223,0.791,224,0.507,225,1.41,226,0.791,227,0.881,228,0.771,229,0.881,230,0.791,231,0.881,232,0.881,233,0.791,234,0.495,235,0.791,236,0.881,237,0.771,238,0.881,239,0.791,240,0.881,241,0.791,242,0.881,243,0.791,244,0.881,245,0.791,246,1.41,247,1.81,248,0.881,249,0.791,250,0.881,251,0.771,252,0.881,253,0.791,254,0.532,255,0.881,256,0.791,257,0.771,258,0.881,259,0.771,260,1.159,261,0.881,262,0.791,263,1.202,264,0.881,265,0.791,266,1.267,267,0.881,268,0.791,269,0.771,270,0.881,271,0.881,272,0.002,273,0.004,274,0.002,304,2.825,310,0.617,312,2.44,326,2.376,337,2.502,366,1.837,371,1.503,372,1.859,373,1.386,380,3.238,381,2.568,395,2.859,404,1.455,412,2.04,413,0.633,422,1.643,424,1.554,449,1.086,457,1.416,461,1.052,465,1.122,466,2.568,490,1.563,497,2.168,500,1.355,544,2.168,551,1.25,559,3.123,742,3.128,746,1.162,824,0.881,852,3.099,891,2.711,899,2.833,901,0.834,927,2,930,2.69,1004,2.859,1044,2.168,1086,1.655,1109,3.341,1166,3.785,1213,1.563,1236,2.825,1277,3.046,1293,5.743,1294,5.171,1297,4.638,1298,3.678,1299,3.808,1301,2.625,1314,3.39,1315,1.765,1326,4.955,1332,1.563,1430,2.568,1464,1.903,1503,2.168,1571,3.395,1695,3.046,1705,3.046,1711,3.046,1730,1.903,1758,2.648,1881,4.178,1917,4.775,2021,6.27,2043,1.765,2049,3.046,2101,5.444,2102,1.903,2103,3.046,2104,3.046,2105,4.739,2106,3.79,2107,4.739,2108,4.739,2109,4.739,2110,5.925,2111,4.739,2112,6.321,2113,3.79,2114,3.79,2115,3.341,2116,4.739,2117,2.368,2118,5.417,2119,3.79,2120,5.417,2121,3.79,2122,3.79,2123,3.808,2124,3.79,2125,2.368,2126,3.79,2127,4.739,2128,2.368,2129,3.341,2130,3.79,2131,4.739,2132,3.79,2133,4.739,2134,2.368,2135,3.79,2136,4.775,2137,3.79,2138,2.368,2139,3.79,2140,2.368,2141,3.79,2142,3.79,2143,5.417,2144,5.417,2145,2.368,2146,3.79,2147,4.761,2148,2.368,2149,3.79,2150,3.79,2151,2.368,2152,4.739,2153,3.79,2154,3.808,2155,3.79,2156,2.368,2157,2.368,2158,3.79,2159,2.368,2160,2.368,2161,2.368,2162,2.368,2163,2.368,2164,2.368,2165,2.368,2166,3.79,2167,2.368,2168,2.368,2169,1.903,2170,2.368,2171,2.088,2172,2.368,2173,2.088,2174,2.088,2175,2.368,2176,4.739,2177,2.368,2178,3.79,2179,2.368,2180,3.79,2181,2.368,2182,2.368,2183,2.368,2184,2.368,2185,3.79,2186,2.368,2187,2.368,2188,2.368,2189,2.368,2190,2.368,2191,2.368,2192,4.739,2193,2.368,2194,2.368,2195,2.368,2196,2.368,2197,2.368,2198,2.368,2199,3.79,2200,3.79,2201,3.79,2202,3.79,2203,2.368,2204,1.903,2205,3.046,2206,2.368,2207,1.903,2208,2.368,2209,2.368,2210,2.368]],["title/modules/OntologyTreeModule.html",[275,0.749,2211,3.057]],["body/modules/OntologyTreeModule.html",[3,0.169,4,0.169,9,0.154,34,0.01,43,0.481,44,0.742,46,0.169,47,0.154,104,1.163,216,1.283,247,3.033,272,0.006,273,0.008,274,0.006,275,1.052,277,1.719,278,2.052,279,2.907,280,2.224,281,2.224,282,2.422,286,2.036,287,2.164,288,2.107,290,2.853,291,2.285,292,2.249,294,4.266,295,3.371,297,1.852,509,6.574,510,4.577,1294,3.85,2101,4.054,2171,5.414,2211,6.151,2212,5.414,2213,5.414,2214,5.414,2215,6.142,2216,6.574,2217,5.414,2218,7.457,2219,5.414]],["title/components/Organ3dComponent.html",[0,0.788,249,1.462]],["body/components/Organ3dComponent.html",[0,1.211,1,0.797,2,1.409,3,0.067,4,0.133,5,0.911,6,0.886,7,0.911,8,0.777,9,0.061,11,0.749,16,0.685,17,2.689,18,2.92,19,1.448,21,1.448,23,0.255,24,1.117,26,0.592,29,1.61,32,1.21,33,1.405,34,0.01,35,1.201,36,0.842,37,1.395,41,1.687,42,2.597,43,0.367,44,0.296,46,0.067,47,0.061,48,1.327,55,2.552,104,0.737,122,2.305,168,3.306,172,3.063,185,1.845,187,0.911,190,3.408,193,1.087,216,0.511,217,1.235,218,1.448,219,0.911,220,2.054,221,0.911,222,0.911,223,0.818,224,0.524,225,1.448,226,0.818,227,0.911,228,0.797,229,0.911,230,0.818,231,0.911,232,0.911,233,0.818,234,0.511,235,0.818,236,0.911,237,0.797,238,0.911,239,0.818,240,0.911,241,0.818,242,0.911,243,0.818,244,0.911,245,0.818,246,1.448,247,0.818,248,0.911,249,1.845,250,0.911,251,0.797,252,0.911,253,0.818,254,0.55,255,0.911,256,0.818,257,0.797,258,0.911,259,0.797,260,1.181,261,0.911,262,0.818,263,1.229,264,0.911,265,0.818,266,1.301,267,0.911,268,0.818,269,0.797,270,0.911,271,0.911,272,0.003,273,0.004,274,0.003,286,1.645,287,1.372,306,1.909,310,0.899,312,2.907,359,2.136,366,1.859,371,2.059,372,2.167,373,1.616,395,1.292,404,0.896,413,1.231,422,1.367,424,0.702,427,3.446,461,1.087,466,3.628,486,2.327,523,0.72,527,2.771,568,2.112,649,1.616,650,1.616,651,2.158,659,5.778,660,4.021,661,1.616,667,1.825,710,1.967,753,3.431,790,2.72,850,2.616,892,2.44,914,2.901,931,3.144,1029,3.893,1041,3.128,1044,2.226,1063,3.46,1065,3.643,1080,4.114,1082,3.128,1083,4.436,1086,3.857,1117,3.431,1161,5.429,1205,1.4,1211,3.46,1335,2.72,1571,2.44,1646,3.893,1758,2.72,1823,3.128,1862,5.149,1946,3.857,1947,3.431,2082,3.643,2220,2.158,2221,3.431,2222,3.892,2223,3.892,2224,4.845,2225,3.892,2226,4.845,2227,5.404,2228,6.024,2229,4.845,2230,4.845,2231,3.892,2232,5.52,2233,3.892,2234,3.892,2235,3.892,2236,4.845,2237,5.52,2238,4.845,2239,4.845,2240,2.448,2241,3.892,2242,3.892,2243,2.44,2244,2.448,2245,2.448,2246,6.939,2247,3.892,2248,2.448,2249,7.061,2250,7.522,2251,2.448,2252,7.191,2253,3.892,2254,2.448,2255,3.892,2256,3.892,2257,3.892,2258,2.448,2259,5.52,2260,6.414,2261,5.52,2262,3.892,2263,2.448,2264,6.414,2265,3.128,2266,2.448,2267,3.892,2268,3.892,2269,2.448,2270,3.892,2271,3.892,2272,2.448,2273,3.892,2274,4.114,2275,2.448,2276,2.448,2277,3.431,2278,3.892,2279,3.892,2280,2.448,2281,3.857,2282,2.448,2283,5.154,2284,2.448,2285,3.892,2286,2.448,2287,2.448,2288,4.436,2289,2.448,2290,3.892,2291,2.448,2292,2.448,2293,2.448,2294,1.825,2295,2.448,2296,2.448,2297,1.967,2298,1.967,2299,1.967,2300,1.967,2301,2.448,2302,2.448,2303,2.448,2304,3.892,2305,2.448,2306,3.892,2307,2.448,2308,3.892,2309,3.892,2310,2.448,2311,2.448,2312,3.892,2313,3.892,2314,1.967,2315,2.448,2316,2.448,2317,2.448,2318,2.448,2319,2.448,2320,3.892,2321,2.448,2322,2.448,2323,2.448,2324,2.448,2325,2.448,2326,2.448,2327,2.448,2328,2.448,2329,2.448,2330,2.448,2331,2.448,2332,2.448,2333,2.448,2334,2.448,2335,2.448]],["title/modules/Organ3dModule.html",[275,0.749,2336,3.057]],["body/modules/Organ3dModule.html",[3,0.174,4,0.174,9,0.159,34,0.01,43,0.461,44,0.765,46,0.174,47,0.159,216,1.322,249,3.044,272,0.007,273,0.008,274,0.007,275,1.084,277,1.772,278,2.116,279,2.945,280,2.292,281,2.292,282,2.454,286,2.073,287,2.231,288,2.172,290,2.906,291,2.356,292,2.29,297,1.909,660,3.968,661,4.178,662,6.695,663,4.423,2336,6.189,2337,5.581,2338,5.581,2339,5.581,2340,6.33,2341,6.33]],["title/components/OrganComponent.html",[0,0.788,251,1.425]],["body/components/OrganComponent.html",[0,1.277,1,1.147,2,1.86,3,0.097,4,0.097,5,1.31,6,1.275,7,1.31,8,1.117,9,0.088,11,0.715,16,1.865,17,2.812,18,3.056,19,1.911,21,1.911,23,0.366,24,1.473,26,0.851,29,1.436,31,1.426,32,1.126,33,1.266,34,0.01,35,1.184,36,0.715,37,1.177,41,1.712,43,0.331,44,0.426,46,0.097,47,0.088,48,1.277,50,2.137,55,1.924,73,2.409,95,1.739,104,0.972,122,3.388,135,4.872,183,1.564,187,1.31,193,2.692,203,2.611,205,2.014,206,1.858,213,2.17,216,0.735,217,1.63,218,1.911,219,1.31,220,2.48,221,1.31,222,1.31,223,1.177,224,0.754,225,1.911,226,1.177,227,1.31,228,1.147,229,1.31,230,1.177,231,1.31,232,1.31,233,1.177,234,0.735,235,1.177,236,1.31,237,1.147,238,1.31,239,1.177,240,1.31,241,1.177,242,1.31,243,1.177,244,1.31,245,1.177,246,1.911,247,1.177,248,1.31,249,1.177,250,1.31,251,2.17,252,1.31,253,1.177,254,0.791,255,1.31,256,1.177,257,1.147,258,1.31,259,1.147,260,1.426,261,1.31,262,1.177,263,1.538,264,1.31,265,1.177,266,1.717,267,1.31,268,1.177,269,1.147,270,1.31,271,1.31,272,0.004,273,0.005,274,0.004,304,4.519,310,0.836,326,3.22,329,1.427,333,1.829,370,2.624,371,1.877,372,1.036,373,0.772,379,1.933,381,2.874,384,4.528,393,1.669,413,1.433,423,6.087,424,1.739,461,2.692,476,1.933,490,2.324,501,1.117,526,2.869,533,2.211,566,2.211,571,2.611,574,2.281,607,2.355,626,2.355,767,4.528,768,4.528,804,4.528,806,5.957,807,5.876,808,5.876,809,4.528,811,4.528,812,4.872,813,3.589,814,3.828,828,2.105,840,3.104,841,3.104,847,4.528,850,3.159,854,3.104,855,2.624,946,2.207,1004,2.711,1025,4.528,1046,3.104,1066,4.528,1160,4.442,1180,4.872,1330,3.104,1433,4.237,1680,3.22,2243,4.178,2342,2.83,2343,6.064,2344,5.136,2345,6.064,2346,5.136,2347,5.695,2348,6.139,2349,2.83,2350,5.136,2351,3.521,2352,3.521,2353,3.521,2354,5.136,2355,3.521,2356,3.521,2357,3.521,2358,3.104,2359,3.104,2360,2.83,2361,3.104,2362,3.104,2363,3.521,2364,3.521,2365,3.521,2366,5.136,2367,5.136,2368,5.136,2369,5.136,2370,5.136,2371,3.521]],["title/injectables/OrganDataService.html",[857,1.628,1160,2.743]],["body/injectables/OrganDataService.html",[3,0.08,4,0.08,9,0.136,11,0.703,17,2.191,23,0.304,24,1.282,26,1.08,29,1.474,31,1.301,32,0.98,33,1.368,34,0.01,35,1.015,36,0.781,37,1.179,41,1.668,42,1.03,43,0.43,44,0.353,46,0.123,47,0.073,48,1.335,50,2.142,55,2.595,73,2.473,83,1.088,90,3.166,95,1.981,111,0.567,114,3.592,122,3.378,170,2.453,171,2.802,185,0.977,260,0.957,272,0.006,273,0.005,274,0.003,310,0.728,312,2.876,329,1.812,333,1.833,342,1.618,366,1.619,371,2.074,372,1.787,373,1.81,393,2.119,399,1.298,413,1.153,422,1.71,424,1.743,479,3.476,523,2.031,525,1.812,530,2.193,566,3.335,567,2.881,574,1.985,612,2.273,613,2.972,614,2.864,615,1.434,616,2.759,617,3.212,624,2.787,627,2.662,693,3.553,729,1.185,730,1.748,731,1.93,736,1.543,740,1.543,792,3.522,806,4.247,824,1.088,825,1.185,857,2.262,858,1.605,860,1.93,862,4.361,865,3.941,868,3.941,869,4.361,871,2.578,872,3.746,873,4.711,875,2.95,876,3.592,878,3.332,879,6.332,880,2.95,881,4.883,882,3.592,883,4.557,887,3.592,889,5.548,890,4.529,891,4.344,892,3.402,893,2.578,894,4.529,896,3.124,897,2.95,898,3.329,899,3.915,900,2.95,901,1.912,902,3.582,903,2.672,904,3.592,905,3.81,906,3.332,907,3.592,910,3.124,915,3.332,917,3.592,921,3.592,922,3.592,923,2.557,924,3.592,927,3.644,930,1.185,931,1.059,933,2.043,934,1.93,935,3.124,936,1.93,937,1.386,938,2.802,939,2.179,941,1.93,942,1.833,943,1.833,946,4.857,950,2.043,955,3.332,958,5.146,960,4.045,961,3.592,968,2.349,969,2.349,970,2.349,971,2.349,981,2.349,983,2.349,985,2.349,987,2.349,992,2.349,993,3.592,999,2.349,1000,2.179,1001,2.349,1002,2.349,1003,2.043,1004,1.543,1005,2.349,1006,2.349,1007,2.349,1008,2.349,1009,2.349,1043,1.748,1097,2.043,1152,6.227,1153,2.578,1154,3.941,1155,3.941,1156,3.941,1157,1.93,1158,2.349,1159,3.941,1160,2.802,1161,3.124,1162,4.784,1163,3.941,1164,3.941,1165,3.941,1166,3.79,1167,3.941,1168,4.045,1169,2.349,1170,3.941,1171,4.784,1172,5.358,1173,5.358,1174,3.941,1175,4.784,1176,3.941,1177,3.941,1178,3.941,1179,3.941,1180,3.592,1181,3.332,1182,2.578,1183,2.578,1184,2.578,1185,2.578,1186,2.578,1187,2.578,1188,2.578,2372,2.924,2373,2.924,2374,2.924,2375,2.924,2376,2.924,2377,2.924,2378,2.924,2379,2.578,2380,2.578]],["title/modules/OrganModule.html",[275,0.749,2381,3.261]],["body/modules/OrganModule.html",[3,0.159,4,0.159,9,0.146,34,0.01,43,0.48,44,0.702,46,0.159,47,0.146,122,2.423,216,1.212,251,2.794,272,0.006,273,0.007,274,0.006,275,0.994,277,1.624,278,1.94,279,2.835,280,2.101,281,2.835,282,1.751,286,1.967,287,2.045,288,1.992,290,2.756,291,2.16,292,2.172,297,2.172,652,3.831,828,3.47,946,3.639,1016,5.664,1017,5.379,1160,5.379,2336,5.996,2359,5.117,2381,6.802,2382,5.117,2383,5.117,2384,5.117,2385,5.117,2386,5.996,2387,5.804,2388,5.804,2389,5.804,2390,5.804,2391,5.117]],["title/modules/OrganRoutingModule.html",[275,0.749,2386,3.057]],["body/modules/OrganRoutingModule.html",[0,1.182,3,0.18,4,0.18,9,0.165,34,0.01,43,0.451,44,0.793,46,0.18,47,0.165,251,2.527,272,0.007,273,0.008,274,0.007,277,1.837,282,1.98,292,2.34,297,1.98,422,1.625,685,4.332,686,4.439,687,4.534,688,3.337,693,3.558,711,4.587,712,4.115,713,4.587,1023,4.587,2386,5.422,2391,5.787,2392,6.564]],["title/interfaces/Patient.html",[111,0.849,533,1.883]],["body/interfaces/Patient.html",[3,0.097,4,0.142,9,0.089,11,0.381,16,0.993,23,0.369,34,0.01,36,0.772,46,0.215,58,2.535,73,2.813,74,2.031,82,2.956,85,2.369,88,1.805,95,1.482,104,0.978,111,1.523,173,3.177,174,3.343,180,1.576,213,1.682,224,1.588,234,1.55,260,1.106,272,0.004,273,0.005,274,0.004,286,0.969,301,2.094,310,0.841,329,3.007,333,1.837,361,2.224,371,1.804,404,1.402,413,1.481,467,1.874,481,2.535,501,2.123,517,4.203,518,1.358,519,2.031,523,1.792,524,1.948,525,1.439,526,1.528,528,2.727,529,3.089,530,2.988,531,2.956,532,3.089,533,3.378,534,4.042,535,4.436,536,3.089,537,4,538,3.485,539,3.485,540,3.485,541,3.485,542,4.25,543,2.956,544,2.956,545,3.089,546,2.398,547,2.398,548,3.343,549,2.157,550,2.836,551,2.727,552,3.089,553,3.089,554,3.089,555,4.067,556,1.948,557,1.805,558,2.535,559,2.094,560,2.369,561,3.089,562,3.089,563,2.956,564,2.956,565,4,566,2.88,567,2.887,568,2.839,569,2.369,570,3.089,571,3.99,572,3.402,573,3.089,574,3.657,575,2.634,576,2.034,577,2.122,578,2.031,579,2.031,580,2.031,581,2.031,582,2.031,583,1.742,584,2.122,585,1.948,586,2.122,587,2.836,588,2.122,589,2.122,590,2.122,591,2.031,592,2.122,593,2.031,594,2.122,595,2.122,596,2.122,597,2.122,598,2.122,599,2.031,600,2.031,601,2.031,602,2.031,603,3.089,604,3.089,605,2.988,606,1.439,607,2.369,608,3.089,609,2.836,610,2.122,611,2.122,612,2.627,613,3.444,614,2.727,615,2.988,616,3.097,617,2.988,618,2.031,619,2.122,620,2.122,621,2.122,622,2.031,623,2.031,624,1.628,625,2.122,626,2.369,627,2.535]],["title/classes/RegisterIcon.html",[47,0.11,1438,2.888]],["body/classes/RegisterIcon.html",[3,0.146,4,0.146,9,0.134,11,0.733,23,0.555,26,1.288,29,1.325,31,1.612,32,1.651,33,1.113,34,0.01,35,0.89,36,0.893,37,1.034,43,0.291,46,0.207,47,0.189,48,1.23,55,2.604,95,1.958,201,4.288,217,2.166,272,0.006,273,0.007,274,0.006,310,1.111,336,5.087,338,3.518,353,3.724,372,1.568,373,1.169,402,3.327,413,0.89,568,2.612,734,4.502,830,2.938,1189,2.16,1423,4.747,1424,4.308,1427,5.087,1431,6.258,1435,5.917,1438,5.241,1444,5.917,1457,3.964,1460,3.518,1461,3.518,1463,3.972,1465,5.262,1491,5.965,2393,3.972,2394,4.77,2395,5.33,2396,6.826,2397,4.19,2398,5.485,2399,4.283,2400,4.283,2401,4.283,2402,4.283]],["title/classes/RegistrationError.html",[47,0.11,1460,2.888]],["body/classes/RegistrationError.html",[3,0.145,4,0.145,9,0.133,11,0.73,23,0.552,26,1.281,29,1.32,31,1.607,32,1.647,33,1.107,34,0.01,35,0.885,36,0.893,37,1.029,43,0.289,46,0.206,47,0.189,48,1.225,55,2.6,95,1.521,201,4.257,217,1.682,272,0.005,273,0.007,274,0.005,310,1.107,336,5.905,338,4.49,353,4.753,372,1.559,373,1.162,402,3.321,413,0.885,568,2.029,734,4.49,830,2.928,1189,2.149,1423,4.066,1424,4.297,1427,3.951,1431,5.598,1435,6.355,1438,5.23,1444,5.905,1457,3.96,1460,4.49,1461,3.499,1463,3.951,1465,4.753,1491,6.276,2393,3.951,2394,3.704,2397,4.182,2398,6.035,2399,4.26,2400,4.26,2401,4.26,2402,5.466,2403,5.301,2404,6.802]],["title/classes/RegistrationSuccess.html",[47,0.11,1461,2.888]],["body/classes/RegistrationSuccess.html",[3,0.151,4,0.151,9,0.138,11,0.59,23,0.572,29,1.066,31,1.489,32,1.526,34,0.01,36,0.892,43,0.3,46,0.21,47,0.192,48,1.254,55,2.629,95,1.576,201,4.259,217,1.744,272,0.006,273,0.007,274,0.006,310,1.133,336,5.187,338,3.627,353,3.839,372,1.616,373,1.205,402,3.358,413,0.918,568,2.103,734,4.16,830,2.995,1189,2.227,1423,4.16,1424,3.981,1427,4.095,1431,5.692,1435,6.174,1438,5.3,1444,5.984,1457,3.988,1460,3.627,1461,4.593,1463,4.095,1465,4.863,1491,6.007,2393,4.095,2394,3.839,2397,4.237,2398,6.138,2399,5.592,2400,5.592,2401,5.592,2402,4.415,2405,5.495]],["title/components/SearchCategoriesComponent.html",[0,0.788,253,1.462]],["body/components/SearchCategoriesComponent.html",[0,1.324,1,0.854,2,1.488,3,0.072,4,0.072,5,0.976,6,0.95,7,0.976,8,0.833,9,0.066,11,0.741,16,0.734,17,2.715,18,2.958,19,1.53,21,1.53,23,0.273,24,1.179,26,0.634,29,1.427,31,0.88,32,1.449,33,1.38,34,0.01,35,1.194,36,0.721,37,1.282,41,1.669,42,1.786,43,0.224,44,0.317,46,0.072,47,0.066,48,1.381,50,1.449,51,3.786,54,1.203,68,2.577,81,1.833,83,1.53,85,1.885,95,1.646,104,0.778,168,3.626,172,2.09,179,1.569,180,1.165,181,3.786,183,1.165,184,2.916,185,1.374,187,2.57,189,1.385,190,1.244,192,1.645,193,2.547,194,1.833,195,1.385,196,1.569,197,1.385,205,1.501,206,1.385,209,1.956,213,1.868,215,3.777,216,0.548,217,1.304,218,1.53,219,0.976,220,2.135,221,0.976,222,0.976,223,0.877,224,0.562,225,1.53,226,0.877,227,0.976,228,0.854,229,0.976,230,0.877,231,0.976,232,0.976,233,0.877,234,0.548,235,0.877,236,0.976,237,0.854,238,0.976,239,0.877,240,0.976,241,0.877,242,0.976,243,0.877,244,0.976,245,0.877,246,1.53,247,0.877,248,0.976,249,0.877,250,0.976,251,0.854,252,0.976,253,1.917,254,1.955,255,0.976,256,0.877,257,0.854,258,0.976,259,0.854,260,1.228,261,0.976,262,0.877,263,1.286,264,0.976,265,0.877,266,1.374,267,0.976,268,0.877,269,0.854,270,0.976,271,0.976,272,0.003,273,0.004,274,0.003,306,2.017,310,0.669,312,1.739,331,4.205,340,3.064,342,2.077,359,2.256,366,1.35,372,0.772,373,1.803,380,2.458,381,1.949,393,1.244,413,1.468,421,1.833,422,0.65,424,1.454,429,1.569,449,1.203,461,2.766,463,1.956,465,2.402,466,1.244,472,2.873,476,3.148,477,1.956,478,2.899,483,4.008,484,3.303,485,4.073,486,1.569,487,2.108,496,2.108,500,1.501,501,0.833,630,2.873,790,2.873,814,3.064,819,3.624,822,1.501,850,1.949,852,1.501,856,2.577,861,2.577,901,3.156,930,1.063,931,2.589,1004,2.169,1029,4.073,1041,3.303,1043,3.95,1044,2.352,1063,1.645,1082,3.303,1083,5.309,1086,4.353,1087,3.303,1193,4.61,1215,4.61,1239,2.352,1326,4.805,1331,2.108,1333,1.956,1335,1.833,1347,2.577,1360,4.275,1430,2.402,1456,3.624,1485,3.064,1504,1.732,1508,3.064,1652,1.956,1679,2.108,1730,2.108,1796,2.873,1878,2.313,1910,3.786,2115,3.624,2205,2.108,2207,2.108,2394,2.873,2406,6.043,2407,5.605,2408,2.313,2409,7.249,2410,4.111,2411,5.068,2412,4.111,2413,6.229,2414,4.111,2415,4.111,2416,5.057,2417,4.111,2418,4.111,2419,2.624,2420,4.111,2421,2.624,2422,7.543,2423,6.607,2424,2.624,2425,3.624,2426,5.737,2427,5.057,2428,2.624,2429,3.624,2430,4.111,2431,4.111,2432,2.624,2433,4.111,2434,4.111,2435,4.111,2436,2.624,2437,4.111,2438,4.111,2439,4.111,2440,3.624,2441,4.111,2442,2.624,2443,4.111,2444,4.111,2445,4.111,2446,4.111,2447,4.111,2448,2.624,2449,2.624,2450,5.737,2451,4.111,2452,2.624,2453,2.624,2454,2.624,2455,2.624,2456,2.624,2457,2.624,2458,4.111,2459,2.624,2460,2.624,2461,3.777,2462,2.624,2463,2.624,2464,4.111,2465,2.624,2466,5.737,2467,2.624,2468,1.501,2469,2.624,2470,2.624,2471,4.111,2472,2.624,2473,5.737,2474,4.111,2475,2.313,2476,2.108,2477,2.624,2478,4.111,2479,4.111,2480,2.624,2481,2.624,2482,2.624,2483,2.624]],["title/modules/SearchCategoriesModule.html",[275,0.749,2484,3.057]],["body/modules/SearchCategoriesModule.html",[3,0.17,4,0.17,9,0.156,34,0.01,43,0.476,44,0.749,46,0.17,47,0.156,216,1.295,253,3.037,254,1.393,272,0.006,273,0.008,274,0.006,275,1.062,277,1.735,278,2.072,279,2.919,280,2.245,281,2.245,282,2.432,286,2.048,287,2.185,288,2.127,290,2.87,291,2.307,292,2.262,297,1.87,2216,6.611,2217,5.466,2406,4.982,2407,4.621,2484,6.163,2485,5.466,2486,5.466,2487,5.466,2488,6.2,2489,7.5,2490,6.2,2491,7.5,2492,6.2,2493,6.2]],["title/components/SearchComponent.html",[0,0.788,256,1.462]],["body/components/SearchComponent.html",[0,1.423,1,1.099,2,1.803,3,0.093,4,0.093,5,1.256,6,1.222,7,1.256,8,2.392,9,0.085,11,0.635,16,0.945,17,2.8,18,3.044,19,1.853,21,1.853,23,0.351,24,1.428,26,1.203,29,1.267,31,1.066,32,1.092,33,1.04,34,0.01,35,1.091,36,0.597,37,0.966,41,0.816,42,1.189,43,0.422,44,0.408,46,0.093,47,0.085,48,1.177,50,2.302,55,1.877,68,3.121,95,1.428,101,4.001,104,1.561,123,3.121,153,6.217,173,2.99,174,3.585,183,2.9,184,2.532,187,1.853,193,2.211,195,1.781,197,1.781,204,1.548,213,1.621,215,2.516,216,0.705,217,1.58,218,1.853,219,1.256,220,2.431,221,1.256,222,1.256,223,1.128,224,1.266,225,1.853,226,1.128,227,1.256,228,1.099,229,1.256,230,1.128,231,1.256,232,1.256,233,1.128,234,1.04,235,1.128,236,1.256,237,1.099,238,1.256,239,1.128,240,1.256,241,1.128,242,1.256,243,1.128,244,1.256,245,1.128,246,1.853,247,2.183,248,1.256,249,1.128,250,1.256,251,1.099,252,1.256,253,1.128,254,1.927,255,1.256,256,2.183,257,1.099,258,1.256,259,1.099,260,1.398,261,1.256,262,1.128,263,1.501,264,1.256,265,1.128,266,1.664,267,1.256,268,1.128,269,1.099,270,1.256,271,1.256,272,0.004,273,0.005,274,0.004,310,0.811,312,1.709,331,3.736,333,1.97,342,2.365,365,2.977,366,1.327,372,0.993,373,0.74,379,2.733,393,1.6,399,1.499,402,2.018,418,2.516,421,2.359,422,0.836,429,2.018,465,1.6,471,1.853,472,3.479,476,4.137,477,2.516,478,1.931,479,1.931,538,2.848,539,3.736,540,3.736,541,2.848,559,1.368,576,1.96,578,2.848,579,2.848,580,2.848,581,2.848,582,2.848,622,2.848,729,1.368,738,1.853,772,4.312,775,4.001,813,2.359,850,2.36,873,4.625,875,3.287,901,1.755,910,3.479,913,4.001,931,1.803,1043,2.977,1181,3.711,1193,4.001,1298,2.823,1301,2.373,1326,4.094,1338,3.479,1370,2.712,1371,2.516,1386,2.532,1718,2.712,1719,2.516,1870,5.216,1871,4.39,1896,4.564,1902,3.479,1945,2.976,2032,2.976,2101,2.228,2129,4.39,2205,2.712,2219,2.976,2409,4.39,2416,5.216,2427,7.67,2461,3.711,2476,4.001,2494,2.976,2495,3.375,2496,3.375,2497,4.98,2498,3.375,2499,8.701,2500,4.98,2501,4.98,2502,4.98,2503,4.98,2504,4.98,2505,4.98,2506,4.98,2507,4.98,2508,4.98,2509,4.98,2510,6.531,2511,4.98,2512,4.98,2513,4.98,2514,3.375,2515,4.98,2516,3.375,2517,3.375,2518,3.375,2519,3.375,2520,3.375,2521,3.375,2522,3.375,2523,3.375,2524,3.375]],["title/modules/SearchModule.html",[275,0.749,1661,3.057]],["body/modules/SearchModule.html",[3,0.155,4,0.155,9,0.142,34,0.01,43,0.477,44,0.682,46,0.155,47,0.142,104,1.34,216,1.179,224,1.208,234,1.179,254,1.268,256,3.001,272,0.006,273,0.007,274,0.006,275,0.967,277,1.58,278,1.887,279,2.8,280,2.044,281,2.044,282,2.332,286,1.933,287,1.989,288,1.937,290,2.709,291,2.101,292,2.135,297,2.135,299,4.207,502,5.955,1320,4.207,1341,5.955,1661,6.401,1867,3.726,1958,5.955,1970,4.977,2101,3.726,2211,5.955,2407,4.207,2484,6.164,2525,4.977,2526,4.977,2527,5.645,2528,4.977,2529,5.645,2530,7.079,2531,5.645,2532,5.645,2533,5.645]],["title/interfaces/SearchResult.html",[111,0.849,1886,3.057]],["body/interfaces/SearchResult.html",[3,0.117,4,0.117,9,0.107,11,0.458,23,0.888,32,1.291,34,0.01,36,0.769,41,1.756,43,0.43,44,0.516,46,0.162,47,0.107,48,1.455,51,2.816,75,4.73,95,1.689,104,1.492,111,1.308,123,2.674,125,2.981,170,2.341,254,2.003,272,0.008,273,0.006,274,0.009,310,0.958,312,1.464,342,1.545,361,1.836,366,1.137,371,1.843,373,0.935,413,1.412,422,1.799,423,2.981,424,2.084,459,3.18,501,2.709,518,1.633,559,2.945,629,2.022,669,2.44,729,1.729,738,2.341,792,2.814,822,2.44,825,1.729,852,3.367,857,2.508,861,3.69,903,3.519,905,4.94,930,1.729,931,2.131,937,2.022,1239,3.367,1298,3.385,1301,2.72,1321,2.169,1347,3.69,1386,2.993,1796,2.981,1867,2.816,1879,4.113,1886,4.709,1909,4.387,1910,3.885,1926,3.428,1956,6.333,1971,3.428,1972,3.428,1973,3.761,1978,3.18,1979,3.761,1980,7.527,1982,3.761,1983,3.428,1984,4.73,1985,3.761,1987,3.761,1989,3.761,1990,3.761,1991,3.761,1993,2.981,1994,3.428,1995,5.189,1996,6.947,1997,3.761,1998,3.428,1999,3.761,2000,3.761,2001,3.761,2002,3.761,2003,4.73,2004,3.761,2005,5.189,2006,5.189,2007,5.189,2008,5.189,2009,3.761,2010,3.761,2011,3.761,2012,3.761,2013,3.761,2014,3.761,2015,5.189,2016,5.189,2017,3.761]],["title/injectables/SearchService.html",[331,2.503,857,1.628]],["body/injectables/SearchService.html",[3,0.089,4,0.089,9,0.082,11,0.839,23,0.338,24,1.388,29,1.517,31,0.695,33,1.555,34,0.01,35,1.243,36,0.771,37,1.445,41,1.849,43,0.435,44,0.392,46,0.133,47,0.082,48,1.408,55,1.835,68,3.033,83,1.208,173,2.674,224,1.593,234,1.633,254,1.915,272,0.003,273,0.005,274,0.003,305,2.269,310,0.788,312,1.984,331,2.767,333,0.979,340,3.606,342,2.602,366,1.983,367,3.785,371,1.823,372,0.955,373,1.714,376,5.649,389,4.265,391,4.265,399,3.397,404,1.114,412,2.758,413,1.38,420,2.42,422,1.432,424,2.195,449,2.938,450,3.652,546,2.829,547,2.829,548,3.174,549,2.676,576,2.829,606,1.316,629,1.539,669,1.857,722,2.035,723,2.42,724,2.42,729,1.316,740,3.382,755,3.606,792,2.414,824,1.208,825,1.316,857,1.8,858,1.782,861,3.033,901,1.144,927,2.553,928,4.265,930,2.778,931,1.175,937,1.539,948,3.193,949,2.862,950,2.269,951,4.265,1043,4.296,1205,3.308,1301,2.087,1321,3.653,1326,4.017,1457,3.825,1485,6.268,1652,2.42,1909,3.606,1978,3.606,1993,2.269,2422,6.744,2440,5.649,2461,3.606,2468,3.666,2534,2.42,2535,5.783,2536,3.617,2537,3.617,2538,4.265,2539,4.265,2540,3.617,2541,3.617,2542,3.617,2543,5.783,2544,3.247,2545,7.65,2546,5.783,2547,3.247,2548,4.838,2549,3.247,2550,7.186,2551,3.831,2552,4.838,2553,3.052,2554,4.838,2555,3.247,2556,4.838,2557,3.052,2558,5.783,2559,3.247,2560,5.783,2561,3.247,2562,6.408,2563,5.783,2564,3.247,2565,4.838,2566,4.838,2567,3.247,2568,4.265,2569,3.247,2570,3.247,2571,3.247,2572,3.247,2573,2.862,2574,2.862,2575,2.862,2576,2.862,2577,2.609,2578,2.609,2579,6.853,2580,6.853,2581,6.408,2582,3.247,2583,3.247,2584,4.838,2585,3.247,2586,3.247,2587,3.247,2588,3.247,2589,3.247]],["title/classes/SearchState.html",[47,0.11,740,2.309]],["body/classes/SearchState.html",[3,0.073,4,0.073,9,0.067,11,0.672,17,2.44,23,0.276,24,1.191,29,1.516,31,1.537,33,1.674,34,0.01,35,1.323,36,0.788,37,1.516,41,2.071,42,2.825,43,0.379,46,0.073,47,0.067,48,1.04,68,3.927,73,2.162,83,3.042,90,3.748,104,1.093,123,4.501,173,3.014,224,0.888,234,1.632,254,1.978,272,0.003,273,0.008,274,0.003,342,3.2,364,3.811,366,1.538,367,2.11,395,3.789,399,3.469,402,3.283,404,1.653,412,3.716,422,1.778,424,1.797,449,3.292,450,3.522,523,1.698,533,2.199,566,1.786,567,1.259,571,2.11,572,1.35,574,2.564,575,1.046,576,2.274,606,3.167,729,1.076,740,2.19,824,0.988,864,3.659,891,4.676,901,2.88,902,1.753,938,4.965,939,1.979,948,5.395,1166,2.278,1189,1.076,1208,1.979,1211,3.62,1227,2.602,1270,4.64,1272,4.64,1298,1.682,1301,1.663,1430,1.967,1449,6.331,1457,3.895,1824,5.575,1836,2.134,1839,2.134,1854,6.117,1856,5.091,1902,2.9,2027,2.134,2429,5.091,2536,3.047,2537,3.047,2538,3.659,2539,3.659,2540,3.505,2541,3.047,2542,3.047,2553,3.047,2557,3.047,2578,5.336,2590,2.341,2591,4.15,2592,4.15,2593,4.15,2594,4.15,2595,4.15,2596,4.15,2597,4.15,2598,4.15,2599,4.15,2600,2.656,2601,4.15,2602,4.15,2603,2.656,2604,4.15,2605,2.656,2606,4.15,2607,2.656,2608,4.15,2609,4.15,2610,4.15,2611,2.656,2612,4.15,2613,4.15,2614,2.656,2615,4.15,2616,4.15,2617,2.656,2618,4.15,2619,4.15,2620,2.656,2621,4.15,2622,4.15,2623,2.656,2624,4.15,2625,2.656,2626,5.855,2627,4.15,2628,2.656,2629,4.15,2630,2.656,2631,1.519,2632,2.656,2633,2.656,2634,2.656,2635,2.656,2636,4.15,2637,2.656,2638,2.656,2639,5.775,2640,2.656,2641,4.15,2642,2.656,2643,2.656,2644,2.656,2645,4.15,2646,2.656,2647,2.656,2648,2.656,2649,4.15,2650,2.656,2651,2.656,2652,2.656,2653,2.656,2654,2.656,2655,2.656,2656,2.656,2657,4.15,2658,2.656,2659,2.656,2660,4.15,2661,2.656,2662,2.656]],["title/interfaces/SearchStateModel.html",[111,0.849,948,2.888]],["body/interfaces/SearchStateModel.html",[3,0.153,4,0.153,9,0.14,11,0.6,23,0.582,34,0.01,36,0.84,43,0.305,46,0.153,68,5.328,90,3.705,111,1.085,173,3.006,224,1.505,234,1.823,254,1.58,272,0.006,273,0.007,274,0.006,310,1.145,342,2.547,367,4.108,371,1.785,373,1.542,404,2.064,413,1.42,518,2.139,546,3.031,547,3.031,548,3.861,606,3.445,948,4.643,1045,6.201,1166,3.861,1301,2.631,1326,4.409,1410,6.492,1862,4.915,2461,5.243,2578,6.492,2631,3.197,2663,4.927,2664,6.201,2665,7.034,2666,7.034]],["title/classes/SelectTMC.html",[47,0.11,2537,2.309]],["body/classes/SelectTMC.html",[3,0.117,4,0.117,9,0.107,11,0.632,23,0.444,26,1.031,29,1.142,31,1.761,32,1.805,33,0.891,34,0.01,35,0.712,36,0.906,37,0.828,43,0.233,46,0.222,47,0.203,48,1.482,55,2.683,173,3.294,224,1.631,234,1.687,254,1.948,272,0.004,273,0.006,274,0.004,310,0.958,366,1.137,367,3.426,371,1.493,372,1.255,373,0.935,402,3.385,404,0.982,413,1.349,449,2.699,450,2.887,497,4.36,546,2.317,547,2.317,549,1.781,576,3.39,606,3.089,746,3.866,830,3.476,901,2.56,930,3.194,1189,1.729,1301,1.916,1321,3.426,1430,3.828,1457,3.773,2064,4.343,2397,4.343,2468,4.156,2536,2.251,2537,3.106,2540,2.251,2541,2.251,2542,2.251,2551,3.519,2553,2.251,2557,2.251,2631,2.44,2667,2.55,2668,3.761,2669,5.886,2670,3.69,2671,2.674,2672,2.674,2673,2.674]],["title/classes/SelectTechnology.html",[47,0.11,2536,2.309]],["body/classes/SelectTechnology.html",[3,0.117,4,0.117,9,0.107,11,0.632,23,0.444,26,1.032,29,1.143,31,1.762,32,1.805,33,0.892,34,0.01,35,0.713,36,0.904,37,0.829,43,0.233,46,0.222,47,0.203,48,1.483,55,2.683,173,3.205,224,1.632,234,1.687,254,1.949,272,0.004,273,0.006,274,0.004,310,0.959,366,1.138,367,3.428,371,1.494,372,1.256,373,0.937,402,3.386,404,0.983,413,1.349,449,2.701,450,2.89,497,4.362,546,2.319,547,2.319,549,1.783,576,3.485,606,3.091,746,3.867,830,3.477,901,2.561,930,3.195,1189,1.731,1301,1.918,1321,3.428,1430,3.829,1457,3.774,2064,4.345,2397,4.344,2468,4.158,2536,3.109,2537,2.254,2540,2.254,2541,2.254,2542,2.254,2551,3.521,2553,2.254,2557,2.254,2631,2.443,2667,2.553,2670,3.692,2671,2.677,2672,2.677,2673,2.677,2674,3.765,2675,5.891]],["title/classes/SetAgeRangeFilter.html",[47,0.11,2553,2.309]],["body/classes/SetAgeRangeFilter.html",[3,0.115,4,0.115,9,0.106,11,0.626,23,0.438,26,1.016,29,1.131,31,1.755,32,1.798,33,0.879,34,0.01,35,0.703,36,0.903,37,0.816,43,0.23,46,0.221,47,0.202,48,1.477,55,2.675,173,3.196,224,1.804,234,1.68,254,1.93,272,0.004,273,0.006,274,0.004,310,0.949,366,1.121,367,3.989,371,1.991,372,1.237,373,0.922,402,3.375,404,0.968,413,1.267,449,3.067,450,3.543,497,4.131,546,2.295,547,2.295,549,1.756,576,3.382,606,3.074,746,3.543,830,3.463,901,2.765,930,2.927,1189,1.705,1205,3.334,1301,1.898,1321,3.672,1430,3.947,1457,3.761,2064,4.317,2397,4.328,2468,4.131,2536,2.22,2537,2.22,2540,2.22,2541,2.22,2542,2.22,2551,4.317,2553,3.076,2557,2.22,2631,2.406,2667,2.515,2670,4.193,2671,3.654,2672,3.654,2673,2.637,2676,4.207,2677,5.829]],["title/classes/SetGenderFilter.html",[47,0.11,2557,2.309]],["body/classes/SetGenderFilter.html",[3,0.116,4,0.116,9,0.106,11,0.628,23,0.44,26,1.022,29,1.135,31,1.757,32,1.801,33,0.883,34,0.01,35,0.706,36,0.903,37,0.821,43,0.231,46,0.221,47,0.202,48,1.479,55,2.678,173,3.199,224,1.626,234,1.809,254,1.932,272,0.004,273,0.006,274,0.004,310,0.952,366,1.127,367,3.41,371,1.484,372,1.244,373,0.927,402,3.379,404,1.347,413,1.269,449,2.683,450,2.87,497,4.141,546,2.992,547,2.992,549,1.766,576,3.385,606,3.08,746,3.551,830,3.468,901,2.77,930,2.934,1189,1.714,1205,2.419,1301,1.905,1321,3.68,1430,3.952,1457,3.766,2064,4.327,2397,4.334,2468,4.141,2536,2.232,2537,2.232,2540,2.232,2541,2.232,2542,2.232,2551,3.498,2553,2.232,2557,3.088,2631,2.419,2667,2.528,2670,4.205,2671,2.651,2672,2.651,2673,2.651,2678,4.229,2679,5.851]],["title/classes/SetLocation.html",[47,0.11,2540,2.309]],["body/classes/SetLocation.html",[3,0.117,4,0.117,9,0.107,11,0.632,23,0.444,26,1.031,29,1.142,31,1.761,32,1.805,33,0.891,34,0.01,35,0.712,36,0.904,37,0.828,43,0.233,46,0.222,47,0.203,48,1.482,55,2.683,173,3.204,224,1.631,234,1.687,254,1.934,272,0.004,273,0.006,274,0.004,310,0.958,366,1.568,367,3.426,371,1.493,372,1.255,373,0.935,402,3.385,404,0.982,413,1.273,449,2.699,450,2.887,497,4.156,546,2.317,547,2.317,549,2.457,576,3.39,606,3.385,746,3.564,830,3.476,901,2.56,930,2.945,1189,1.729,1205,2.44,1301,2.366,1321,3.694,1430,4.007,1457,3.773,2064,4.343,2397,4.343,2468,4.156,2536,2.251,2537,2.251,2540,3.106,2541,2.251,2542,2.251,2551,3.519,2553,2.251,2557,2.251,2631,2.44,2667,2.55,2670,3.69,2671,2.674,2672,2.674,2673,3.69,2680,4.266,2681,5.886]],["title/classes/ThreeJsLayer.html",[47,0.11,2281,3.057]],["body/classes/ThreeJsLayer.html",[3,0.094,4,0.094,9,0.086,11,0.753,23,0.358,24,1.449,26,0.831,29,1.622,31,1.081,32,1.445,33,1.377,34,0.01,35,1.101,36,0.862,37,1.51,41,1.446,42,2.586,43,0.276,46,0.094,47,0.086,48,1.366,55,2.695,81,3.529,111,0.668,272,0.004,273,0.005,274,0.004,306,2.477,310,0.822,312,2.518,316,5.469,333,1.988,334,2.271,360,3.333,361,2.174,365,3.941,366,2.02,371,1.781,372,1.939,373,1.445,379,1.888,395,1.816,412,2.174,413,1.172,422,1.738,427,3.423,523,1.939,525,2.425,650,3.333,660,5.128,661,4.844,784,5.469,830,1.481,891,2.889,931,3.245,1063,3.166,1065,2.271,1107,4.058,1189,1.395,1211,3.166,1396,3.529,1484,5.3,1700,3.764,1946,3.529,2082,3.333,2227,6.979,2243,4.132,2249,6.774,2274,5.232,2281,4.606,2283,6.379,2288,4.058,2294,2.564,2314,2.765,2682,6.774,2683,2.765,2684,6.47,2685,4.452,2686,5.275,2687,7.114,2688,5.641,2689,5.275,2690,5.275,2691,5.275,2692,5.05,2693,5.05,2694,3.441,2695,4.913,2696,5.05,2697,3.441,2698,3.441,2699,3.441,2700,4.452,2701,5.811,2702,3.441,2703,3.441,2704,6.858,2705,3.441,2706,5.275,2707,4.452,2708,6.686,2709,3.441,2710,3.441,2711,4.452,2712,4.452,2713,4.452,2714,6.998,2715,3.441,2716,6.47,2717,4.452,2718,6.47,2719,3.441,2720,4.452,2721,4.452,2722,4.452,2723,5.811,2724,3.441,2725,4.452,2726,4.452,2727,4.452,2728,3.033,2729,4.452,2730,3.033,2731,3.033,2732,3.033,2733,3.033,2734,3.033,2735,3.033,2736,3.033,2737,3.033,2738,3.033,2739,3.033,2740,3.033,2741,4.058,2742,3.033,2743,3.033,2744,3.033,2745,3.033,2746,3.033,2747,3.033,2748,3.033,2749,3.033,2750,3.033,2751,3.033,2752,3.033,2753,3.033,2754,3.033,2755,3.033,2756,3.033,2757,3.033]],["title/interfaces/ThreeJsLayerOptions.html",[111,0.849,2695,3.261]],["body/interfaces/ThreeJsLayerOptions.html",[3,0.12,4,0.12,9,0.11,11,0.47,23,0.455,31,0.936,32,1.313,34,0.01,36,0.741,37,1.162,42,2.406,43,0.327,46,0.12,47,0.11,48,1.465,55,2.441,81,3.058,111,0.849,272,0.005,273,0.006,274,0.005,306,2.147,310,0.975,312,2.055,316,5.732,333,1.806,334,2.888,360,2.888,361,1.883,365,3.581,366,2.049,371,1.52,379,2.402,395,2.309,412,1.883,413,1.226,422,1.904,427,4.652,518,1.675,523,2.262,525,2.768,660,4.979,661,4.847,784,5.09,830,1.883,891,2.503,931,3.202,1063,3.755,1065,2.888,1107,3.516,1211,2.743,1396,3.058,1484,5.131,1700,3.261,1946,4.185,2082,2.888,2227,7.037,2243,3.755,2249,6.534,2274,5.473,2281,4.185,2283,6.382,2288,3.516,2294,3.261,2314,3.516,2682,3.516,2683,3.516,2684,6.02,2685,3.858,2686,5.28,2687,6.781,2688,4.813,2689,3.858,2690,3.858,2691,3.858,2695,5.09,2700,3.858,2701,6.02,2704,6.474,2706,5.28,2707,3.858,2708,6.781,2711,3.858,2712,3.858,2713,3.858,2714,6.02,2716,6.02,2717,3.858,2718,6.02,2720,3.858,2721,3.858,2722,3.858,2723,5.28,2725,3.858,2726,3.858,2727,3.858,2728,3.858,2729,6.474,2730,3.858,2731,3.858,2732,3.858,2733,3.858,2734,3.858,2735,3.858,2736,3.858,2737,3.858,2738,3.858,2739,3.858,2740,3.858,2741,4.813,2742,3.858,2743,3.858,2744,3.858,2745,3.858,2746,3.858,2747,3.858,2748,3.858,2749,3.858,2750,3.858,2751,3.858,2752,3.858,2753,3.858,2754,3.858,2755,3.858,2756,3.858,2757,3.858]],["title/interfaces/TissueCell.html",[111,0.849,609,2.401]],["body/interfaces/TissueCell.html",[3,0.106,4,0.15,9,0.097,11,0.413,16,1.076,23,0.4,34,0.01,36,0.74,46,0.22,58,1.887,73,2.868,74,2.2,82,2.2,85,1.764,88,1.956,95,1.57,104,0.728,111,1.556,173,2.73,174,2.111,180,1.708,213,1.782,224,1.172,234,1.143,260,0.823,272,0.004,273,0.006,274,0.004,286,1.05,301,1.559,310,0.891,329,3.09,333,1.651,361,1.656,371,1.617,404,0.885,413,1.476,467,2.03,481,1.887,501,2.203,517,4.185,518,1.472,519,2.2,523,1.61,524,2.111,525,1.559,526,1.656,528,2.889,529,3.273,530,3.126,531,2.2,532,2.3,533,3.282,534,4.14,535,4.151,536,2.3,537,2.3,538,2.2,539,2.2,540,2.2,541,2.2,542,3.81,543,2.2,544,2.2,545,2.3,546,1.515,547,1.515,548,3.004,549,1.606,550,2.111,551,2.03,552,2.3,553,2.3,554,2.3,555,3.131,556,2.111,557,1.956,558,1.887,559,1.559,560,1.764,561,2.3,562,2.3,563,2.2,564,2.2,565,2.3,566,2.988,567,3.021,568,2.918,569,2.51,570,3.273,571,4.335,572,3.877,573,3.273,574,3.754,575,2.733,576,2.155,577,2.3,578,2.2,579,2.2,580,2.2,581,2.2,582,2.2,583,1.887,584,2.3,585,2.111,586,2.3,587,3.004,588,2.3,589,2.3,590,2.3,591,2.2,592,2.3,593,2.2,594,2.3,595,2.3,596,2.3,597,2.3,598,2.3,599,2.2,600,2.2,601,2.2,602,2.2,603,3.273,604,3.273,605,3.406,606,1.559,607,3.184,608,4.151,609,3.498,610,3.273,611,4.151,612,2.783,613,3.512,614,2.889,615,3.126,616,3.24,617,3.126,618,2.2,619,2.3,620,2.3,621,2.3,622,2.2,623,2.2,624,1.764,625,2.3,626,2.51,627,2.685]],["title/components/TissueComponent.html",[0,0.788,257,1.425]],["body/components/TissueComponent.html",[0,1.204,1,0.646,2,1.189,3,0.054,4,0.134,5,0.739,6,0.719,7,0.739,8,0.63,9,0.05,11,0.58,16,2.019,17,2.601,18,2.828,19,1.222,21,1.222,23,0.207,24,0.942,26,0.793,29,1.581,31,0.703,32,1.276,33,1.128,34,0.01,35,1.15,36,0.774,37,1.048,41,1.744,42,2.426,43,0.376,44,0.24,46,0.054,47,0.05,48,1.161,50,1.157,73,2.618,83,1.222,90,1.505,95,1.204,104,0.622,105,2.294,122,1.753,139,1.75,170,1.802,171,1.244,179,1.187,180,0.881,181,1.31,184,2.48,185,2.411,187,1.222,189,2.574,190,2.312,192,1.244,193,2.399,195,1.733,196,1.963,197,1.047,199,2.167,200,1.479,203,1.009,204,2.237,207,1.75,209,3.129,212,1.595,213,1.588,216,0.415,217,1.548,218,2.78,219,0.739,220,1.815,221,0.739,222,0.739,223,0.663,224,0.425,225,1.222,226,0.663,227,0.739,228,0.646,229,0.739,230,0.663,231,0.739,232,0.739,233,0.663,234,0.415,235,0.663,236,0.739,237,0.646,238,0.739,239,0.663,240,0.739,241,0.663,242,0.739,243,0.663,244,0.739,245,0.663,246,1.222,247,0.663,248,0.739,249,0.663,250,0.739,251,0.646,252,0.739,253,0.663,254,0.446,255,0.739,256,0.663,257,1.588,258,0.739,259,0.646,260,1.044,261,0.739,262,0.663,263,1.065,264,0.739,265,0.663,266,1.097,267,0.739,268,0.663,269,0.646,270,0.739,271,0.739,272,0.002,273,0.003,274,0.002,301,0.804,302,3.566,306,1.611,307,3.776,310,0.534,312,2.778,321,3.409,329,3.341,330,4.342,333,1.471,337,1.31,338,1.31,342,0.719,358,3.409,359,2.965,360,2.167,361,1.413,366,1.118,369,3.373,370,5.947,371,1.371,372,1.895,373,1.351,379,1.802,380,1.963,381,2.312,393,2.561,395,3.401,399,1.458,402,1.977,404,1.244,412,2.963,413,0.331,418,1.479,422,1.705,424,0.942,457,1.187,461,2.399,463,2.447,465,1.99,466,2.561,471,1.089,476,2.965,482,2.638,483,1.387,484,1.595,485,1.595,486,2.916,487,1.595,490,1.31,492,2.638,498,2.934,500,3.686,501,0.63,568,1.256,569,2.478,574,2.166,602,2.402,605,3.378,626,2.237,746,0.974,755,2.447,763,1.75,775,2.638,792,2.79,821,5.042,824,0.739,825,0.804,828,1.187,850,0.941,851,3.373,855,1.479,856,1.244,883,3.842,914,4.592,915,1.479,931,0.719,935,1.387,937,0.941,1004,1.733,1028,4.763,1040,4.3,1063,2.632,1065,2.771,1086,1.387,1091,2.894,1100,1.75,1112,1.75,1115,1.75,1192,2.638,1205,1.135,1236,1.479,1256,1.595,1303,1.479,1328,1.75,1332,3.842,1334,1.595,1355,6.586,1366,1.595,1368,1.595,1369,1.75,1371,2.447,1386,2.959,1430,2.312,1433,2.294,1503,1.135,1571,3.649,1646,2.638,1651,1.479,1718,1.595,1719,1.479,1820,2.894,1823,3.92,1915,1.595,1916,2.638,2003,3.92,2057,1.75,2136,2.894,2204,1.595,2207,1.595,2265,1.595,2347,3.373,2349,1.595,2360,1.595,2688,4.342,2741,3.92,2758,1.595,2759,3.283,2760,4.198,2761,3.283,2762,5.403,2763,4.198,2764,4.878,2765,3.283,2766,3.283,2767,3.701,2768,3.283,2769,5.533,2770,4.198,2771,4.198,2772,6.977,2773,4.878,2774,3.283,2775,4.878,2776,3.283,2777,4.878,2778,3.283,2779,3.283,2780,3.22,2781,4.878,2782,3.283,2783,4.878,2784,3.283,2785,1.985,2786,3.283,2787,3.283,2788,4.878,2789,5.403,2790,3.283,2791,1.985,2792,6.886,2793,3.283,2794,1.985,2795,5.431,2796,3.701,2797,1.985,2798,1.985,2799,1.985,2800,3.283,2801,1.985,2802,3.283,2803,4.3,2804,3.283,2805,6.682,2806,1.985,2807,3.283,2808,3.283,2809,3.283,2810,4.878,2811,3.283,2812,3.283,2813,1.985,2814,3.283,2815,1.985,2816,3.283,2817,1.985,2818,2.894,2819,1.985,2820,4.878,2821,1.985,2822,1.985,2823,1.985,2824,1.985,2825,1.985,2826,2.894,2827,3.283,2828,1.985,2829,1.985,2830,1.985,2831,3.283,2832,3.283,2833,3.283,2834,1.985,2835,3.283,2836,1.985,2837,1.595,2838,1.75,2839,1.479,2840,1.479,2841,1.75,2842,1.75,2843,1.75,2844,1.985,2845,1.985,2846,1.985,2847,1.985,2848,1.985,2849,1.985,2850,1.985,2851,1.985,2852,1.985,2853,1.985,2854,1.985,2855,1.985,2856,1.985,2857,1.75,2858,1.985,2859,1.985,2860,1.985,2861,1.985,2862,1.985,2863,1.985,2864,3.283,2865,4.198,2866,4.878,2867,1.985,2868,1.985,2869,1.985,2870,3.283,2871,1.985,2872,1.985,2873,1.985,2874,3.283,2875,1.985,2876,1.985,2877,1.985,2878,1.985,2879,1.985,2880,1.985,2881,1.985,2882,1.985,2883,1.985,2884,1.985,2885,1.985,2886,1.985,2887,1.985,2888,1.985,2889,1.985,2890,1.985,2891,1.985,2892,1.75,2893,1.985,2894,1.985,2895,1.985,2896,1.985,2897,1.985,2898,1.985,2899,3.283,2900,3.283,2901,1.985,2902,1.985,2903,1.985,2904,1.985,2905,1.985,2906,1.985,2907,1.985,2908,1.985,2909,1.985,2910,1.985,2911,1.985,2912,3.283,2913,1.985,2914,1.985,2915,1.985,2916,1.985,2917,1.985,2918,1.985,2919,1.985,2920,1.985]],["title/injectables/TissueDataService.html",[857,1.628,2780,2.888]],["body/injectables/TissueDataService.html",[3,0.095,4,0.193,9,0.087,11,0.644,16,1.849,23,0.36,24,1.454,26,0.836,29,1.589,31,1.085,32,1.112,33,1.059,34,0.01,35,1.228,36,0.666,37,0.984,41,2.002,43,0.441,44,0.418,46,0.095,47,0.087,48,1.081,50,2.329,54,1.586,73,2.863,90,3.371,95,2.109,104,1.392,122,2.759,185,1.156,254,1.139,272,0.004,273,0.007,274,0.004,310,0.825,312,2.843,329,3.222,372,1.491,373,1.112,395,2.676,399,2.251,404,1.167,412,2.844,422,0.856,424,2.28,523,1.491,533,1.489,549,1.444,555,1.979,566,1.489,574,2.934,575,1.362,599,3.78,600,3.78,601,3.78,605,3.9,606,3.222,613,3.028,626,3.923,693,3.03,729,1.402,736,1.825,740,1.825,792,3.683,822,4.622,824,1.287,825,1.402,857,2.459,858,1.898,860,2.283,870,5.31,872,3.78,874,3.049,898,2.578,901,1.219,905,3.178,926,3.049,927,4.112,930,1.402,931,1.836,932,2.578,933,4.194,934,2.283,935,4.916,936,2.283,937,1.64,941,2.283,942,2.168,950,2.417,989,4.074,1157,2.283,1158,2.78,1166,3.627,1221,4.469,1247,2.78,1298,2.98,1301,2.152,1549,5.826,1705,4.074,1807,4.823,1811,2.78,1916,4.074,1984,2.78,1993,2.417,2043,2.578,2379,3.049,2380,3.049,2780,3.346,2839,6.175,2857,5.826,2921,7.304,2922,5.07,2923,6.002,2924,5.07,2925,6.609,2926,6.609,2927,5.07,2928,3.459,2929,5.07,2930,3.459,2931,5.07,2932,3.459,2933,3.459,2934,5.07,2935,6.002,2936,5.07,2937,5.07,2938,5.07,2939,5.07,2940,3.459,2941,4.469,2942,5.07,2943,3.459,2944,5.07,2945,5.07,2946,5.07,2947,5.07,2948,5.07,2949,3.459,2950,5.07,2951,3.459,2952,3.459,2953,3.459,2954,3.459,2955,3.459,2956,3.459,2957,6.002,2958,3.459,2959,3.459,2960,3.459,2961,3.459]],["title/interfaces/TissueImage.html",[111,0.849,575,1.723]],["body/interfaces/TissueImage.html",[3,0.096,4,0.165,9,0.088,11,0.374,16,0.976,23,0.363,34,0.01,36,0.845,46,0.214,58,1.71,73,2.82,74,3.449,82,1.995,85,1.599,88,1.773,95,1.73,104,0.66,111,1.515,173,2.627,174,1.914,180,2.677,213,1.963,224,1.091,234,1.065,260,0.746,272,0.004,273,0.005,274,0.004,286,1.646,301,1.413,310,0.83,329,2.988,333,1.818,361,1.501,371,1.871,404,0.803,413,1.493,467,1.84,481,1.71,501,2.105,517,4.18,518,1.334,519,1.995,523,1.5,524,1.914,525,1.413,526,1.501,527,2.917,528,3.182,529,3.604,530,3.254,531,1.995,532,2.084,533,3.173,534,4.019,535,3.966,536,2.084,537,2.084,538,1.995,539,1.995,540,1.995,541,1.995,542,3.604,543,1.995,544,1.995,545,2.084,546,1.373,547,1.373,548,2.799,549,1.456,550,1.914,551,1.84,552,2.084,553,2.084,554,2.084,555,2.917,556,1.914,557,1.773,558,1.71,559,1.413,560,1.599,561,2.084,562,2.084,563,1.995,564,1.995,565,2.084,566,2.855,567,2.858,568,3.098,569,2.338,570,3.049,571,4.26,572,3.749,573,3.604,574,3.846,575,2.779,576,2.903,577,3.049,578,3.449,579,3.449,580,3.449,581,3.449,582,3.449,583,2.502,584,3.966,585,2.799,586,3.049,587,3.641,588,3.049,589,3.049,590,3.049,591,3.795,592,3.049,593,3.795,594,3.049,595,3.966,596,3.049,597,3.966,598,3.604,599,2.917,600,2.917,601,2.917,602,3.795,603,3.049,604,3.049,605,2.958,606,1.413,607,2.338,608,3.049,609,2.799,610,2.084,611,2.084,612,2.593,613,3.428,614,2.691,615,2.958,616,3.065,617,2.958,618,1.995,619,2.084,620,2.084,621,2.084,622,1.995,623,1.995,624,1.599,625,2.084,626,2.338,627,2.502]],["title/modules/TissueModule.html",[275,0.749,2962,3.261]],["body/modules/TissueModule.html",[3,0.162,4,0.162,9,0.148,34,0.01,43,0.481,44,0.713,46,0.162,47,0.148,73,1.921,216,1.232,257,2.805,272,0.006,273,0.008,274,0.006,275,1.011,277,1.651,278,1.972,279,2.856,280,2.136,281,2.856,282,1.78,286,1.987,287,2.079,288,2.025,290,2.784,291,2.196,292,2.195,297,2.195,510,4.398,652,3.895,828,3.528,1017,5.401,1020,5.202,1332,3.895,1345,6.415,2780,5.686,2838,5.202,2839,4.398,2962,6.731,2963,5.202,2964,5.202,2965,5.202,2966,5.202,2967,6.02,2968,5.901,2969,7.276,2970,5.901,2971,5.202]],["title/interfaces/TissueOverlay.html",[111,0.849,605,2.146]],["body/interfaces/TissueOverlay.html",[3,0.104,4,0.148,9,0.095,11,0.405,16,1.057,23,0.393,34,0.01,36,0.764,46,0.219,58,1.852,73,2.837,74,2.16,82,2.16,85,1.732,88,1.92,95,1.55,104,0.715,111,1.548,173,2.711,174,2.073,180,1.677,213,1.759,224,1.156,234,1.128,260,0.808,272,0.004,273,0.006,274,0.004,286,1.031,301,1.531,310,0.879,329,3.381,333,1.629,361,1.625,371,1.6,404,0.869,413,1.491,467,1.993,481,1.852,501,2.532,517,4.282,518,1.445,519,2.16,523,1.589,524,2.073,525,1.531,526,1.625,528,2.851,529,3.23,530,3.094,531,2.16,532,2.258,533,3.262,534,4.118,535,4.116,536,2.258,537,2.258,538,2.16,539,2.16,540,2.16,541,2.16,542,3.771,543,2.16,544,2.16,545,2.258,546,1.487,547,1.487,548,3.462,549,1.577,550,2.073,551,1.993,552,2.258,553,2.258,554,2.258,555,4.167,556,2.073,557,1.92,558,1.852,559,1.531,560,1.732,561,2.258,562,2.258,563,2.16,564,2.16,565,2.258,566,2.963,567,2.99,568,2.986,569,2.892,570,4.355,571,4.057,572,3.5,573,3.23,574,3.827,575,3.072,576,2.127,577,2.258,578,2.16,579,2.16,580,2.16,581,2.16,582,2.16,583,1.852,584,2.258,585,2.073,586,2.258,587,2.965,588,2.258,589,2.258,590,2.258,591,2.16,592,2.258,593,2.16,594,2.258,595,2.258,596,2.258,597,2.258,598,2.258,599,2.16,600,2.16,601,2.16,602,2.16,603,4.116,604,4.116,605,3.377,606,2.19,607,2.477,608,3.23,609,2.965,610,2.258,611,2.258,612,2.747,613,3.496,614,2.851,615,3.094,616,3.207,617,3.094,618,2.16,619,2.258,620,2.258,621,2.258,622,2.16,623,2.16,624,1.732,625,2.258,626,2.477,627,2.65]],["title/guards/TissueResolverService.html",[689,3.261,2972,3.516]],["body/guards/TissueResolverService.html",[3,0.106,4,0.106,9,0.097,11,0.789,23,0.402,24,1.575,26,1.327,29,1.35,31,1.175,32,1.204,33,1.453,34,0.01,35,1.162,36,0.701,37,1.35,41,1.845,43,0.457,44,0.467,46,0.106,47,0.097,48,1.375,50,2.69,73,2.898,95,1.995,117,3.013,185,1.291,254,1.233,260,1.175,272,0.004,273,0.009,274,0.004,301,2.225,306,1.895,312,2.802,333,1.656,342,1.987,353,3.836,366,1.029,404,1.264,413,1.275,422,1.359,424,2.108,523,2.361,525,3.183,575,3.215,613,3.515,629,1.831,669,2.209,688,1.963,689,4.091,691,5.904,694,4.591,710,6.135,729,1.565,736,2.038,771,5.184,772,3.979,792,3.41,824,1.437,825,1.565,857,2.043,872,3.979,873,4.951,878,4.091,880,3.623,898,4.369,900,3.623,901,1.361,903,3.282,910,2.699,931,1.398,937,1.831,940,3.103,941,2.549,942,2.421,1157,2.549,1181,4.091,1386,3.536,1433,4.86,1491,4.463,1503,3.14,1545,4.839,1602,4.411,1754,3.103,1759,6.132,1767,6.45,1786,3.623,1787,3.405,1811,3.103,1826,6.132,1844,3.405,1910,3.623,1978,4.091,1983,6.135,2026,4.839,2043,2.878,2123,5.589,2626,3.405,2941,4.839,2973,3.862,2974,6.477,2975,3.405,2976,5.49,2977,5.49,2978,3.862,2979,5.49,2980,5.49,2981,5.49,2982,3.862,2983,5.49,2984,5.49,2985,3.862,2986,5.49,2987,3.862,2988,5.49,2989,5.49,2990,3.862,2991,3.862,2992,5.49,2993,3.862,2994,3.862,2995,3.862,2996,3.862,2997,5.49,2998,3.862,2999,3.862,3000,3.862,3001,3.862,3002,3.862,3003,3.862,3004,3.862,3005,3.862,3006,3.862,3007,3.862,3008,3.862,3009,3.405,3010,3.862]],["title/modules/TissueRoutingModule.html",[275,0.749,2967,3.057]],["body/modules/TissueRoutingModule.html",[0,1.199,3,0.183,4,0.183,9,0.167,34,0.01,43,0.454,44,0.804,46,0.183,47,0.167,257,2.547,272,0.007,273,0.008,274,0.007,277,1.862,282,2.007,292,2.359,297,2.007,422,1.647,685,4.391,686,4.475,687,4.56,688,3.383,693,3.051,1023,4.649,2967,5.466,2971,5.865,3011,6.653]],["title/interfaces/TissueSample.html",[111,0.849,567,2.074]],["body/interfaces/TissueSample.html",[3,0.106,4,0.15,9,0.097,11,0.414,16,1.079,23,0.401,34,0.01,36,0.701,46,0.22,58,1.891,73,2.857,74,2.205,82,2.205,85,1.767,88,1.96,95,1.573,104,0.73,111,1.557,173,2.732,174,2.115,180,1.711,213,1.785,224,1.173,234,1.145,260,0.825,272,0.004,273,0.006,274,0.004,286,1.052,301,1.562,310,0.892,329,3.181,333,1.653,361,1.659,371,1.619,404,0.887,413,1.477,467,2.034,481,1.891,501,2.205,517,4.308,518,1.475,519,2.205,523,1.612,524,2.115,525,1.562,526,1.659,528,2.893,529,3.277,530,3.13,531,2.205,532,2.304,533,3.64,534,4.142,535,4.561,536,2.304,537,2.304,538,2.205,539,2.205,540,2.205,541,2.205,542,4.154,543,2.205,544,2.205,545,2.304,546,1.517,547,1.517,548,3.009,549,1.609,550,2.115,551,2.034,552,2.304,553,2.304,554,2.304,555,3.136,556,2.115,557,1.96,558,1.891,559,1.562,560,1.767,561,2.304,562,2.304,563,2.205,564,2.205,565,2.304,566,3.16,567,3.294,568,3.004,569,2.925,570,4.389,571,4.079,572,3.533,573,3.277,574,3.719,575,2.736,576,2.158,577,2.304,578,2.205,579,2.205,580,2.205,581,2.205,582,2.205,583,1.891,584,2.304,585,2.115,586,2.304,587,3.009,588,2.304,589,2.304,590,2.304,591,2.205,592,2.304,593,2.205,594,2.304,595,2.304,596,2.304,597,2.304,598,2.304,599,2.205,600,2.205,601,2.205,602,2.205,603,3.277,604,3.277,605,3.13,606,1.562,607,2.514,608,3.277,609,3.009,610,2.304,611,2.304,612,2.787,613,3.513,614,2.893,615,3.13,616,3.244,617,3.13,618,2.205,619,2.304,620,2.304,621,2.304,622,2.205,623,2.205,624,1.767,625,2.304,626,2.514,627,2.689]],["title/interfaces/TissueSlice.html",[111,0.849,572,2.224]],["body/interfaces/TissueSlice.html",[3,0.107,4,0.151,9,0.098,11,0.418,16,1.089,23,0.405,34,0.01,36,0.647,46,0.221,58,1.91,73,2.861,74,2.227,82,2.227,85,1.785,88,1.979,95,1.584,104,0.737,111,1.561,173,2.742,174,2.136,180,1.729,213,1.797,224,1.181,234,1.153,260,0.833,272,0.004,273,0.006,274,0.004,286,1.063,301,1.578,310,0.899,329,3.102,333,1.665,361,1.675,371,1.627,404,0.896,413,1.467,467,2.054,481,1.91,501,2.215,517,4.32,518,1.49,519,2.227,523,1.624,524,2.136,525,1.578,526,1.675,528,2.913,529,3.3,530,3.147,531,2.227,532,2.327,533,3.295,534,4.154,535,4.173,536,2.327,537,2.327,538,2.227,539,2.227,540,2.227,541,2.227,542,3.835,543,2.227,544,2.227,545,2.327,546,1.533,547,1.533,548,3.03,549,1.625,550,2.136,551,2.054,552,2.327,553,2.327,554,2.327,555,3.158,556,2.136,557,1.979,558,1.91,559,1.578,560,1.785,561,2.327,562,2.327,563,2.227,564,2.227,565,2.327,566,3.521,567,3.493,568,2.929,569,2.531,570,3.3,571,4.218,572,3.747,573,3.835,574,3.726,575,2.748,576,2.174,577,2.327,578,2.227,579,2.227,580,2.227,581,2.227,582,2.227,583,1.91,584,2.327,585,2.136,586,2.327,587,3.03,588,2.327,589,2.327,590,2.327,591,2.227,592,2.327,593,2.227,594,2.327,595,2.327,596,2.327,597,2.327,598,2.327,599,2.227,600,2.227,601,2.227,602,2.227,603,3.3,604,3.3,605,3.147,606,1.578,607,2.531,608,3.3,609,3.03,610,2.327,611,2.327,612,2.807,613,3.521,614,2.913,615,3.147,616,3.261,617,3.147,618,2.227,619,2.327,620,2.327,621,2.327,622,2.227,623,2.227,624,1.785,625,2.327,626,2.531,627,2.708]],["title/components/TissuesBrowserComponent.html",[0,0.788,259,1.425]],["body/components/TissuesBrowserComponent.html",[0,1.51,1,1.604,2,2.348,3,0.135,4,0.135,5,1.834,6,1.784,7,1.834,8,1.563,9,0.124,11,0.696,16,1.379,17,2.899,18,3.139,19,2.414,21,2.414,26,1.191,29,0.956,31,1.388,32,1.422,33,1.029,34,0.01,35,1.211,36,0.497,37,0.956,43,0.354,44,0.596,46,0.135,47,0.124,48,0.888,50,2.286,51,4.281,95,2.21,104,1.228,187,1.834,216,1.029,217,2.058,218,2.414,219,1.834,220,2.867,221,1.834,222,1.834,223,1.647,224,1.054,225,2.414,226,1.647,227,1.834,228,1.604,229,1.834,230,1.647,231,1.834,232,1.834,233,1.647,234,1.029,235,1.647,236,1.834,237,1.604,238,1.834,239,1.647,240,1.834,241,1.647,242,1.834,243,1.647,244,1.834,245,1.647,246,2.414,247,1.647,248,1.834,249,1.647,250,1.834,251,1.604,252,1.834,253,1.647,254,1.107,255,1.834,256,1.647,257,1.604,258,1.834,259,2.509,260,1.913,261,1.834,262,1.647,263,2.22,264,1.834,265,1.647,266,2.575,267,1.834,268,1.647,269,1.604,270,1.834,271,1.834,272,0.005,273,0.007,274,0.005,704,4.532,828,2.946,830,2.121,1161,4.532,1386,3.298,2123,5.212,2347,5.827,2349,3.959,3012,4.834,3013,4.344,3014,6.486,3015,7.251,3016,6.486,3017,5.086,3018,4.927,3019,6.486,3020,4.344,3021,3.672]],["title/injectables/TissuesBrowserDataService.html",[857,1.628,3017,2.888]],["body/injectables/TissuesBrowserDataService.html",[3,0.169,4,0.169,9,0.155,11,0.662,23,0.642,29,1.197,34,0.01,36,0.622,43,0.468,44,0.746,46,0.169,47,0.155,95,2.308,104,1.416,213,2.435,254,1.68,260,1.79,263,2.209,272,0.006,273,0.008,274,0.006,310,1.217,399,2.74,412,3.219,551,3.947,559,3.031,575,2.429,729,2.501,736,3.257,792,3.359,825,2.501,857,2.783,858,3.387,860,4.073,861,4.688,927,3.947,930,2.501,942,3.868,1157,4.073,3017,4.936,3021,5.573,3022,6.592,3023,7.478,3024,6.171,3025,7.478]],["title/components/TissuesBrowserGridComponent.html",[0,0.788,262,1.462]],["body/components/TissuesBrowserGridComponent.html",[0,1.086,1,1.134,2,1.845,3,0.096,4,0.096,5,1.296,6,1.261,7,1.296,8,1.105,9,0.088,11,0.547,16,0.975,17,2.809,18,3.046,19,1.896,21,1.896,23,0.363,24,1.462,29,1.43,33,0.728,34,0.01,35,1.006,36,0.712,37,0.676,41,1.231,42,2.337,43,0.278,44,0.421,46,0.096,47,0.088,48,0.628,55,1.912,78,1.709,83,1.896,90,3.041,95,0.999,104,0.965,168,3.307,179,2.083,180,1.547,183,2.263,184,2.591,185,1.164,187,2.242,192,2.184,193,3.751,195,2.69,203,1.771,204,2.337,213,1.962,216,0.728,217,1.617,218,1.896,219,1.296,220,2.468,221,1.296,222,1.296,223,1.164,224,0.746,225,1.896,226,1.164,227,1.296,228,1.134,229,1.296,230,1.164,231,1.296,232,1.296,233,1.164,234,0.728,235,1.164,236,1.296,237,1.134,238,1.296,239,1.164,240,1.296,241,1.164,242,1.296,243,1.164,244,1.296,245,1.164,246,1.896,247,1.164,248,1.296,249,1.164,250,1.296,251,1.134,252,1.296,253,1.164,254,0.783,255,1.296,256,1.164,257,1.134,258,1.296,259,1.134,260,1.808,261,1.296,262,2.216,263,2.263,264,1.296,265,1.164,266,2.8,267,1.296,268,1.164,269,2.671,270,1.296,271,1.296,272,0.004,273,0.005,274,0.004,310,0.83,371,1.932,372,1.95,373,0.764,393,1.651,402,2.442,404,0.802,424,1.462,427,1.993,429,2.083,449,3.804,450,3.97,461,3.779,471,1.912,476,3.307,478,1.993,479,4.036,526,3.892,575,3.074,803,4.942,850,1.651,898,2.591,1044,2.915,1060,4.493,1166,2.797,1189,2.066,1236,3.798,1333,2.596,1360,3.798,1504,2.299,1571,3.195,1679,2.799,1719,3.798,2204,2.799,2394,2.434,2476,2.799,2840,2.596,3026,4.773,3027,5.674,3028,3.071,3029,6.026,3030,5.096,3031,6.026,3032,6.026,3033,6.631,3034,5.096,3035,6.026,3036,3.484,3037,3.484,3038,5.096,3039,7.614,3040,3.484,3041,5.096,3042,3.484,3043,3.484,3044,6.026,3045,3.484,3046,5.096,3047,7.371,3048,3.071,3049,3.484,3050,3.484,3051,3.484,3052,3.484,3053,5.096,3054,6.026,3055,5.096,3056,5.096,3057,3.484,3058,3.484,3059,3.484,3060,3.484,3061,3.484,3062,3.484]],["title/components/TissuesBrowserGridItemComponent.html",[0,0.788,265,1.462]],["body/components/TissuesBrowserGridItemComponent.html",[0,1.358,1,1.348,2,2.087,3,0.114,4,0.114,5,1.541,6,1.499,7,1.541,8,1.314,9,0.104,11,0.619,16,1.158,17,2.857,18,3.096,19,2.145,21,2.145,23,0.431,26,1,29,1.287,31,1.234,32,1.264,33,0.865,34,0.01,35,1.108,36,0.581,37,0.803,41,1,43,0.392,44,0.5,46,0.114,47,0.104,48,1.038,50,2.527,104,1.091,117,3.164,168,3.164,183,1.838,185,2.397,187,2.468,190,1.962,193,1.838,196,2.475,203,2.105,204,1.898,213,1.877,216,0.865,217,1.829,218,2.145,219,1.541,220,2.669,221,1.541,222,1.541,223,1.383,224,0.886,225,2.145,226,1.383,227,1.541,228,1.348,229,1.541,230,1.383,231,1.541,232,1.541,233,1.383,234,0.865,235,1.383,236,1.541,237,1.348,238,1.541,239,1.383,240,1.541,241,1.383,242,1.541,243,1.383,244,1.541,245,1.383,246,2.145,247,1.383,248,1.541,249,1.383,250,1.541,251,1.348,252,1.541,253,1.383,254,0.93,255,1.541,256,1.383,257,1.348,258,1.541,259,1.348,260,1.879,261,1.541,262,1.383,263,2.284,264,1.541,265,2.397,266,2.995,267,1.541,268,1.383,269,1.348,270,1.541,271,1.541,272,0.004,273,0.006,274,0.004,312,1.42,326,3.614,333,1.739,424,1.188,427,2.368,461,1.838,465,3.574,471,2.272,526,3.655,568,2.206,574,2.56,575,2.611,591,3.794,646,2.732,771,4.943,772,4.103,822,3.298,829,3.085,830,1.782,850,2.732,1044,3.298,1441,6.323,1442,6.323,1446,5.082,1447,5.082,1503,3.298,1651,3.085,1697,3.65,2103,4.632,2104,4.632,2169,3.327,2826,5.847,2840,3.085,3026,4.496,3063,5.345,3064,3.65,3065,5.765,3066,6.632,3067,5.765,3068,4.14,3069,5.765,3070,4.14,3071,4.14,3072,4.14,3073,5.765,3074,6.632,3075,4.14,3076,4.14,3077,4.14]],["title/modules/TissuesBrowserGridItemModule.html",[275,0.749,3078,3.057]],["body/modules/TissuesBrowserGridItemModule.html",[3,0.171,4,0.171,9,0.156,34,0.01,43,0.458,44,0.752,46,0.171,47,0.156,216,1.299,260,1.331,263,2.048,265,3.038,266,2.698,272,0.006,273,0.008,274,0.006,275,1.065,277,1.741,278,2.079,279,2.923,280,2.252,281,2.252,282,2.435,286,2.051,287,2.192,288,2.134,290,2.875,291,2.315,292,2.266,297,1.876,686,4.298,688,3.162,3026,3.899,3063,4.635,3078,6.167,3079,5.483,3080,5.483,3081,5.483,3082,6.22,3083,6.22]],["title/modules/TissuesBrowserGridModule.html",[275,0.749,3084,3.057]],["body/modules/TissuesBrowserGridModule.html",[3,0.16,4,0.16,9,0.147,34,0.01,43,0.469,44,0.706,46,0.16,47,0.147,216,1.22,260,1.681,262,3.014,263,2.21,266,2.742,269,2.557,272,0.006,273,0.007,274,0.006,275,1,277,1.634,278,1.951,279,2.843,280,2.114,281,2.114,282,2.368,286,1.974,287,2.058,288,2.003,290,2.766,291,2.173,292,2.18,297,2.18,663,4.08,1968,6.373,1969,4.692,3026,3.66,3027,4.352,3063,4.352,3078,6.005,3084,6.274,3085,5.148,3086,5.148,3087,5.148,3088,5.148,3089,6.005,3090,5.839,3091,5.839,3092,4.352,3093,5.839,3094,5.839]],["title/components/TissuesBrowserGridPopoverContentComponent.html",[0,0.788,268,1.462]],["body/components/TissuesBrowserGridPopoverContentComponent.html",[0,1.116,1,1.192,2,1.912,3,0.1,4,0.1,5,1.362,6,1.325,7,1.362,8,1.161,9,0.092,11,0.393,16,2.014,17,2.824,18,3.061,19,1.966,21,1.966,23,0.381,24,1.515,29,1.396,33,0.764,34,0.01,35,1.035,36,0.533,37,0.71,41,1.739,43,0.371,44,0.442,46,0.1,47,0.092,48,0.659,78,1.795,95,2.348,104,1.285,168,2.899,183,1.625,187,2.678,189,3.271,190,2.504,196,2.188,199,2.415,200,2.727,201,2.938,203,2.685,204,1.678,205,2.093,206,1.931,210,3.226,213,2.21,216,0.764,217,1.676,218,1.966,219,1.362,220,2.525,221,1.362,222,1.362,223,1.223,224,1.774,225,1.966,226,1.223,227,1.362,228,1.192,229,1.362,230,1.223,231,1.362,232,1.362,233,1.223,234,1.566,235,1.223,236,1.362,237,1.192,238,1.362,239,1.223,240,1.362,241,1.223,242,1.362,243,1.223,244,1.362,245,1.223,246,1.966,247,1.223,248,1.362,249,1.223,250,1.362,251,1.192,252,1.362,253,1.223,254,0.822,255,1.362,256,1.223,257,1.192,258,1.362,259,1.192,260,1.823,261,1.362,262,1.223,263,2.263,264,1.362,265,1.223,266,2.957,267,1.362,268,2.268,269,2.889,270,1.362,271,1.362,272,0.004,273,0.005,274,0.004,326,3.311,404,0.842,413,1.367,424,1.947,427,3.022,457,2.188,466,3.217,500,3.022,501,2.153,526,2.668,533,2.273,543,3.022,566,2.273,571,2.685,575,2.44,583,2.591,593,2.093,824,1.362,856,2.294,870,2.941,945,6.008,1044,3.022,1227,3.311,1298,2.141,1333,2.727,1340,5.464,1393,4.244,1647,4.656,1651,3.937,1721,3.937,1913,4.656,2103,4.244,2104,4.244,2169,2.941,2664,5.464,2840,2.727,3026,4.7,3092,5.588,3095,3.226,3096,5.282,3097,6.198,3098,5.282,3099,5.282,3100,6.198,3101,3.66,3102,5.282,3103,3.66,3104,3.66,3105,3.66,3106,3.66,3107,3.66,3108,5.282,3109,3.66,3110,3.66,3111,3.66,3112,3.66,3113,3.66,3114,3.66,3115,3.66,3116,3.66,3117,5.282,3118,5.282,3119,3.66,3120,3.66,3121,3.66]],["title/modules/TissuesBrowserGridPopoverContentModule.html",[275,0.749,3089,3.057]],["body/modules/TissuesBrowserGridPopoverContentModule.html",[3,0.17,4,0.17,9,0.155,34,0.01,43,0.457,44,0.748,46,0.17,47,0.155,216,1.293,260,1.325,263,2.044,266,2.693,268,3.036,269,2.624,272,0.006,273,0.008,274,0.006,275,1.06,277,1.732,278,2.069,279,2.917,280,2.241,281,2.241,282,2.43,286,2.046,287,2.181,288,2.124,290,2.867,291,2.304,292,2.26,294,4.286,295,3.397,297,1.867,3026,3.88,3089,6.161,3092,4.613,3122,5.457,3123,5.457,3124,5.457,3125,6.19,3126,6.19]],["title/modules/TissuesBrowserModule.html",[275,0.749,3127,3.261]],["body/modules/TissuesBrowserModule.html",[3,0.164,4,0.164,9,0.15,34,0.01,43,0.472,44,0.721,46,0.164,47,0.15,216,1.246,259,2.812,260,1.567,263,2.153,272,0.006,273,0.008,274,0.006,275,1.022,277,1.669,278,1.993,279,2.87,280,2.159,281,2.87,282,1.799,286,2,287,2.102,288,2.046,290,2.803,291,2.219,292,2.209,297,2.209,652,3.936,704,4.167,828,3.565,3012,4.445,3017,5.701,3020,5.257,3021,4.445,3027,4.445,3084,6.036,3127,6.74,3128,5.257,3129,5.257,3130,5.257,3131,5.257,3132,6.036,3133,5.964,3134,5.964,3135,5.964,3136,5.257]],["title/modules/TissuesBrowserRoutingModule.html",[275,0.749,3132,3.057]],["body/modules/TissuesBrowserRoutingModule.html",[0,1.176,3,0.179,4,0.179,9,0.164,34,0.01,43,0.45,44,0.789,46,0.179,47,0.164,259,2.519,260,1.398,263,1.657,272,0.007,273,0.008,274,0.007,277,1.828,282,1.97,292,2.333,297,1.97,422,1.617,685,4.311,686,4.426,687,4.525,688,3.321,693,3.548,704,4.564,711,4.564,712,4.094,713,4.564,1023,4.564,3012,4.868,3132,5.406,3136,5.758]],["title/classes/UnselectTMC.html",[47,0.11,2542,2.309]],["body/classes/UnselectTMC.html",[3,0.117,4,0.117,9,0.107,11,0.632,23,0.444,26,1.031,29,1.142,31,1.761,32,1.805,33,0.891,34,0.01,35,0.712,36,0.906,37,0.828,43,0.233,46,0.222,47,0.203,48,1.482,55,2.683,173,3.294,224,1.631,234,1.687,254,1.948,272,0.004,273,0.006,274,0.004,310,0.958,366,1.137,367,3.426,371,1.493,372,1.255,373,0.935,402,3.385,404,0.982,413,1.349,449,2.699,450,2.887,497,4.36,546,2.317,547,2.317,549,1.781,576,3.39,606,3.089,746,3.564,830,3.476,901,2.56,930,2.945,1189,1.729,1301,1.916,1321,3.426,1430,3.828,1457,3.773,2064,4.711,2397,4.343,2468,4.508,2536,2.251,2537,2.251,2540,2.251,2541,2.251,2542,3.106,2551,3.519,2553,2.251,2557,2.251,2631,2.44,2667,2.55,2668,3.761,2670,3.69,2671,2.674,2672,2.674,2673,2.674,3137,5.886]],["title/classes/UnselectTechnology.html",[47,0.11,2541,2.309]],["body/classes/UnselectTechnology.html",[3,0.117,4,0.117,9,0.107,11,0.632,23,0.444,26,1.032,29,1.143,31,1.762,32,1.805,33,0.892,34,0.01,35,0.713,36,0.904,37,0.829,43,0.233,46,0.222,47,0.203,48,1.483,55,2.683,173,3.205,224,1.632,234,1.687,254,1.949,272,0.004,273,0.006,274,0.004,310,0.959,366,1.138,367,3.428,371,1.494,372,1.256,373,0.937,402,3.386,404,0.983,413,1.349,449,2.701,450,2.89,497,4.362,546,2.319,547,2.319,549,1.783,576,3.485,606,3.091,746,3.566,830,3.477,901,2.561,930,2.946,1189,1.731,1301,1.918,1321,3.428,1430,3.829,1457,3.774,2064,4.713,2397,4.344,2468,4.51,2536,2.254,2537,2.254,2540,2.254,2541,3.109,2542,2.254,2551,3.521,2553,2.254,2557,2.254,2631,2.443,2667,2.553,2670,3.692,2671,2.677,2672,2.677,2673,2.677,2674,3.765,3138,5.891]],["title/interfaces/ValueObject.html",[111,0.849,1507,3.057]],["body/interfaces/ValueObject.html",[3,0.129,4,0.129,9,0.119,11,0.506,23,0.491,34,0.01,35,1.318,36,0.476,41,1.14,43,0.344,46,0.208,48,0.85,83,3.022,104,1.434,111,1.576,272,0.005,273,0.007,274,0.005,301,2.877,310,1.026,373,1.906,404,1.086,413,1.318,422,2.134,424,1.354,460,4.719,501,2.404,518,1.806,523,2.439,534,2.49,557,4.013,560,3.724,824,1.756,923,5.199,931,1.709,1213,5.867,1298,3.199,1301,2.052,1314,2.7,1500,4.959,1501,3.115,1502,3.115,1503,4.333,1504,5,1505,4.405,1506,3.517,1507,5.293,1508,3.517,1509,4.16,1510,4.698,1511,4.698,1512,4.449,1513,4.698,1514,3.298,1515,5.883,1516,4.405,1517,3.517,1518,3.298,1519,4.959,1520,3.517,1521,3.298,1522,3.298,1523,3.517,1524,4.698,1525,3.298,1526,3.298,1527,3.517,1528,3.298,1529,3.298,1530,3.517,1531,3.517,1532,3.298,1533,3.517,1534,4.698,1535,3.517,1536,3.517,1537,3.792,1538,3.792,1539,3.792,1540,3.115,1541,3.792]],["title/changelog.html",[1814,2.717,3139,2.717,3140,2.929]],["body/changelog.html",[6,1.851,16,2.066,18,2.901,29,0.992,34,0.007,62,5.859,64,5.34,68,3.206,73,2.704,78,3.622,85,2.345,86,3.811,87,3.811,95,2.382,103,6.281,104,1.398,105,4.644,109,3.811,110,4.387,111,1.29,112,4.953,117,2.807,119,4.109,122,3.383,124,4.109,131,4.508,134,4.508,170,2.807,173,1.903,201,2.424,213,1.665,224,1.094,234,1.068,254,1.9,263,1.297,272,0.005,273,0.007,274,0.007,278,1.709,302,3.375,333,1.542,361,2.201,364,4.387,393,2.424,465,2.424,466,3.15,486,3.057,490,3.375,498,4.644,526,2.201,528,2.699,566,2.201,576,2.013,583,3.26,607,3.047,613,2.201,615,2.509,623,2.925,626,2.345,630,5.159,671,4.109,718,4.508,742,4.387,851,4.109,855,3.811,900,3.375,901,1.802,914,3.811,1080,4.953,1087,5.34,1161,3.573,1247,4.109,1332,3.375,1347,3.206,1386,2.6,1392,4.508,1393,4.109,1395,4.508,1396,4.644,1400,4.508,1401,4.508,1404,4.508,1467,4.508,1863,4.508,1902,3.573,2048,4.109,2082,5.658,2221,4.508,2243,4.166,2397,2.699,2772,4.508,2818,4.508,2892,4.508,3048,4.508,3139,3.811,3140,5.34,3141,6.646,3142,5.114,3143,5.114,3144,5.114,3145,5.114,3146,5.114,3147,5.114,3148,5.114,3149,5.114,3150,5.114,3151,5.114,3152,5.114,3153,5.114,3154,5.114,3155,4.508,3156,5.114,3157,5.114,3158,5.114,3159,5.114,3160,5.114,3161,5.114,3162,6.646,3163,5.114,3164,5.114,3165,5.114,3166,4.508,3167,6.646,3168,6.646,3169,5.114,3170,5.114,3171,5.114,3172,5.114,3173,5.114,3174,5.114,3175,4.508,3176,5.34,3177,5.114,3178,6.646,3179,5.114,3180,8.102,3181,6.646,3182,5.114,3183,5.114,3184,6.646,3185,5.114,3186,5.114,3187,6.646,3188,5.114,3189,5.114,3190,5.114,3191,5.114,3192,5.114,3193,5.114,3194,5.114,3195,5.114,3196,5.114]],["title/coverage.html",[3176,4.812]],["body/coverage.html",[0,1.561,1,0.998,9,0.077,10,2.703,34,0.01,36,0.309,47,0.212,83,3.098,105,2.142,111,1.667,185,2.081,223,1.025,226,1.025,228,0.998,230,1.025,233,1.025,235,1.025,237,0.998,239,1.025,241,1.025,243,1.025,245,1.025,247,1.025,249,1.025,251,0.998,253,1.025,256,1.025,257,0.998,259,0.998,262,1.025,263,1.908,265,1.025,266,2.081,268,1.025,269,1.509,272,0.003,273,0.005,274,0.003,298,2.464,299,2.285,300,3.724,331,1.754,366,0.817,420,2.285,517,1.683,519,4.301,525,1.243,533,1.32,567,1.453,572,1.559,575,1.207,605,1.504,609,1.683,624,1.406,628,2.703,650,2.024,656,3.238,657,2.464,667,2.285,689,2.285,691,2.464,704,2.142,720,2.464,730,2.771,732,2.142,734,4.205,736,1.618,738,1.683,740,1.618,745,2.464,752,2.703,770,2.024,772,1.754,827,2.285,850,4.404,857,2.864,859,2.703,860,4.414,872,1.754,938,1.922,943,2.905,945,3.454,946,3.502,948,2.024,1024,2.703,1150,2.703,1151,2.703,1152,3.724,1160,1.922,1190,3.238,1191,3.238,1265,2.464,1293,2.285,1294,4.192,1295,2.703,1296,2.703,1301,0.998,1319,2.464,1320,2.285,1346,2.703,1385,2.703,1423,1.833,1424,4.178,1425,2.703,1434,3.724,1438,2.024,1459,2.464,1460,2.024,1461,2.024,1469,2.464,1500,2.142,1501,5.448,1502,5.448,1507,2.142,1509,2.024,1514,2.142,1516,2.142,1518,2.142,1519,2.142,1521,2.142,1522,2.142,1525,2.142,1526,2.142,1528,2.142,1529,2.142,1542,2.703,1543,2.703,1569,1.833,1636,2.703,1669,2.703,1680,1.922,1686,2.703,1736,4.49,1786,2.024,1803,2.703,1861,2.703,1864,3.724,1867,3.688,1868,2.703,1879,2.142,1886,2.142,1896,2.142,1971,3.724,1972,3.724,2018,2.703,2035,5.373,2046,2.464,2066,2.464,2083,2.464,2101,3.688,2102,4.49,2147,2.464,2154,2.464,2220,2.703,2281,2.142,2297,2.464,2298,2.464,2299,2.464,2300,2.464,2342,3.724,2348,2.464,2393,4.164,2406,2.464,2407,2.285,2408,2.703,2425,7.572,2494,2.703,2534,4.164,2536,1.618,2537,1.618,2540,1.618,2541,1.618,2542,1.618,2553,1.618,2557,1.618,2577,2.464,2590,2.703,2663,2.703,2667,4.366,2682,3.724,2683,3.724,2695,2.285,2758,2.464,2769,2.464,2780,2.024,2837,2.464,2839,2.285,2921,2.703,2972,2.464,2974,2.703,2975,2.703,3012,2.285,3013,2.703,3017,2.024,3021,2.285,3022,2.703,3026,3.502,3027,2.285,3028,2.703,3063,2.285,3064,2.703,3092,2.285,3095,2.703,3175,2.703,3176,2.464,3197,3.066,3198,8.938,3199,8.589,3200,3.066,3201,3.066,3202,7.033,3203,7.303,3204,5.587,3205,6.687,3206,3.066,3207,3.066,3208,6.687,3209,2.703,3210,2.703,3211,5.587,3212,5.895,3213,5.895,3214,2.703,3215,4.634,3216,5.587,3217,4.634,3218,2.703,3219,2.703,3220,7.033,3221,3.066,3222,2.464,3223,2.464,3224,3.066,3225,2.703,3226,2.703,3227,3.066,3228,3.066,3229,2.703,3230,2.703,3231,3.066]],["title/dependencies.html",[278,1.76,3232,3.645]],["body/dependencies.html",[34,0.01,44,0.732,263,1.876,269,1.972,272,0.006,273,0.008,274,0.006,278,2.024,291,2.254,305,4.232,329,2.455,419,4.866,569,2.777,646,4.88,660,4.634,661,4.88,663,5.166,688,3.079,722,3.796,723,4.513,724,4.513,726,4.513,727,4.513,729,2.455,824,2.254,825,2.455,1436,4.866,1445,5.339,1586,6.518,1587,5.339,1918,4.866,1969,4.866,2294,4.513,2358,5.339,2803,5.339,3233,6.056,3234,8.861,3235,6.056,3236,7.393,3237,6.056,3238,6.056,3239,6.056,3240,6.056,3241,7.393,3242,6.056,3243,6.056,3244,6.056,3245,6.056,3246,6.056,3247,6.056,3248,6.056,3249,6.056,3250,6.056,3251,6.056,3252,6.056,3253,6.056,3254,6.056,3255,6.056,3256,6.056,3257,6.056,3258,6.056,3259,6.056,3260,6.056,3261,6.056,3262,6.056]],["title/miscellaneous/enumerations.html",[3263,2.179,3264,4.643]],["body/miscellaneous/enumerations.html",[23,0.697,34,0.009,185,2.239,272,0.007,273,0.008,274,0.007,329,2.715,370,4.993,373,1.827,393,3.175,412,2.883,490,4.422,498,4.681,1190,4.681,1191,5.488,1208,5.853,1214,5.383,1215,5.383,1254,5.906,1255,5.383,1257,5.906,1258,5.906,1259,5.906,1260,5.906,1261,5.906,1262,5.906,1915,5.383,2758,5.383,2767,6.923,2795,5.906,2796,5.906,2841,5.906,2842,5.906,2843,5.906,3263,4.005,3264,5.906,3265,5.383,3266,6.699]],["title/miscellaneous/functions.html",[1264,3.925,3263,2.179]],["body/miscellaneous/functions.html",[8,2.378,11,0.93,23,0.424,31,1.604,33,1.82,34,0.009,35,1.463,36,0.575,37,1.691,41,2.106,42,2.809,104,1.509,115,3.589,172,2.07,190,3.375,196,2.434,254,1.28,272,0.004,273,0.006,274,0.004,301,1.65,316,3.034,342,2.063,343,3.034,352,3.589,366,1.897,373,0.893,380,2.434,381,3.116,412,2.452,413,0.68,473,3.271,478,2.329,486,4.48,525,2.664,527,2.329,558,2.795,559,3.148,693,3.561,712,2.552,734,2.434,792,3.397,801,4.578,821,2.845,880,2.687,883,4.338,891,2.329,897,2.687,898,4.343,899,3.406,923,3.76,927,3.007,1003,5.236,1063,2.552,1065,2.687,1074,3.589,1205,3.76,1211,2.552,1264,3.034,1298,3.148,1301,1.325,1303,3.034,1335,5.236,1338,2.845,1423,2.434,1424,2.329,1430,1.93,1434,4.578,1440,5.023,1464,4.578,1468,3.589,1469,4.578,1501,2.687,1502,3.76,1503,2.329,1533,3.034,1534,4.246,1535,3.034,1536,3.034,1569,3.406,1571,2.552,1652,3.034,1680,3.571,1701,3.271,1736,3.271,1758,2.845,1788,3.589,1789,3.589,1790,3.589,1795,5.023,1796,4.593,1797,3.589,1798,3.589,1862,3.981,1866,4.246,1884,3.271,1946,3.981,2035,3.271,2046,4.578,2048,3.271,2049,3.271,2050,5.023,2051,3.589,2061,3.589,2066,4.578,2068,3.589,2069,5.023,2070,3.589,2078,5.023,2079,3.589,2080,5.023,2081,3.589,2082,2.687,2083,4.578,2086,3.589,2243,4.868,2246,5.794,2274,3.034,2277,6.277,2297,4.578,2298,4.578,2299,4.578,2300,4.578,2475,5.794,2534,3.034,2577,4.578,2769,4.578,2837,3.271,3209,3.589,3210,5.023,3212,3.589,3213,6.846,3214,5.023,3218,5.023,3219,5.023,3225,5.023,3226,5.023,3263,2.434,3267,7.12,3268,7.494,3269,5.697,3270,3.589,3271,4.071,3272,3.589,3273,4.071,3274,4.071,3275,5.697,3276,4.071,3277,4.071,3278,7.12,3279,4.071,3280,4.071,3281,4.071,3282,5.697,3283,4.071,3284,5.697,3285,5.697,3286,5.697,3287,4.071,3288,4.071,3289,4.071,3290,4.071,3291,5.697,3292,4.071,3293,4.071,3294,4.071,3295,4.071]],["title/index.html",[23,0.379,1814,2.717,3139,2.717]],["body/index.html",[18,2.955,34,0.008,85,3.616,86,5.877,87,5.877,109,5.877,110,5.204,111,1.53,112,6.419,152,5.946,153,5.42,172,3.429,175,5.946,176,5.946,177,5.946,178,5.946,272,0.007,273,0.008,274,0.007,1577,5.946,1758,4.713,3009,5.946,3140,5.42,3155,5.946,3296,6.745,3297,6.745,3298,6.745,3299,6.745,3300,6.745,3301,6.745]],["title/license.html",[1814,2.717,3139,2.717,3302,3.213]],["body/license.html",[34,0.008,58,3.022,103,4.951,105,4.305,119,6.003,170,3.381,272,0.006,273,0.008,274,0.006,288,2.114,337,4.066,381,2.92,481,3.665,531,3.524,823,5.431,903,3.683,1228,5.431,1457,2.825,1710,4.951,2027,6.461,3166,5.431,3302,5.431,3303,6.161,3304,8.041,3305,6.161,3306,6.161,3307,7.471,3308,6.161,3309,6.161,3310,6.161,3311,6.161,3312,6.161,3313,7.471,3314,8.951,3315,6.161,3316,6.161,3317,6.161,3318,6.161,3319,6.161,3320,6.161,3321,6.161,3322,6.161,3323,6.161,3324,6.161,3325,6.161,3326,6.161,3327,7.471,3328,6.161,3329,6.161,3330,6.161,3331,6.161,3332,6.161,3333,7.471,3334,7.471,3335,6.161,3336,6.161,3337,6.161,3338,6.161,3339,6.161,3340,6.161,3341,6.161,3342,6.161,3343,6.161,3344,6.161,3345,6.161,3346,6.161,3347,6.161,3348,6.161,3349,6.161,3350,6.161,3351,6.161,3352,6.161,3353,6.161,3354,6.161,3355,6.161,3356,6.161,3357,6.161,3358,6.161]],["title/modules.html",[277,1.676]],["body/modules.html",[34,0.007,101,7.042,263,2.337,272,0.006,273,0.007,274,0.006,276,3.991,277,1.598,502,3.991,569,4.224,633,4.257,638,3.991,639,3.991,640,3.991,641,3.991,1010,4.257,1015,3.991,1016,3.77,1017,3.58,1341,3.991,1375,3.991,1414,4.257,1418,3.991,1660,3.991,1661,3.991,1958,3.991,2211,3.991,2336,3.991,2381,4.257,2386,3.991,2484,3.991,2962,4.257,2967,3.991,3078,3.991,3084,3.991,3089,3.991,3127,4.257,3132,3.991,3359,9.212,3360,9.284,3361,8.764]],["title/overview.html",[3362,5.28]],["body/overview.html",[1,2.515,2,1.322,34,0.01,216,0.763,223,2.582,226,2.582,228,2.016,230,2.582,233,2.582,235,2.582,237,2.016,239,2.582,241,2.582,243,2.582,245,2.582,247,2.582,249,2.582,251,2.016,253,2.582,256,2.582,257,2.016,259,2.016,262,2.582,265,2.582,268,2.582,272,0.004,273,0.005,274,0.004,275,0.626,276,5.236,277,1.022,278,1.221,279,1.322,280,1.322,281,1.322,282,1.102,283,3.22,284,3.22,285,3.22,286,1.44,287,1.287,288,1.253,393,1.731,502,5.236,503,3.22,504,3.22,505,3.22,518,1.398,633,6.298,634,3.22,635,3.22,636,3.22,637,3.22,638,4.326,639,4.326,640,4.326,641,5.851,687,2.005,770,4.087,858,2.005,1010,6.241,1011,3.22,1012,3.22,1013,3.22,1014,3.22,1015,4.326,1016,5.099,1017,4.958,1145,3.22,1146,3.22,1147,3.22,1160,3.881,1189,1.481,1341,5.236,1342,3.22,1343,3.22,1344,3.22,1375,5.527,1376,3.22,1377,3.22,1379,3.22,1414,5.585,1415,3.22,1416,3.22,1417,3.22,1418,4.326,1656,3.22,1657,3.22,1658,3.22,1659,3.22,1660,5.236,1661,6.09,1681,3.22,1682,3.22,1683,3.22,1731,3.22,1732,3.22,1733,3.22,1958,5.236,1959,3.22,1960,3.22,1961,3.22,2211,5.236,2212,3.22,2213,3.22,2214,3.22,2336,5.236,2337,3.22,2338,3.22,2339,3.22,2381,6.347,2382,3.22,2383,3.22,2384,3.22,2385,3.22,2386,4.326,2484,5.398,2485,3.22,2486,3.22,2487,3.22,2525,3.22,2526,3.22,2528,3.22,2780,4.087,2962,6.098,2963,3.22,2964,3.22,2965,3.22,2966,3.22,2967,4.326,2972,2.935,3017,4.087,3078,5.236,3079,3.22,3080,3.22,3081,3.22,3084,5.717,3085,3.22,3086,3.22,3087,3.22,3088,3.22,3089,5.236,3122,3.22,3123,3.22,3124,3.22,3127,6.098,3128,3.22,3129,3.22,3130,3.22,3131,3.22,3132,4.326,3362,3.22,3363,3.653,3364,3.653,3365,3.653,3366,3.653,3367,3.653,3368,3.653]],["title/routes.html",[687,3.287]],["body/routes.html",[34,0.008,272,0.007,273,0.008,274,0.007,687,3.954]],["title/miscellaneous/typealiases.html",[3263,2.179,3369,5.267]],["body/miscellaneous/typealiases.html",[23,0.714,34,0.008,36,0.803,83,2.554,201,3.253,217,2.178,272,0.007,273,0.008,274,0.007,482,5.515,568,2.626,1190,4.796,1191,5.566,1203,7.022,1242,6.051,1424,3.926,1429,6.051,1432,6.051,1465,4.796,2568,6.051,3222,5.515,3223,6.401,3263,4.103,3265,5.515,3370,6.864,3371,7.022,3372,6.051]],["title/miscellaneous/variables.html",[3263,2.179,3373,4.643]],["body/miscellaneous/variables.html",[18,1.8,23,0.377,34,0.01,35,1.43,36,0.843,58,1.779,78,1.779,83,2.868,106,4.216,122,1.514,135,2.913,171,2.273,172,1.843,185,2.06,204,1.663,211,2.702,224,1.123,234,1.411,272,0.004,273,0.005,274,0.004,286,0.99,304,2.702,305,2.534,333,1.093,365,2.168,366,0.966,367,1.843,372,2.582,373,1.944,379,2.88,381,1.719,395,1.913,404,0.835,413,1.248,420,3.91,429,2.168,449,2.406,450,2.574,460,4.286,465,2.922,466,1.719,501,1.665,523,2.109,528,2.769,546,2.066,547,2.066,557,3.645,560,2.827,568,3.078,587,1.99,607,1.663,629,2.487,630,4.722,649,3.463,650,3.463,656,3.666,657,4.216,659,4.216,660,3.289,664,3.196,665,3.196,666,5.435,667,3.91,668,3.196,669,2.074,670,3.196,671,2.913,672,3.196,673,3.196,674,3.196,675,3.196,676,3.196,677,3.196,678,3.196,679,3.196,680,3.196,681,3.196,682,3.196,683,3.196,684,3.196,720,4.216,730,4.04,732,2.534,736,1.913,738,1.99,740,1.913,742,3.463,743,4.625,744,4.625,745,4.216,746,2.574,898,3.435,923,4.672,1190,2.534,1191,3.666,1208,2.702,1213,4.732,1214,2.913,1244,3.196,1245,3.196,1246,3.196,1249,3.196,1250,3.196,1256,2.913,1263,3.196,1264,2.702,1265,4.216,1266,3.196,1267,3.196,1268,3.196,1269,3.196,1270,2.913,1271,3.196,1272,2.913,1277,4.216,1294,2.273,1297,3.666,1298,2.126,1299,2.913,1354,5.957,1424,2.074,1428,6.463,1436,4.216,1459,4.216,1501,2.393,1502,5.46,1504,4.069,1505,2.534,1510,2.702,1511,2.702,1512,3.289,1513,2.702,1514,3.666,1515,5.344,1516,4.308,1517,2.702,1518,3.666,1519,4.722,1520,2.702,1521,3.666,1522,3.666,1523,2.702,1524,3.91,1525,3.666,1526,3.666,1527,2.702,1528,3.666,1529,3.666,1530,2.702,1531,2.702,1532,2.534,1548,4.625,1709,3.196,1721,2.702,2071,4.625,2101,2.393,2102,4.954,2147,4.216,2154,4.216,2173,3.196,2174,3.196,2243,3.289,2265,2.913,2342,2.913,2348,4.216,2360,2.913,2361,3.196,2362,3.196,2534,2.702,2573,3.196,2574,3.196,2575,3.196,2576,3.196,3222,2.913,3223,4.216,3229,3.196,3230,3.196,3263,2.168,3265,2.913,3270,3.196,3272,7.201,3371,3.196,3372,3.196,3373,3.196,3374,5.247,3375,3.626,3376,3.626,3377,5.247,3378,3.626,3379,3.626,3380,3.626,3381,5.247,3382,5.247,3383,3.626,3384,3.626,3385,3.626,3386,3.626,3387,3.626,3388,3.626,3389,3.626,3390,5.247,3391,5.247,3392,5.247,3393,5.247,3394,5.247,3395,5.247,3396,5.247,3397,5.247,3398,5.247,3399,5.247,3400,5.247,3401,5.247,3402,5.247]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"modules/TissueModule.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"modules/AppRenderInitModule.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["0.000016948963462937172",{"_index":2278,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["0.0008592520813976989",{"_index":2279,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["0.0625rem",{"_index":499,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["0.1.0",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["0.105.0",{"_index":3258,"title":{},"body":{"dependencies.html":{}}}],["0.125rem",{"_index":488,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["0.2.0",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["0.25rem",{"_index":463,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["0.3",{"_index":1336,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["0.3.3",{"_index":3242,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1947,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/Organ3dComponent.html":{}}}],["0.5.0",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":209,"title":{},"body":{"components/AboutComponent.html":{},"components/NavigationComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["0.6.0",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["0.625rem",{"_index":1722,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.75rem",{"_index":472,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{}}}],["0.7em",{"_index":1952,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["0.85rem",{"_index":2920,"title":{},"body":{"components/TissueComponent.html":{}}}],["0.875rem",{"_index":191,"title":{},"body":{"components/AboutComponent.html":{}}}],["0.8em",{"_index":1412,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.9.1",{"_index":3262,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":1411,"title":{},"body":{"components/HomeComponent.html":{}}}],["0/1",{"_index":3211,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3227,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1144,"title":{},"body":{"components/CalloutComponent.html":{}}}],["03",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["0x404040",{"_index":2247,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["1",{"_index":393,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"interfaces/CountMetadata.html":{},"components/GenderSelectorComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.1.0",{"_index":3253,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":3260,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":3251,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":2917,"title":{},"body":{"components/TissueComponent.html":{}}}],["1.5.0",{"_index":3247,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":194,"title":{},"body":{"components/AboutComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["1.6rem",{"_index":1653,"title":{},"body":{"components/MainComponent.html":{}}}],["1/1",{"_index":3198,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1117,"title":{},"body":{"components/CalloutComponent.html":{},"components/Organ3dComponent.html":{}}}],["10/10",{"_index":3205,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":850,"title":{},"body":{"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"coverage.html":{}}}],["100000",{"_index":1372,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1000000",{"_index":1725,"title":{},"body":{"components/NavigationComponent.html":{}}}],["100px",{"_index":2908,"title":{},"body":{"components/TissueComponent.html":{}}}],["10rem",{"_index":1409,"title":{},"body":{"components/HomeComponent.html":{}}}],["11",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["11/08/2019",{"_index":1406,"title":{},"body":{"components/HomeComponent.html":{}}}],["11/11",{"_index":3224,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":3048,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{},"changelog.html":{}}}],["12/12",{"_index":3216,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":3121,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["13/13",{"_index":3217,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":3215,"title":{},"body":{"coverage.html":{}}}],["15.625rem",{"_index":480,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["15/15",{"_index":3200,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":495,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["16/16",{"_index":3206,"title":{},"body":{"coverage.html":{}}}],["160px",{"_index":3051,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["16px",{"_index":3120,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["17",{"_index":3366,"title":{},"body":{"overview.html":{}}}],["18",{"_index":2575,"title":{},"body":{"injectables/SearchService.html":{},"miscellaneous/variables.html":{}}}],["18.5",{"_index":2290,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["19/19",{"_index":3201,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":484,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["1rem",{"_index":197,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{}}}],["2",{"_index":498,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"components/TissueComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["2.1.0",{"_index":3240,"title":{},"body":{"dependencies.html":{}}}],["2.25rem",{"_index":212,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TissueComponent.html":{}}}],["2.4.1",{"_index":3254,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":2881,"title":{},"body":{"components/TissueComponent.html":{}}}],["2/2",{"_index":3203,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3367,"title":{},"body":{"overview.html":{}}}],["2019",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"changelog.html":{},"license.html":{}}}],["20rem",{"_index":1413,"title":{},"body":{"components/HomeComponent.html":{}}}],["21/21",{"_index":3207,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":3364,"title":{},"body":{"overview.html":{}}}],["220px",{"_index":3049,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["223352",{"_index":1374,"title":{},"body":{"components/HeaderComponent.html":{}}}],["23/24",{"_index":3228,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":855,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{},"components/TissueComponent.html":{},"changelog.html":{}}}],["25",{"_index":3368,"title":{},"body":{"overview.html":{}}}],["2px",{"_index":2474,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["2rem",{"_index":1328,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/TissueComponent.html":{}}}],["3",{"_index":2221,"title":{},"body":{"components/Organ3dComponent.html":{},"changelog.html":{}}}],["3.13.1",{"_index":3245,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":3244,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":3241,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":1655,"title":{},"body":{"components/MainComponent.html":{}}}],["3/3",{"_index":3199,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":3363,"title":{},"body":{"overview.html":{}}}],["31.25rem",{"_index":1953,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["3d",{"_index":2243,"title":{},"body":{"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["3rem",{"_index":188,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{}}}],["4.1.0",{"_index":3252,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":3246,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3202,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":716,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["40px",{"_index":1951,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["4px",{"_index":1333,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["5.0.1",{"_index":3250,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":3208,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1122,"title":{},"body":{"components/CalloutComponent.html":{}}}],["500",{"_index":1574,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{}}}],["500px",{"_index":1950,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["50rem",{"_index":1363,"title":{},"body":{"components/HeaderComponent.html":{}}}],["55",{"_index":1408,"title":{},"body":{"components/HomeComponent.html":{}}}],["559px",{"_index":3052,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["6",{"_index":3044,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["6.5.3",{"_index":3255,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":3220,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2285,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["6rem",{"_index":2884,"title":{},"body":{"components/TissueComponent.html":{}}}],["7/7",{"_index":3204,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":853,"title":{},"body":{"components/BodyComponent.html":{}}}],["700",{"_index":2209,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["76",{"_index":854,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["768px",{"_index":3050,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["7rem",{"_index":2477,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["8",{"_index":671,"title":{},"body":{"modules/AppRenderInitModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["8.2.13",{"_index":3234,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":3236,"title":{},"body":{"dependencies.html":{}}}],["8.5rem",{"_index":462,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["85",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["89",{"_index":2576,"title":{},"body":{"injectables/SearchService.html":{},"miscellaneous/variables.html":{}}}],["8px",{"_index":1340,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["8rem",{"_index":2886,"title":{},"body":{"components/TissueComponent.html":{}}}],["9",{"_index":3365,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":3221,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":3175,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["9e9e9e",{"_index":489,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["9rem",{"_index":1373,"title":{},"body":{"components/HeaderComponent.html":{}}}],["_database",{"_index":1546,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["_getchildren",{"_index":2107,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["_gl",{"_index":2718,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["_index",{"_index":2133,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["_map",{"_index":2721,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["_nodes",{"_index":2108,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["about'},{'name",{"_index":222,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["about.component",{"_index":296,"title":{},"body":{"modules/AboutModule.html":{}}}],["about.component.html",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.wrapper",{"_index":186,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":1382,"title":{},"body":{"modules/HeaderModule.html":{}}}],["about/about.module",{"_index":1383,"title":{},"body":{"modules/HeaderModule.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aboutmodal",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutmodalservice",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutmodule",{"_index":276,"title":{"modules/AboutModule.html":{}},"body":{"modules/AboutModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["above",{"_index":3166,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":1651,"title":{},"body":{"components/MainComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["acc",{"_index":2080,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["acc[current.id",{"_index":2084,"title":{},"body":{"classes/OntologyState.html":{}}}],["accelerate",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["accessors",{"_index":326,"title":{},"body":{"components/AgeSelectorComponent.html":{},"classes/FlatNode.html":{},"injectables/LocalDatabaseService.html":{},"components/OntologyTreeComponent.html":{},"components/OrganComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["accumulated",{"_index":2081,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["accumulator",{"_index":2079,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["acid",{"_index":2507,"title":{},"body":{"components/SearchComponent.html":{}}}],["acknowledgements",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{}}}],["action",{"_index":1457,"title":{},"body":{"classes/IconRegistryState.html":{},"classes/NavigationState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"license.html":{}}}],["action(registericon",{"_index":1453,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["action(routerdataresolved",{"_index":1834,"title":{},"body":{"classes/NavigationState.html":{}}}],["action(selecttechnology",{"_index":2599,"title":{},"body":{"classes/SearchState.html":{}}}],["action(selecttmc",{"_index":2602,"title":{},"body":{"classes/SearchState.html":{}}}],["action(setagerangefilter",{"_index":2616,"title":{},"body":{"classes/SearchState.html":{}}}],["action(setgenderfilter",{"_index":2619,"title":{},"body":{"classes/SearchState.html":{}}}],["action(setlocation",{"_index":2622,"title":{},"body":{"classes/SearchState.html":{}}}],["action(unselecttechnology",{"_index":2610,"title":{},"body":{"classes/SearchState.html":{}}}],["action(unselecttmc",{"_index":2613,"title":{},"body":{"classes/SearchState.html":{}}}],["action.gender",{"_index":2653,"title":{},"body":{"classes/SearchState.html":{}}}],["action.location",{"_index":2662,"title":{},"body":{"classes/SearchState.html":{}}}],["action.max",{"_index":2655,"title":{},"body":{"classes/SearchState.html":{}}}],["action.min",{"_index":2654,"title":{},"body":{"classes/SearchState.html":{}}}],["action.routerstate.root.firstchild",{"_index":1843,"title":{},"body":{"classes/NavigationState.html":{}}}],["action.technology",{"_index":2660,"title":{},"body":{"classes/SearchState.html":{}}}],["action.tmc",{"_index":2657,"title":{},"body":{"classes/SearchState.html":{}}}],["actions",{"_index":1456,"title":{},"body":{"classes/IconRegistryState.html":{},"components/SearchCategoriesComponent.html":{}}}],["activated",{"_index":2941,"title":{},"body":{"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{}}}],["activated/deactivated",{"_index":1706,"title":{},"body":{"components/NavigationComponent.html":{}}}],["activatedoverlay",{"_index":2923,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["activatedroutesnapshot",{"_index":1826,"title":{},"body":{"classes/NavigationState.html":{},"guards/TissueResolverService.html":{}}}],["activations",{"_index":2845,"title":{},"body":{"components/TissueComponent.html":{}}}],["active",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CountMetadata.html":{},"components/GenderSelectorComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"components/OntologyTreeComponent.html":{},"injectables/OrganDataService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["active(open)/inactive(closed",{"_index":1644,"title":{},"body":{"components/MainComponent.html":{}}}],["activemetadata",{"_index":2345,"title":{},"body":{"components/OrganComponent.html":{}}}],["activeorgan",{"_index":1168,"title":{},"body":{"interfaces/CountMetadata.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"injectables/OrganDataService.html":{}}}],["activeorgan(state",{"_index":1815,"title":{},"body":{"classes/NavigationState.html":{}}}],["activepopoveritem",{"_index":3031,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["activetissue",{"_index":1807,"title":{},"body":{"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"injectables/TissueDataService.html":{}}}],["activetissue(state",{"_index":1817,"title":{},"body":{"classes/NavigationState.html":{}}}],["actual",{"_index":1263,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":271,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["add",{"_index":746,"title":{},"body":{"modules/AppStateModule.html":{},"injectables/LocalDatabaseService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"components/TissueComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/variables.html":{}}}],["addcompare",{"_index":1194,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["addcompare('age",{"_index":2636,"title":{},"body":{"classes/SearchState.html":{}}}],["addcompare('patient.age",{"_index":2641,"title":{},"body":{"classes/SearchState.html":{}}}],["addcompare('sample.patient.age",{"_index":2645,"title":{},"body":{"classes/SearchState.html":{}}}],["addcompare('slice.sample.patient.age",{"_index":2649,"title":{},"body":{"classes/SearchState.html":{}}}],["addcompare(path",{"_index":1207,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["added",{"_index":2082,"title":{},"body":{"classes/OntologyState.html":{},"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["addfilter",{"_index":1195,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["addfilter(filter",{"_index":1217,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["addincludedin",{"_index":1196,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["addincludedin('patient.provider",{"_index":2642,"title":{},"body":{"classes/SearchState.html":{}}}],["addincludedin('provider",{"_index":2637,"title":{},"body":{"classes/SearchState.html":{}}}],["addincludedin('sample.patient.provider",{"_index":2646,"title":{},"body":{"classes/SearchState.html":{}}}],["addincludedin('slice.sample.patient.provider",{"_index":2650,"title":{},"body":{"classes/SearchState.html":{}}}],["addincludedin('technology",{"_index":2652,"title":{},"body":{"classes/SearchState.html":{}}}],["addincludedin(path",{"_index":1219,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["addincludes",{"_index":1197,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["addincludes('ontologynodeids",{"_index":2638,"title":{},"body":{"classes/SearchState.html":{}}}],["addincludes('patient.ontologynodeids",{"_index":2643,"title":{},"body":{"classes/SearchState.html":{}}}],["addincludes('sample.patient.ontologynodeids",{"_index":2647,"title":{},"body":{"classes/SearchState.html":{}}}],["addincludes('slice.sample.patient.ontologynodeids",{"_index":2651,"title":{},"body":{"classes/SearchState.html":{}}}],["addincludes(path",{"_index":1225,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["adding",{"_index":2685,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["additional",{"_index":528,"title":{},"body":{"interfaces/Annotated.html":{},"modules/AppStateModule.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["addlight",{"_index":2231,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["addlight(color",{"_index":2253,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["addmatches",{"_index":1198,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["addmatches('gender",{"_index":2635,"title":{},"body":{"classes/SearchState.html":{}}}],["addmatches('patient.gender",{"_index":2640,"title":{},"body":{"classes/SearchState.html":{}}}],["addmatches('sample.patient.gender",{"_index":2644,"title":{},"body":{"classes/SearchState.html":{}}}],["addmatches('slice.sample.patient.gender",{"_index":2648,"title":{},"body":{"classes/SearchState.html":{}}}],["addmatches(path",{"_index":1229,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["addoverlapsby",{"_index":1199,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["addoverlapsby(path",{"_index":1231,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["adds",{"_index":1211,"title":{},"body":{"classes/FilterBuilder.html":{},"classes/OntologyState.html":{},"components/Organ3dComponent.html":{},"classes/SearchState.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"miscellaneous/functions.html":{}}}],["addsubtree",{"_index":2083,"title":{},"body":{"classes/OntologyState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addsubtree(model.nodes",{"_index":2077,"title":{},"body":{"classes/OntologyState.html":{}}}],["addsubtree(nodes",{"_index":2086,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["addsvgicon",{"_index":1476,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["addsvgiconinnamespace",{"_index":1474,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["addsvgiconliteral",{"_index":1477,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["addsvgiconliteralinnamespace",{"_index":1475,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["addsvgiconset",{"_index":1480,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["addsvgiconsetinnamespace",{"_index":1478,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["addsvgiconsetliteral",{"_index":1481,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["addsvgiconsetliteralinnamespace",{"_index":1479,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["addtechnology",{"_index":2591,"title":{},"body":{"classes/SearchState.html":{}}}],["addtechnology(ctx",{"_index":2598,"title":{},"body":{"classes/SearchState.html":{}}}],["addtmc",{"_index":2592,"title":{},"body":{"classes/SearchState.html":{}}}],["addtmc(ctx",{"_index":2601,"title":{},"body":{"classes/SearchState.html":{}}}],["adhoc",{"_index":1093,"title":{},"body":{"components/CalloutComponent.html":{}}}],["af",{"_index":582,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["afterviewinit",{"_index":1028,"title":{},"body":{"components/CalloutComponent.html":{},"components/TissueComponent.html":{}}}],["against",{"_index":906,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"injectables/OrganDataService.html":{}}}],["age",{"_index":224,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["ageconstraints",{"_index":420,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/SearchService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ageconstraints.max",{"_index":391,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/SearchService.html":{}}}],["ageconstraints.min",{"_index":389,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/SearchService.html":{}}}],["agedescription",{"_index":2581,"title":{},"body":{"injectables/SearchService.html":{}}}],["agerange",{"_index":2578,"title":{},"body":{"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{}}}],["agerangelabel",{"_index":327,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["ageselectorcomponent",{"_index":223,"title":{"components/AgeSelectorComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ageselectormodule",{"_index":502,"title":{"modules/AgeSelectorModule.html":{}},"body":{"modules/AgeSelectorModule.html":{},"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["aims",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{}}}],["aliases",{"_index":3370,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":478,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/HeaderComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"miscellaneous/functions.html":{}}}],["alignz",{"_index":3275,"title":{},"body":{"miscellaneous/functions.html":{}}}],["alpha",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["alternative",{"_index":2916,"title":{},"body":{"components/TissueComponent.html":{}}}],["always",{"_index":2805,"title":{},"body":{"components/TissueComponent.html":{}}}],["alwaysvisible",{"_index":2796,"title":{},"body":{"components/TissueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["ambient",{"_index":2255,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["ambientlight",{"_index":2293,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["ambientlight(color",{"_index":2317,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["analysis",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["anatomical",{"_index":548,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"injectables/SearchService.html":{},"interfaces/SearchStateModel.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["anatomicallocations",{"_index":555,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["anatomicallocations[0",{"_index":976,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["and/or",{"_index":3325,"title":{},"body":{"license.html":{}}}],["anglex",{"_index":3284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angley",{"_index":3285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["anglez",{"_index":3286,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["angular's",{"_index":358,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"classes/NavigationState.html":{},"components/TissueComponent.html":{}}}],["angular/animations",{"_index":3233,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3235,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":415,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{}}}],["angular/cdk/portal",{"_index":416,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{}}}],["angular/cdk/tree",{"_index":2168,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["angular/common",{"_index":291,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":644,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalDatabaseService.html":{},"classes/OntologyState.html":{}}}],["angular/compiler",{"_index":3237,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetadata.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"modules/TissueModule.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1918,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3238,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1919,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/button",{"_index":510,"title":{},"body":{"modules/AgeSelectorModule.html":{},"modules/GenderSelectorModule.html":{},"modules/OntologyTreeModule.html":{},"modules/TissueModule.html":{}}}],["angular/material/chips",{"_index":2490,"title":{},"body":{"modules/SearchCategoriesModule.html":{}}}],["angular/material/dialog",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{}}}],["angular/material/expansion",{"_index":2970,"title":{},"body":{"modules/TissueModule.html":{}}}],["angular/material/form",{"_index":512,"title":{},"body":{"modules/AgeSelectorModule.html":{}}}],["angular/material/icon",{"_index":295,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"classes/IconRegistryState.html":{},"modules/MainModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{}}}],["angular/material/input",{"_index":1967,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["angular/material/select",{"_index":514,"title":{},"body":{"modules/AgeSelectorModule.html":{}}}],["angular/material/sidenav",{"_index":1664,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tabs",{"_index":2492,"title":{},"body":{"modules/SearchCategoriesModule.html":{}}}],["angular/material/tooltip",{"_index":2217,"title":{},"body":{"modules/OntologyTreeModule.html":{},"modules/SearchCategoriesModule.html":{}}}],["angular/material/tree",{"_index":2171,"title":{},"body":{"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/platform",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"modules/MainModule.html":{},"components/TissuesBrowserGridItemComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":688,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BodyRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MainModule.html":{},"modules/NavigationModule.html":{},"classes/NavigationState.html":{},"modules/OrganRoutingModule.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"dependencies.html":{}}}],["annotate",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{}}}],["annotated",{"_index":517,"title":{"interfaces/Annotated.html":{}},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"coverage.html":{}}}],["another",{"_index":1797,"title":{},"body":{"injectables/NavigationService.html":{},"miscellaneous/functions.html":{}}}],["antialias",{"_index":2736,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["any].children",{"_index":2063,"title":{},"body":{"classes/OntologyState.html":{}}}],["api",{"_index":2397,"title":{},"body":{"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"changelog.html":{}}}],["app",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/HomeComponent.html":{},"injectables/NavigationService.html":{},"components/Organ3dComponent.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":654,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":632,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":631,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":226,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":1949,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["appends",{"_index":811,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["application",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{}}}],["applied",{"_index":1235,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["appmodule",{"_index":633,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apprenderinitmodule",{"_index":638,"title":{"modules/AppRenderInitModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1467,"title":{},"body":{"classes/IconRegistryState.html":{},"changelog.html":{}}}],["approutingmodule",{"_index":639,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstatemodule",{"_index":640,"title":{"modules/AppStateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppStateModule.html":{},"modules.html":{},"overview.html":{}}}],["arbitraty",{"_index":1026,"title":{},"body":{"components/CalloutComponent.html":{}}}],["area",{"_index":1649,"title":{},"body":{"components/MainComponent.html":{}}}],["args",{"_index":1471,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["argument",{"_index":1468,"title":{},"body":{"classes/IconRegistryState.html":{},"miscellaneous/functions.html":{}}}],["arguments",{"_index":343,"title":{},"body":{"components/AgeSelectorComponent.html":{},"classes/FilterBuilder.html":{},"classes/IconRegistryState.html":{},"miscellaneous/functions.html":{}}}],["arising",{"_index":3356,"title":{},"body":{"license.html":{}}}],["array",{"_index":1239,"title":{},"body":{"classes/FilterBuilder.html":{},"injectables/LocalDatabaseService.html":{},"classes/NavigationState.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"interfaces/OntologyStateModel.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{}}}],["array.from(searchresults.values",{"_index":2011,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["array.from(this.filtercategories.keys",{"_index":2449,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["arrays",{"_index":3025,"title":{},"body":{"injectables/TissuesBrowserDataService.html":{}}}],["asset",{"_index":2264,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["assets/icons/app/hubmap",{"_index":3388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/icons/gender/female.svg",{"_index":3380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/icons/gender/male",{"_index":3381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/icons/gender/male.svg",{"_index":3379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/icons/toolbar/body.svg",{"_index":3383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/icons/toolbar/cell.svg",{"_index":3385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/icons/toolbar/comment",{"_index":3386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/icons/toolbar/organ.svg",{"_index":3384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":903,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OntologySearchService.html":{},"injectables/OrganDataService.html":{},"interfaces/SearchResult.html":{},"guards/TissueResolverService.html":{},"license.html":{}}}],["async",{"_index":1646,"title":{},"body":{"components/MainComponent.html":{},"components/Organ3dComponent.html":{},"components/TissueComponent.html":{}}}],["at(model.nodes",{"_index":2072,"title":{},"body":{"classes/OntologyState.html":{}}}],["at(nodes",{"_index":2033,"title":{},"body":{"injectables/OntologyService.html":{}}}],["atlas",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["atop",{"_index":604,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["attached",{"_index":2700,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["attempt",{"_index":2988,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["attribute",{"_index":2787,"title":{},"body":{"components/TissueComponent.html":{}}}],["authors",{"_index":3347,"title":{},"body":{"license.html":{}}}],["auto",{"_index":215,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{}}}],["autofluorescence",{"_index":2505,"title":{},"body":{"components/SearchComponent.html":{}}}],["automatically",{"_index":2716,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["available",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/SearchComponent.html":{},"modules.html":{}}}],["await",{"_index":2322,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["award",{"_index":177,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["axis",{"_index":3278,"title":{},"body":{"miscellaneous/functions.html":{}}}],["background",{"_index":465,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AppRenderInitModule.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":496,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/MainComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["base",{"_index":1161,"title":{},"body":{"interfaces/CountMetadata.html":{},"components/Organ3dComponent.html":{},"injectables/OrganDataService.html":{},"components/TissuesBrowserComponent.html":{},"changelog.html":{}}}],["based",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BodyDataService.html":{},"classes/NavigationState.html":{},"injectables/OntologySearchService.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"classes/SearchState.html":{}}}],["baseids",{"_index":1628,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["basepath",{"_index":1162,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["baserotation",{"_index":2237,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["basescene",{"_index":2226,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["bbox",{"_index":1132,"title":{},"body":{"components/CalloutComponent.html":{}}}],["bbox.width",{"_index":1135,"title":{},"body":{"components/CalloutComponent.html":{}}}],["bbox.x",{"_index":1134,"title":{},"body":{"components/CalloutComponent.html":{}}}],["became",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{}}}],["become",{"_index":493,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["becomes",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{}}}],["being",{"_index":1360,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["belongs",{"_index":2423,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["better",{"_index":1100,"title":{},"body":{"components/CalloutComponent.html":{},"components/TissueComponent.html":{}}}],["between",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/NavigationComponent.html":{},"components/SearchCategoriesComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["bidy",{"_index":1671,"title":{},"body":{"components/MetadataComponent.html":{}}}],["biomolecular",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["bit",{"_index":2841,"title":{},"body":{"components/TissueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bits",{"_index":2866,"title":{},"body":{"components/TissueComponent.html":{}}}],["bitwise",{"_index":2870,"title":{},"body":{"components/TissueComponent.html":{}}}],["blank",{"_index":666,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["blank_mapbox_style",{"_index":667,"title":{},"body":{"modules/AppRenderInitModule.html":{},"components/Organ3dComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":214,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["bloomington",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{}}}],["body",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/OntologyState.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["body'},{'name",{"_index":229,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["body.component",{"_index":1019,"title":{},"body":{"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{}}}],["body.component.html",{"_index":758,"title":{},"body":{"components/BodyComponent.html":{}}}],["body.component.scss",{"_index":757,"title":{},"body":{"components/BodyComponent.html":{}}}],["body.id",{"_index":2074,"title":{},"body":{"classes/OntologyState.html":{}}}],["body.wrapper",{"_index":849,"title":{},"body":{"components/BodyComponent.html":{}}}],["bodycomponent",{"_index":228,"title":{"components/BodyComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bodydataservice",{"_index":770,"title":{"injectables/BodyDataService.html":{}},"body":{"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"coverage.html":{},"overview.html":{}}}],["bodyimagepath",{"_index":759,"title":{},"body":{"components/BodyComponent.html":{}}}],["bodymodule",{"_index":1010,"title":{"modules/BodyModule.html":{}},"body":{"modules/BodyModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyoverlays",{"_index":760,"title":{},"body":{"components/BodyComponent.html":{}}}],["bodypath",{"_index":1738,"title":{},"body":{"injectables/NavigationService.html":{}}}],["bodyroutingmodule",{"_index":1015,"title":{"modules/BodyRoutingModule.html":{}},"body":{"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyservice",{"_index":774,"title":{},"body":{"components/BodyComponent.html":{}}}],["bold",{"_index":200,"title":{},"body":{"components/AboutComponent.html":{},"components/MetadataComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["boolean",{"_index":1004,"title":{},"body":{"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"injectables/LocalDatabaseService.html":{},"components/OntologyTreeComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["bootstrap",{"_index":280,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"overview.html":{}}}],["border",{"_index":483,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/OntologySearchComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["border(bottom",{"_index":1369,"title":{},"body":{"components/HeaderComponent.html":{},"components/TissueComponent.html":{}}}],["border(right",{"_index":1720,"title":{},"body":{"components/NavigationComponent.html":{}}}],["boston",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{}}}],["both",{"_index":954,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["bottom",{"_index":196,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/NavigationComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"miscellaneous/functions.html":{}}}],["bound",{"_index":376,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/SearchService.html":{}}}],["boundary",{"_index":1045,"title":{},"body":{"components/CalloutComponent.html":{},"interfaces/SearchStateModel.html":{}}}],["bounding",{"_index":2277,"title":{},"body":{"components/Organ3dComponent.html":{},"miscellaneous/functions.html":{}}}],["box",{"_index":486,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/NavigationComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["box3",{"_index":3280,"title":{},"body":{"miscellaneous/functions.html":{}}}],["break",{"_index":2466,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["brief",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{}}}],["browse",{"_index":3360,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":263,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"interfaces/NavigationStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser'},{'name",{"_index":261,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["browser.component",{"_index":3136,"title":{},"body":{"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{}}}],["browser.component.html",{"_index":3016,"title":{},"body":{"components/TissuesBrowserComponent.html":{}}}],["browser.component.scss",{"_index":3015,"title":{},"body":{"components/TissuesBrowserComponent.html":{}}}],["browser.component.ts",{"_index":3013,"title":{},"body":{"components/TissuesBrowserComponent.html":{},"coverage.html":{}}}],["browser.component.ts:13",{"_index":3018,"title":{},"body":{"components/TissuesBrowserComponent.html":{}}}],["browser.module').then(m",{"_index":705,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["browser.module.ts",{"_index":3133,"title":{},"body":{"modules/TissuesBrowserModule.html":{}}}],["browser/animations",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{}}}],["browser/tissues",{"_index":704,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TissuesBrowserComponent.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"coverage.html":{}}}],["browseranimationsmodule",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{}}}],["browsermodule",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["browsing",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"changelog.html":{}}}],["bruce",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{}}}],["bs",{"_index":3058,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["bug",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":902,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{},"classes/SearchState.html":{}}}],["builder.addincludes('anatomicallocations",{"_index":959,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["builder.addmatches('patient.anatomicallocations[0",{"_index":1178,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["builder.addmatches(path",{"_index":1006,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["builder.tofilter",{"_index":960,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{}}}],["builder.ts",{"_index":1191,"title":{},"body":{"classes/FilterBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:108",{"_index":1220,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:122",{"_index":1234,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:133",{"_index":1241,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:143",{"_index":1218,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:152",{"_index":1237,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:49",{"_index":1204,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:68",{"_index":1230,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:81",{"_index":1210,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:95",{"_index":1226,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builders",{"_index":1240,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["button",{"_index":302,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/TissueComponent.html":{},"changelog.html":{}}}],["buttons",{"_index":1688,"title":{},"body":{"components/NavigationComponent.html":{}}}],["börner",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{}}}],["c",{"_index":3305,"title":{},"body":{"license.html":{}}}],["cached",{"_index":1573,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["caetgories",{"_index":2418,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["calc(100vh",{"_index":1650,"title":{},"body":{"components/MainComponent.html":{}}}],["calculates",{"_index":1074,"title":{},"body":{"components/CalloutComponent.html":{},"miscellaneous/functions.html":{}}}],["california",{"_index":2510,"title":{},"body":{"components/SearchComponent.html":{}}}],["call",{"_index":1114,"title":{},"body":{"components/CalloutComponent.html":{}}}],["callable",{"_index":2029,"title":{},"body":{"injectables/OntologyService.html":{}}}],["callback",{"_index":1900,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["called",{"_index":784,"title":{},"body":{"components/BodyComponent.html":{},"injectables/OntologyService.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["callout",{"_index":231,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["callout.callout",{"_index":1141,"title":{},"body":{"components/CalloutComponent.html":{}}}],["callout.component",{"_index":1149,"title":{},"body":{"modules/CalloutModule.html":{}}}],["callout.component.html",{"_index":1031,"title":{},"body":{"components/CalloutComponent.html":{}}}],["callout.component.scss",{"_index":1030,"title":{},"body":{"components/CalloutComponent.html":{}}}],["callout]'},{'name",{"_index":232,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["calloutcomponent",{"_index":230,"title":{"components/CalloutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calloutmodule",{"_index":1016,"title":{"modules/CalloutModule.html":{}},"body":{"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/OrganModule.html":{},"modules.html":{},"overview.html":{}}}],["caltech",{"_index":541,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["camera",{"_index":2687,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["cancelupdates",{"_index":1035,"title":{},"body":{"components/CalloutComponent.html":{}}}],["canvas",{"_index":2734,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["capitalize",{"_index":763,"title":{},"body":{"components/BodyComponent.html":{},"components/TissueComponent.html":{}}}],["capitalize(hoverorganname",{"_index":848,"title":{},"body":{"components/BodyComponent.html":{}}}],["capitalize(value",{"_index":776,"title":{},"body":{"components/BodyComponent.html":{}}}],["capitalized",{"_index":782,"title":{},"body":{"components/BodyComponent.html":{}}}],["capitalizes",{"_index":778,"title":{},"body":{"components/BodyComponent.html":{}}}],["capitalizze",{"_index":781,"title":{},"body":{"components/BodyComponent.html":{}}}],["case",{"_index":1910,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/OntologyState.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{},"guards/TissueResolverService.html":{}}}],["catch",{"_index":1490,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["catcherror",{"_index":2990,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["catcherror(error",{"_index":3008,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["categories",{"_index":2409,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{}}}],["categories'},{'name",{"_index":255,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["categories.component",{"_index":2493,"title":{},"body":{"modules/SearchCategoriesModule.html":{}}}],["categories.component.html",{"_index":2412,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["categories.component.scss",{"_index":2411,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["categories.component.ts",{"_index":2408,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"coverage.html":{}}}],["categories.component.ts:17",{"_index":2419,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["categories.component.ts:21",{"_index":2442,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["categories.component.ts:25",{"_index":2417,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["categories.component.ts:38",{"_index":2424,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["categories.component.ts:51",{"_index":2432,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["categories.component.ts:73",{"_index":2421,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["categories.component.ts:85",{"_index":2428,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["categories.component.ts:98",{"_index":2436,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["categories.module",{"_index":2533,"title":{},"body":{"modules/SearchModule.html":{}}}],["categories.module.ts",{"_index":2488,"title":{},"body":{"modules/SearchCategoriesModule.html":{}}}],["categories/search",{"_index":2407,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"coverage.html":{}}}],["category",{"_index":2422,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"injectables/SearchService.html":{}}}],["causes",{"_index":1756,"title":{},"body":{"injectables/NavigationService.html":{}}}],["ccf",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ccfasseturl",{"_index":3394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdkportal",{"_index":406,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["cdr",{"_index":2120,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["cdr.detectchanges",{"_index":2195,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["ceil",{"_index":390,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["cell",{"_index":607,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationStateModel.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["cells",{"_index":627,"title":{},"body":{"interfaces/Annotated.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"components/MetadataComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["celltype",{"_index":611,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["center",{"_index":172,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"modules/AppRenderInitModule.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["centerobject",{"_index":2297,"title":{},"body":{"components/Organ3dComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["centerobject(obj",{"_index":3274,"title":{},"body":{"miscellaneous/functions.html":{}}}],["centerobject(scene",{"_index":2331,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["centers",{"_index":3276,"title":{},"body":{"miscellaneous/functions.html":{}}}],["centroid",{"_index":1046,"title":{},"body":{"components/CalloutComponent.html":{},"components/OrganComponent.html":{}}}],["chain",{"_index":1206,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["chains",{"_index":561,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["change",{"_index":1758,"title":{},"body":{"injectables/NavigationService.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["changed",{"_index":1087,"title":{},"body":{"components/CalloutComponent.html":{},"components/SearchCategoriesComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":2103,"title":{},"body":{"components/OntologyTreeComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["changedetectionstrategy",{"_index":2169,"title":{},"body":{"components/OntologyTreeComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":2104,"title":{},"body":{"components/OntologyTreeComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["changedetectorref",{"_index":2118,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["changelog",{"_index":3140,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":1086,"title":{},"body":{"components/CalloutComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["changing",{"_index":1113,"title":{},"body":{"components/CalloutComponent.html":{}}}],["charge",{"_index":3311,"title":{},"body":{"license.html":{}}}],["check",{"_index":1223,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["checked",{"_index":1337,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["checks",{"_index":564,"title":{},"body":{"interfaces/Annotated.html":{},"classes/FilterBuilder.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["cheet",{"_index":2357,"title":{},"body":{"components/OrganComponent.html":{}}}],["cheet('3",{"_index":2363,"title":{},"body":{"components/OrganComponent.html":{}}}],["cheet.js",{"_index":2358,"title":{},"body":{"components/OrganComponent.html":{},"dependencies.html":{}}}],["chevron_right",{"_index":2202,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["child",{"_index":1338,"title":{},"body":{"components/GenderSelectorComponent.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologyStateModel.html":{},"components/SearchComponent.html":{},"miscellaneous/functions.html":{}}}],["children",{"_index":1314,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"interfaces/ValueObject.html":{}}}],["claim",{"_index":3350,"title":{},"body":{"license.html":{}}}],["class",{"_index":47,"title":{"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"classes/IconRegistryState.html":{},"classes/NavigationState.html":{},"classes/OntologyState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"modules/TissueModule.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"coverage.html":{}}}],["classes",{"_index":1189,"title":{},"body":{"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"classes/IconRegistryState.html":{},"classes/NavigationState.html":{},"classes/OntologyState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"components/TissuesBrowserGridComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"overview.html":{}}}],["cleans",{"_index":360,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"classes/NavigationState.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{}}}],["clear",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["clearactivepopoveritem",{"_index":3033,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["clearinterval(updater",{"_index":1140,"title":{},"body":{"components/CalloutComponent.html":{}}}],["clearorganhover",{"_index":764,"title":{},"body":{"components/BodyComponent.html":{}}}],["clears",{"_index":1060,"title":{},"body":{"components/CalloutComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["click",{"_index":350,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["clicked",{"_index":303,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["close",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["closes",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{}}}],["closesliderpopover(target",{"_index":444,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["closing",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{}}}],["cloud_download",{"_index":1647,"title":{},"body":{"components/MainComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["cluster_aboutmodule",{"_index":283,"title":{},"body":{"modules/AboutModule.html":{},"overview.html":{}}}],["cluster_aboutmodule_declarations",{"_index":284,"title":{},"body":{"modules/AboutModule.html":{},"overview.html":{}}}],["cluster_aboutmodule_exports",{"_index":285,"title":{},"body":{"modules/AboutModule.html":{},"overview.html":{}}}],["cluster_ageselectormodule",{"_index":503,"title":{},"body":{"modules/AgeSelectorModule.html":{},"overview.html":{}}}],["cluster_ageselectormodule_declarations",{"_index":504,"title":{},"body":{"modules/AgeSelectorModule.html":{},"overview.html":{}}}],["cluster_ageselectormodule_exports",{"_index":505,"title":{},"body":{"modules/AgeSelectorModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":634,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":637,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":635,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":636,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bodymodule",{"_index":1011,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_declarations",{"_index":1012,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_imports",{"_index":1013,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_providers",{"_index":1014,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_calloutmodule",{"_index":1145,"title":{},"body":{"modules/CalloutModule.html":{},"overview.html":{}}}],["cluster_calloutmodule_declarations",{"_index":1146,"title":{},"body":{"modules/CalloutModule.html":{},"overview.html":{}}}],["cluster_calloutmodule_exports",{"_index":1147,"title":{},"body":{"modules/CalloutModule.html":{},"overview.html":{}}}],["cluster_genderselectormodule",{"_index":1342,"title":{},"body":{"modules/GenderSelectorModule.html":{},"overview.html":{}}}],["cluster_genderselectormodule_declarations",{"_index":1343,"title":{},"body":{"modules/GenderSelectorModule.html":{},"overview.html":{}}}],["cluster_genderselectormodule_exports",{"_index":1344,"title":{},"body":{"modules/GenderSelectorModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":1376,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":1377,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":1379,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_imports",{"_index":1378,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_homemodule",{"_index":1415,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":1416,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":1417,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":1656,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_declarations",{"_index":1657,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_exports",{"_index":1659,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_imports",{"_index":1658,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_metadatamodule",{"_index":1681,"title":{},"body":{"modules/MetadataModule.html":{},"overview.html":{}}}],["cluster_metadatamodule_declarations",{"_index":1682,"title":{},"body":{"modules/MetadataModule.html":{},"overview.html":{}}}],["cluster_metadatamodule_exports",{"_index":1683,"title":{},"body":{"modules/MetadataModule.html":{},"overview.html":{}}}],["cluster_navigationmodule",{"_index":1731,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_declarations",{"_index":1732,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_exports",{"_index":1733,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule",{"_index":1959,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_declarations",{"_index":1960,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_exports",{"_index":1961,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule",{"_index":2212,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_declarations",{"_index":2213,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_exports",{"_index":2214,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_organ3dmodule",{"_index":2337,"title":{},"body":{"modules/Organ3dModule.html":{},"overview.html":{}}}],["cluster_organ3dmodule_declarations",{"_index":2338,"title":{},"body":{"modules/Organ3dModule.html":{},"overview.html":{}}}],["cluster_organ3dmodule_exports",{"_index":2339,"title":{},"body":{"modules/Organ3dModule.html":{},"overview.html":{}}}],["cluster_organmodule",{"_index":2382,"title":{},"body":{"modules/OrganModule.html":{},"overview.html":{}}}],["cluster_organmodule_declarations",{"_index":2383,"title":{},"body":{"modules/OrganModule.html":{},"overview.html":{}}}],["cluster_organmodule_imports",{"_index":2384,"title":{},"body":{"modules/OrganModule.html":{},"overview.html":{}}}],["cluster_organmodule_providers",{"_index":2385,"title":{},"body":{"modules/OrganModule.html":{},"overview.html":{}}}],["cluster_searchcategoriesmodule",{"_index":2485,"title":{},"body":{"modules/SearchCategoriesModule.html":{},"overview.html":{}}}],["cluster_searchcategoriesmodule_declarations",{"_index":2486,"title":{},"body":{"modules/SearchCategoriesModule.html":{},"overview.html":{}}}],["cluster_searchcategoriesmodule_exports",{"_index":2487,"title":{},"body":{"modules/SearchCategoriesModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":2525,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_declarations",{"_index":2526,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_exports",{"_index":2528,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_imports",{"_index":2527,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_tissuemodule",{"_index":2963,"title":{},"body":{"modules/TissueModule.html":{},"overview.html":{}}}],["cluster_tissuemodule_declarations",{"_index":2964,"title":{},"body":{"modules/TissueModule.html":{},"overview.html":{}}}],["cluster_tissuemodule_imports",{"_index":2965,"title":{},"body":{"modules/TissueModule.html":{},"overview.html":{}}}],["cluster_tissuemodule_providers",{"_index":2966,"title":{},"body":{"modules/TissueModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsergriditemmodule",{"_index":3079,"title":{},"body":{"modules/TissuesBrowserGridItemModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsergriditemmodule_declarations",{"_index":3080,"title":{},"body":{"modules/TissuesBrowserGridItemModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsergriditemmodule_exports",{"_index":3081,"title":{},"body":{"modules/TissuesBrowserGridItemModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsergridmodule",{"_index":3085,"title":{},"body":{"modules/TissuesBrowserGridModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsergridmodule_declarations",{"_index":3086,"title":{},"body":{"modules/TissuesBrowserGridModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsergridmodule_exports",{"_index":3088,"title":{},"body":{"modules/TissuesBrowserGridModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsergridmodule_imports",{"_index":3087,"title":{},"body":{"modules/TissuesBrowserGridModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsergridpopovercontentmodule",{"_index":3122,"title":{},"body":{"modules/TissuesBrowserGridPopoverContentModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsergridpopovercontentmodule_declarations",{"_index":3123,"title":{},"body":{"modules/TissuesBrowserGridPopoverContentModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsergridpopovercontentmodule_exports",{"_index":3124,"title":{},"body":{"modules/TissuesBrowserGridPopoverContentModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsermodule",{"_index":3128,"title":{},"body":{"modules/TissuesBrowserModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsermodule_declarations",{"_index":3129,"title":{},"body":{"modules/TissuesBrowserModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsermodule_imports",{"_index":3130,"title":{},"body":{"modules/TissuesBrowserModule.html":{},"overview.html":{}}}],["cluster_tissuesbrowsermodule_providers",{"_index":3131,"title":{},"body":{"modules/TissuesBrowserModule.html":{},"overview.html":{}}}],["code",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"changelog.html":{}}}],["codifies",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["collection",{"_index":1153,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["color",{"_index":466,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AppRenderInitModule.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":1719,"title":{},"body":{"components/NavigationComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["columns",{"_index":3039,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["columns=\"#{$n",{"_index":3062,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["combinelatest",{"_index":933,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{}}}],["combinelatest([slicecountobservable",{"_index":1186,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["combining",{"_index":1243,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["come",{"_index":922,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["coming",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["comment",{"_index":1709,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["comments",{"_index":1399,"title":{},"body":{"components/HomeComponent.html":{}}}],["common",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Annotated.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"interfaces/Patient.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"changelog.html":{},"index.html":{}}}],["common/filter/filter",{"_index":939,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"classes/SearchState.html":{}}}],["commonmodule",{"_index":290,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{}}}],["compare",{"_index":1208,"title":{},"body":{"classes/FilterBuilder.html":{},"classes/SearchState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["compare.equal",{"_index":1266,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["compare.greater_than",{"_index":1271,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["compare.greater_than_equal",{"_index":1272,"title":{},"body":{"classes/FilterBuilder.html":{},"classes/SearchState.html":{},"miscellaneous/variables.html":{}}}],["compare.less_than",{"_index":1269,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["compare.less_than_equal",{"_index":1270,"title":{},"body":{"classes/FilterBuilder.html":{},"classes/SearchState.html":{},"miscellaneous/variables.html":{}}}],["compare.not_equal",{"_index":1267,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["comparemethods",{"_index":1265,"title":{},"body":{"classes/FilterBuilder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparemethods[compare",{"_index":1274,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["compares",{"_index":1212,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["comparison",{"_index":1214,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["completed",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{}}}],["completes",{"_index":1788,"title":{},"body":{"injectables/NavigationService.html":{},"miscellaneous/functions.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"modules/OrganRoutingModule.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"modules/TissueRoutingModule.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserRoutingModule.html":{},"coverage.html":{}}}],["component's",{"_index":335,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["component_template",{"_index":221,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"overview.html":{}}}],["components/about/about.component",{"_index":1361,"title":{},"body":{"components/HeaderComponent.html":{}}}],["components/callout/callout.module",{"_index":2388,"title":{},"body":{"modules/OrganModule.html":{}}}],["components/header/header.module",{"_index":1665,"title":{},"body":{"modules/MainModule.html":{}}}],["components/metadata/metadata.module",{"_index":2389,"title":{},"body":{"modules/OrganModule.html":{}}}],["components/navigation/navigation.module",{"_index":1666,"title":{},"body":{"modules/MainModule.html":{}}}],["components/organ3d/organ3d.module",{"_index":2390,"title":{},"body":{"modules/OrganModule.html":{}}}],["components/search/search.module",{"_index":1667,"title":{},"body":{"modules/MainModule.html":{}}}],["components/tissues",{"_index":3134,"title":{},"body":{"modules/TissuesBrowserModule.html":{}}}],["composes",{"_index":1990,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computational",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["computations",{"_index":1973,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computes",{"_index":411,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["concat",{"_index":1783,"title":{},"body":{"injectables/NavigationService.html":{}}}],["concat(prefix",{"_index":1800,"title":{},"body":{"injectables/NavigationService.html":{}}}],["concept",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["cond",{"_index":2789,"title":{},"body":{"components/TissueComponent.html":{}}}],["condition",{"_index":2003,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/TissueComponent.html":{}}}],["conditions",{"_index":3332,"title":{},"body":{"license.html":{}}}],["config",{"_index":2304,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["configure",{"_index":1051,"title":{},"body":{"components/CalloutComponent.html":{}}}],["connect",{"_index":1070,"title":{},"body":{"components/CalloutComponent.html":{}}}],["connected",{"_index":1050,"title":{},"body":{"components/CalloutComponent.html":{}}}],["connectedposition",{"_index":414,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["connecting",{"_index":1544,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["connection",{"_index":3357,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1703,"title":{},"body":{"components/NavigationComponent.html":{}}}],["consortium",{"_index":3306,"title":{},"body":{"license.html":{}}}],["const",{"_index":422,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"injectables/BodyDataService.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"components/GenderSelectorComponent.html":{},"modules/HomeRoutingModule.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganRoutingModule.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"interfaces/ValueObject.html":{}}}],["constraint",{"_index":2574,"title":{},"body":{"injectables/SearchService.html":{},"miscellaneous/variables.html":{}}}],["constructed",{"_index":1795,"title":{},"body":{"injectables/NavigationService.html":{},"miscellaneous/functions.html":{}}}],["construction",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["constructor(@inject(blank_mapbox_style",{"_index":2305,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["constructor(aboutmodal",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{}}}],["constructor(bodyservice",{"_index":769,"title":{},"body":{"components/BodyComponent.html":{}}}],["constructor(cdr",{"_index":2117,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["constructor(database",{"_index":1811,"title":{},"body":{"classes/NavigationState.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{}}}],["constructor(dataservice",{"_index":2349,"title":{},"body":{"components/OrganComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{}}}],["constructor(definition",{"_index":2395,"title":{},"body":{"classes/RegisterIcon.html":{}}}],["constructor(dialog",{"_index":1352,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(element",{"_index":1048,"title":{},"body":{"components/CalloutComponent.html":{}}}],["constructor(error",{"_index":2403,"title":{},"body":{"classes/RegistrationError.html":{}}}],["constructor(filter",{"_index":1202,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["constructor(gender",{"_index":2678,"title":{},"body":{"classes/SetGenderFilter.html":{}}}],["constructor(http",{"_index":1551,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"classes/OntologyState.html":{}}}],["constructor(localdatabase",{"_index":871,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/OrganDataService.html":{}}}],["constructor(location",{"_index":2680,"title":{},"body":{"classes/SetLocation.html":{}}}],["constructor(min",{"_index":2676,"title":{},"body":{"classes/SetAgeRangeFilter.html":{}}}],["constructor(navigation",{"_index":1642,"title":{},"body":{"components/MainComponent.html":{}}}],["constructor(navigator",{"_index":1697,"title":{},"body":{"components/NavigationComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["constructor(ontology",{"_index":2495,"title":{},"body":{"components/SearchComponent.html":{}}}],["constructor(options",{"_index":2694,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["constructor(original",{"_index":1300,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(overlay",{"_index":328,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["constructor(private",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"classes/FilterBuilder.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"injectables/TissueDataService.html":{}}}],["constructor(public",{"_index":2365,"title":{},"body":{"components/OrganComponent.html":{}}}],["constructor(readonly",{"_index":830,"title":{},"body":{"components/BodyComponent.html":{},"classes/FlatNode.html":{},"components/NavigationComponent.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["constructor(registry",{"_index":1439,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["constructor(search",{"_index":1323,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["constructor(searchservice",{"_index":1878,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["constructor(store",{"_index":2022,"title":{},"body":{"injectables/OntologyService.html":{}}}],["constructor(style",{"_index":2240,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["constructor(technology",{"_index":2674,"title":{},"body":{"classes/SelectTechnology.html":{},"classes/UnselectTechnology.html":{}}}],["constructor(tmc",{"_index":2668,"title":{},"body":{"classes/SelectTMC.html":{},"classes/UnselectTMC.html":{}}}],["constructs",{"_index":2242,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["consume",{"_index":1728,"title":{},"body":{"components/NavigationComponent.html":{}}}],["container",{"_index":183,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["containing",{"_index":301,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/CalloutComponent.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"components/MainComponent.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["contains",{"_index":1227,"title":{},"body":{"classes/FilterBuilder.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"classes/SearchState.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["content",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["content.component",{"_index":3126,"title":{},"body":{"modules/TissuesBrowserGridPopoverContentModule.html":{}}}],["content.component.html",{"_index":3098,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["content.component.scss",{"_index":3097,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["content.component.ts",{"_index":3095,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:19",{"_index":3101,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["content.component.ts:24",{"_index":3105,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["content.component.ts:31",{"_index":3107,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["content.component.ts:38",{"_index":3109,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["content.component.ts:48",{"_index":3103,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["content.module",{"_index":3093,"title":{},"body":{"modules/TissuesBrowserGridModule.html":{}}}],["content.module.ts",{"_index":3125,"title":{},"body":{"modules/TissuesBrowserGridPopoverContentModule.html":{}}}],["content.wrapper",{"_index":3119,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["content/tissues",{"_index":3092,"title":{},"body":{"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"coverage.html":{}}}],["contents",{"_index":1027,"title":{},"body":{"components/CalloutComponent.html":{},"components/MainComponent.html":{}}}],["context",{"_index":1484,"title":{},"body":{"classes/IconRegistryState.html":{},"classes/NavigationState.html":{},"classes/OntologyState.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["continues",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{}}}],["contract",{"_index":3353,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":1334,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/NavigationComponent.html":{},"components/TissueComponent.html":{}}}],["control",{"_index":1917,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{}}}],["control.collapseall",{"_index":2190,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["control.datanodes.find(flat",{"_index":2188,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["control.expand(flat",{"_index":2191,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["control.isexpanded(node",{"_index":2200,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["controller",{"_index":1109,"title":{},"body":{"components/CalloutComponent.html":{},"components/OntologyTreeComponent.html":{}}}],["converting",{"_index":2712,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["converts",{"_index":1533,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["coordinate",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"changelog.html":{},"index.html":{}}}],["coordinates",{"_index":2741,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{}}}],["coordinates.meterinmercatorcoordinateunits",{"_index":2744,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["copies",{"_index":3327,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3313,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3304,"title":{},"body":{"license.html":{}}}],["core",{"_index":3243,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1700,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/NavigationStateModel.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["corresponding",{"_index":551,"title":{},"body":{"interfaces/Annotated.html":{},"injectables/BodyDataService.html":{},"interfaces/LocalDatabase.html":{},"components/OntologyTreeComponent.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"injectables/TissuesBrowserDataService.html":{}}}],["count",{"_index":806,"title":{},"body":{"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{}}}],["countmetadata",{"_index":943,"title":{"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{}},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"coverage.html":{}}}],["countobservablemap",{"_index":862,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["counts",{"_index":879,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["counts.patients",{"_index":2366,"title":{},"body":{"components/OrganComponent.html":{}}}],["counts.patientscount",{"_index":842,"title":{},"body":{"components/BodyComponent.html":{}}}],["cover",{"_index":3077,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["coverage",{"_index":3176,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["create",{"_index":334,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["create(original",{"_index":1304,"title":{},"body":{"classes/FlatNode.html":{}}}],["createcountsobservable",{"_index":865,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/OrganDataService.html":{}}}],["createcountsobservable(sampleid",{"_index":876,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["created",{"_index":382,"title":{},"body":{"components/AgeSelectorComponent.html":{},"classes/FlatNode.html":{}}}],["createlinepath",{"_index":1036,"title":{},"body":{"components/CalloutComponent.html":{}}}],["createlinepath(x",{"_index":1062,"title":{},"body":{"components/CalloutComponent.html":{}}}],["createmodel",{"_index":3225,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createmodel(nodemap",{"_index":2061,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["createorganpath",{"_index":1744,"title":{},"body":{"injectables/NavigationService.html":{}}}],["createorganpath(organid",{"_index":1748,"title":{},"body":{"injectables/NavigationService.html":{}}}],["createpathwithidentifier",{"_index":3218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createpathwithidentifier('/organ",{"_index":1772,"title":{},"body":{"injectables/NavigationService.html":{}}}],["createpathwithidentifier('/tissue",{"_index":1775,"title":{},"body":{"injectables/NavigationService.html":{}}}],["createpathwithidentifier(prefix",{"_index":1798,"title":{},"body":{"injectables/NavigationService.html":{},"miscellaneous/functions.html":{}}}],["createpositionstrategy",{"_index":1037,"title":{},"body":{"components/CalloutComponent.html":{}}}],["createpositionstrategy(position",{"_index":1067,"title":{},"body":{"components/CalloutComponent.html":{}}}],["creates",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/functions.html":{}}}],["createsearchcriteriadescription",{"_index":2577,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createsearchcriteriadescription(undefined",{"_index":3293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createsinglepathobservable",{"_index":3219,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createsinglepathobservable('/body",{"_index":1761,"title":{},"body":{"injectables/NavigationService.html":{}}}],["createsinglepathobservable('/home",{"_index":1763,"title":{},"body":{"injectables/NavigationService.html":{}}}],["createsinglepathobservable('/tissues",{"_index":1778,"title":{},"body":{"injectables/NavigationService.html":{}}}],["createsinglepathobservable(path",{"_index":1790,"title":{},"body":{"injectables/NavigationService.html":{},"miscellaneous/functions.html":{}}}],["createtissuepath",{"_index":1745,"title":{},"body":{"injectables/NavigationService.html":{}}}],["createtissuepath(tissueid",{"_index":1752,"title":{},"body":{"injectables/NavigationService.html":{}}}],["creating",{"_index":1104,"title":{},"body":{"components/CalloutComponent.html":{},"classes/FilterBuilder.html":{}}}],["creation",{"_index":1163,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["credits",{"_index":3298,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":1652,"title":{},"body":{"components/MainComponent.html":{},"components/SearchCategoriesComponent.html":{},"injectables/SearchService.html":{},"miscellaneous/functions.html":{}}}],["ctx",{"_index":1824,"title":{},"body":{"classes/NavigationState.html":{},"classes/OntologyState.html":{},"classes/SearchState.html":{}}}],["ctx.getstate",{"_index":1856,"title":{},"body":{"classes/NavigationState.html":{},"classes/SearchState.html":{}}}],["ctx.patchstate",{"_index":1854,"title":{},"body":{"classes/NavigationState.html":{},"classes/SearchState.html":{}}}],["ctx.setstate(ontology",{"_index":2100,"title":{},"body":{"classes/OntologyState.html":{}}}],["currect",{"_index":2130,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["currenlty",{"_index":1359,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["current",{"_index":412,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/BodyDataService.html":{},"components/HomeComponent.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"injectables/TissuesBrowserDataService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["currently",{"_index":1166,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"components/OntologyTreeComponent.html":{},"injectables/OrganDataService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"injectables/TissueDataService.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["cursor",{"_index":205,"title":{},"body":{"components/AboutComponent.html":{},"components/BodyComponent.html":{},"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["custom",{"_index":2684,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["customlayerinterface",{"_index":2686,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["cyberinfrastructure",{"_index":3300,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":2849,"title":{},"body":{"components/TissueComponent.html":{}}}],["d",{"_index":2364,"title":{},"body":{"components/OrganComponent.html":{}}}],["damages",{"_index":3351,"title":{},"body":{"license.html":{}}}],["darkgray",{"_index":2481,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["data",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OntologySearchService.html":{},"components/OntologyTreeComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{}}}],["data$.pipe(delay(emulatedhttpdelay",{"_index":1618,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["data$.pipe(map((items",{"_index":1613,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["data.model",{"_index":947,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["data.model.ts",{"_index":1151,"title":{},"body":{"interfaces/CountMetaData.html":{},"coverage.html":{}}}],["data.service",{"_index":828,"title":{},"body":{"components/BodyComponent.html":{},"modules/BodyModule.html":{},"components/OrganComponent.html":{},"modules/OrganModule.html":{},"components/TissueComponent.html":{},"modules/TissueModule.html":{},"components/TissuesBrowserComponent.html":{},"modules/TissuesBrowserModule.html":{}}}],["data.service.ts",{"_index":860,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{},"injectables/TissuesBrowserDataService.html":{},"coverage.html":{}}}],["data.service.ts:103",{"_index":2374,"title":{},"body":{"injectables/OrganDataService.html":{}}}],["data.service.ts:104",{"_index":2928,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["data.service.ts:108",{"_index":877,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["data.service.ts:119",{"_index":2373,"title":{},"body":{"injectables/OrganDataService.html":{}}}],["data.service.ts:145",{"_index":2375,"title":{},"body":{"injectables/OrganDataService.html":{}}}],["data.service.ts:151",{"_index":895,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["data.service.ts:17",{"_index":3024,"title":{},"body":{"injectables/TissuesBrowserDataService.html":{}}}],["data.service.ts:22",{"_index":2943,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["data.service.ts:23",{"_index":916,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["data.service.ts:28",{"_index":874,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/TissueDataService.html":{}}}],["data.service.ts:33",{"_index":2949,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["data.service.ts:41",{"_index":2940,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["data.service.ts:42",{"_index":929,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["data.service.ts:48",{"_index":926,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/TissueDataService.html":{}}}],["data.service.ts:52",{"_index":2377,"title":{},"body":{"injectables/OrganDataService.html":{}}}],["data.service.ts:54",{"_index":886,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["data.service.ts:58",{"_index":2378,"title":{},"body":{"injectables/OrganDataService.html":{}}}],["data.service.ts:61",{"_index":2933,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["data.service.ts:64",{"_index":2376,"title":{},"body":{"injectables/OrganDataService.html":{}}}],["data.service.ts:67",{"_index":909,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["data.service.ts:69",{"_index":2379,"title":{},"body":{"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{}}}],["data.service.ts:77",{"_index":2380,"title":{},"body":{"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{}}}],["data.service.ts:80",{"_index":884,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["data.service.ts:84",{"_index":2372,"title":{},"body":{"injectables/OrganDataService.html":{}}}],["data.service.ts:85",{"_index":2930,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["data.service.ts:92",{"_index":888,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["data.service.ts:93",{"_index":2932,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["data/body",{"_index":827,"title":{},"body":{"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"coverage.html":{}}}],["data/organ",{"_index":946,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"coverage.html":{}}}],["data/tissue",{"_index":2839,"title":{},"body":{"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"modules/TissueModule.html":{},"coverage.html":{}}}],["data/tissues",{"_index":3021,"title":{},"body":{"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"modules/TissuesBrowserModule.html":{},"coverage.html":{}}}],["database",{"_index":613,"title":{},"body":{"interfaces/Annotated.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"changelog.html":{}}}],["database.gettissueimages(tissuefilter",{"_index":1851,"title":{},"body":{"classes/NavigationState.html":{}}}],["database.service",{"_index":941,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{}}}],["database.service.ts",{"_index":1543,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"coverage.html":{}}}],["database.service.ts:100",{"_index":1559,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database.service.ts:109",{"_index":1561,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database.service.ts:119",{"_index":1567,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database.service.ts:141",{"_index":1570,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database.service.ts:32",{"_index":1575,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database.service.ts:37",{"_index":1580,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database.service.ts:40",{"_index":1553,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database.service.ts:50",{"_index":1583,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database.service.ts:73",{"_index":1556,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database.service.ts:82",{"_index":1563,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database.service.ts:91",{"_index":1565,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["database/database.models",{"_index":1836,"title":{},"body":{"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"classes/SearchState.html":{}}}],["database/local/local",{"_index":1158,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{}}}],["dataservice",{"_index":2347,"title":{},"body":{"components/OrganComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{}}}],["datasource",{"_index":2109,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["db",{"_index":1000,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{}}}],["db[method].bind(db",{"_index":1002,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["dcdcdc",{"_index":2480,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["deal",{"_index":3316,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3358,"title":{},"body":{"license.html":{}}}],["death",{"_index":545,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["declarations",{"_index":279,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"overview.html":{}}}],["decoration",{"_index":1724,"title":{},"body":{"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{}}}],["decorator",{"_index":724,"title":{},"body":{"modules/AppStateModule.html":{},"injectables/NavigationService.html":{},"injectables/SearchService.html":{},"dependencies.html":{}}}],["decorators",{"_index":399,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"classes/IconRegistryState.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"injectables/OrganDataService.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"injectables/TissuesBrowserDataService.html":{}}}],["deep",{"_index":180,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/GenderSelectorComponent.html":{},"interfaces/LocalDatabase.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"interfaces/Patient.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["def",{"_index":1494,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["def.html",{"_index":1497,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["def.url",{"_index":1495,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["default",{"_index":372,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/BodyDataService.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/variables.html":{}}}],["defaulticondefinition",{"_index":3371,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaulticons",{"_index":1459,"title":{},"body":{"classes/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultnumcolumns",{"_index":3032,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["defaults",{"_index":1839,"title":{},"body":{"classes/NavigationState.html":{},"classes/OntologyState.html":{},"classes/SearchState.html":{}}}],["defaultto",{"_index":2570,"title":{},"body":{"injectables/SearchService.html":{}}}],["defaultto(maxage",{"_index":2583,"title":{},"body":{"injectables/SearchService.html":{}}}],["defaultto(minage",{"_index":2582,"title":{},"body":{"injectables/SearchService.html":{}}}],["defaultzoomlevel",{"_index":2887,"title":{},"body":{"components/TissueComponent.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"changelog.html":{}}}],["defines",{"_index":2573,"title":{},"body":{"injectables/SearchService.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":1465,"title":{},"body":{"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["definitions",{"_index":1426,"title":{},"body":{"interfaces/IconDefinition.html":{}}}],["delay",{"_index":1081,"title":{},"body":{"components/CalloutComponent.html":{},"injectables/LocalDatabaseService.html":{}}}],["delete",{"_index":2067,"title":{},"body":{"classes/OntologyState.html":{}}}],["demo",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/OrganComponent.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":278,"title":{"dependencies.html":{}},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["descriptions",{"_index":2585,"title":{},"body":{"injectables/SearchService.html":{}}}],["deselects",{"_index":2141,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["design",{"_index":3248,"title":{},"body":{"dependencies.html":{}}}],["desired",{"_index":3038,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["destroys",{"_index":1091,"title":{},"body":{"components/CalloutComponent.html":{},"components/TissueComponent.html":{}}}],["details",{"_index":851,"title":{},"body":{"components/BodyComponent.html":{},"components/TissueComponent.html":{},"changelog.html":{}}}],["detect",{"_index":2194,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["detector",{"_index":2121,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["detects",{"_index":1085,"title":{},"body":{"components/CalloutComponent.html":{}}}],["determine",{"_index":1466,"title":{},"body":{"classes/IconRegistryState.html":{},"components/MainComponent.html":{}}}],["determines",{"_index":380,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"classes/IconRegistryState.html":{},"injectables/NavigationService.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"miscellaneous/functions.html":{}}}],["develop",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["developed",{"_index":3299,"title":{},"body":{"index.html":{}}}],["development",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{}}}],["developmentmode",{"_index":748,"title":{},"body":{"modules/AppStateModule.html":{}}}],["developments",{"_index":3155,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{}}}],["dialogs",{"_index":1356,"title":{},"body":{"components/HeaderComponent.html":{}}}],["diego",{"_index":2512,"title":{},"body":{"components/SearchComponent.html":{}}}],["different",{"_index":892,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/OntologySearchComponent.html":{},"components/Organ3dComponent.html":{},"injectables/OrganDataService.html":{}}}],["dimensional",{"_index":2222,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["dimensions",{"_index":2898,"title":{},"body":{"components/TissueComponent.html":{}}}],["direct",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":1718,"title":{},"body":{"components/NavigationComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{}}}],["directive",{"_index":219,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["directives",{"_index":270,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["directly",{"_index":623,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"changelog.html":{}}}],["discovered",{"_index":610,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["dispatch",{"_index":1485,"title":{},"body":{"classes/IconRegistryState.html":{},"injectables/NavigationService.html":{},"components/SearchCategoriesComponent.html":{},"injectables/SearchService.html":{}}}],["dispatch(actions",{"_index":1499,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["dispatch(new",{"_index":1489,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["dispatched",{"_index":2398,"title":{},"body":{"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["dispatches",{"_index":2545,"title":{},"body":{"injectables/SearchService.html":{}}}],["dispatchs",{"_index":2550,"title":{},"body":{"injectables/SearchService.html":{}}}],["display",{"_index":213,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{}}}],["display/hide",{"_index":2790,"title":{},"body":{"components/TissueComponent.html":{}}}],["displayed",{"_index":1347,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/NavigationStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["displayformatter",{"_index":1874,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displayformatter(option",{"_index":1885,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displaying",{"_index":753,"title":{},"body":{"components/BodyComponent.html":{},"components/Organ3dComponent.html":{}}}],["displaylabel",{"_index":1996,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["displayname",{"_index":2427,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{}}}],["displayname.slice(4",{"_index":2463,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["displayname.startswith('tmc",{"_index":2462,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["displays",{"_index":1025,"title":{},"body":{"components/CalloutComponent.html":{},"components/OrganComponent.html":{}}}],["displaystate",{"_index":2774,"title":{},"body":{"components/TissueComponent.html":{}}}],["displaystate(cond",{"_index":2784,"title":{},"body":{"components/TissueComponent.html":{}}}],["distinctuntilchanged",{"_index":1785,"title":{},"body":{"injectables/NavigationService.html":{}}}],["distribute",{"_index":3323,"title":{},"body":{"license.html":{}}}],["document",{"_index":349,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["document:click",{"_index":325,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["document:click(target",{"_index":345,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["documentation",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/TissueComponent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":1112,"title":{},"body":{"components/CalloutComponent.html":{},"components/TissueComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["domsanitizer",{"_index":1442,"title":{},"body":{"classes/IconRegistryState.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["donated",{"_index":532,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["donor",{"_index":542,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["donor's",{"_index":536,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["download",{"_index":583,"title":{},"body":{"interfaces/Annotated.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{}}}],["drawer",{"_index":1095,"title":{},"body":{"components/CalloutComponent.html":{},"components/MainComponent.html":{}}}],["drawing",{"_index":1107,"title":{},"body":{"components/CalloutComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["drawn",{"_index":1054,"title":{},"body":{"components/CalloutComponent.html":{}}}],["dsiplay",{"_index":1670,"title":{},"body":{"components/MetadataComponent.html":{}}}],["during",{"_index":336,"title":{},"body":{"components/AgeSelectorComponent.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["dynamic",{"_index":3239,"title":{},"body":{"dependencies.html":{}}}],["e0e0e0",{"_index":2919,"title":{},"body":{"components/TissueComponent.html":{}}}],["each",{"_index":1236,"title":{},"body":{"classes/FilterBuilder.html":{},"components/OntologyTreeComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["efficiently",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{}}}],["element",{"_index":218,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["element's",{"_index":1130,"title":{},"body":{"components/CalloutComponent.html":{}}}],["element.getbbox",{"_index":1129,"title":{},"body":{"components/CalloutComponent.html":{}}}],["element.nativeelement.contains(target",{"_index":445,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["elementref",{"_index":330,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"components/TissueComponent.html":{}}}],["elements",{"_index":492,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"components/TissueComponent.html":{}}}],["ellen",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{}}}],["ellipsis",{"_index":2206,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["emission",{"_index":1601,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["emit",{"_index":1789,"title":{},"body":{"injectables/NavigationService.html":{},"miscellaneous/functions.html":{}}}],["emits",{"_index":927,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"injectables/OrganDataService.html":{},"injectables/SearchService.html":{},"injectables/TissueDataService.html":{},"injectables/TissuesBrowserDataService.html":{},"miscellaneous/functions.html":{}}}],["emitter",{"_index":1883,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["emitting",{"_index":883,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/NavigationService.html":{},"injectables/OrganDataService.html":{},"components/TissueComponent.html":{},"miscellaneous/functions.html":{}}}],["empty",{"_index":1602,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"injectables/OntologyService.html":{},"guards/TissueResolverService.html":{}}}],["emulated",{"_index":1615,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["emulatedhttpdelay",{"_index":1547,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["emulating",{"_index":1576,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["enable",{"_index":1889,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["encapsulates",{"_index":3065,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["encoded",{"_index":1534,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["end",{"_index":813,"title":{},"body":{"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganComponent.html":{},"components/SearchComponent.html":{}}}],["ensures",{"_index":1995,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["entry",{"_index":1891,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.displaylabel.join().includes",{"_index":1935,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.node.label.tolowercase",{"_index":1934,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entrycomponents",{"_index":1381,"title":{},"body":{"modules/HeaderModule.html":{}}}],["enum",{"_index":1256,"title":{},"body":{"classes/FilterBuilder.html":{},"components/TissueComponent.html":{},"miscellaneous/variables.html":{}}}],["enumeration",{"_index":1254,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":3264,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":730,"title":{},"body":{"modules/AppStateModule.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"classes/OntologyState.html":{},"injectables/OrganDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.ccfasseturl",{"_index":921,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["environment.localdatabaseurl",{"_index":1579,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["environment.organnodes",{"_index":2098,"title":{},"body":{"classes/OntologyState.html":{}}}],["environment.production",{"_index":749,"title":{},"body":{"modules/AppStateModule.html":{}}}],["environments/environment",{"_index":731,"title":{},"body":{"modules/AppStateModule.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"classes/OntologyState.html":{},"injectables/OrganDataService.html":{}}}],["eq",{"_index":1244,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":1257,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":1491,"title":{},"body":{"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"guards/TissueResolverService.html":{}}}],["error('icondefinition",{"_index":1473,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["error(`no",{"_index":3006,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["errors",{"_index":2980,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["etc",{"_index":530,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["eui",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"changelog.html":{},"index.html":{}}}],["event",{"_index":337,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/TissueComponent.html":{},"license.html":{}}}],["event.target",{"_index":344,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["eventemitter",{"_index":1881,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{}}}],["events",{"_index":1142,"title":{},"body":{"components/CalloutComponent.html":{}}}],["eventually",{"_index":924,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["evolve",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{}}}],["excised",{"_index":535,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["exists",{"_index":890,"title":{},"body":{"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["expand",{"_index":2131,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["expand_more",{"_index":2201,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["expandable",{"_index":1299,"title":{},"body":{"classes/FlatNode.html":{},"components/OntologyTreeComponent.html":{},"miscellaneous/variables.html":{}}}],["expandandselect",{"_index":2113,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["expandandselect(node",{"_index":2126,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["expanded",{"_index":2135,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["expanded/collapsed",{"_index":1096,"title":{},"body":{"components/CalloutComponent.html":{}}}],["expands",{"_index":2129,"title":{},"body":{"components/OntologyTreeComponent.html":{},"components/SearchComponent.html":{}}}],["expensive",{"_index":919,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["expert",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{}}}],["exploration",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"changelog.html":{},"index.html":{}}}],["explored",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{}}}],["export",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"modules/TissueModule.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{}}}],["exports",{"_index":282,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":3339,"title":{},"body":{"license.html":{}}}],["extends",{"_index":534,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"interfaces/ValueObject.html":{}}}],["external",{"_index":2836,"title":{},"body":{"components/TissueComponent.html":{}}}],["extra",{"_index":1729,"title":{},"body":{"components/NavigationComponent.html":{}}}],["extract",{"_index":577,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["extracted",{"_index":573,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["extracted/discovered",{"_index":608,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["extracting",{"_index":1515,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["f5f5f5",{"_index":2524,"title":{},"body":{"components/SearchComponent.html":{}}}],["factory",{"_index":670,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["fake",{"_index":2053,"title":{},"body":{"classes/OntologyState.html":{}}}],["false",{"_index":379,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/OrganComponent.html":{},"components/SearchComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":2788,"title":{},"body":{"components/TissueComponent.html":{}}}],["features",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["feedback",{"_index":1723,"title":{},"body":{"components/NavigationComponent.html":{}}}],["female",{"_index":547,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"components/GenderSelectorComponent.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"injectables/SearchService.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/variables.html":{}}}],["female.svg",{"_index":3382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetch",{"_index":1433,"title":{},"body":{"interfaces/IconDefinition.html":{},"components/MainComponent.html":{},"components/OrganComponent.html":{},"components/TissueComponent.html":{},"guards/TissueResolverService.html":{}}}],["fetched",{"_index":1181,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"components/SearchComponent.html":{},"guards/TissueResolverService.html":{}}}],["fetches",{"_index":2026,"title":{},"body":{"injectables/OntologyService.html":{},"guards/TissueResolverService.html":{}}}],["fetching",{"_index":2123,"title":{},"body":{"components/OntologyTreeComponent.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{}}}],["fetchtissue",{"_index":2976,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["fetchtissue(id",{"_index":2981,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["ffffff",{"_index":1954,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["field",{"_index":460,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"components/OntologySearchComponent.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["fields",{"_index":557,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"modules/TissueModule.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"coverage.html":{}}}],["files",{"_index":3315,"title":{},"body":{"license.html":{}}}],["filler",{"_index":1370,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/SearchComponent.html":{}}}],["filter",{"_index":901,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologyTreeComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"changelog.html":{}}}],["filter(([location",{"_index":2936,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["filter(builder",{"_index":1849,"title":{},"body":{"classes/NavigationState.html":{}}}],["filter(control.datanodes",{"_index":2186,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["filter(overlay",{"_index":2939,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["filter(state",{"_index":2565,"title":{},"body":{"injectables/SearchService.html":{}}}],["filter(tissues",{"_index":3004,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["filter(value",{"_index":1926,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["filter.displayname",{"_index":2471,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["filterbuilder",{"_index":938,"title":{"classes/FilterBuilder.html":{}},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"injectables/OrganDataService.html":{},"classes/SearchState.html":{},"coverage.html":{}}}],["filterbuilder(filter",{"_index":1288,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filtercategories",{"_index":2416,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{}}}],["filtercategories(above",{"_index":2445,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["filtercategory",{"_index":2434,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["filtered",{"_index":1911,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filteredresults",{"_index":1872,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filtering",{"_index":1394,"title":{},"body":{"components/HomeComponent.html":{}}}],["filterpred",{"_index":1203,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["filters",{"_index":1193,"title":{},"body":{"classes/FilterBuilder.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{}}}],["filtervalue",{"_index":2439,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["filtervalues",{"_index":2450,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["filtervalues.add(filter",{"_index":2454,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["filtervalues.delete(filter",{"_index":2456,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["filtervalues.has(filter",{"_index":2453,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["find",{"_index":2043,"title":{},"body":{"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{}}}],["find(nodemap[undefined",{"_index":2062,"title":{},"body":{"classes/OntologyState.html":{}}}],["find(overlays",{"_index":2955,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["find(snapshot.tissues",{"_index":2999,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["findmatchingoverlay",{"_index":2924,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["findmatchingoverlay(location",{"_index":2927,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["finds",{"_index":2929,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["findtissue",{"_index":2977,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["findtissue(id",{"_index":2984,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["fired",{"_index":441,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["first",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/GenderSelectorComponent.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["fit",{"_index":2479,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["fitness",{"_index":3344,"title":{},"body":{"license.html":{}}}],["fits",{"_index":3290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixes",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["fixme",{"_index":1097,"title":{},"body":{"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"injectables/OrganDataService.html":{}}}],["flag",{"_index":2810,"title":{},"body":{"components/TissueComponent.html":{}}}],["flags",{"_index":2842,"title":{},"body":{"components/TissueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["flat",{"_index":1297,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"miscellaneous/variables.html":{}}}],["flat.original",{"_index":2189,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["flatmap",{"_index":1588,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["flatnode",{"_index":1293,"title":{"classes/FlatNode.html":{}},"body":{"classes/FlatNode.html":{},"components/OntologyTreeComponent.html":{},"coverage.html":{}}}],["flatnode(original",{"_index":1318,"title":{},"body":{"classes/FlatNode.html":{}}}],["flatnode.create",{"_index":2153,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["flattener",{"_index":2110,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["flattreecontrol",{"_index":2167,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["flattreecontrol(getlevel",{"_index":2146,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["flex",{"_index":476,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["float",{"_index":202,"title":{},"body":{"components/AboutComponent.html":{},"components/MetadataComponent.html":{}}}],["floor",{"_index":388,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["florida",{"_index":540,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["flow",{"_index":1504,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/SearchCategoriesComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["fly",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":3331,"title":{},"body":{"license.html":{}}}],["font",{"_index":189,"title":{},"body":{"components/AboutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["fontcolor",{"_index":2911,"title":{},"body":{"components/TissueComponent.html":{}}}],["footer",{"_index":210,"title":{},"body":{"components/AboutComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["force",{"_index":491,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["forceposition",{"_index":1047,"title":{},"body":{"components/CalloutComponent.html":{}}}],["forces",{"_index":1058,"title":{},"body":{"components/CalloutComponent.html":{}}}],["foreach",{"_index":1589,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"classes/OntologyState.html":{}}}],["foreach(current.children",{"_index":2085,"title":{},"body":{"classes/OntologyState.html":{}}}],["foreach(db.patients",{"_index":1627,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["foreach(node.synonymlabels",{"_index":1624,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["foreach(nodemap",{"_index":2059,"title":{},"body":{"classes/OntologyState.html":{}}}],["foreach(nodes",{"_index":1620,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["foreach(organnodes",{"_index":2075,"title":{},"body":{"classes/OntologyState.html":{}}}],["form",{"_index":459,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["format",{"_index":911,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/LocalDatabaseService.html":{}}}],["formatlabel",{"_index":1974,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["formatlabel(label",{"_index":1979,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formats",{"_index":1982,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formatter",{"_index":1888,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formcontrol",{"_index":1873,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formsmodule",{"_index":1963,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["found",{"_index":1983,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"guards/TissueResolverService.html":{}}}],["foundational",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{}}}],["framework",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"changelog.html":{},"index.html":{}}}],["free",{"_index":3310,"title":{},"body":{"license.html":{}}}],["friedman",{"_index":163,"title":{},"body":{"components/AboutComponent.html":{}}}],["full",{"_index":712,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BodyRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"classes/OntologyState.html":{},"modules/OrganRoutingModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["fun",{"_index":2166,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["function",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"classes/FilterBuilder.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"components/OntologySearchComponent.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":340,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/OntologySearchComponent.html":{},"components/SearchCategoriesComponent.html":{},"injectables/SearchService.html":{}}}],["functions",{"_index":1264,"title":{"miscellaneous/functions.html":{}},"body":{"classes/FilterBuilder.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["funded",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["furnished",{"_index":3330,"title":{},"body":{"license.html":{}}}],["future",{"_index":718,"title":{},"body":{"modules/AppRoutingModule.html":{},"changelog.html":{}}}],["gender",{"_index":234,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["genderdescription",{"_index":2584,"title":{},"body":{"injectables/SearchService.html":{}}}],["gendericon",{"_index":3100,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["genderselectorcomponent",{"_index":233,"title":{"components/GenderSelectorComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["genderselectormodule",{"_index":1341,"title":{"modules/GenderSelectorModule.html":{}},"body":{"modules/GenderSelectorModule.html":{},"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["general",{"_index":1387,"title":{},"body":{"components/HomeComponent.html":{}}}],["generally",{"_index":522,"title":{},"body":{"interfaces/Annotated.html":{}}}],["generate",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["generation",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["get(event",{"_index":1936,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["getage",{"_index":3104,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["getagerangelabel",{"_index":409,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["getallfilters",{"_index":1200,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["getbbox",{"_index":3214,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getbbox(obj",{"_index":3279,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getbodyoverlays",{"_index":866,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["getbodysourcepath",{"_index":867,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["getcenter",{"_index":1038,"title":{},"body":{"components/CalloutComponent.html":{}}}],["getcenter(element",{"_index":1072,"title":{},"body":{"components/CalloutComponent.html":{}}}],["getchildren",{"_index":2021,"title":{},"body":{"injectables/OntologyService.html":{},"components/OntologyTreeComponent.html":{}}}],["getchildren(fun",{"_index":2179,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["getchildren(node",{"_index":2024,"title":{},"body":{"injectables/OntologyService.html":{}}}],["getcounts",{"_index":868,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/OrganDataService.html":{}}}],["getcounts(sample",{"_index":887,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["getcountsfor",{"_index":869,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["getcountsfor(method",{"_index":893,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/OrganDataService.html":{}}}],["getdatabase",{"_index":1582,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["getexpandable",{"_index":1311,"title":{},"body":{"classes/FlatNode.html":{}}}],["getgendericon",{"_index":3106,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["getgetchildren",{"_index":2163,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["getindexofmatch",{"_index":1975,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getindexofmatch(label",{"_index":1985,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getis3d",{"_index":2356,"title":{},"body":{"components/OrganComponent.html":{}}}],["getlabel",{"_index":1307,"title":{},"body":{"classes/FlatNode.html":{}}}],["getlevel",{"_index":2154,"title":{},"body":{"components/OntologyTreeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmetadata",{"_index":870,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/TissueDataService.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["getmetadata(organ",{"_index":908,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["getnodes",{"_index":2160,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["getorganname",{"_index":2925,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["getparent",{"_index":2127,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["getparent(current",{"_index":2184,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["getparent(node",{"_index":2182,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["getpatients",{"_index":974,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/LocalDatabaseService.html":{}}}],["getpatients(filter",{"_index":1555,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["getregistrationmethod",{"_index":1469,"title":{},"body":{"classes/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getregistrationmethod(definition",{"_index":1487,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["getregistrationmethod(undefined",{"_index":3294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":822,"title":{},"body":{"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"injectables/LocalDatabaseService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{},"injectables/TissueDataService.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["getter",{"_index":1277,"title":{},"body":{"classes/FilterBuilder.html":{},"components/OntologyTreeComponent.html":{},"miscellaneous/variables.html":{}}}],["getter(obj",{"_index":1284,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["getter/setter",{"_index":2144,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["getthumbnailurl",{"_index":3071,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["getting",{"_index":1814,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"classes/NavigationState.html":{}}}],["gettissueimages",{"_index":986,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/LocalDatabaseService.html":{}}}],["gettissueimages(filter",{"_index":1558,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["gettissueoverlays",{"_index":1549,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"injectables/TissueDataService.html":{}}}],["gettissueoverlays(filter",{"_index":1560,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["gettissuepixelspermeter",{"_index":2926,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["gettissuesamples",{"_index":978,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/LocalDatabaseService.html":{}}}],["gettissuesamples(filter",{"_index":1562,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["gettissueslices",{"_index":982,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/LocalDatabaseService.html":{}}}],["gettissueslices(filter",{"_index":1564,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["gettissuesourcepath",{"_index":2857,"title":{},"body":{"components/TissueComponent.html":{},"injectables/TissueDataService.html":{}}}],["gif",{"_index":590,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["git+https://github.com/openseadragon/svg",{"_index":3256,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{}}}],["given",{"_index":2410,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["gives",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{}}}],["gl",{"_index":661,"title":{},"body":{"modules/AppRenderInitModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"dependencies.html":{}}}],["global",{"_index":875,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/NavigationState.html":{},"injectables/OntologyService.html":{},"injectables/OrganDataService.html":{},"components/SearchComponent.html":{}}}],["global/colors",{"_index":457,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OntologyTreeComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["global/mixins",{"_index":1366,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/TissueComponent.html":{}}}],["global/sizes",{"_index":1365,"title":{},"body":{"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{}}}],["gltf",{"_index":2260,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["gltf.scene",{"_index":2324,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["gltfloader",{"_index":2295,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["gltfloader().load(source",{"_index":2321,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["glyphs",{"_index":678,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["glyphs@gh",{"_index":680,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":715,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CalloutComponent.html":{}}}],["google",{"_index":598,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["granted",{"_index":3309,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3361,"title":{},"body":{"modules.html":{}}}],["greater_than",{"_index":1261,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["greater_than_equal",{"_index":1262,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["grid",{"_index":266,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"coverage.html":{}}}],["grid's",{"_index":3096,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["grid'},{'name",{"_index":264,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["grid.component",{"_index":3094,"title":{},"body":{"modules/TissuesBrowserGridModule.html":{}}}],["grid.component.html",{"_index":3030,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["grid.component.scss",{"_index":3029,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["grid.component.ts",{"_index":3028,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{},"coverage.html":{}}}],["grid.component.ts:17",{"_index":3045,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["grid.component.ts:22",{"_index":3036,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["grid.component.ts:27",{"_index":3037,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["grid.component.ts:32",{"_index":3043,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["grid.component.ts:39",{"_index":3042,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["grid.component.ts:46",{"_index":3040,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["grid.module",{"_index":3135,"title":{},"body":{"modules/TissuesBrowserModule.html":{}}}],["grid.module.ts",{"_index":3090,"title":{},"body":{"modules/TissuesBrowserGridModule.html":{}}}],["grid.wrapper",{"_index":3057,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["grid/tissues",{"_index":3027,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserModule.html":{},"coverage.html":{}}}],["griffin",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{}}}],["group",{"_index":1330,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/OrganComponent.html":{}}}],["grow",{"_index":1371,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{}}}],["gt",{"_index":1245,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["gte",{"_index":1246,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["guard",{"_index":2972,"title":{"guards/TissueResolverService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":2973,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["hand",{"_index":2354,"title":{},"body":{"components/OrganComponent.html":{}}}],["handle",{"_index":1455,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["handler",{"_index":363,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["handling",{"_index":338,"title":{},"body":{"components/AgeSelectorComponent.html":{},"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/TissueComponent.html":{}}}],["harvard",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{}}}],["hash",{"_index":1866,"title":{},"body":{"interfaces/OntologyNode.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"miscellaneous/functions.html":{}}}],["head",{"_index":1289,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["head.filter",{"_index":1290,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["head.next",{"_index":1292,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["header",{"_index":856,"title":{},"body":{"components/BodyComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["header'},{'name",{"_index":236,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["header.component",{"_index":1384,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":1349,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1348,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.wrapper",{"_index":1367,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":235,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodule",{"_index":1375,"title":{"modules/HeaderModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["heading",{"_index":198,"title":{},"body":{"components/AboutComponent.html":{}}}],["heart",{"_index":3400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heart'].map(s",{"_index":966,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["height",{"_index":193,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["height($default",{"_index":3061,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["height($n",{"_index":3056,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["heiland",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{}}}],["help",{"_index":1944,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["here",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppStateModule.html":{},"miscellaneous/variables.html":{}}}],["hereby",{"_index":3308,"title":{},"body":{"license.html":{}}}],["herr",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{}}}],["hidden",{"_index":490,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/OntologyTreeComponent.html":{},"components/OrganComponent.html":{},"components/TissueComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["hidelimitlabels",{"_index":394,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["hidepointerlabels",{"_index":396,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["high",{"_index":378,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["highlight",{"_index":464,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["highvalue",{"_index":311,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["highvalue}${suffix",{"_index":426,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["holders",{"_index":3348,"title":{},"body":{"license.html":{}}}],["home",{"_index":694,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"guards/TissueResolverService.html":{}}}],["home'},{'name",{"_index":238,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["home.component",{"_index":1422,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["home.component.html",{"_index":1389,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1388,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.wrapper",{"_index":1407,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":1420,"title":{},"body":{"modules/HomeModule.html":{}}}],["homecomponent",{"_index":237,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":1414,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homepath",{"_index":1739,"title":{},"body":{"injectables/NavigationService.html":{}}}],["homeroutingmodule",{"_index":1418,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["hook",{"_index":359,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"classes/IconRegistryState.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"classes/OntologyState.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["hostlistener",{"_index":417,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["hostlistener('document:click",{"_index":442,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["hostlistener('document:touchstart",{"_index":443,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["hostlisteners",{"_index":324,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["hover",{"_index":1948,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["hovered",{"_index":803,"title":{},"body":{"components/BodyComponent.html":{},"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["hoverorganname",{"_index":761,"title":{},"body":{"components/BodyComponent.html":{}}}],["hovers",{"_index":799,"title":{},"body":{"components/BodyComponent.html":{}}}],["html",{"_index":217,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"miscellaneous/typealiases.html":{}}}],["htmlelement",{"_index":346,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["http",{"_index":1554,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"classes/OntologyState.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000948",{"_index":3399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002113",{"_index":3401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.geneontology.org/formats/oboinowl#hasexactsynonym",{"_index":1513,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["http://www.w3.org/2000/01/rdf",{"_index":1510,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1552,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"classes/OntologyState.html":{}}}],["httpclientmodule",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cdn.jsdelivr.net/gh/hubmapconsortium/hubmap",{"_index":3397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/gh/lukasmartinelli/osm",{"_index":674,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/gh/orangemug/font",{"_index":679,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/images",{"_index":2877,"title":{},"body":{"components/TissueComponent.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":3392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://hubmapconsortium.org",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{}}}],["https://openseadragon.github.io",{"_index":2832,"title":{},"body":{"components/TissueComponent.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1404,"title":{},"body":{"components/HomeComponent.html":{},"changelog.html":{}}}],["hubmap",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Annotated.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["hubmap_yyyy",{"_index":554,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["huge",{"_index":1726,"title":{},"body":{"components/NavigationComponent.html":{}}}],["human",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{}}}],["i.e",{"_index":1402,"title":{},"body":{"components/HomeComponent.html":{}}}],["icon",{"_index":201,"title":{},"body":{"components/AboutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["icondefinition",{"_index":1423,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iconfont",{"_index":3249,"title":{},"body":{"dependencies.html":{}}}],["iconregistry",{"_index":1483,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":732,"title":{"classes/IconRegistryState.html":{}},"body":{"modules/AppStateModule.html":{},"classes/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1436,"title":{},"body":{"classes/IconRegistryState.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":3223,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":523,"title":{},"body":{"interfaces/Annotated.html":{},"modules/AppRenderInitModule.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/Organ3dComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/SearchState.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["id).pipe",{"_index":3002,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["identifier",{"_index":525,"title":{},"body":{"interfaces/Annotated.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"injectables/NavigationService.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologyStateModel.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["identifier.pipe",{"_index":1799,"title":{},"body":{"injectables/NavigationService.html":{}}}],["identifiers",{"_index":558,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"injectables/NavigationService.html":{},"interfaces/OntologyNode.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"miscellaneous/functions.html":{}}}],["idextractor",{"_index":1516,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["idextractor(json",{"_index":1537,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idobject",{"_index":1500,"title":{"interfaces/IdObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{}}}],["idproperty",{"_index":1514,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":885,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["ihc",{"_index":578,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["ii",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{}}}],["image",{"_index":574,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/SearchState.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["imagecount",{"_index":993,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["imagecountobservable",{"_index":985,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["imagecountobservable]).pipe",{"_index":1187,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["imageheight",{"_index":2900,"title":{},"body":{"components/TissueComponent.html":{}}}],["images",{"_index":617,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["imagewidth",{"_index":2899,"title":{},"body":{"components/TissueComponent.html":{}}}],["imaging",{"_index":2500,"title":{},"body":{"components/SearchComponent.html":{}}}],["immunofluorescence",{"_index":2504,"title":{},"body":{"components/SearchComponent.html":{}}}],["immunohistochemistry",{"_index":2509,"title":{},"body":{"components/SearchComponent.html":{}}}],["implementation",{"_index":622,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["implemented",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":306,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"classes/IconRegistryState.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"classes/OntologyState.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"guards/TissueResolverService.html":{}}}],["implied",{"_index":3340,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"modules/TissueModule.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{}}}],["import('./views/body/body.module').then(m",{"_index":698,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./views/home/home.module').then(m",{"_index":696,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./views/organ/organ.module').then(m",{"_index":701,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./views/tissue/tissue.module').then(m",{"_index":708,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./views/tissues",{"_index":703,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":494,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["imports",{"_index":297,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{}}}],["ims",{"_index":580,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["inc",{"_index":166,"title":{},"body":{"components/AboutComponent.html":{}}}],["incicates",{"_index":2665,"title":{},"body":{"interfaces/SearchStateModel.html":{}}}],["include",{"_index":1368,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/TissueComponent.html":{}}}],["included",{"_index":1228,"title":{},"body":{"classes/FilterBuilder.html":{},"license.html":{}}}],["includes",{"_index":1247,"title":{},"body":{"classes/FilterBuilder.html":{},"injectables/TissueDataService.html":{},"changelog.html":{}}}],["includes(getter(obj",{"_index":1281,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["includes(locations",{"_index":2957,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["includes(values",{"_index":1283,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["including",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"changelog.html":{},"license.html":{}}}],["inclusion",{"_index":563,"title":{},"body":{"interfaces/Annotated.html":{},"classes/FilterBuilder.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["inclusive",{"_index":2551,"title":{},"body":{"injectables/SearchService.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["indent",{"_index":2111,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["indentation",{"_index":2158,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["indetifier",{"_index":882,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["indicate",{"_index":2438,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["indicates",{"_index":1313,"title":{},"body":{"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{}}}],["indicating",{"_index":2843,"title":{},"body":{"components/TissueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["individual",{"_index":1916,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{}}}],["inefficient",{"_index":1099,"title":{},"body":{"components/CalloutComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"modules/TissueModule.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{}}}],["info_outline",{"_index":1364,"title":{},"body":{"components/HeaderComponent.html":{}}}],["information",{"_index":755,"title":{},"body":{"components/BodyComponent.html":{},"components/HomeComponent.html":{},"injectables/SearchService.html":{},"components/TissueComponent.html":{}}}],["init",{"_index":1894,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["init.module",{"_index":651,"title":{},"body":{"modules/AppModule.html":{},"components/Organ3dComponent.html":{}}}],["init.module.ts",{"_index":657,"title":{},"body":{"modules/AppRenderInitModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":1080,"title":{},"body":{"components/CalloutComponent.html":{},"components/HomeComponent.html":{},"components/Organ3dComponent.html":{},"changelog.html":{}}}],["initialization",{"_index":795,"title":{},"body":{"components/BodyComponent.html":{}}}],["initialize",{"_index":2873,"title":{},"body":{"components/TissueComponent.html":{}}}],["initialized",{"_index":356,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["initializes",{"_index":1823,"title":{},"body":{"classes/NavigationState.html":{},"components/Organ3dComponent.html":{},"components/TissueComponent.html":{}}}],["initializesliderpopover",{"_index":320,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["initializeviewer",{"_index":2775,"title":{},"body":{"components/TissueComponent.html":{}}}],["initilized",{"_index":796,"title":{},"body":{"components/BodyComponent.html":{}}}],["inject",{"_index":2292,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["injectable",{"_index":857,"title":{"injectables/BodyDataService.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"injectables/OrganDataService.html":{},"injectables/SearchService.html":{},"injectables/TissueDataService.html":{},"injectables/TissuesBrowserDataService.html":{}},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"injectables/OrganDataService.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"injectables/TissuesBrowserDataService.html":{},"coverage.html":{}}}],["injectables",{"_index":858,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"injectables/OrganDataService.html":{},"injectables/SearchService.html":{},"injectables/TissueDataService.html":{},"injectables/TissuesBrowserDataService.html":{},"overview.html":{}}}],["injecting",{"_index":665,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":658,"title":{},"body":{"modules/AppRenderInitModule.html":{}}}],["injectiontoken('blank",{"_index":668,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["ink",{"_index":2482,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["input",{"_index":168,"title":{},"body":{"components/AboutComponent.html":{},"components/CalloutComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["inputs",{"_index":1044,"title":{},"body":{"components/CalloutComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["inserted",{"_index":2065,"title":{},"body":{"classes/OntologyState.html":{}}}],["inside",{"_index":469,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["instance",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["instead",{"_index":482,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/TissueComponent.html":{},"miscellaneous/typealiases.html":{}}}],["institute",{"_index":2513,"title":{},"body":{"components/SearchComponent.html":{}}}],["integrated",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":2252,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["interact",{"_index":775,"title":{},"body":{"components/BodyComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{}}}],["interacting",{"_index":2019,"title":{},"body":{"injectables/OntologyService.html":{}}}],["interest",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":111,"title":{"interfaces/Annotated.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"interfaces/IconDefinition.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/Patient.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchStateModel.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"interfaces/ValueObject.html":{}},"body":{"components/AboutComponent.html":{},"interfaces/Annotated.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"components/HomeComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologyStateModel.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchStateModel.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"interfaces/ValueObject.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":518,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"interfaces/IconDefinition.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/Patient.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchStateModel.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"interfaces/ValueObject.html":{},"overview.html":{}}}],["internal",{"_index":556,"title":{},"body":{"interfaces/Annotated.html":{},"classes/FilterBuilder.html":{},"interfaces/LocalDatabase.html":{},"components/NavigationComponent.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["internal/json",{"_index":2047,"title":{},"body":{"classes/OntologyState.html":{}}}],["intersectionby",{"_index":1248,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["intersectionby(getter(obj",{"_index":1285,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["interval",{"_index":1061,"title":{},"body":{"components/CalloutComponent.html":{}}}],["intervals",{"_index":1089,"title":{},"body":{"components/CalloutComponent.html":{}}}],["invoke",{"_index":1464,"title":{},"body":{"classes/IconRegistryState.html":{},"components/OntologyTreeComponent.html":{},"miscellaneous/functions.html":{}}}],["invoke.bind(undefined",{"_index":2155,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["is3d",{"_index":2348,"title":{},"body":{"components/OrganComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isaboutitemhovered",{"_index":1350,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iscommentitemhovered",{"_index":1692,"title":{},"body":{"components/NavigationComponent.html":{}}}],["isexpandable",{"_index":2147,"title":{},"body":{"components/OntologyTreeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ishomeactive",{"_index":1740,"title":{},"body":{"injectables/NavigationService.html":{}}}],["isinnernode",{"_index":2114,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["isinnernode(this",{"_index":2132,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["isnan(pixelspermeter",{"_index":2905,"title":{},"body":{"components/TissueComponent.html":{}}}],["isselected",{"_index":2115,"title":{},"body":{"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["isselected(category",{"_index":2420,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["isselected(node",{"_index":2137,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["issliderinitialized",{"_index":313,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["isslideropen",{"_index":314,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["isvalidsvgelement",{"_index":1039,"title":{},"body":{"components/CalloutComponent.html":{}}}],["isvalidsvgelement(element",{"_index":1075,"title":{},"body":{"components/CalloutComponent.html":{}}}],["isvisible",{"_index":2776,"title":{},"body":{"components/TissueComponent.html":{}}}],["isvisible(overlay",{"_index":2793,"title":{},"body":{"components/TissueComponent.html":{}}}],["item",{"_index":526,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"components/HeaderComponent.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{}}}],["item'},{'name",{"_index":267,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["item.component",{"_index":3083,"title":{},"body":{"modules/TissuesBrowserGridItemModule.html":{}}}],["item.component.html",{"_index":3067,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["item.component.scss",{"_index":3066,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["item.component.ts",{"_index":3064,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:20",{"_index":3070,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["item.component.ts:25",{"_index":3072,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["item.component.ts:27",{"_index":3068,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["item.key",{"_index":1676,"title":{},"body":{"components/MetadataComponent.html":{}}}],["item.module",{"_index":3091,"title":{},"body":{"modules/TissuesBrowserGridModule.html":{}}}],["item.module.ts",{"_index":3082,"title":{},"body":{"modules/TissuesBrowserGridItemModule.html":{}}}],["item.value",{"_index":1677,"title":{},"body":{"components/MetadataComponent.html":{}}}],["item.wrapper",{"_index":3076,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["item/tissues",{"_index":3063,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"coverage.html":{}}}],["item[0",{"_index":3117,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["item[1",{"_index":3118,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["items",{"_index":479,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"components/HeaderComponent.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["items.filter(filter",{"_index":1614,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["items.length",{"_index":1009,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["iteratee",{"_index":1232,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["iteratee).length",{"_index":1286,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["iu",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":2571,"title":{},"body":{"injectables/SearchService.html":{}}}],["join(descriptions",{"_index":2586,"title":{},"body":{"injectables/SearchService.html":{}}}],["jpg",{"_index":589,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["js",{"_index":1586,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"dependencies.html":{}}}],["json",{"_index":923,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"classes/OntologyState.html":{},"injectables/OrganDataService.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["jsonontology",{"_index":2089,"title":{},"body":{"classes/OntologyState.html":{}}}],["jsonontology.pipe",{"_index":2091,"title":{},"body":{"classes/OntologyState.html":{}}}],["jsonontologynode",{"_index":1509,"title":{"interfaces/JsonOntologyNode.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"classes/OntologyState.html":{},"interfaces/ValueObject.html":{},"coverage.html":{}}}],["jsontoontologynode",{"_index":2046,"title":{},"body":{"classes/OntologyState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jsontoontologynode(json",{"_index":1536,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["jump",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{}}}],["justify",{"_index":477,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{}}}],["katy",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{}}}],["keep",{"_index":473,"title":{},"body":{"components/AgeSelectorComponent.html":{},"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["keeps",{"_index":819,"title":{},"body":{"components/BodyComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["key",{"_index":2361,"title":{},"body":{"components/OrganComponent.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["keyby",{"_index":2044,"title":{},"body":{"classes/OntologyState.html":{}}}],["keyby(nodes",{"_index":2094,"title":{},"body":{"classes/OntologyState.html":{}}}],["keyof",{"_index":999,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["keys",{"_index":2444,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["kidney",{"_index":3402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":3338,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{}}}],["l",{"_index":1137,"title":{},"body":{"components/CalloutComponent.html":{}}}],["label",{"_index":501,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["label.length",{"_index":2017,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(0",{"_index":2014,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(index",{"_index":2015,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().includes(searchvalue",{"_index":2010,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().indexof(searchvalue",{"_index":2012,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["labelextractor",{"_index":1526,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["labelextractor(json",{"_index":1539,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelproperty",{"_index":1525,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":550,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["labs/dispatch",{"_index":723,"title":{},"body":{"modules/AppStateModule.html":{},"injectables/NavigationService.html":{},"injectables/SearchService.html":{},"dependencies.html":{}}}],["last",{"_index":1339,"title":{},"body":{"components/GenderSelectorComponent.html":{},"injectables/LocalDatabaseService.html":{}}}],["later",{"_index":2057,"title":{},"body":{"classes/OntologyState.html":{},"components/TissueComponent.html":{}}}],["latest",{"_index":3297,"title":{},"body":{"index.html":{}}}],["layer",{"_index":2227,"title":{},"body":{"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["layer.ts",{"_index":2683,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"coverage.html":{}}}],["layer.ts:19",{"_index":2698,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:21",{"_index":2709,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:23",{"_index":2703,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:25",{"_index":2699,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:28",{"_index":2705,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:30",{"_index":2697,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:32",{"_index":2710,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:34",{"_index":2702,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:36",{"_index":2696,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:53",{"_index":2715,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:77",{"_index":2719,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layer.ts:88",{"_index":2724,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["layers",{"_index":682,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["layers/scenes",{"_index":2270,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["left",{"_index":471,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["leftbar",{"_index":1699,"title":{},"body":{"components/NavigationComponent.html":{}}}],["legend",{"_index":216,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"modules/BodyModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"modules/OrganModule.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/TissueComponent.html":{},"modules/TissueModule.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"overview.html":{}}}],["less_than",{"_index":1259,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["less_than_equal",{"_index":1260,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["level",{"_index":742,"title":{},"body":{"modules/AppStateModule.html":{},"classes/FlatNode.html":{},"components/HomeComponent.html":{},"components/OntologyTreeComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["levels",{"_index":1401,"title":{},"body":{"components/HomeComponent.html":{},"changelog.html":{}}}],["lexically",{"_index":1908,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["liability",{"_index":3352,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3349,"title":{},"body":{"license.html":{}}}],["liberty",{"_index":677,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["liberty@gh",{"_index":675,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["libraries/openseadragon",{"_index":2837,"title":{},"body":{"components/TissueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["license",{"_index":3302,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":790,"title":{},"body":{"components/BodyComponent.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["light",{"_index":2250,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["lightcolor",{"_index":2238,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["lightgray",{"_index":2478,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["lightintensity",{"_index":2239,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["limit",{"_index":2556,"title":{},"body":{"injectables/SearchService.html":{}}}],["limitation",{"_index":3318,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3341,"title":{},"body":{"license.html":{}}}],["line",{"_index":192,"title":{},"body":{"components/AboutComponent.html":{},"components/CalloutComponent.html":{},"components/MainComponent.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["linepath",{"_index":1032,"title":{},"body":{"components/CalloutComponent.html":{}}}],["link",{"_index":1403,"title":{},"body":{"components/HomeComponent.html":{}}}],["linkchildren",{"_index":2066,"title":{},"body":{"classes/OntologyState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["linkchildren(nodemap",{"_index":2051,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["links",{"_index":2048,"title":{},"body":{"classes/OntologyState.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":1410,"title":{},"body":{"components/HomeComponent.html":{},"components/MetadataComponent.html":{},"interfaces/SearchStateModel.html":{}}}],["listener",{"_index":1770,"title":{},"body":{"injectables/NavigationService.html":{}}}],["listening",{"_index":2844,"title":{},"body":{"components/TissueComponent.html":{}}}],["listens",{"_index":348,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["literal",{"_index":527,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"components/MetadataComponent.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyStateModel.html":{},"components/Organ3dComponent.html":{},"interfaces/TissueImage.html":{},"miscellaneous/functions.html":{}}}],["lnglatlike",{"_index":2729,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["loadbase",{"_index":2232,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["loadchildren",{"_index":695,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":2265,"title":{},"body":{"components/Organ3dComponent.html":{},"components/TissueComponent.html":{},"miscellaneous/variables.html":{}}}],["loadgltf",{"_index":2233,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["loadgltf(source",{"_index":2262,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["loads",{"_index":2259,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["local",{"_index":612,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["localdatabase",{"_index":624,"title":{"interfaces/LocalDatabase.html":{}},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"coverage.html":{}}}],["localdatabaseservice",{"_index":872,"title":{"injectables/LocalDatabaseService.html":{}},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"coverage.html":{}}}],["localdatabaseurl",{"_index":1548,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"miscellaneous/variables.html":{}}}],["located",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{}}}],["location",{"_index":606,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["location(state",{"_index":2604,"title":{},"body":{"classes/SearchState.html":{}}}],["location.id",{"_index":2639,"title":{},"body":{"classes/SearchState.html":{}}}],["locations",{"_index":549,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"injectables/NavigationService.html":{},"interfaces/Patient.html":{},"injectables/SearchService.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["lodash",{"_index":824,"title":{},"body":{"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"injectables/OrganDataService.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"interfaces/ValueObject.html":{},"dependencies.html":{}}}],["lofilter",{"_index":1458,"title":{},"body":{"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{}}}],["lofilter([namespace",{"_index":1482,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["lofilter(at(namestonode",{"_index":1629,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["log",{"_index":3009,"title":{},"body":{"guards/TissueResolverService.html":{},"index.html":{}}}],["loget",{"_index":3110,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["loget(this.item",{"_index":3114,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["logic",{"_index":912,"title":{},"body":{"injectables/BodyDataService.html":{},"classes/OntologyState.html":{}}}],["logo",{"_index":211,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["logo.svg",{"_index":3389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lomap",{"_index":932,"title":{},"body":{"injectables/BodyDataService.html":{},"classes/IconRegistryState.html":{},"classes/OntologyState.html":{},"injectables/TissueDataService.html":{}}}],["lomap(defaulticons",{"_index":1493,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["lomap(ontology",{"_index":2093,"title":{},"body":{"classes/OntologyState.html":{}}}],["lomap(overlay.anatomicallocations",{"_index":2956,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["lomap(patients",{"_index":964,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["long",{"_index":3292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["looks",{"_index":1989,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup",{"_index":1976,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["lookup(nodes",{"_index":1987,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lotopairs",{"_index":3112,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["lotopairs(loget(this.item",{"_index":3115,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["low",{"_index":387,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["lower",{"_index":1909,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{}}}],["lower/upper",{"_index":2666,"title":{},"body":{"interfaces/SearchStateModel.html":{}}}],["lowvalue",{"_index":315,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["lowvalue}${suffix",{"_index":425,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["lt",{"_index":1249,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["lte",{"_index":1250,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":1136,"title":{},"body":{"components/CalloutComponent.html":{}}}],["m.bodymodule",{"_index":699,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homemodule",{"_index":697,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.organmodule",{"_index":702,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.tissuemodule",{"_index":709,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.tissuesbrowsermodule",{"_index":706,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ma",{"_index":161,"title":{},"body":{"components/AboutComponent.html":{}}}],["macklin",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{}}}],["main",{"_index":1637,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'name",{"_index":240,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["main.component",{"_index":1668,"title":{},"body":{"modules/MainModule.html":{}}}],["main.component.html",{"_index":1640,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":1639,"title":{},"body":{"components/MainComponent.html":{}}}],["main.wrapper",{"_index":1648,"title":{},"body":{"components/MainComponent.html":{}}}],["maincomponent",{"_index":239,"title":{"components/MainComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainmodule",{"_index":641,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["maintained",{"_index":2447,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["make",{"_index":1727,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/OntologyService.html":{}}}],["male",{"_index":546,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"components/GenderSelectorComponent.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"injectables/SearchService.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/variables.html":{}}}],["male/female/both",{"_index":754,"title":{},"body":{"components/BodyComponent.html":{}}}],["male/female/undefined",{"_index":3108,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["managing",{"_index":1737,"title":{},"body":{"injectables/NavigationService.html":{}}}],["many",{"_index":1222,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["map",{"_index":931,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/OntologyState.html":{},"components/Organ3dComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"interfaces/ValueObject.html":{}}}],["map(([db",{"_index":1604,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["map(([location",{"_index":2937,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["map(([patientcount",{"_index":990,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["map(([slicecount",{"_index":1188,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["map(([tissue",{"_index":3007,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["map(builder",{"_index":958,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{}}}],["map(createmodel",{"_index":2096,"title":{},"body":{"classes/OntologyState.html":{}}}],["map(createsearchcriteriadescription",{"_index":2566,"title":{},"body":{"injectables/SearchService.html":{}}}],["map(gender",{"_index":953,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["map(id",{"_index":955,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/NavigationService.html":{},"injectables/OrganDataService.html":{}}}],["map(items",{"_index":1008,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["map(nodes",{"_index":1998,"title":{},"body":{"injectables/OntologySearchService.html":{},"classes/OntologyState.html":{},"interfaces/SearchResult.html":{}}}],["map(ontology",{"_index":2092,"title":{},"body":{"classes/OntologyState.html":{}}}],["map(partial(prunemodel",{"_index":2097,"title":{},"body":{"classes/OntologyState.html":{}}}],["map(patients",{"_index":963,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["map(results",{"_index":1598,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["map(searchresults",{"_index":1930,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["map.getcanvas",{"_index":2735,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["map.getcenter",{"_index":2740,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["mapbox",{"_index":660,"title":{},"body":{"modules/AppRenderInitModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mapping",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"injectables/OrganDataService.html":{},"components/TissueComponent.html":{},"miscellaneous/variables.html":{}}}],["maps",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["march",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{}}}],["margin",{"_index":195,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["marked",{"_index":520,"title":{},"body":{"interfaces/Annotated.html":{}}}],["mass",{"_index":2501,"title":{},"body":{"components/SearchComponent.html":{}}}],["mat",{"_index":181,"title":{},"body":{"components/AboutComponent.html":{},"components/GenderSelectorComponent.html":{},"classes/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["matautocompletemodule",{"_index":1965,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matautocompleteselectedevent",{"_index":1898,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["matbuttonmodule",{"_index":509,"title":{},"body":{"modules/AgeSelectorModule.html":{},"modules/OntologyTreeModule.html":{}}}],["matbuttontogglemodule",{"_index":1345,"title":{},"body":{"modules/GenderSelectorModule.html":{},"modules/TissueModule.html":{}}}],["match",{"_index":905,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"injectables/OntologySearchService.html":{},"injectables/OrganDataService.html":{},"interfaces/SearchResult.html":{},"injectables/TissueDataService.html":{}}}],["matched",{"_index":1224,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["matches",{"_index":1221,"title":{},"body":{"classes/FilterBuilder.html":{},"injectables/TissueDataService.html":{}}}],["matchesproperty",{"_index":1251,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["matching",{"_index":273,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"modules/TissueModule.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":2489,"title":{},"body":{"modules/SearchCategoriesModule.html":{}}}],["matdialog",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{}}}],["matdialogmodule",{"_index":293,"title":{},"body":{"modules/AboutModule.html":{},"modules/HeaderModule.html":{}}}],["material",{"_index":1445,"title":{},"body":{"classes/IconRegistryState.html":{},"dependencies.html":{}}}],["matexpansionmodule",{"_index":2969,"title":{},"body":{"modules/TissueModule.html":{}}}],["matformfieldmodule",{"_index":511,"title":{},"body":{"modules/AgeSelectorModule.html":{}}}],["math.round(math.random",{"_index":1616,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["maticonmodule",{"_index":294,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/MainModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{}}}],["maticonregistry",{"_index":1440,"title":{},"body":{"classes/IconRegistryState.html":{},"miscellaneous/functions.html":{}}}],["matinputmodule",{"_index":1966,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matrix",{"_index":2708,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["matrix4",{"_index":2706,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["matrix4().fromarray(matrixelements",{"_index":2751,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["matrix4().maketranslation(x",{"_index":2746,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["matrixelements",{"_index":2723,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["matselectmodule",{"_index":513,"title":{},"body":{"modules/AgeSelectorModule.html":{}}}],["matsidenavmodule",{"_index":1663,"title":{},"body":{"modules/MainModule.html":{}}}],["mattabsmodule",{"_index":2491,"title":{},"body":{"modules/SearchCategoriesModule.html":{}}}],["mattooltipmodule",{"_index":2216,"title":{},"body":{"modules/OntologyTreeModule.html":{},"modules/SearchCategoriesModule.html":{}}}],["mattreeflatdatasource",{"_index":2170,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["mattreeflatdatasource(this.control",{"_index":2149,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["mattreeflattener",{"_index":2152,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["mattreemodule",{"_index":2218,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["max",{"_index":450,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/LocalDatabaseService.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"components/TissuesBrowserGridComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":2580,"title":{},"body":{"injectables/SearchService.html":{}}}],["maximum",{"_index":2672,"title":{},"body":{"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["mc",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["medical",{"_index":158,"title":{},"body":{"components/AboutComponent.html":{}}}],["memory",{"_index":1545,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"guards/TissueResolverService.html":{}}}],["mercatorcoordinate",{"_index":2728,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["mercatorcoordinate.fromlnglat(position",{"_index":2742,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["merchantability",{"_index":3343,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3321,"title":{},"body":{"license.html":{}}}],["meta",{"_index":945,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetaData.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{}}}],["metadata'},{'name",{"_index":242,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["metadata.component",{"_index":1685,"title":{},"body":{"modules/MetadataModule.html":{}}}],["metadata.component.html",{"_index":1674,"title":{},"body":{"components/MetadataComponent.html":{}}}],["metadata.component.scss",{"_index":1673,"title":{},"body":{"components/MetadataComponent.html":{}}}],["metadata.wrapper",{"_index":1678,"title":{},"body":{"components/MetadataComponent.html":{}}}],["metadata[0",{"_index":3116,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["metadatacomponent",{"_index":241,"title":{"components/MetadataComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metadatamodule",{"_index":1017,"title":{"modules/MetadataModule.html":{}},"body":{"modules/BodyModule.html":{},"modules/MetadataModule.html":{},"modules/OrganModule.html":{},"modules/TissueModule.html":{},"modules.html":{},"overview.html":{}}}],["metadatasubscription",{"_index":762,"title":{},"body":{"components/BodyComponent.html":{}}}],["meter",{"_index":601,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["method",{"_index":899,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/IconRegistryState.html":{},"injectables/OntologyService.html":{},"components/OntologyTreeComponent.html":{},"injectables/OrganDataService.html":{},"miscellaneous/functions.html":{}}}],["method(getter(obj",{"_index":1280,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["methodname",{"_index":1470,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/ThreeJsLayer.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["mgl",{"_index":2335,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["mid",{"_index":1126,"title":{},"body":{"components/CalloutComponent.html":{}}}],["middle",{"_index":3277,"title":{},"body":{"miscellaneous/functions.html":{}}}],["min",{"_index":449,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"components/TissuesBrowserGridComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/variables.html":{}}}],["minage",{"_index":2579,"title":{},"body":{"injectables/SearchService.html":{}}}],["minimum",{"_index":2671,"title":{},"body":{"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["minor",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["minwidth",{"_index":2907,"title":{},"body":{"components/TissueComponent.html":{}}}],["miscellaneous",{"_index":3263,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3303,"title":{},"body":{"license.html":{}}}],["mock",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/HeaderComponent.html":{}}}],["model",{"_index":1862,"title":{},"body":{"interfaces/NavigationStateModel.html":{},"classes/OntologyState.html":{},"components/Organ3dComponent.html":{},"interfaces/SearchStateModel.html":{},"miscellaneous/functions.html":{}}}],["model.subscribe(ontology",{"_index":2099,"title":{},"body":{"classes/OntologyState.html":{}}}],["modify",{"_index":3320,"title":{},"body":{"license.html":{}}}],["module",{"_index":275,"title":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{}},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"overview.html":{}}}],["modules",{"_index":277,"title":{"modules.html":{}},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["molecular",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["more",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"changelog.html":{}}}],["mount",{"_index":2914,"title":{},"body":{"components/TissueComponent.html":{}}}],["mounted",{"_index":2835,"title":{},"body":{"components/TissueComponent.html":{}}}],["mouse",{"_index":786,"title":{},"body":{"components/BodyComponent.html":{}}}],["mouseenter",{"_index":802,"title":{},"body":{"components/BodyComponent.html":{}}}],["mouseleave",{"_index":788,"title":{},"body":{"components/BodyComponent.html":{}}}],["moved",{"_index":2818,"title":{},"body":{"components/TissueComponent.html":{},"changelog.html":{}}}],["moves",{"_index":787,"title":{},"body":{"components/BodyComponent.html":{}}}],["multiple",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["multiplex",{"_index":2503,"title":{},"body":{"components/SearchComponent.html":{}}}],["multiply(this.transformmatrix",{"_index":2752,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["mxif",{"_index":581,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["n",{"_index":3055,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["nagivation",{"_index":1771,"title":{},"body":{"injectables/NavigationService.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"modules/AppRenderInitModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2589,"title":{},"body":{"injectables/SearchService.html":{}}}],["namespace",{"_index":1428,"title":{},"body":{"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["namestonode",{"_index":1619,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["namestonode[last(split(node.id",{"_index":1621,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["namestonode[node.label",{"_index":1623,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["namestonode[syn",{"_index":1626,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["navigate",{"_index":1759,"title":{},"body":{"injectables/NavigationService.html":{},"guards/TissueResolverService.html":{}}}],["navigate(['/home",{"_index":1801,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigate(['/tissues",{"_index":1802,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigatetohome",{"_index":1746,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigatetotissuebrowser",{"_index":1747,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigating",{"_index":1689,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/BodyComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridItemComponent.html":{},"changelog.html":{}}}],["navigation'},{'name",{"_index":244,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["navigation.component",{"_index":1735,"title":{},"body":{"modules/NavigationModule.html":{}}}],["navigation.component.html",{"_index":1691,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1690,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.model",{"_index":1838,"title":{},"body":{"classes/NavigationState.html":{}}}],["navigation.wrapper",{"_index":1717,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":243,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationmodule",{"_index":1660,"title":{"modules/NavigationModule.html":{}},"body":{"modules/MainModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["navigations",{"_index":1805,"title":{},"body":{"classes/NavigationState.html":{}}}],["navigationservice",{"_index":772,"title":{"injectables/NavigationService.html":{}},"body":{"components/BodyComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/SearchComponent.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridItemComponent.html":{},"coverage.html":{}}}],["navigationstate",{"_index":736,"title":{"classes/NavigationState.html":{}},"body":{"modules/AppStateModule.html":{},"interfaces/CountMetadata.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"injectables/TissuesBrowserDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigationstatemodel",{"_index":1786,"title":{"interfaces/NavigationStateModel.html":{}},"body":{"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"guards/TissueResolverService.html":{},"coverage.html":{}}}],["navigator",{"_index":771,"title":{},"body":{"components/BodyComponent.html":{},"components/NavigationComponent.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["navigatorheight",{"_index":2883,"title":{},"body":{"components/TissueComponent.html":{}}}],["navigatorleft",{"_index":2882,"title":{},"body":{"components/TissueComponent.html":{}}}],["navigatorposition",{"_index":2879,"title":{},"body":{"components/TissueComponent.html":{}}}],["navigatortop",{"_index":2880,"title":{},"body":{"components/TissueComponent.html":{}}}],["navigatorwidth",{"_index":2885,"title":{},"body":{"components/TissueComponent.html":{}}}],["need",{"_index":780,"title":{},"body":{"components/BodyComponent.html":{},"classes/OntologyState.html":{}}}],["needed",{"_index":1105,"title":{},"body":{"components/CalloutComponent.html":{}}}],["needs",{"_index":913,"title":{},"body":{"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"components/SearchComponent.html":{}}}],["negate",{"_index":1252,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["negate(eq",{"_index":1268,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["nested",{"_index":468,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["network",{"_index":1577,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"index.html":{}}}],["new",{"_index":366,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AppRenderInitModule.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"classes/IconRegistryState.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"guards/TissueResolverService.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":1306,"title":{},"body":{"classes/FlatNode.html":{}}}],["next",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"classes/FilterBuilder.html":{},"changelog.html":{}}}],["ng",{"_index":179,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["ng5",{"_index":419,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"dependencies.html":{}}}],["ng5slidermodule",{"_index":515,"title":{},"body":{"modules/AgeSelectorModule.html":{}}}],["ngafterviewinit",{"_index":1040,"title":{},"body":{"components/CalloutComponent.html":{},"components/TissueComponent.html":{}}}],["ngmodule",{"_index":292,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{}}}],["ngonchanges",{"_index":1041,"title":{},"body":{"components/CalloutComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["ngonchanges(changes",{"_index":1082,"title":{},"body":{"components/CalloutComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["ngondestroy",{"_index":321,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"classes/NavigationState.html":{},"components/TissueComponent.html":{}}}],["ngoninit",{"_index":765,"title":{},"body":{"components/BodyComponent.html":{},"components/OntologySearchComponent.html":{}}}],["ngx",{"_index":663,"title":{},"body":{"modules/AppRenderInitModule.html":{},"modules/OntologySearchModule.html":{},"modules/Organ3dModule.html":{},"modules/TissuesBrowserGridModule.html":{},"dependencies.html":{}}}],["ngxmapboxglmodule",{"_index":662,"title":{},"body":{"modules/AppRenderInitModule.html":{},"modules/Organ3dModule.html":{}}}],["ngxs",{"_index":722,"title":{},"body":{"modules/AppStateModule.html":{},"classes/IconRegistryState.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"classes/OntologyState.html":{},"injectables/SearchService.html":{},"dependencies.html":{}}}],["ngxs/router",{"_index":726,"title":{},"body":{"modules/AppStateModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":729,"title":{},"body":{"modules/AppStateModule.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"injectables/OrganDataService.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"injectables/TissuesBrowserDataService.html":{},"dependencies.html":{}}}],["ngxsdispatchpluginmodule",{"_index":721,"title":{},"body":{"modules/AppStateModule.html":{}}}],["ngxsdispatchpluginmodule.forroot",{"_index":751,"title":{},"body":{"modules/AppStateModule.html":{}}}],["ngxsmodule",{"_index":728,"title":{},"body":{"modules/AppStateModule.html":{}}}],["ngxsmodule.forroot(rootstates",{"_index":747,"title":{},"body":{"modules/AppStateModule.html":{}}}],["ngxsoninit",{"_index":1437,"title":{},"body":{"classes/IconRegistryState.html":{},"classes/NavigationState.html":{},"classes/OntologyState.html":{}}}],["ngxsoninit(ctx",{"_index":1821,"title":{},"body":{"classes/NavigationState.html":{},"classes/OntologyState.html":{}}}],["ngxsoninit(undefined",{"_index":1448,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["ngxsrouterpluginmodule",{"_index":725,"title":{},"body":{"modules/AppStateModule.html":{}}}],["ngxsrouterpluginmodule.forroot",{"_index":750,"title":{},"body":{"modules/AppStateModule.html":{}}}],["nih",{"_index":176,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["node",{"_index":1298,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"classes/SearchState.html":{},"injectables/TissueDataService.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["node's",{"_index":1310,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.children",{"_index":2034,"title":{},"body":{"injectables/OntologyService.html":{}}}],["node.expandable",{"_index":2196,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["node.id",{"_index":1622,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["node.label",{"_index":2199,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["node.label.tolowercase().includes(searchvalue",{"_index":2004,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.parent",{"_index":2076,"title":{},"body":{"classes/OntologyState.html":{}}}],["node.synonymlabels.find((label",{"_index":2009,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.ts",{"_index":1296,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["node.ts:10",{"_index":1308,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:15",{"_index":1312,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:24",{"_index":1305,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:26",{"_index":1302,"title":{},"body":{"classes/FlatNode.html":{}}}],["nodemap",{"_index":2050,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["nodemap[parent].children.push(id",{"_index":2060,"title":{},"body":{"classes/OntologyState.html":{}}}],["nodemap[undefined",{"_index":2058,"title":{},"body":{"classes/OntologyState.html":{}}}],["nodes",{"_index":559,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"injectables/TissuesBrowserDataService.html":{},"miscellaneous/functions.html":{}}}],["nodes(nodes",{"_index":2175,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["nodes(state",{"_index":2038,"title":{},"body":{"classes/OntologyState.html":{}}}],["nodes.foreach((node",{"_index":2002,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes[current.parent",{"_index":1635,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["nodes[id",{"_index":1633,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"classes/OntologyState.html":{}}}],["nodes[node.parent",{"_index":2522,"title":{},"body":{"components/SearchComponent.html":{}}}],["nodeselected",{"_index":2116,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["none",{"_index":500,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["noninfringement",{"_index":3346,"title":{},"body":{"license.html":{}}}],["norm",{"_index":619,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["normal",{"_index":2204,"title":{},"body":{"components/OntologyTreeComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["not_equal",{"_index":1258,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["note",{"_index":467,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"classes/FilterBuilder.html":{},"interfaces/LocalDatabase.html":{},"injectables/OntologyService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["notice",{"_index":3333,"title":{},"body":{"license.html":{}}}],["now",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":2208,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["num",{"_index":3047,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["number",{"_index":371,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FlatNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["numcolumns",{"_index":3035,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["obervable",{"_index":817,"title":{},"body":{"components/BodyComponent.html":{}}}],["obj",{"_index":1003,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"injectables/OrganDataService.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":898,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FlatNode.html":{},"classes/IconRegistryState.html":{},"classes/NavigationState.html":{},"classes/OntologyState.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":891,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"components/MetadataComponent.html":{},"components/OntologyTreeComponent.html":{},"injectables/OrganDataService.html":{},"classes/SearchState.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":792,"title":{},"body":{"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"injectables/OrganDataService.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"injectables/TissuesBrowserDataService.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":1164,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["obtaining",{"_index":3312,"title":{},"body":{"license.html":{}}}],["occured",{"_index":2402,"title":{},"body":{"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["occurs",{"_index":353,"title":{},"body":{"components/AgeSelectorComponent.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"guards/TissueResolverService.html":{}}}],["of(['kidney",{"_index":965,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["onadd",{"_index":2692,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["onadd(map",{"_index":2713,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["onchange",{"_index":2267,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["onchanges",{"_index":1029,"title":{},"body":{"components/CalloutComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["ondestroy",{"_index":307,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"classes/NavigationState.html":{},"components/TissueComponent.html":{}}}],["one",{"_index":814,"title":{},"body":{"components/BodyComponent.html":{},"classes/FilterBuilder.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["oninit",{"_index":756,"title":{},"body":{"components/BodyComponent.html":{},"classes/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"classes/OntologyState.html":{}}}],["onmapload",{"_index":2234,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["onmapload(map",{"_index":2268,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["onotological",{"_index":2673,"title":{},"body":{"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["onremove",{"_index":2693,"title":{},"body":{"classes/ThreeJsLayer.html":{}}}],["onremove(_map",{"_index":2717,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["onselect",{"_index":1875,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onselect(event",{"_index":1897,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onto",{"_index":2726,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["ontological",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"classes/SearchState.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"interfaces/ValueObject.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["ontology.model",{"_index":1506,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"classes/OntologyState.html":{},"interfaces/ValueObject.html":{}}}],["ontology.ts",{"_index":1502,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ontology/ontologies/partonomy/reifications/partonomy.jsonld",{"_index":3398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ontology/ontology.model",{"_index":2631,"title":{},"body":{"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["ontologynode",{"_index":1301,"title":{"interfaces/OntologyNode.html":{}},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"injectables/TissueDataService.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ontologynodeids",{"_index":565,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["ontologysearchcomponent",{"_index":245,"title":{"components/OntologySearchComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologysearchmodule",{"_index":1958,"title":{"modules/OntologySearchModule.html":{}},"body":{"modules/OntologySearchModule.html":{},"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologysearchservice",{"_index":1879,"title":{"injectables/OntologySearchService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["ontologyservice",{"_index":1896,"title":{"injectables/OntologyService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologyService.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["ontologystate",{"_index":738,"title":{"classes/OntologyState.html":{}},"body":{"modules/AppStateModule.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontologystatemodel",{"_index":1569,"title":{"interfaces/OntologyStateModel.html":{}},"body":{"injectables/LocalDatabaseService.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ontologytreecomponent",{"_index":247,"title":{"components/OntologyTreeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologytreemodule",{"_index":2211,"title":{"modules/OntologyTreeModule.html":{}},"body":{"modules/OntologyTreeModule.html":{},"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyurl",{"_index":3396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opacity",{"_index":1335,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/OntologySearchComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"miscellaneous/functions.html":{}}}],["open",{"_index":1355,"title":{},"body":{"components/HeaderComponent.html":{},"components/TissueComponent.html":{}}}],["openaboutdialog",{"_index":1351,"title":{},"body":{"components/HeaderComponent.html":{}}}],["openapi",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["opening",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{}}}],["opens",{"_index":1358,"title":{},"body":{"components/HeaderComponent.html":{}}}],["openseadragon",{"_index":2803,"title":{},"body":{"components/TissueComponent.html":{},"dependencies.html":{}}}],["operation",{"_index":1215,"title":{},"body":{"classes/FilterBuilder.html":{},"components/SearchCategoriesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operations",{"_index":920,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["option",{"_index":1890,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel.join",{"_index":1940,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[0",{"_index":1941,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[1",{"_index":1942,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[2",{"_index":1943,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.value.node",{"_index":1937,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1557,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["options",{"_index":316,"title":{},"body":{"components/AgeSelectorComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"miscellaneous/functions.html":{}}}],["options.ceil",{"_index":456,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["options.floor",{"_index":455,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["options.id",{"_index":2732,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["opto",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{}}}],["order",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organ",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"components/HomeComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organ's",{"_index":1170,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["organ'},{'name",{"_index":252,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["organ.component",{"_index":2391,"title":{},"body":{"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{}}}],["organ.component.html",{"_index":2344,"title":{},"body":{"components/OrganComponent.html":{}}}],["organ.component.scss",{"_index":2343,"title":{},"body":{"components/OrganComponent.html":{}}}],["organ.wrapper",{"_index":2371,"title":{},"body":{"components/OrganComponent.html":{}}}],["organ/:organid",{"_index":700,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["organ3d",{"_index":2223,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["organ3d'},{'name",{"_index":250,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["organ3d.component.html",{"_index":2225,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["organ3d.component.scss",{"_index":2224,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["organ3d/organ3d.component",{"_index":2341,"title":{},"body":{"modules/Organ3dModule.html":{}}}],["organ3dcomponent",{"_index":249,"title":{"components/Organ3dComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organ3dmodule",{"_index":2336,"title":{"modules/Organ3dModule.html":{}},"body":{"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules.html":{},"overview.html":{}}}],["organcomponent",{"_index":251,"title":{"components/OrganComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organdataservice",{"_index":1160,"title":{"injectables/OrganDataService.html":{}},"body":{"interfaces/CountMetadata.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"coverage.html":{},"overview.html":{}}}],["organhover",{"_index":766,"title":{},"body":{"components/BodyComponent.html":{}}}],["organhover(organ",{"_index":797,"title":{},"body":{"components/BodyComponent.html":{}}}],["organid",{"_index":1750,"title":{},"body":{"injectables/NavigationService.html":{},"classes/NavigationState.html":{}}}],["organids",{"_index":2069,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["organimagepath",{"_index":1171,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["organization",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["organmodule",{"_index":2381,"title":{"modules/OrganModule.html":{}},"body":{"modules/OrganModule.html":{},"modules.html":{},"overview.html":{}}}],["organname",{"_index":2762,"title":{},"body":{"components/TissueComponent.html":{}}}],["organnodes",{"_index":2071,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/variables.html":{}}}],["organoverlays",{"_index":1175,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["organpath",{"_index":1741,"title":{},"body":{"injectables/NavigationService.html":{}}}],["organroutingmodule",{"_index":2386,"title":{"modules/OrganRoutingModule.html":{}},"body":{"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["organs",{"_index":801,"title":{},"body":{"components/BodyComponent.html":{},"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":1303,"title":{},"body":{"classes/FlatNode.html":{},"classes/OntologyState.html":{},"components/TissueComponent.html":{},"miscellaneous/functions.html":{}}}],["originx",{"_index":428,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["originy",{"_index":430,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["ot2od026671",{"_index":178,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["otherwise",{"_index":3355,"title":{},"body":{"license.html":{}}}],["out",{"_index":288,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":1654,"title":{},"body":{"components/MainComponent.html":{}}}],["outline",{"_index":1721,"title":{},"body":{"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"miscellaneous/variables.html":{}}}],["outline.svg",{"_index":3387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["output",{"_index":1711,"title":{},"body":{"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{}}}],["outputs",{"_index":1695,"title":{},"body":{"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{}}}],["outside",{"_index":354,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["over",{"_index":800,"title":{},"body":{"components/BodyComponent.html":{},"components/HeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["overevery",{"_index":1253,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["overevery(this.getallfilters",{"_index":1287,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["overflow",{"_index":2205,"title":{},"body":{"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{}}}],["overlay",{"_index":329,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"interfaces/LocalDatabase.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["overlay.create",{"_index":436,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["overlay.git",{"_index":3257,"title":{},"body":{"dependencies.html":{}}}],["overlay.image",{"_index":2948,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["overlay.label",{"_index":2912,"title":{},"body":{"components/TissueComponent.html":{}}}],["overlay.position().flexibleconnectedto(element).withpositions([position",{"_index":434,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["overlayactivationsubscription",{"_index":2763,"title":{},"body":{"components/TissueComponent.html":{}}}],["overlayel",{"_index":2764,"title":{},"body":{"components/TissueComponent.html":{}}}],["overlayel.nativeelement",{"_index":2891,"title":{},"body":{"components/TissueComponent.html":{}}}],["overlayheight",{"_index":2765,"title":{},"body":{"components/TissueComponent.html":{}}}],["overlaymodule",{"_index":507,"title":{},"body":{"modules/AgeSelectorModule.html":{},"modules/CalloutModule.html":{}}}],["overlayref",{"_index":317,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["overlayref.attach(popoverportal",{"_index":452,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["overlayref.attach(portal",{"_index":1124,"title":{},"body":{"components/CalloutComponent.html":{}}}],["overlayref.detach",{"_index":1121,"title":{},"body":{"components/CalloutComponent.html":{}}}],["overlayref.hasattached",{"_index":1123,"title":{},"body":{"components/CalloutComponent.html":{}}}],["overlayref.updateposition",{"_index":453,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["overlays",{"_index":626,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"changelog.html":{}}}],["overlayurl",{"_index":570,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["overlayviewbox",{"_index":2766,"title":{},"body":{"components/TissueComponent.html":{}}}],["overlayvisibility",{"_index":2767,"title":{},"body":{"components/TissueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["overlayvisibility.alwaysvisible",{"_index":2867,"title":{},"body":{"components/TissueComponent.html":{}}}],["overlayvisibility.hidden",{"_index":2865,"title":{},"body":{"components/TissueComponent.html":{}}}],["overlayvisibility.visible",{"_index":2868,"title":{},"body":{"components/TissueComponent.html":{}}}],["overlaywidth",{"_index":2768,"title":{},"body":{"components/TissueComponent.html":{}}}],["overlayx",{"_index":431,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["overlayy",{"_index":432,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["overview",{"_index":3362,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owl",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{}}}],["package",{"_index":3232,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":184,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["page",{"_index":717,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{}}}],["pages/glyphs/{fontstack}/{range}.pbf",{"_index":681,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["pages/sprites/osm",{"_index":676,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":2483,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["paint",{"_index":683,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":438,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["panel",{"_index":2918,"title":{},"body":{"components/TissueComponent.html":{}}}],["panelclass",{"_index":437,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["param",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":560,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"interfaces/OntologyNode.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["parentextractor",{"_index":1522,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parentextractor(json",{"_index":1538,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentflatnodes",{"_index":2185,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["parentproperty",{"_index":1521,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parents",{"_index":2049,"title":{},"body":{"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"miscellaneous/functions.html":{}}}],["parents.add(current",{"_index":2183,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["parents.has(flat.original",{"_index":2187,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["parsed",{"_index":1584,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["part",{"_index":1892,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["partial",{"_index":1505,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"classes/OntologyState.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["partial.placeholder",{"_index":1532,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"classes/OntologyState.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":823,"title":{},"body":{"components/BodyComponent.html":{},"license.html":{}}}],["pas",{"_index":579,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["passed",{"_index":779,"title":{},"body":{"components/BodyComponent.html":{}}}],["passing",{"_index":3014,"title":{},"body":{"components/TissuesBrowserComponent.html":{}}}],["path",{"_index":693,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"modules/HomeRoutingModule.html":{},"injectables/NavigationService.html":{},"injectables/OrganDataService.html":{},"modules/OrganRoutingModule.html":{},"injectables/TissueDataService.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["pathmatch",{"_index":711,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BodyRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/OrganRoutingModule.html":{},"modules/TissuesBrowserRoutingModule.html":{}}}],["paths",{"_index":1701,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"miscellaneous/functions.html":{}}}],["pathtoimages",{"_index":863,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["patient",{"_index":533,"title":{"interfaces/Patient.html":{}},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"classes/SearchState.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{}}}],["patient.anatomicallocations",{"_index":1630,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["patient.anatomicallocations[0",{"_index":980,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["patient.ontologynodeids",{"_index":1631,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["patientcount",{"_index":995,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["patientcountobservable",{"_index":972,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["patientfilterbuilder",{"_index":864,"title":{},"body":{"injectables/BodyDataService.html":{},"classes/SearchState.html":{}}}],["patientfilterbuilder(state",{"_index":2606,"title":{},"body":{"classes/SearchState.html":{}}}],["patients",{"_index":614,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["patients/donors",{"_index":625,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["patientscount",{"_index":994,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetaData.html":{}}}],["paul",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{}}}],["per",{"_index":600,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["perform",{"_index":1216,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["periodic",{"_index":2506,"title":{},"body":{"components/SearchComponent.html":{}}}],["permission",{"_index":3307,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3328,"title":{},"body":{"license.html":{}}}],["person",{"_index":531,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"license.html":{}}}],["persons",{"_index":3329,"title":{},"body":{"license.html":{}}}],["physiologic",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{}}}],["pipe",{"_index":989,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/LocalDatabaseService.html":{},"injectables/TissueDataService.html":{}}}],["pitch",{"_index":2228,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["pixels",{"_index":599,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["pixelspermeter",{"_index":602,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["placed",{"_index":603,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["pluck",{"_index":934,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{}}}],["pluck('gender",{"_index":952,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["pluck('id",{"_index":1173,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["plugin",{"_index":727,"title":{},"body":{"modules/AppStateModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"dependencies.html":{}}}],["pluging",{"_index":2802,"title":{},"body":{"components/TissueComponent.html":{}}}],["pluralize",{"_index":767,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["pluralize(count",{"_index":804,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["pluralize(counts.cells",{"_index":847,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["pluralize(counts.tissueimages",{"_index":2370,"title":{},"body":{"components/OrganComponent.html":{}}}],["pluralize(counts.tissueimagescount",{"_index":846,"title":{},"body":{"components/BodyComponent.html":{}}}],["pluralize(counts.tissuesamples",{"_index":2368,"title":{},"body":{"components/OrganComponent.html":{}}}],["pluralize(counts.tissuesamplescount",{"_index":844,"title":{},"body":{"components/BodyComponent.html":{}}}],["pluralize(counts.tissueslices",{"_index":2369,"title":{},"body":{"components/OrganComponent.html":{}}}],["pluralize(counts.tissueslicescount",{"_index":845,"title":{},"body":{"components/BodyComponent.html":{}}}],["pluralized",{"_index":807,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["pluralizesuffix",{"_index":768,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["pluralizesuffix(count",{"_index":809,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["pluralizesuffix(counts.patients",{"_index":2367,"title":{},"body":{"components/OrganComponent.html":{}}}],["pluralizesuffix(counts.patientscount",{"_index":843,"title":{},"body":{"components/BodyComponent.html":{}}}],["png",{"_index":588,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["point",{"_index":2915,"title":{},"body":{"components/TissueComponent.html":{}}}],["pointer",{"_index":206,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["popover",{"_index":269,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["popoverelement",{"_index":318,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["popoverelement.nativeelement.contains(target",{"_index":446,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["popovermodule",{"_index":1968,"title":{},"body":{"modules/OntologySearchModule.html":{},"modules/TissuesBrowserGridModule.html":{}}}],["popoverportal",{"_index":319,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["popovers",{"_index":529,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["portal",{"_index":1033,"title":{},"body":{"components/CalloutComponent.html":{}}}],["portalmodule",{"_index":508,"title":{},"body":{"modules/AgeSelectorModule.html":{},"modules/CalloutModule.html":{}}}],["portions",{"_index":3336,"title":{},"body":{"license.html":{}}}],["position",{"_index":427,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"components/MainComponent.html":{},"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["position/dimensions",{"_index":1077,"title":{},"body":{"components/CalloutComponent.html":{}}}],["positions",{"_index":1572,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["positionstrategy",{"_index":433,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["predicate",{"_index":1242,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["prefix",{"_index":1796,"title":{},"body":{"injectables/NavigationService.html":{},"injectables/OntologySearchService.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{},"miscellaneous/functions.html":{}}}],["prefixurl",{"_index":2876,"title":{},"body":{"components/TissueComponent.html":{}}}],["preparation",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":2809,"title":{},"body":{"components/TissueComponent.html":{}}}],["presented",{"_index":1395,"title":{},"body":{"components/HomeComponent.html":{},"changelog.html":{}}}],["prevent",{"_index":917,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["previously",{"_index":2142,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["private",{"_index":312,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["probably",{"_index":714,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["processed",{"_index":2400,"title":{},"body":{"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["produces",{"_index":1238,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["production",{"_index":3391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"changelog.html":{}}}],["projection",{"_index":2727,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["promise",{"_index":2261,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["promise((resolve",{"_index":2319,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["proof",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["proper",{"_index":1169,"title":{},"body":{"interfaces/CountMetadata.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{}}}],["properties",{"_index":310,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{}}}],["property",{"_index":1213,"title":{},"body":{"classes/FilterBuilder.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologyTreeComponent.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["property('expandable",{"_index":2174,"title":{},"body":{"components/OntologyTreeComponent.html":{},"miscellaneous/variables.html":{}}}],["property('level",{"_index":2173,"title":{},"body":{"components/OntologyTreeComponent.html":{},"miscellaneous/variables.html":{}}}],["property(0",{"_index":1524,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["property(idproperty",{"_index":1517,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["property(labelproperty",{"_index":1527,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["property(parentproperty",{"_index":1523,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["property(path",{"_index":1278,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["property(synonymsproperty",{"_index":1530,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["property(valueproperty",{"_index":1520,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["propertypath",{"_index":894,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"injectables/OrganDataService.html":{}}}],["provided",{"_index":170,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OntologySearchService.html":{},"injectables/OrganDataService.html":{},"interfaces/SearchResult.html":{},"components/TissueComponent.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":669,"title":{},"body":{"modules/AppRenderInitModule.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"guards/TissueResolverService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":537,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["providers",{"_index":281,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"overview.html":{}}}],["provides",{"_index":861,"title":{},"body":{"injectables/BodyDataService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"injectables/TissuesBrowserDataService.html":{}}}],["providing",{"_index":339,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["prunednodes",{"_index":2073,"title":{},"body":{"classes/OntologyState.html":{}}}],["prunemodel",{"_index":3226,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["prunemodel(model",{"_index":2070,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":2346,"title":{},"body":{"components/OrganComponent.html":{}}}],["publish",{"_index":3322,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":3345,"title":{},"body":{"license.html":{}}}],["put",{"_index":1071,"title":{},"body":{"components/CalloutComponent.html":{}}}],["quardokus",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{}}}],["queried",{"_index":2931,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["queries",{"_index":889,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["query",{"_index":900,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{},"guards/TissueResolverService.html":{},"changelog.html":{}}}],["query(field",{"_index":1566,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["queryfun",{"_index":1001,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["questions",{"_index":1398,"title":{},"body":{"components/HomeComponent.html":{}}}],["radius",{"_index":1331,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/OntologySearchComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["randy",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{}}}],["range",{"_index":367,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/variables.html":{}}}],["ratio",{"_index":3053,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["reactiveformsmodule",{"_index":1964,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["read",{"_index":401,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["readonly",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissuesBrowserGridComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["really",{"_index":1098,"title":{},"body":{"components/CalloutComponent.html":{}}}],["received",{"_index":3019,"title":{},"body":{"components/TissuesBrowserComponent.html":{}}}],["recreation",{"_index":918,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["recursive",{"_index":3282,"title":{},"body":{"miscellaneous/functions.html":{}}}],["redirectto",{"_index":713,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BodyRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/OrganRoutingModule.html":{},"modules/TissuesBrowserRoutingModule.html":{}}}],["refer",{"_index":2831,"title":{},"body":{"components/TissueComponent.html":{}}}],["reference",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"classes/FilterBuilder.html":{},"interfaces/LocalDatabase.html":{},"injectables/OntologyService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["regions",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1431,"title":{},"body":{"interfaces/IconDefinition.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["registered",{"_index":744,"title":{},"body":{"modules/AppStateModule.html":{},"miscellaneous/variables.html":{}}}],["registericon",{"_index":1438,"title":{"classes/RegisterIcon.html":{}},"body":{"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"coverage.html":{}}}],["registericon(undefined",{"_index":1452,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["registering",{"_index":1427,"title":{},"body":{"interfaces/IconDefinition.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["registers",{"_index":1451,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["registration",{"_index":1435,"title":{},"body":{"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["registrationerror",{"_index":1460,"title":{"classes/RegistrationError.html":{}},"body":{"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"coverage.html":{}}}],["registrationerror(error",{"_index":1492,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["registrationsuccess",{"_index":1461,"title":{"classes/RegistrationSuccess.html":{}},"body":{"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"coverage.html":{}}}],["registry",{"_index":1444,"title":{},"body":{"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["registry.action",{"_index":1462,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["registry.action.ts",{"_index":2393,"title":{},"body":{"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"coverage.html":{}}}],["registry.action.ts:23",{"_index":2405,"title":{},"body":{"classes/RegistrationSuccess.html":{}}}],["registry.action.ts:31",{"_index":2404,"title":{},"body":{"classes/RegistrationError.html":{}}}],["registry.action.ts:8",{"_index":2396,"title":{},"body":{"classes/RegisterIcon.html":{}}}],["registry.model",{"_index":1463,"title":{},"body":{"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["registry.model.ts",{"_index":1425,"title":{},"body":{"interfaces/IconDefinition.html":{},"coverage.html":{}}}],["registry.state",{"_index":735,"title":{},"body":{"modules/AppStateModule.html":{}}}],["registry.state.ts",{"_index":1434,"title":{},"body":{"classes/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registry.state.ts:50",{"_index":1454,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["registry.state.ts:59",{"_index":1443,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["registry.state.ts:75",{"_index":1450,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["registry/default",{"_index":3222,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["registry/icon",{"_index":734,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["regular",{"_index":2811,"title":{},"body":{"components/TissueComponent.html":{}}}],["reject",{"_index":2320,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["related",{"_index":1180,"title":{},"body":{"interfaces/CountMetadata.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{}}}],["relationship",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{}}}],["relative",{"_index":3059,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["release",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":618,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["remove",{"_index":2064,"title":{},"body":{"classes/OntologyState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["removed",{"_index":2562,"title":{},"body":{"injectables/SearchService.html":{}}}],["removeprefix",{"_index":2414,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["removeprefix(category",{"_index":2426,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["removes",{"_index":2429,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"classes/SearchState.html":{}}}],["removetechnology",{"_index":2593,"title":{},"body":{"classes/SearchState.html":{}}}],["removetechnology(ctx",{"_index":2609,"title":{},"body":{"classes/SearchState.html":{}}}],["removetmc",{"_index":2594,"title":{},"body":{"classes/SearchState.html":{}}}],["removetmc(ctx",{"_index":2612,"title":{},"body":{"classes/SearchState.html":{}}}],["render",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render(_gl",{"_index":2722,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["renderer",{"_index":2688,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{}}}],["renderer.appendchild(overlay.node",{"_index":2890,"title":{},"body":{"components/TissueComponent.html":{}}}],["renderer2",{"_index":2781,"title":{},"body":{"components/TissueComponent.html":{}}}],["rendering",{"_index":2704,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["renderingmode",{"_index":2689,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["renders",{"_index":2725,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["replaysubject",{"_index":1784,"title":{},"body":{"injectables/NavigationService.html":{}}}],["replaysubject(1",{"_index":1791,"title":{},"body":{"injectables/NavigationService.html":{}}}],["representation",{"_index":1865,"title":{},"body":{"interfaces/OntologyNode.html":{},"interfaces/OntologyStateModel.html":{}}}],["represents",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/OntologyTreeComponent.html":{}}}],["researched",{"_index":1102,"title":{},"body":{"components/CalloutComponent.html":{}}}],["reset",{"_index":287,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules/TissueModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"overview.html":{}}}],["resetpositionscalerotation",{"_index":2235,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["resetpositionscalerotation(scene",{"_index":2271,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["resets",{"_index":2273,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["resolve",{"_index":710,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/Organ3dComponent.html":{},"guards/TissueResolverService.html":{}}}],["resolve(route",{"_index":2986,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["resolver",{"_index":2979,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["resolver.service",{"_index":692,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolver.service.ts",{"_index":2975,"title":{},"body":{"guards/TissueResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:20",{"_index":2978,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["resolver.service.ts:40",{"_index":2987,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["resolver.service.ts:51",{"_index":2985,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["resolver.service.ts:66",{"_index":2982,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["resolver/tissue",{"_index":691,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/TissueResolverService.html":{},"coverage.html":{}}}],["resources",{"_index":2720,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["respond",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["responses",{"_index":1578,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["responsetype",{"_index":1596,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"classes/OntologyState.html":{}}}],["responsible",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{},"components/TissuesBrowserComponent.html":{}}}],["restriction",{"_index":3317,"title":{},"body":{"license.html":{}}}],["result",{"_index":272,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"modules/TissueModule.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.push(current.id",{"_index":1634,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["result.push(head.filter",{"_index":1291,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["resulting",{"_index":1535,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["results",{"_index":274,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"modules/TissueModule.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":424,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"interfaces/ValueObject.html":{}}}],["returning",{"_index":878,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"guards/TissueResolverService.html":{}}}],["returns",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/ThreeJsLayer.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["revision",{"_index":1405,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(255,255,255,1",{"_index":684,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":203,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OrganComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["rights",{"_index":3319,"title":{},"body":{"license.html":{}}}],["root",{"_index":629,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRenderInitModule.html":{},"modules/AppStateModule.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"guards/TissueResolverService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":227,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["rootnode",{"_index":2020,"title":{},"body":{"injectables/OntologyService.html":{},"classes/OntologyState.html":{}}}],["rootnode(state",{"_index":2040,"title":{},"body":{"classes/OntologyState.html":{}}}],["rootstates",{"_index":745,"title":{},"body":{"modules/AppStateModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rotate",{"_index":3288,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rotates",{"_index":3287,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rotation",{"_index":2246,"title":{},"body":{"components/Organ3dComponent.html":{},"miscellaneous/functions.html":{}}}],["route",{"_index":1767,"title":{},"body":{"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"guards/TissueResolverService.html":{}}}],["route.data['tissue",{"_index":1857,"title":{},"body":{"classes/NavigationState.html":{}}}],["route.params",{"_index":1844,"title":{},"body":{"classes/NavigationState.html":{},"guards/TissueResolverService.html":{}}}],["route.params['organid",{"_index":1859,"title":{},"body":{"classes/NavigationState.html":{}}}],["router",{"_index":1757,"title":{},"body":{"injectables/NavigationService.html":{}}}],["routerdataresolved",{"_index":1833,"title":{},"body":{"classes/NavigationState.html":{}}}],["routermodule",{"_index":686,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BodyRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MainModule.html":{},"modules/NavigationModule.html":{},"modules/OrganRoutingModule.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":1023,"title":{},"body":{"modules/BodyRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/OrganRoutingModule.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":719,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstate",{"_index":1782,"title":{},"body":{"injectables/NavigationService.html":{}}}],["routes",{"_index":687,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BodyRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"components/MainComponent.html":{},"modules/OrganRoutingModule.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":652,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/HomeModule.html":{},"modules/OrganModule.html":{},"modules/TissueModule.html":{},"modules/TissuesBrowserModule.html":{}}}],["routing.module.ts",{"_index":685,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BodyRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/OrganRoutingModule.html":{},"modules/TissueRoutingModule.html":{},"modules/TissuesBrowserRoutingModule.html":{}}}],["row",{"_index":1679,"title":{},"body":{"components/MetadataComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["rui",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":1111,"title":{},"body":{"components/CalloutComponent.html":{}}}],["runs",{"_index":1079,"title":{},"body":{"components/CalloutComponent.html":{}}}],["rxjs",{"_index":825,"title":{},"body":{"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"injectables/OrganDataService.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"injectables/TissuesBrowserDataService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":937,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/OntologyState.html":{},"injectables/OrganDataService.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{}}}],["s",{"_index":812,"title":{},"body":{"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/OrganComponent.html":{}}}],["safehtml",{"_index":1429,"title":{},"body":{"interfaces/IconDefinition.html":{},"miscellaneous/typealiases.html":{}}}],["safeload",{"_index":1585,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["safeload(results",{"_index":1599,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["saferesourceurl",{"_index":1432,"title":{},"body":{"interfaces/IconDefinition.html":{},"miscellaneous/typealiases.html":{}}}],["safestyle",{"_index":3074,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["same",{"_index":1309,"title":{},"body":{"classes/FlatNode.html":{}}}],["sample",{"_index":566,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/SearchState.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{}}}],["sample.id",{"_index":1183,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["sample.patient.anatomicallocations[0",{"_index":984,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["samplecount",{"_index":991,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["samplecountobservable",{"_index":977,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["sampledata/ccf",{"_index":3395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sampledata/v1/data.yml",{"_index":3393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sampleid",{"_index":881,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["samples",{"_index":615,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/CountMetadata.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"changelog.html":{}}}],["samuel",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{}}}],["san",{"_index":2511,"title":{},"body":{"components/SearchComponent.html":{}}}],["sanitaion",{"_index":3069,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["sanitize",{"_index":1446,"title":{},"body":{"classes/IconRegistryState.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["sanitizer",{"_index":1441,"title":{},"body":{"classes/IconRegistryState.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["sanitizer.bypasssecuritytrusthtml(def.html",{"_index":1498,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl(def.url",{"_index":1496,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["sanpshot",{"_index":2608,"title":{},"body":{"classes/SearchState.html":{}}}],["scaffolding",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":2274,"title":{},"body":{"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"miscellaneous/functions.html":{}}}],["scale(new",{"_index":2747,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["scalebar",{"_index":2769,"title":{},"body":{"components/TissueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scalebar(options",{"_index":3295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scalebar.ts",{"_index":3210,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scales",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"miscellaneous/functions.html":{}}}],["scene",{"_index":2249,"title":{},"body":{"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["scene.position.setscalar(0",{"_index":2332,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["scene.rotation.set(0",{"_index":2334,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["scene.scale.setscalar(1",{"_index":2333,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["sceneopacity",{"_index":2229,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["scenes",{"_index":2288,"title":{},"body":{"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["scenesize",{"_index":2230,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["scheduleupdates",{"_index":1042,"title":{},"body":{"components/CalloutComponent.html":{}}}],["schema",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["schema#label",{"_index":1511,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["schiff",{"_index":2508,"title":{},"body":{"components/SearchComponent.html":{}}}],["school",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{}}}],["science",{"_index":3301,"title":{},"body":{"index.html":{}}}],["seadragon",{"_index":2792,"title":{},"body":{"components/TissueComponent.html":{}}}],["seadragon's",{"_index":2783,"title":{},"body":{"components/TissueComponent.html":{}}}],["search",{"_index":254,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["search'},{'name",{"_index":246,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["search.action",{"_index":2632,"title":{},"body":{"classes/SearchState.html":{}}}],["search.component",{"_index":1970,"title":{},"body":{"modules/OntologySearchModule.html":{},"modules/SearchModule.html":{}}}],["search.component.html",{"_index":1871,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1870,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SearchComponent.html":{}}}],["search.component.ts",{"_index":1868,"title":{},"body":{"components/OntologySearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:24",{"_index":1882,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:28",{"_index":1912,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:32",{"_index":1880,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:45",{"_index":1893,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:61",{"_index":1907,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:70",{"_index":1904,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:78",{"_index":1899,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:91",{"_index":1887,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.detached",{"_index":1955,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.model",{"_index":2633,"title":{},"body":{"classes/SearchState.html":{}}}],["search.module",{"_index":2531,"title":{},"body":{"modules/SearchModule.html":{}}}],["search.module.ts",{"_index":1962,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.searchcriteria",{"_index":1645,"title":{},"body":{"components/MainComponent.html":{}}}],["search.service",{"_index":1923,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.service.ts",{"_index":1972,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["search.service.ts:32",{"_index":1992,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:39",{"_index":1977,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:51",{"_index":1988,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:86",{"_index":1986,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:96",{"_index":1981,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.setagerange(min",{"_index":451,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["search.wrapper",{"_index":1945,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SearchComponent.html":{}}}],["search/ontology",{"_index":1867,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["search/search.state",{"_index":1837,"title":{},"body":{"classes/NavigationState.html":{}}}],["searchactive",{"_index":1641,"title":{},"body":{"components/MainComponent.html":{},"components/NavigationComponent.html":{}}}],["searchactivechange",{"_index":1696,"title":{},"body":{"components/NavigationComponent.html":{}}}],["searchactivesubject",{"_index":1693,"title":{},"body":{"components/NavigationComponent.html":{}}}],["searchcategoriescomponent",{"_index":253,"title":{"components/SearchCategoriesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchcategoriesmodule",{"_index":2484,"title":{"modules/SearchCategoriesModule.html":{}},"body":{"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["searchcomponent",{"_index":256,"title":{"components/SearchComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchcriteria",{"_index":2535,"title":{},"body":{"injectables/SearchService.html":{}}}],["searched",{"_index":1321,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["searches",{"_index":1978,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"guards/TissueResolverService.html":{}}}],["searching",{"_index":1869,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["searchmodule",{"_index":1661,"title":{"modules/SearchModule.html":{}},"body":{"modules/MainModule.html":{},"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["searchresult",{"_index":1886,"title":{"interfaces/SearchResult.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["searchresults",{"_index":2001,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.get(node.id",{"_index":2005,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.set(node.id",{"_index":2006,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchservice",{"_index":331,"title":{"injectables/SearchService.html":{}},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/MainComponent.html":{},"components/OntologySearchComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"coverage.html":{}}}],["searchstate",{"_index":740,"title":{"classes/SearchState.html":{}},"body":{"modules/AppStateModule.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"injectables/TissueDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchstate.patientfilterbuilder",{"_index":975,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["searchstate.tissueimagefilterbuilder",{"_index":987,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["searchstate.tissuesamplefilterbuilder",{"_index":979,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["searchstate.tissueslicefilterbuilder",{"_index":983,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["searchstatemodel",{"_index":948,"title":{"interfaces/SearchStateModel.html":{}},"body":{"injectables/BodyDataService.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"coverage.html":{}}}],["searchvalue",{"_index":1980,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchvalue.length",{"_index":2016,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["see",{"_index":3296,"title":{},"body":{"index.html":{}}}],["segments",{"_index":1751,"title":{},"body":{"injectables/NavigationService.html":{}}}],["select",{"_index":930,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/NavigationService.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"components/OntologyTreeComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"injectables/TissueDataService.html":{},"injectables/TissuesBrowserDataService.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["select(navigationstate",{"_index":1768,"title":{},"body":{"injectables/NavigationService.html":{}}}],["select(navigationstate.activeorgan",{"_index":1167,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["select(navigationstate.activetissue",{"_index":2942,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["select(navigationstate.tissues",{"_index":3023,"title":{},"body":{"injectables/TissuesBrowserDataService.html":{}}}],["select(node",{"_index":2139,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["select(ontologystate.nodes",{"_index":1991,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["select(ontologystate.rootnode",{"_index":2028,"title":{},"body":{"injectables/OntologyService.html":{}}}],["select(routerstate.url",{"_index":1780,"title":{},"body":{"injectables/NavigationService.html":{}}}],["select(searchstate",{"_index":928,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/SearchService.html":{}}}],["select(searchstate.location",{"_index":2944,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["select(searchstate.patientfilterbuilder",{"_index":925,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["selected",{"_index":1326,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SearchStateModel.html":{}}}],["selected(category",{"_index":2431,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["selected(ontologynode",{"_index":2497,"title":{},"body":{"components/SearchComponent.html":{}}}],["selected/unselected",{"_index":2441,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["selectedfiltercategories",{"_index":2413,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["selectedfiltervalues",{"_index":2458,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["selectedfiltervalues.has(filter",{"_index":2459,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["selectednode",{"_index":2112,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["selectednode.original",{"_index":2198,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["selecting",{"_index":1255,"title":{},"body":{"classes/FilterBuilder.html":{},"components/GenderSelectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["selection",{"_index":497,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/OntologyTreeComponent.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["selectionchanged",{"_index":1322,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["selectionchanged(value",{"_index":1325,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"classes/SearchState.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["selector'},{'name",{"_index":225,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["selector.component",{"_index":516,"title":{},"body":{"modules/AgeSelectorModule.html":{},"modules/GenderSelectorModule.html":{}}}],["selector.component.html",{"_index":309,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{}}}],["selector.component.scss",{"_index":308,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{}}}],["selector.component.ts",{"_index":300,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"coverage.html":{}}}],["selector.component.ts:100",{"_index":357,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:112",{"_index":347,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:128",{"_index":368,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:13",{"_index":1324,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["selector.component.ts:138",{"_index":362,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:148",{"_index":355,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:20",{"_index":408,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:26",{"_index":403,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{}}}],["selector.component.ts:31",{"_index":383,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:36",{"_index":397,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:47",{"_index":386,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:52",{"_index":375,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:57",{"_index":410,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:69",{"_index":398,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.component.ts:74",{"_index":332,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.detached",{"_index":475,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["selector.module",{"_index":2530,"title":{},"body":{"modules/SearchModule.html":{}}}],["selector.module.ts",{"_index":506,"title":{},"body":{"modules/AgeSelectorModule.html":{},"modules/GenderSelectorModule.html":{}}}],["selector.wrapper",{"_index":458,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{}}}],["selector/age",{"_index":299,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"modules/SearchModule.html":{},"coverage.html":{}}}],["selector/gender",{"_index":1320,"title":{},"body":{"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"modules/SearchModule.html":{},"coverage.html":{}}}],["selects",{"_index":1902,"title":{},"body":{"components/OntologySearchComponent.html":{},"classes/OntologyState.html":{},"components/SearchComponent.html":{},"classes/SearchState.html":{},"changelog.html":{}}}],["selecttechnology",{"_index":2536,"title":{"classes/SelectTechnology.html":{}},"body":{"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"coverage.html":{}}}],["selecttechnology(technology",{"_index":2543,"title":{},"body":{"injectables/SearchService.html":{}}}],["selecttmc",{"_index":2537,"title":{"classes/SelectTMC.html":{}},"body":{"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"coverage.html":{}}}],["selecttmc(tmc",{"_index":2546,"title":{},"body":{"injectables/SearchService.html":{}}}],["sell",{"_index":3326,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1400,"title":{},"body":{"components/HomeComponent.html":{},"changelog.html":{}}}],["sends",{"_index":1895,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sequence",{"_index":2362,"title":{},"body":{"components/OrganComponent.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["services/database/local/local",{"_index":940,"title":{},"body":{"injectables/BodyDataService.html":{},"classes/NavigationState.html":{},"guards/TissueResolverService.html":{}}}],["services/navigation/navigation.service",{"_index":2993,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["set",{"_index":1430,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/LocalDatabaseService.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"components/TissueComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"miscellaneous/functions.html":{}}}],["set/unset",{"_index":2670,"title":{},"body":{"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["setactiveorgan",{"_index":1808,"title":{},"body":{"classes/NavigationState.html":{}}}],["setactiveorgan(ctx",{"_index":1825,"title":{},"body":{"classes/NavigationState.html":{}}}],["setactivepopoveritem",{"_index":3034,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["setactivepopoveritem(item",{"_index":3041,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["setactivetissue",{"_index":1809,"title":{},"body":{"classes/NavigationState.html":{}}}],["setactivetissue(ctx",{"_index":1828,"title":{},"body":{"classes/NavigationState.html":{}}}],["setagerange",{"_index":2538,"title":{},"body":{"injectables/SearchService.html":{},"classes/SearchState.html":{}}}],["setagerange(ctx",{"_index":2615,"title":{},"body":{"classes/SearchState.html":{}}}],["setagerange(min",{"_index":2548,"title":{},"body":{"injectables/SearchService.html":{}}}],["setagerangefilter",{"_index":2553,"title":{"classes/SetAgeRangeFilter.html":{}},"body":{"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"coverage.html":{}}}],["setagerangefilter(min",{"_index":2587,"title":{},"body":{"injectables/SearchService.html":{}}}],["setgender",{"_index":2539,"title":{},"body":{"injectables/SearchService.html":{},"classes/SearchState.html":{}}}],["setgender(ctx",{"_index":2618,"title":{},"body":{"classes/SearchState.html":{}}}],["setgender(gender",{"_index":2554,"title":{},"body":{"injectables/SearchService.html":{}}}],["setgenderfilter",{"_index":2557,"title":{"classes/SetGenderFilter.html":{}},"body":{"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"coverage.html":{}}}],["setgenderfilter(gender",{"_index":2588,"title":{},"body":{"injectables/SearchService.html":{}}}],["setgetchildren(fun",{"_index":2165,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["setinterval",{"_index":1139,"title":{},"body":{"components/CalloutComponent.html":{}}}],["setlocation",{"_index":2540,"title":{"classes/SetLocation.html":{}},"body":{"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"coverage.html":{}}}],["setlocation(ctx",{"_index":2621,"title":{},"body":{"classes/SearchState.html":{}}}],["setlocation(location",{"_index":2558,"title":{},"body":{"injectables/SearchService.html":{}}}],["setnodes(nodes",{"_index":2162,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["setobjectopacity",{"_index":2298,"title":{},"body":{"components/Organ3dComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setobjectopacity(obj",{"_index":3281,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setobjectopacity(scene",{"_index":2325,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["setobjectrotation",{"_index":2299,"title":{},"body":{"components/Organ3dComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setobjectrotation(obj",{"_index":3283,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setobjectrotation(scene",{"_index":2329,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["setobjectsize",{"_index":2300,"title":{},"body":{"components/Organ3dComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setobjectsize(obj",{"_index":3289,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setobjectsize(scene",{"_index":2330,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["setoverlaysize",{"_index":2777,"title":{},"body":{"components/TissueComponent.html":{}}}],["setpatientontologypositions",{"_index":1550,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["setpatientontologypositions(db",{"_index":1568,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["setpositionscalerotation",{"_index":2236,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["setpositionscalerotation(scene",{"_index":2275,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["sets",{"_index":1571,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"classes/NavigationState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"miscellaneous/functions.html":{}}}],["setscalebar",{"_index":2778,"title":{},"body":{"components/TissueComponent.html":{}}}],["setscalebar(pixelspermeter",{"_index":2800,"title":{},"body":{"components/TissueComponent.html":{}}}],["settimeout",{"_index":1115,"title":{},"body":{"components/CalloutComponent.html":{},"components/TissueComponent.html":{}}}],["setting",{"_index":2786,"title":{},"body":{"components/TissueComponent.html":{}}}],["setup",{"_index":2892,"title":{},"body":{"components/TissueComponent.html":{},"changelog.html":{}}}],["setvisibility",{"_index":2779,"title":{},"body":{"components/TissueComponent.html":{}}}],["setvisibility(overlay",{"_index":2804,"title":{},"body":{"components/TissueComponent.html":{}}}],["shadow",{"_index":487,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["shall",{"_index":3334,"title":{},"body":{"license.html":{}}}],["share",{"_index":935,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{}}}],["shared/3d/object3d",{"_index":2301,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["shared/3d/threejs",{"_index":2303,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["shared/flat",{"_index":2172,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["shared/resolvers/tissue",{"_index":690,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/services/body",{"_index":826,"title":{},"body":{"components/BodyComponent.html":{},"modules/BodyModule.html":{}}}],["shared/services/navigation/navigation.service",{"_index":829,"title":{},"body":{"components/BodyComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["shared/services/ontology",{"_index":1922,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["shared/services/ontology/ontology.service",{"_index":2519,"title":{},"body":{"components/SearchComponent.html":{}}}],["shared/services/organ",{"_index":2359,"title":{},"body":{"components/OrganComponent.html":{},"modules/OrganModule.html":{}}}],["shared/services/search/search.service",{"_index":421,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/MainComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{}}}],["shared/services/tissue",{"_index":2838,"title":{},"body":{"components/TissueComponent.html":{},"modules/TissueModule.html":{}}}],["shared/services/tissues",{"_index":3020,"title":{},"body":{"components/TissuesBrowserComponent.html":{},"modules/TissuesBrowserModule.html":{}}}],["shared/state/database/database.models",{"_index":2840,"title":{},"body":{"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["shared/state/icon",{"_index":733,"title":{},"body":{"modules/AppStateModule.html":{}}}],["shared/state/navigation/navigation.state",{"_index":737,"title":{},"body":{"modules/AppStateModule.html":{}}}],["shared/state/ontology/ontology.model",{"_index":1315,"title":{},"body":{"classes/FlatNode.html":{},"injectables/LocalDatabaseService.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{}}}],["shared/state/ontology/ontology.state",{"_index":739,"title":{},"body":{"modules/AppStateModule.html":{},"injectables/LocalDatabaseService.html":{}}}],["shared/state/search/search.state",{"_index":741,"title":{},"body":{"modules/AppStateModule.html":{}}}],["sharereplay",{"_index":1592,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["sharereplay(1",{"_index":1606,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["show",{"_index":304,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/OntologyTreeComponent.html":{},"components/OrganComponent.html":{},"miscellaneous/variables.html":{}}}],["showing",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":384,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/OrganComponent.html":{}}}],["shownavigator",{"_index":2878,"title":{},"body":{"components/TissueComponent.html":{}}}],["side",{"_index":1066,"title":{},"body":{"components/CalloutComponent.html":{},"components/OrganComponent.html":{}}}],["sidebar",{"_index":1687,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sides",{"_index":3291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simple",{"_index":521,"title":{},"body":{"interfaces/Annotated.html":{}}}],["simplechanges",{"_index":1083,"title":{},"body":{"components/CalloutComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["simplify",{"_index":2054,"title":{},"body":{"classes/OntologyState.html":{}}}],["single",{"_index":1503,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/NavigationService.html":{},"components/OntologyTreeComponent.html":{},"components/TissueComponent.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserGridItemComponent.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["singular",{"_index":808,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["size",{"_index":190,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"miscellaneous/functions.html":{}}}],["sized",{"_index":586,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["sizing",{"_index":1329,"title":{},"body":{"components/GenderSelectorComponent.html":{},"components/NavigationComponent.html":{}}}],["skip",{"_index":1593,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["skip(1",{"_index":1603,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["slice",{"_index":571,"title":{},"body":{"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"interfaces/LocalDatabase.html":{},"components/OrganComponent.html":{},"interfaces/Patient.html":{},"classes/SearchState.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["slice.sample.id",{"_index":1185,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["slice.sample.patient.anatomicallocations[0",{"_index":988,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["slicecount",{"_index":992,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["slicecountobservable",{"_index":981,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["slices",{"_index":616,"title":{},"body":{"interfaces/Annotated.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["slider",{"_index":305,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"injectables/SearchService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sliders",{"_index":377,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["slidervaluechanged",{"_index":322,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["small",{"_index":585,"title":{},"body":{"interfaces/Annotated.html":{},"components/CalloutComponent.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["smart",{"_index":1969,"title":{},"body":{"modules/OntologySearchModule.html":{},"modules/TissuesBrowserGridModule.html":{},"dependencies.html":{}}}],["snapshot",{"_index":2626,"title":{},"body":{"classes/SearchState.html":{},"guards/TissueResolverService.html":{}}}],["snapshot.activetissue",{"_index":2997,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["snapshot.activetissue.id",{"_index":2998,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["software",{"_index":3314,"title":{},"body":{"license.html":{}}}],["solid",{"_index":485,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["solution",{"_index":1094,"title":{},"body":{"components/CalloutComponent.html":{}}}],["solutions",{"_index":1101,"title":{},"body":{"components/CalloutComponent.html":{}}}],["some(location.synonymlabels",{"_index":2960,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["sortby",{"_index":1920,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortby(searchresults",{"_index":1931,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult",{"_index":1876,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult(this",{"_index":1903,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically",{"_index":1877,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically(this",{"_index":1906,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorts",{"_index":1905,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"modules/BodyModule.html":{},"modules/BodyRoutingModule.html":{},"components/CalloutComponent.html":{},"modules/CalloutModule.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MetadataComponent.html":{},"modules/MetadataModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"modules/OrganModule.html":{},"modules/OrganRoutingModule.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"modules/TissueModule.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"modules/TissueRoutingModule.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{}}}],["sources",{"_index":672,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["sourceurl",{"_index":584,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["space",{"_index":1730,"title":{},"body":{"components/NavigationComponent.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{}}}],["spatial",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{}}}],["spatially",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{}}}],["special",{"_index":2056,"title":{},"body":{"classes/OntologyState.html":{}}}],["specific",{"_index":897,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/IconRegistryState.html":{},"injectables/NavigationService.html":{},"injectables/OrganDataService.html":{},"miscellaneous/functions.html":{}}}],["specification",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{}}}],["specified",{"_index":880,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/OntologyState.html":{},"injectables/OrganDataService.html":{},"guards/TissueResolverService.html":{},"miscellaneous/functions.html":{}}}],["spectrometry",{"_index":2502,"title":{},"body":{"components/SearchComponent.html":{}}}],["speed",{"_index":562,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["spinning",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":1590,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["sprint",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["sprite",{"_index":673,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":3374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":3372,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":3375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter",{"_index":3265,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../icon",{"_index":3271,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../json",{"_index":3272,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../navigation.service.ts",{"_index":3269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../object3d",{"_index":3268,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ontology",{"_index":3377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ontology.state.ts",{"_index":3267,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../openseadragon",{"_index":3273,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../organ.component.ts",{"_index":3378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../search.service.ts",{"_index":3270,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue.component.ts",{"_index":3266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":656,"title":{},"body":{"modules/AppRenderInitModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppStateModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":628,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/components/about/about.component.ts:12",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:22",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.module.ts",{"_index":289,"title":{},"body":{"modules/AboutModule.html":{}}}],["src/app/components/age",{"_index":298,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AgeSelectorModule.html":{},"coverage.html":{}}}],["src/app/components/callout/callout.component.ts",{"_index":1024,"title":{},"body":{"components/CalloutComponent.html":{},"coverage.html":{}}}],["src/app/components/callout/callout.component.ts:123",{"_index":1076,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:135",{"_index":1073,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:146",{"_index":1068,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:164",{"_index":1064,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:17",{"_index":1053,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:175",{"_index":1092,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:185",{"_index":1059,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:22",{"_index":1055,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:28",{"_index":1057,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:33",{"_index":1110,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:38",{"_index":1106,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:43",{"_index":1108,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:48",{"_index":1049,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:66",{"_index":1078,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:77",{"_index":1084,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:87",{"_index":1088,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.component.ts:95",{"_index":1103,"title":{},"body":{"components/CalloutComponent.html":{}}}],["src/app/components/callout/callout.module",{"_index":1021,"title":{},"body":{"modules/BodyModule.html":{}}}],["src/app/components/callout/callout.module.ts",{"_index":1148,"title":{},"body":{"modules/CalloutModule.html":{}}}],["src/app/components/gender",{"_index":1319,"title":{},"body":{"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts",{"_index":1346,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts:18",{"_index":1353,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:30",{"_index":1357,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.module.ts",{"_index":1380,"title":{},"body":{"modules/HeaderModule.html":{}}}],["src/app/components/metadata/metadata.component.ts",{"_index":1669,"title":{},"body":{"components/MetadataComponent.html":{},"coverage.html":{}}}],["src/app/components/metadata/metadata.component.ts:15",{"_index":1675,"title":{},"body":{"components/MetadataComponent.html":{}}}],["src/app/components/metadata/metadata.module",{"_index":1020,"title":{},"body":{"modules/BodyModule.html":{},"modules/TissueModule.html":{}}}],["src/app/components/metadata/metadata.module.ts",{"_index":1684,"title":{},"body":{"modules/MetadataModule.html":{}}}],["src/app/components/navigation/navigation.component.ts",{"_index":1686,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/components/navigation/navigation.component.ts:18",{"_index":1702,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:23",{"_index":1704,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:28",{"_index":1708,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:33",{"_index":1698,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:48",{"_index":1707,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.module.ts",{"_index":1734,"title":{},"body":{"modules/NavigationModule.html":{}}}],["src/app/components/ontology",{"_index":1294,"title":{},"body":{"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/organ3d/organ3d.component.ts",{"_index":2220,"title":{},"body":{"components/Organ3dComponent.html":{},"coverage.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:106",{"_index":2263,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:115",{"_index":2258,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:130",{"_index":2276,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:148",{"_index":2272,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:20",{"_index":2244,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:22",{"_index":2245,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:25",{"_index":2248,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:27",{"_index":2251,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:31",{"_index":2280,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:33",{"_index":2291,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:35",{"_index":2286,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:39",{"_index":2289,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:41",{"_index":2287,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:44",{"_index":2284,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:46",{"_index":2282,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:48",{"_index":2241,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:62",{"_index":2266,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:77",{"_index":2269,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.component.ts:95",{"_index":2254,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["src/app/components/organ3d/organ3d.module.ts",{"_index":2340,"title":{},"body":{"modules/Organ3dModule.html":{}}}],["src/app/components/search",{"_index":2406,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"modules/SearchCategoriesModule.html":{},"coverage.html":{}}}],["src/app/components/search/search.component.ts",{"_index":2494,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/components/search/search.component.ts:23",{"_index":2516,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:28",{"_index":2514,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:43",{"_index":2496,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:63",{"_index":2498,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.module.ts",{"_index":2529,"title":{},"body":{"modules/SearchModule.html":{}}}],["src/app/components/tissues",{"_index":3026,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"coverage.html":{}}}],["src/app/external",{"_index":3209,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/3d/object3d",{"_index":3212,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/3d/threejs",{"_index":2682,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"coverage.html":{}}}],["src/app/shared/common/filter/filter",{"_index":1190,"title":{},"body":{"classes/FilterBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/resolvers/tissue",{"_index":2974,"title":{},"body":{"guards/TissueResolverService.html":{},"coverage.html":{}}}],["src/app/shared/services/body",{"_index":859,"title":{},"body":{"injectables/BodyDataService.html":{},"coverage.html":{}}}],["src/app/shared/services/database/local/local",{"_index":1542,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"coverage.html":{}}}],["src/app/shared/services/navigation/navigation.service",{"_index":2520,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts",{"_index":1736,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:106",{"_index":1753,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:114",{"_index":1755,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:122",{"_index":1760,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:52",{"_index":1781,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:58",{"_index":1769,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:63",{"_index":1764,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:68",{"_index":1762,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:73",{"_index":1779,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:78",{"_index":1774,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:83",{"_index":1777,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:88",{"_index":1766,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/navigation/navigation.service.ts:96",{"_index":1749,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/services/ontology",{"_index":1971,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["src/app/shared/services/ontology/ontology.service.ts",{"_index":2018,"title":{},"body":{"injectables/OntologyService.html":{},"coverage.html":{}}}],["src/app/shared/services/ontology/ontology.service.ts:20",{"_index":2023,"title":{},"body":{"injectables/OntologyService.html":{}}}],["src/app/shared/services/ontology/ontology.service.ts:39",{"_index":2025,"title":{},"body":{"injectables/OntologyService.html":{}}}],["src/app/shared/services/organ",{"_index":1152,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"coverage.html":{}}}],["src/app/shared/services/search/search.service.ts",{"_index":2534,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/search/search.service.ts:108",{"_index":2561,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/search/search.service.ts:117",{"_index":2564,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/search/search.service.ts:127",{"_index":2559,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/search/search.service.ts:55",{"_index":2569,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/search/search.service.ts:60",{"_index":2567,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/search/search.service.ts:72",{"_index":2549,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/search/search.service.ts:81",{"_index":2555,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/search/search.service.ts:90",{"_index":2544,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/search/search.service.ts:99",{"_index":2547,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/tissue",{"_index":2921,"title":{},"body":{"injectables/TissueDataService.html":{},"coverage.html":{}}}],["src/app/shared/services/tissues",{"_index":3022,"title":{},"body":{"injectables/TissuesBrowserDataService.html":{},"coverage.html":{}}}],["src/app/shared/state/database/database.models.ts",{"_index":519,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"coverage.html":{}}}],["src/app/shared/state/icon",{"_index":1424,"title":{},"body":{"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/state/navigation/navigation.model.ts",{"_index":1861,"title":{},"body":{"interfaces/NavigationStateModel.html":{},"coverage.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts",{"_index":1803,"title":{},"body":{"classes/NavigationState.html":{},"coverage.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts:108",{"_index":1829,"title":{},"body":{"classes/NavigationState.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts:125",{"_index":1827,"title":{},"body":{"classes/NavigationState.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts:28",{"_index":1813,"title":{},"body":{"classes/NavigationState.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts:34",{"_index":1831,"title":{},"body":{"classes/NavigationState.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts:42",{"_index":1818,"title":{},"body":{"classes/NavigationState.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts:50",{"_index":1816,"title":{},"body":{"classes/NavigationState.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts:58",{"_index":1835,"title":{},"body":{"classes/NavigationState.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts:68",{"_index":1812,"title":{},"body":{"classes/NavigationState.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts:83",{"_index":1822,"title":{},"body":{"classes/NavigationState.html":{}}}],["src/app/shared/state/navigation/navigation.state.ts:98",{"_index":1819,"title":{},"body":{"classes/NavigationState.html":{}}}],["src/app/shared/state/ontology/internal/json",{"_index":1501,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/state/ontology/ontology.model",{"_index":2517,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/shared/state/ontology/ontology.model.ts",{"_index":1864,"title":{},"body":{"interfaces/OntologyNode.html":{},"interfaces/OntologyStateModel.html":{},"coverage.html":{}}}],["src/app/shared/state/ontology/ontology.state",{"_index":2518,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/shared/state/ontology/ontology.state.ts",{"_index":2035,"title":{},"body":{"classes/OntologyState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/state/ontology/ontology.state.ts:111",{"_index":2037,"title":{},"body":{"classes/OntologyState.html":{}}}],["src/app/shared/state/ontology/ontology.state.ts:87",{"_index":2039,"title":{},"body":{"classes/OntologyState.html":{}}}],["src/app/shared/state/ontology/ontology.state.ts:95",{"_index":2041,"title":{},"body":{"classes/OntologyState.html":{}}}],["src/app/shared/state/ontology/ontology.state.ts:97",{"_index":2036,"title":{},"body":{"classes/OntologyState.html":{}}}],["src/app/shared/state/organ",{"_index":1150,"title":{},"body":{"interfaces/CountMetaData.html":{},"coverage.html":{}}}],["src/app/shared/state/search/search.action.ts",{"_index":2667,"title":{},"body":{"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"coverage.html":{}}}],["src/app/shared/state/search/search.action.ts:23",{"_index":2677,"title":{},"body":{"classes/SetAgeRangeFilter.html":{}}}],["src/app/shared/state/search/search.action.ts:39",{"_index":2669,"title":{},"body":{"classes/SelectTMC.html":{}}}],["src/app/shared/state/search/search.action.ts:54",{"_index":3137,"title":{},"body":{"classes/UnselectTMC.html":{}}}],["src/app/shared/state/search/search.action.ts:69",{"_index":2675,"title":{},"body":{"classes/SelectTechnology.html":{}}}],["src/app/shared/state/search/search.action.ts:8",{"_index":2679,"title":{},"body":{"classes/SetGenderFilter.html":{}}}],["src/app/shared/state/search/search.action.ts:84",{"_index":3138,"title":{},"body":{"classes/UnselectTechnology.html":{}}}],["src/app/shared/state/search/search.action.ts:99",{"_index":2681,"title":{},"body":{"classes/SetLocation.html":{}}}],["src/app/shared/state/search/search.model.ts",{"_index":2663,"title":{},"body":{"interfaces/SearchStateModel.html":{},"coverage.html":{}}}],["src/app/shared/state/search/search.state.ts",{"_index":2590,"title":{},"body":{"classes/SearchState.html":{},"coverage.html":{}}}],["src/app/shared/state/search/search.state.ts:112",{"_index":2620,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:120",{"_index":2617,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:128",{"_index":2603,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:137",{"_index":2614,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:146",{"_index":2600,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:155",{"_index":2611,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:164",{"_index":2623,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:36",{"_index":2605,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:46",{"_index":2607,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:63",{"_index":2628,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:80",{"_index":2630,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/shared/state/search/search.state.ts:97",{"_index":2625,"title":{},"body":{"classes/SearchState.html":{}}}],["src/app/views/body/body",{"_index":1022,"title":{},"body":{"modules/BodyRoutingModule.html":{}}}],["src/app/views/body/body.component.ts",{"_index":752,"title":{},"body":{"components/BodyComponent.html":{},"coverage.html":{}}}],["src/app/views/body/body.component.ts:104",{"_index":810,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:115",{"_index":805,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:21",{"_index":815,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:26",{"_index":818,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:31",{"_index":820,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:36",{"_index":816,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:41",{"_index":773,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:54",{"_index":794,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:62",{"_index":789,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:72",{"_index":798,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:82",{"_index":783,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.component.ts:93",{"_index":777,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/views/body/body.module.ts",{"_index":1018,"title":{},"body":{"modules/BodyModule.html":{}}}],["src/app/views/home/home",{"_index":1421,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/views/home/home.component.ts",{"_index":1385,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/views/home/home.module.ts",{"_index":1419,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/views/main/main.component.ts",{"_index":1636,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/views/main/main.component.ts:18",{"_index":1643,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/views/main/main.module.ts",{"_index":1662,"title":{},"body":{"modules/MainModule.html":{}}}],["src/app/views/organ/organ",{"_index":2392,"title":{},"body":{"modules/OrganRoutingModule.html":{}}}],["src/app/views/organ/organ.component.ts",{"_index":2342,"title":{},"body":{"components/OrganComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/views/organ/organ.component.ts:22",{"_index":2353,"title":{},"body":{"components/OrganComponent.html":{}}}],["src/app/views/organ/organ.component.ts:25",{"_index":2350,"title":{},"body":{"components/OrganComponent.html":{}}}],["src/app/views/organ/organ.component.ts:32",{"_index":2355,"title":{},"body":{"components/OrganComponent.html":{}}}],["src/app/views/organ/organ.component.ts:41",{"_index":2352,"title":{},"body":{"components/OrganComponent.html":{}}}],["src/app/views/organ/organ.component.ts:52",{"_index":2351,"title":{},"body":{"components/OrganComponent.html":{}}}],["src/app/views/organ/organ.module.ts",{"_index":2387,"title":{},"body":{"modules/OrganModule.html":{}}}],["src/app/views/tissue/tissue",{"_index":3011,"title":{},"body":{"modules/TissueRoutingModule.html":{}}}],["src/app/views/tissue/tissue.component.ts",{"_index":2758,"title":{},"body":{"components/TissueComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/views/tissue/tissue.component.ts:100",{"_index":2782,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:121",{"_index":2797,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:137",{"_index":2798,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:151",{"_index":2785,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:161",{"_index":2794,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:173",{"_index":2806,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:194",{"_index":2791,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:221",{"_index":2799,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:237",{"_index":2801,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:34",{"_index":2834,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:39",{"_index":2817,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:44",{"_index":2815,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:49",{"_index":2813,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:54",{"_index":2828,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:60",{"_index":2830,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:65",{"_index":2824,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:70",{"_index":2823,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:75",{"_index":2819,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:80",{"_index":2821,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:85",{"_index":2822,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:90",{"_index":2825,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.component.ts:95",{"_index":2829,"title":{},"body":{"components/TissueComponent.html":{}}}],["src/app/views/tissue/tissue.module.ts",{"_index":2968,"title":{},"body":{"modules/TissueModule.html":{}}}],["src/app/views/tissues",{"_index":3012,"title":{},"body":{"components/TissuesBrowserComponent.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":3229,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standards",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["stanford",{"_index":539,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["start",{"_index":429,"title":{},"body":{"components/AgeSelectorComponent.html":{},"modules/AppStateModule.html":{},"components/CalloutComponent.html":{},"components/OntologySearchComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":3139,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":3390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startwith",{"_index":1921,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["state",{"_index":342,"title":{},"body":{"components/AgeSelectorComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"components/GenderSelectorComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"components/TissueComponent.html":{},"guards/TissueResolverService.html":{},"miscellaneous/functions.html":{}}}],["state.activeorgan",{"_index":1842,"title":{},"body":{"classes/NavigationState.html":{}}}],["state.activeorgan.id",{"_index":1860,"title":{},"body":{"classes/NavigationState.html":{}}}],["state.activetissue",{"_index":1841,"title":{},"body":{"classes/NavigationState.html":{}}}],["state.location",{"_index":2634,"title":{},"body":{"classes/SearchState.html":{}}}],["state.module",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["state.module.ts",{"_index":720,"title":{},"body":{"modules/AppStateModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.nodes[state.root",{"_index":2088,"title":{},"body":{"classes/OntologyState.html":{}}}],["state.technologies",{"_index":2659,"title":{},"body":{"classes/SearchState.html":{}}}],["state.tissues",{"_index":1840,"title":{},"body":{"classes/NavigationState.html":{}}}],["state.tmc",{"_index":2656,"title":{},"body":{"classes/SearchState.html":{}}}],["state/database/database.models",{"_index":942,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"injectables/TissuesBrowserDataService.html":{}}}],["state/navigation/navigation.model",{"_index":1787,"title":{},"body":{"injectables/NavigationService.html":{},"guards/TissueResolverService.html":{}}}],["state/navigation/navigation.state",{"_index":1157,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/NavigationService.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{},"guards/TissueResolverService.html":{},"injectables/TissuesBrowserDataService.html":{}}}],["state/ontology/ontology.model",{"_index":1993,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"injectables/TissueDataService.html":{}}}],["state/ontology/ontology.state",{"_index":1994,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"interfaces/SearchResult.html":{}}}],["state/organ",{"_index":944,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["state/search/search.action",{"_index":2572,"title":{},"body":{"injectables/SearchService.html":{}}}],["state/search/search.model",{"_index":949,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/SearchService.html":{}}}],["state/search/search.state",{"_index":950,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"injectables/SearchService.html":{},"injectables/TissueDataService.html":{}}}],["statecontext",{"_index":1449,"title":{},"body":{"classes/IconRegistryState.html":{},"classes/NavigationState.html":{},"classes/OntologyState.html":{},"classes/SearchState.html":{}}}],["statements",{"_index":3197,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":743,"title":{},"body":{"modules/AppStateModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":402,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"classes/FlatNode.html":{},"classes/NavigationState.html":{},"classes/OntologyState.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchComponent.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["status",{"_index":1915,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/TissueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["stay",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["stayinsideimage",{"_index":2909,"title":{},"body":{"components/TissueComponent.html":{}}}],["step",{"_index":392,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["storage",{"_index":2143,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["store",{"_index":873,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/LocalDatabaseService.html":{},"classes/NavigationState.html":{},"injectables/OntologyService.html":{},"injectables/OrganDataService.html":{},"components/SearchComponent.html":{},"guards/TissueResolverService.html":{}}}],["store.select(searchstate.tissueimagefilterbuilder).pipe",{"_index":1848,"title":{},"body":{"classes/NavigationState.html":{}}}],["store.select(selector).pipe",{"_index":1005,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["storing",{"_index":1804,"title":{},"body":{"classes/NavigationState.html":{}}}],["strategy",{"_index":1069,"title":{},"body":{"components/CalloutComponent.html":{}}}],["string",{"_index":413,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MetadataComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(loget(this.item",{"_index":3113,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["string[]>(map",{"_index":1531,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":2568,"title":{},"body":{"injectables/SearchService.html":{},"miscellaneous/typealiases.html":{}}}],["stroke",{"_index":1143,"title":{},"body":{"components/CalloutComponent.html":{}}}],["structure",{"_index":1508,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/ValueObject.html":{}}}],["structures",{"_index":2433,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["style",{"_index":659,"title":{},"body":{"modules/AppRenderInitModule.html":{},"components/Organ3dComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["subject",{"_index":1710,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"license.html":{}}}],["subject.asobservable",{"_index":1794,"title":{},"body":{"injectables/NavigationService.html":{}}}],["subject.complete",{"_index":1793,"title":{},"body":{"injectables/NavigationService.html":{}}}],["subject.next(path",{"_index":1792,"title":{},"body":{"injectables/NavigationService.html":{}}}],["sublicense",{"_index":3324,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1397,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe(path",{"_index":2858,"title":{},"body":{"components/TissueComponent.html":{}}}],["subscribe(pixelspermeter",{"_index":2853,"title":{},"body":{"components/TissueComponent.html":{}}}],["subscription",{"_index":821,"title":{},"body":{"components/BodyComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"components/TissueComponent.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":1820,"title":{},"body":{"classes/NavigationState.html":{},"components/TissueComponent.html":{}}}],["subscriptiotns",{"_index":793,"title":{},"body":{"components/BodyComponent.html":{}}}],["subsequent",{"_index":1165,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["substantial",{"_index":3335,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":208,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["subtree",{"_index":2078,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["subtrees",{"_index":2068,"title":{},"body":{"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["subviews",{"_index":1638,"title":{},"body":{"components/MainComponent.html":{}}}],["success",{"_index":2401,"title":{},"body":{"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["successful",{"_index":2989,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["successfully",{"_index":2399,"title":{},"body":{"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{}}}],["such",{"_index":352,"title":{},"body":{"components/AgeSelectorComponent.html":{},"miscellaneous/functions.html":{}}}],["suffix",{"_index":423,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/OntologySearchService.html":{},"components/OrganComponent.html":{},"interfaces/SearchResult.html":{}}}],["suffix}${count",{"_index":840,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["support",{"_index":3359,"title":{},"body":{"modules.html":{}}}],["supporting",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{}}}],["supports",{"_index":1391,"title":{},"body":{"components/HomeComponent.html":{}}}],["svg",{"_index":569,"title":{},"body":{"interfaces/Annotated.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/LocalDatabase.html":{},"components/NavigationComponent.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"dependencies.html":{},"modules.html":{}}}],["svggraphicselement",{"_index":1052,"title":{},"body":{"components/CalloutComponent.html":{}}}],["switch",{"_index":2464,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["switchmap",{"_index":936,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OrganDataService.html":{},"injectables/TissueDataService.html":{}}}],["switchmap(active",{"_index":2946,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["switchmap(filter",{"_index":961,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["switchmap(id",{"_index":1176,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["switchmap(queryfun",{"_index":1007,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["switchmap(tissuefilter",{"_index":1850,"title":{},"body":{"classes/NavigationState.html":{}}}],["switchmap(value",{"_index":1928,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["syn",{"_index":1625,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["sync",{"_index":474,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["synonym",{"_index":1984,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/TissueDataService.html":{}}}],["synonymlabels",{"_index":1540,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/ValueObject.html":{}}}],["synonyms",{"_index":1512,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["synonymsextractor",{"_index":1529,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["synonymsextractor(json",{"_index":1541,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsproperty",{"_index":1528,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["systems",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{}}}],["t",{"_index":896,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{}}}],["tab",{"_index":2473,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["table",{"_index":1680,"title":{},"body":{"components/MetadataComponent.html":{},"interfaces/OntologyNode.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OrganComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3231,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":2446,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["take",{"_index":2991,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["take(1",{"_index":3003,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["talks",{"_index":1159,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["tap",{"_index":2045,"title":{},"body":{"classes/OntologyState.html":{}}}],["tap(linkchildren",{"_index":2095,"title":{},"body":{"classes/OntologyState.html":{}}}],["target",{"_index":440,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["team",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{}}}],["technologies",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"changelog.html":{}}}],["technology",{"_index":576,"title":{},"body":{"interfaces/Annotated.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"changelog.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["temporary",{"_index":2052,"title":{},"body":{"classes/OntologyState.html":{}}}],["term",{"_index":1956,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["test",{"_index":2136,"title":{},"body":{"components/OntologyTreeComponent.html":{},"components/TissueComponent.html":{}}}],["testing",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":852,"title":{},"body":{"components/BodyComponent.html":{},"components/HomeComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"interfaces/SearchResult.html":{}}}],["text'}).pipe",{"_index":1597,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this._database",{"_index":1594,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this._getchildren",{"_index":2180,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["this._nodes",{"_index":2176,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["this.aboutmodal.closeall",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.activeorgan.pipe",{"_index":1172,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["this.activepopoveritem",{"_index":3046,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["this.activetissue.pipe",{"_index":2945,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["this.activetissue.pipe(pluck('metadata",{"_index":2953,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["this.activetissue.pipe(pluck('pixelspermeter",{"_index":2952,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["this.activetissue.pipe(pluck('slice",{"_index":2954,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["this.activetissue.pipe(pluck('tileurl",{"_index":2951,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["this.addfilter(matchesproperty(path",{"_index":1273,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.addfilter(obj",{"_index":1279,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.addlight",{"_index":2316,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.basepath}/${id}/organ.svg#organ",{"_index":1174,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["this.baserotation",{"_index":2313,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.basescene",{"_index":2309,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.bodyimagepath",{"_index":831,"title":{},"body":{"components/BodyComponent.html":{}}}],["this.bodyoverlays",{"_index":833,"title":{},"body":{"components/BodyComponent.html":{}}}],["this.bodyservice.getbodyoverlays",{"_index":834,"title":{},"body":{"components/BodyComponent.html":{}}}],["this.bodyservice.getbodysourcepath",{"_index":832,"title":{},"body":{"components/BodyComponent.html":{}}}],["this.bodyservice.getmetadata(organ).subscribe(metadata",{"_index":838,"title":{},"body":{"components/BodyComponent.html":{}}}],["this.boundary.getbbox",{"_index":1133,"title":{},"body":{"components/CalloutComponent.html":{}}}],["this.camera",{"_index":2756,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.camera.projectionmatrix",{"_index":2753,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.cancelupdates",{"_index":1118,"title":{},"body":{"components/CalloutComponent.html":{}}}],["this.categories",{"_index":2448,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["this.control",{"_index":2177,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["this.countobservablemap.get(sample",{"_index":969,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["this.countobservablemap.has(sample",{"_index":968,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["this.countobservablemap.set(sample",{"_index":971,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["this.createcountsobservable(sample.id",{"_index":970,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["this.database$.pipe(pluck(field",{"_index":1612,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this.database.gettissueimages(tissue",{"_index":3000,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["this.database.gettissueoverlays(overlay",{"_index":2947,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["this.dataservice",{"_index":2856,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.dataservice.activatedoverlay$.subscribe(overlay",{"_index":2847,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.dataservice.getmetadata().pipe(map(data",{"_index":2812,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.dataservice.getorganname().pipe(map(capitalize",{"_index":2814,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.dataservice.gettissueoverlays().pipe(share",{"_index":2827,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.dataservice.gettissuepixelspermeter",{"_index":2852,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.datasource.data",{"_index":2178,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["this.dialog.open(aboutcomponent",{"_index":1362,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.emulatedhttpdelay",{"_index":1617,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this.fetchtissue(tissueid",{"_index":2995,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["this.filteredresults",{"_index":1924,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.findmatchingoverlay(location",{"_index":2938,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["this.findtissue(tissueid",{"_index":2994,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["this.flattener",{"_index":2150,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["this.formatlabel(node.label",{"_index":2008,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.formcontrol.reset",{"_index":1939,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.formcontrol.valuechanges.pipe",{"_index":1925,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.getcenter(this.boundary",{"_index":1127,"title":{},"body":{"components/CalloutComponent.html":{}}}],["this.getcenter(this.centroid",{"_index":1125,"title":{},"body":{"components/CalloutComponent.html":{}}}],["this.getchildren",{"_index":2030,"title":{},"body":{"injectables/OntologyService.html":{}}}],["this.getchildren.bind(this",{"_index":2031,"title":{},"body":{"injectables/OntologyService.html":{}}}],["this.getcountsfor",{"_index":973,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["this.getcountsfor('gettissueimages",{"_index":1184,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["this.getcountsfor('gettissueslices",{"_index":1182,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["this.getindexofmatch(label",{"_index":2013,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getindexofmatch(node.label",{"_index":2007,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.hoverorganname",{"_index":837,"title":{},"body":{"components/BodyComponent.html":{}}}],["this.http.get(environment.ontologyurl",{"_index":2090,"title":{},"body":{"classes/OntologyState.html":{}}}],["this.http.get(this.localdatabaseurl",{"_index":1595,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this.id",{"_index":2731,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.initializesliderpopover",{"_index":448,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["this.initializeviewer",{"_index":2850,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.issliderinitialized",{"_index":454,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["this.isslideropen",{"_index":447,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["this.isvalidsvgelement(boundary",{"_index":1119,"title":{},"body":{"components/CalloutComponent.html":{}}}],["this.isvalidsvgelement(centroid",{"_index":1120,"title":{},"body":{"components/CalloutComponent.html":{}}}],["this.layer",{"_index":2306,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.layer.scene.add(light",{"_index":2318,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.layer.scene.add(scene",{"_index":2328,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.layer.scene.remove(this.basescene",{"_index":2307,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.lightcolor",{"_index":2256,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.lightintensity",{"_index":2257,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.loadbase",{"_index":2308,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.loadgltf(this.base",{"_index":2323,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.localdatabase.getpatients(filter",{"_index":962,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["this.localdatabase.gettissuesamples(filter",{"_index":1179,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["this.location",{"_index":2934,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["this.lookup(nodes",{"_index":1999,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.map",{"_index":2314,"title":{},"body":{"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.map.addlayer(this.layer",{"_index":2315,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.map.triggerrepaint",{"_index":2757,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.metadata",{"_index":839,"title":{},"body":{"components/BodyComponent.html":{}}}],["this.metadatasubscription",{"_index":835,"title":{},"body":{"components/BodyComponent.html":{}}}],["this.metadatasubscription.unsubscribe",{"_index":836,"title":{},"body":{"components/BodyComponent.html":{}}}],["this.navigation.pipe(pluck('activeorgan",{"_index":1773,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.navigation.pipe(pluck('activetissue",{"_index":1776,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.navigationservice.navigatetotissuebrowser",{"_index":2523,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.navigator.navigatetohome",{"_index":3010,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["this.nodes",{"_index":2181,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["this.nodes$.pipe",{"_index":1997,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.nodeselected.emit(selectednode",{"_index":2197,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["this.options.ceil",{"_index":374,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["this.options.floor",{"_index":385,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["this.options.position",{"_index":2739,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.original.children.length",{"_index":1317,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.original.label",{"_index":1316,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.overlay.position().flexibleconnectedto(this.element).withpositions([connectedposition",{"_index":1131,"title":{},"body":{"components/CalloutComponent.html":{}}}],["this.overlayactivationsubscription",{"_index":2846,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.overlayactivationsubscription.unsubscribe",{"_index":2862,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.overlayheight",{"_index":2903,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.overlayref",{"_index":435,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["this.overlayref.dispose",{"_index":439,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["this.overlayviewbox",{"_index":2904,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.overlayvisibility.get(overlay",{"_index":2864,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.overlayvisibility.set(overlay",{"_index":2872,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.overlaywidth",{"_index":2902,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.pathtoimages}/${id",{"_index":956,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["this.pathtoimages}/overlays/${s}/${s}.svg",{"_index":967,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["this.patientfilterbuilder.pipe",{"_index":957,"title":{},"body":{"injectables/BodyDataService.html":{}}}],["this.pluralizesuffix(count",{"_index":841,"title":{},"body":{"components/BodyComponent.html":{},"components/OrganComponent.html":{}}}],["this.query('images",{"_index":1610,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this.query('overlays",{"_index":1611,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this.query('patients",{"_index":1607,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this.query('samples",{"_index":1608,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this.query('slices",{"_index":1609,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this.registry[methodname](...args",{"_index":1488,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["this.renderer",{"_index":2733,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.renderer.autoclear",{"_index":2737,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.renderer.dispose",{"_index":2750,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.renderer.render(this.scene",{"_index":2755,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.renderer.state.reset",{"_index":2754,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.resetpositionscalerotation(this.basescene",{"_index":2310,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.sanitizer.bypasssecuritytruststyle(`url(${this.item.thumbnailurl",{"_index":3075,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["this.scalebar",{"_index":2906,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.scene.dispose",{"_index":2749,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.sceneopacity",{"_index":2326,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.scenesize",{"_index":2312,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.scheduleupdates",{"_index":1128,"title":{},"body":{"components/CalloutComponent.html":{}}}],["this.search.setgender(gender",{"_index":1327,"title":{},"body":{"components/GenderSelectorComponent.html":{}}}],["this.searchactive",{"_index":1714,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.searchactivechange",{"_index":1712,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.searchactivesubject.asobservable",{"_index":1713,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.searchactivesubject.next(this.searchactive",{"_index":1715,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.searchservice.filter(value",{"_index":1929,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.searchservice.selecttechnology(filter",{"_index":2465,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["this.searchservice.selecttmc(filter",{"_index":2467,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["this.searchservice.unselecttechnology(filter",{"_index":2469,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["this.searchservice.unselecttmc(filter",{"_index":2470,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["this.searchstate.pipe",{"_index":951,"title":{},"body":{"injectables/BodyDataService.html":{},"injectables/SearchService.html":{}}}],["this.select(flatnode",{"_index":2193,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["this.selected.emit(node",{"_index":1938,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.selectedfiltercategories.get(category",{"_index":2451,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["this.selectedfiltercategories.set(category",{"_index":2452,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["this.selectednode",{"_index":2192,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["this.setactiveorgan(ctx",{"_index":1846,"title":{},"body":{"classes/NavigationState.html":{}}}],["this.setactivetissue(ctx",{"_index":1845,"title":{},"body":{"classes/NavigationState.html":{}}}],["this.setoverlaysize",{"_index":2894,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.setpatientontologypositions(db",{"_index":1605,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this.setpositionscalerotation(scene",{"_index":2327,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.setpositionscalerotation(this.basescene",{"_index":2311,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["this.setscalebar(pixelspermeter",{"_index":2854,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.setvisibility(overlay",{"_index":2848,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.sortbysynonymresult",{"_index":1932,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.sortlexically",{"_index":1933,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.store.select(ontologystate",{"_index":1600,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["this.store.select(searchstate.tissuesamplefilterbuilder).pipe",{"_index":1177,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["this.store.selectsnapshot(navigationstate",{"_index":2996,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["this.store.selectsnapshot(ontologystate",{"_index":2032,"title":{},"body":{"injectables/OntologyService.html":{},"components/SearchComponent.html":{}}}],["this.tilesourcesubscription",{"_index":2855,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.tilesourcesubscription.unsubscribe",{"_index":2860,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.tissueoverlay",{"_index":2935,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["this.tissuepixelspermetersubscription",{"_index":2851,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.tissuepixelspermetersubscription.unsubscribe",{"_index":2861,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.tissuessubscription",{"_index":1852,"title":{},"body":{"classes/NavigationState.html":{}}}],["this.tissuessubscription.unsubscribe",{"_index":1855,"title":{},"body":{"classes/NavigationState.html":{}}}],["this.transformmatrix",{"_index":2745,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.tree.expandandselect(ontologynode",{"_index":2521,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.unitscale",{"_index":2743,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["this.update",{"_index":1116,"title":{},"body":{"components/CalloutComponent.html":{}}}],["this.updater",{"_index":1138,"title":{},"body":{"components/CalloutComponent.html":{}}}],["this.updatesearchstate('select",{"_index":2455,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["this.updatesearchstate('unselect",{"_index":2457,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["this.url.pipe(map(url",{"_index":1765,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.viewer",{"_index":2874,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.viewer.destroy",{"_index":2863,"title":{},"body":{"components/TissueComponent.html":{}}}],["this.viewer.open(path",{"_index":2859,"title":{},"body":{"components/TissueComponent.html":{}}}],["three",{"_index":2294,"title":{},"body":{"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"dependencies.html":{}}}],["three/examples/jsm/loaders/gltfloader",{"_index":2296,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["threejs",{"_index":2283,"title":{},"body":{"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["threejslayer",{"_index":2281,"title":{"classes/ThreeJsLayer.html":{}},"body":{"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"coverage.html":{}}}],["threejslayeroptions",{"_index":2695,"title":{"interfaces/ThreeJsLayerOptions.html":{}},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"coverage.html":{}}}],["through",{"_index":2394,"title":{},"body":{"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["throw",{"_index":1472,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["throwifempty",{"_index":2992,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["thumbnail",{"_index":592,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["thumbnailmetadata",{"_index":593,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["thumbnailurl",{"_index":591,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["tile",{"_index":2826,"title":{},"body":{"components/TissueComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["tile's",{"_index":3073,"title":{},"body":{"components/TissuesBrowserGridItemComponent.html":{}}}],["tiled",{"_index":594,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["tiles",{"_index":596,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["tilesourcesubscription",{"_index":2770,"title":{},"body":{"components/TissueComponent.html":{}}}],["tiletype",{"_index":597,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["tileurl",{"_index":595,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["time",{"_index":544,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"components/OntologyTreeComponent.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["timeouts",{"_index":1090,"title":{},"body":{"components/CalloutComponent.html":{}}}],["tissue",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Annotated.html":{},"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/SearchState.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"modules/TissueModule.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"changelog.html":{}}}],["tissue'},{'name",{"_index":258,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["tissue.component",{"_index":2971,"title":{},"body":{"modules/TissueModule.html":{},"modules/TissueRoutingModule.html":{}}}],["tissue.component.html",{"_index":2761,"title":{},"body":{"components/TissueComponent.html":{}}}],["tissue.component.scss",{"_index":2760,"title":{},"body":{"components/TissueComponent.html":{}}}],["tissue.id",{"_index":3001,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["tissue.slice.sample.patient.anatomicallocations[0",{"_index":1858,"title":{},"body":{"classes/NavigationState.html":{}}}],["tissue.wrapper",{"_index":2913,"title":{},"body":{"components/TissueComponent.html":{}}}],["tissue/:tissueid",{"_index":707,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tissuecell",{"_index":609,"title":{"interfaces/TissueCell.html":{}},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"coverage.html":{}}}],["tissuecomponent",{"_index":257,"title":{"components/TissueComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"modules/TissueModule.html":{},"modules/TissueRoutingModule.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tissuedataservice",{"_index":2780,"title":{"injectables/TissueDataService.html":{}},"body":{"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"modules/TissueModule.html":{},"coverage.html":{},"overview.html":{}}}],["tissueid",{"_index":1754,"title":{},"body":{"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"guards/TissueResolverService.html":{}}}],["tissueimage",{"_index":575,"title":{"interfaces/TissueImage.html":{}},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/Patient.html":{},"classes/SearchState.html":{},"interfaces/TissueCell.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{}}}],["tissueimagefilterbuilder",{"_index":2595,"title":{},"body":{"classes/SearchState.html":{}}}],["tissueimagefilterbuilder(state",{"_index":2624,"title":{},"body":{"classes/SearchState.html":{}}}],["tissueimages",{"_index":1154,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["tissueimagescount",{"_index":998,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetaData.html":{}}}],["tissuemodule",{"_index":2962,"title":{"modules/TissueModule.html":{}},"body":{"modules/TissueModule.html":{},"modules.html":{},"overview.html":{}}}],["tissueoverlay",{"_index":605,"title":{"interfaces/TissueOverlay.html":{}},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"coverage.html":{}}}],["tissuepath",{"_index":1742,"title":{},"body":{"injectables/NavigationService.html":{}}}],["tissuepixelspermetersubscription",{"_index":2771,"title":{},"body":{"components/TissueComponent.html":{}}}],["tissueresolverservice",{"_index":689,"title":{"guards/TissueResolverService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TissueResolverService.html":{},"coverage.html":{}}}],["tissueroutingmodule",{"_index":2967,"title":{"modules/TissueRoutingModule.html":{}},"body":{"modules/TissueModule.html":{},"modules/TissueRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tissues",{"_index":260,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{}}}],["tissues(state",{"_index":1830,"title":{},"body":{"classes/NavigationState.html":{}}}],["tissues.length",{"_index":3005,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["tissuesample",{"_index":567,"title":{"interfaces/TissueSample.html":{}},"body":{"interfaces/Annotated.html":{},"interfaces/CountMetadata.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/SearchState.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"coverage.html":{}}}],["tissuesamplefilterbuilder",{"_index":2596,"title":{},"body":{"classes/SearchState.html":{}}}],["tissuesamplefilterbuilder(state",{"_index":2627,"title":{},"body":{"classes/SearchState.html":{}}}],["tissuesamples",{"_index":1155,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["tissuesamplescount",{"_index":996,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetaData.html":{}}}],["tissuesbrowsercomponent",{"_index":259,"title":{"components/TissuesBrowserComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tissuesbrowserdataservice",{"_index":3017,"title":{"injectables/TissuesBrowserDataService.html":{}},"body":{"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"modules/TissuesBrowserModule.html":{},"coverage.html":{},"overview.html":{}}}],["tissuesbrowsergridcomponent",{"_index":262,"title":{"components/TissuesBrowserGridComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tissuesbrowsergriditemcomponent",{"_index":265,"title":{"components/TissuesBrowserGridItemComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"modules/TissuesBrowserGridItemModule.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tissuesbrowsergriditemmodule",{"_index":3078,"title":{"modules/TissuesBrowserGridItemModule.html":{}},"body":{"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules.html":{},"overview.html":{}}}],["tissuesbrowsergridmodule",{"_index":3084,"title":{"modules/TissuesBrowserGridModule.html":{}},"body":{"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["tissuesbrowsergridpopovercontentcomponent",{"_index":268,"title":{"components/TissuesBrowserGridPopoverContentComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"coverage.html":{},"overview.html":{}}}],["tissuesbrowsergridpopovercontentmodule",{"_index":3089,"title":{"modules/TissuesBrowserGridPopoverContentModule.html":{}},"body":{"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules.html":{},"overview.html":{}}}],["tissuesbrowsermodule",{"_index":3127,"title":{"modules/TissuesBrowserModule.html":{}},"body":{"modules/TissuesBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["tissuesbrowserpath",{"_index":1743,"title":{},"body":{"injectables/NavigationService.html":{}}}],["tissuesbrowserroutingmodule",{"_index":3132,"title":{"modules/TissuesBrowserRoutingModule.html":{}},"body":{"modules/TissuesBrowserModule.html":{},"modules/TissuesBrowserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tissueslice",{"_index":572,"title":{"interfaces/TissueSlice.html":{}},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"interfaces/Patient.html":{},"classes/SearchState.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"coverage.html":{}}}],["tissueslicefilterbuilder",{"_index":2597,"title":{},"body":{"classes/SearchState.html":{}}}],["tissueslicefilterbuilder(state",{"_index":2629,"title":{},"body":{"classes/SearchState.html":{}}}],["tissueslices",{"_index":1156,"title":{},"body":{"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["tissueslicescount",{"_index":997,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetaData.html":{}}}],["tissuessource",{"_index":1847,"title":{},"body":{"classes/NavigationState.html":{}}}],["tissuessource.subscribe(tissues",{"_index":1853,"title":{},"body":{"classes/NavigationState.html":{}}}],["tissuessubscription",{"_index":1806,"title":{},"body":{"classes/NavigationState.html":{}}}],["tisues",{"_index":1672,"title":{},"body":{"components/MetadataComponent.html":{}}}],["title",{"_index":207,"title":{},"body":{"components/AboutComponent.html":{},"components/TissueComponent.html":{}}}],["tmc",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Annotated.html":{},"components/HomeComponent.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"changelog.html":{}}}],["tmcs",{"_index":2461,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SearchStateModel.html":{}}}],["todo",{"_index":910,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"components/SearchComponent.html":{},"guards/TissueResolverService.html":{}}}],["tofilter",{"_index":1201,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["toggle",{"_index":1332,"title":{},"body":{"components/GenderSelectorComponent.html":{},"modules/GenderSelectorModule.html":{},"components/OntologyTreeComponent.html":{},"components/TissueComponent.html":{},"modules/TissueModule.html":{},"changelog.html":{}}}],["toggled",{"_index":2360,"title":{},"body":{"components/OrganComponent.html":{},"components/TissueComponent.html":{},"miscellaneous/variables.html":{}}}],["toggles",{"_index":369,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/NavigationComponent.html":{},"components/TissueComponent.html":{}}}],["togglesearchactive",{"_index":1694,"title":{},"body":{"components/NavigationComponent.html":{}}}],["togglesliderpopover",{"_index":323,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["token",{"_index":664,"title":{},"body":{"modules/AppRenderInitModule.html":{},"miscellaneous/variables.html":{}}}],["tolower",{"_index":2950,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["tolower(location.id",{"_index":2958,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["tolower(location.label",{"_index":2959,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["tolower(synonym",{"_index":2961,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["toolbar",{"_index":1354,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["tooltip",{"_index":2499,"title":{},"body":{"components/SearchComponent.html":{}}}],["top",{"_index":204,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"modules/AppStateModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"miscellaneous/variables.html":{}}}],["topairs",{"_index":3111,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["tort",{"_index":3354,"title":{},"body":{"license.html":{}}}],["touch",{"_index":351,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["track",{"_index":2443,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["trackbylabel",{"_index":3099,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["trackbylabel(metadata",{"_index":3102,"title":{},"body":{"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["tracks",{"_index":1913,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["transform",{"_index":2738,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["transformation",{"_index":2707,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["transformmatrix",{"_index":2690,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["transparent",{"_index":2475,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"miscellaneous/functions.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"miscellaneous/functions.html":{}}}],["tree's",{"_index":2042,"title":{},"body":{"classes/OntologyState.html":{}}}],["tree'},{'name",{"_index":248,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["tree.component",{"_index":2219,"title":{},"body":{"modules/OntologyTreeModule.html":{},"components/SearchComponent.html":{}}}],["tree.component.html",{"_index":2106,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.scss",{"_index":2105,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts",{"_index":2102,"title":{},"body":{"components/OntologyTreeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tree.component.ts:106",{"_index":2128,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:139",{"_index":2134,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:150",{"_index":2138,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:160",{"_index":2140,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:33",{"_index":2124,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:38",{"_index":2161,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:44",{"_index":2122,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:49",{"_index":2164,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:54",{"_index":2125,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:59",{"_index":2157,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:64",{"_index":2148,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:69",{"_index":2156,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:77",{"_index":2151,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:82",{"_index":2159,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:87",{"_index":2145,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.component.ts:92",{"_index":2119,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.container",{"_index":2203,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree.module",{"_index":2532,"title":{},"body":{"modules/SearchModule.html":{}}}],["tree.module.ts",{"_index":2215,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["tree.tooltip",{"_index":2210,"title":{},"body":{"components/OntologyTreeComponent.html":{}}}],["tree/ontology",{"_index":2101,"title":{},"body":{"components/OntologyTreeComponent.html":{},"modules/OntologyTreeModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tree/shared/flat",{"_index":1295,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["triggered",{"_index":1901,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["trim",{"_index":2460,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["trimmed",{"_index":2430,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["true",{"_index":395,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"components/MainComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"classes/SearchState.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1486,"title":{},"body":{"classes/IconRegistryState.html":{}}}],["tslib",{"_index":3259,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable:no",{"_index":2869,"title":{},"body":{"components/TissueComponent.html":{}}}],["tslint:enable:no",{"_index":2871,"title":{},"body":{"components/TissueComponent.html":{}}}],["tuned",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":2664,"title":{},"body":{"interfaces/SearchStateModel.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"modules/AppRenderInitModule.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetaData.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"classes/FlatNode.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NavigationState.html":{},"interfaces/NavigationStateModel.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyService.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserComponent.html":{},"injectables/TissuesBrowserDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3369,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1927,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["typing",{"_index":1863,"title":{},"body":{"interfaces/NavigationStateModel.html":{},"changelog.html":{}}}],["u",{"_index":1209,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["uberon",{"_index":552,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["uberon_xxxx",{"_index":553,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["ucsd",{"_index":538,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["ui",{"_index":630,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/SearchCategoriesComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":404,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"classes/FilterBuilder.html":{},"components/GenderSelectorComponent.html":{},"classes/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"classes/NavigationState.html":{},"interfaces/OntologyNode.html":{},"classes/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"interfaces/Patient.html":{},"injectables/SearchService.html":{},"classes/SearchState.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/IconDefinition.html":{}}}],["underline",{"_index":1957,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["understanding",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{}}}],["uniq",{"_index":1591,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["uniq(flatmap(baseids",{"_index":1632,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["unique",{"_index":524,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["unit",{"_index":2711,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["unitscale",{"_index":2691,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["university",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/SearchComponent.html":{},"index.html":{}}}],["unless",{"_index":620,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["unselect",{"_index":2468,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"injectables/SearchService.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{}}}],["unselected",{"_index":2440,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"injectables/SearchService.html":{}}}],["unselecttechnology",{"_index":2541,"title":{"classes/UnselectTechnology.html":{}},"body":{"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"coverage.html":{}}}],["unselecttechnology(technology",{"_index":2560,"title":{},"body":{"injectables/SearchService.html":{}}}],["unselecttmc",{"_index":2542,"title":{"classes/UnselectTMC.html":{}},"body":{"injectables/SearchService.html":{},"classes/SearchState.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"coverage.html":{}}}],["unselecttmc(tmc",{"_index":2563,"title":{},"body":{"injectables/SearchService.html":{}}}],["unset",{"_index":2808,"title":{},"body":{"components/TissueComponent.html":{}}}],["unsets",{"_index":2807,"title":{},"body":{"components/TissueComponent.html":{}}}],["unsubscribing",{"_index":791,"title":{},"body":{"components/BodyComponent.html":{}}}],["until",{"_index":405,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["up",{"_index":361,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"components/CalloutComponent.html":{},"interfaces/LocalDatabase.html":{},"classes/NavigationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/Patient.html":{},"interfaces/SearchResult.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"changelog.html":{}}}],["update",{"_index":1043,"title":{},"body":{"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"components/GenderSelectorComponent.html":{},"classes/NavigationState.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{}}}],["updateactivefromroute",{"_index":1810,"title":{},"body":{"classes/NavigationState.html":{}}}],["updateactivefromroute(ctx",{"_index":1832,"title":{},"body":{"classes/NavigationState.html":{}}}],["updated",{"_index":914,"title":{},"body":{"injectables/BodyDataService.html":{},"components/Organ3dComponent.html":{},"components/TissueComponent.html":{},"changelog.html":{}}}],["updater",{"_index":1034,"title":{},"body":{"components/CalloutComponent.html":{}}}],["updates",{"_index":364,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"classes/NavigationState.html":{},"classes/SearchState.html":{},"changelog.html":{}}}],["updatesearchstate",{"_index":2415,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["updatesearchstate(operation",{"_index":2435,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["updating",{"_index":341,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["upgraded",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":2552,"title":{},"body":{"injectables/SearchService.html":{}}}],["url",{"_index":568,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/IconDefinition.html":{},"classes/IconRegistryState.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/Organ3dComponent.html":{},"interfaces/Patient.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridItemComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1447,"title":{},"body":{"classes/IconRegistryState.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["use",{"_index":481,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"classes/FilterBuilder.html":{},"classes/IconRegistryState.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"license.html":{}}}],["used",{"_index":333,"title":{},"body":{"components/AgeSelectorComponent.html":{},"interfaces/Annotated.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"interfaces/CountMetadata.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"interfaces/LocalDatabase.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"classes/OntologyState.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"interfaces/TissueCell.html":{},"components/TissueComponent.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"guards/TissueResolverService.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridItemComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/BodyComponent.html":{},"components/HomeComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["user's",{"_index":785,"title":{},"body":{"components/BodyComponent.html":{}}}],["users",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":2437,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["usually",{"_index":907,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["util",{"_index":2302,"title":{},"body":{"components/Organ3dComponent.html":{}}}],["util.ts",{"_index":3213,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["utility",{"_index":1192,"title":{},"body":{"classes/FilterBuilder.html":{},"injectables/NavigationService.html":{},"components/TissueComponent.html":{}}}],["v0.5.0",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{}}}],["v0.6.0",{"_index":1390,"title":{},"body":{"components/HomeComponent.html":{}}}],["v1",{"_index":1275,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["v2",{"_index":1276,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["validation",{"_index":1914,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["value",{"_index":373,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"classes/FilterBuilder.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/LocalDatabaseService.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"injectables/OrganDataService.html":{},"classes/RegisterIcon.html":{},"classes/RegistrationError.html":{},"classes/RegistrationSuccess.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/SearchService.html":{},"interfaces/SearchStateModel.html":{},"classes/SelectTMC.html":{},"classes/SelectTechnology.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"classes/ThreeJsLayer.html":{},"components/TissueComponent.html":{},"injectables/TissueDataService.html":{},"components/TissuesBrowserGridComponent.html":{},"classes/UnselectTMC.html":{},"classes/UnselectTechnology.html":{},"interfaces/ValueObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":2000,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["valueextractor",{"_index":1519,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["valueiteratee",{"_index":1233,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["valueobject",{"_index":1507,"title":{"interfaces/ValueObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{}}}],["valueproperty",{"_index":1518,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":365,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"classes/FilterBuilder.html":{},"classes/OntologyState.html":{},"components/SearchComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"miscellaneous/variables.html":{}}}],["values(state.nodes",{"_index":2087,"title":{},"body":{"classes/OntologyState.html":{}}}],["values.length",{"_index":1282,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["vanderbilt",{"_index":174,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"components/SearchComponent.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["var",{"_index":220,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["variable",{"_index":2425,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3373,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector3",{"_index":2730,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["vector3(scale",{"_index":2748,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["version",{"_index":587,"title":{},"body":{"interfaces/Annotated.html":{},"modules/AppRenderInitModule.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"miscellaneous/variables.html":{}}}],["video",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{}}}],["view",{"_index":1386,"title":{},"body":{"components/HomeComponent.html":{},"components/MainComponent.html":{},"injectables/NavigationService.html":{},"interfaces/NavigationStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/SearchComponent.html":{},"interfaces/SearchResult.html":{},"components/TissueComponent.html":{},"guards/TissueResolverService.html":{},"components/TissuesBrowserComponent.html":{},"changelog.html":{}}}],["view's",{"_index":2922,"title":{},"body":{"injectables/TissueDataService.html":{}}}],["view_comfy",{"_index":1716,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewchild",{"_index":418,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"components/SearchComponent.html":{},"components/TissueComponent.html":{}}}],["viewchild('overlayel",{"_index":2816,"title":{},"body":{"components/TissueComponent.html":{}}}],["viewchild('popover",{"_index":400,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["viewchild('viewerel",{"_index":2833,"title":{},"body":{"components/TissueComponent.html":{}}}],["viewchild(cdkportal",{"_index":407,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{}}}],["viewchild(ontologytreecomponent",{"_index":2515,"title":{},"body":{"components/SearchComponent.html":{}}}],["viewer",{"_index":2772,"title":{},"body":{"components/TissueComponent.html":{},"changelog.html":{}}}],["viewer.addhandler('open",{"_index":2893,"title":{},"body":{"components/TissueComponent.html":{}}}],["viewer.svgoverlay",{"_index":2889,"title":{},"body":{"components/TissueComponent.html":{}}}],["viewerel",{"_index":2773,"title":{},"body":{"components/TissueComponent.html":{}}}],["viewerel.nativeelement",{"_index":2875,"title":{},"body":{"components/TissueComponent.html":{}}}],["viewing",{"_index":2759,"title":{},"body":{"components/TissueComponent.html":{}}}],["viewport",{"_index":2820,"title":{},"body":{"components/TissueComponent.html":{}}}],["viewport.getbounds",{"_index":2896,"title":{},"body":{"components/TissueComponent.html":{}}}],["views",{"_index":1396,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"changelog.html":{}}}],["views/main/main.module",{"_index":655,"title":{},"body":{"modules/AppModule.html":{}}}],["visibility",{"_index":370,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/OrganComponent.html":{},"components/TissueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["visibilityratio",{"_index":2888,"title":{},"body":{"components/TissueComponent.html":{}}}],["visible",{"_index":2795,"title":{},"body":{"components/TissueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["visual",{"_index":1392,"title":{},"body":{"components/HomeComponent.html":{},"changelog.html":{}}}],["void",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"injectables/BodyDataService.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"classes/IconRegistryState.html":{},"injectables/LocalDatabaseService.html":{},"components/NavigationComponent.html":{},"classes/NavigationState.html":{},"components/OntologySearchComponent.html":{},"classes/OntologyState.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"injectables/OrganDataService.html":{},"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"classes/SearchState.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"miscellaneous/functions.html":{}}}],["vu",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":3342,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3337,"title":{},"body":{"license.html":{}}}],["way",{"_index":2897,"title":{},"body":{"components/TissueComponent.html":{}}}],["weakmap",{"_index":915,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{},"components/TissueComponent.html":{}}}],["weber",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{}}}],["webglrenderer",{"_index":2701,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["webglrenderingcontext",{"_index":2714,"title":{},"body":{"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{}}}],["week",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":199,"title":{},"body":{"components/AboutComponent.html":{},"components/MainComponent.html":{},"components/MetadataComponent.html":{},"components/OntologyTreeComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["whenever",{"_index":1705,"title":{},"body":{"components/NavigationComponent.html":{},"components/OntologyTreeComponent.html":{},"injectables/TissueDataService.html":{}}}],["whether",{"_index":381,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/CalloutComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/OntologyTreeComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["which's",{"_index":904,"title":{},"body":{"injectables/BodyDataService.html":{},"interfaces/CountMetadata.html":{},"injectables/OrganDataService.html":{}}}],["white",{"_index":2207,"title":{},"body":{"components/OntologyTreeComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{}}}],["who's",{"_index":1056,"title":{},"body":{"components/CalloutComponent.html":{}}}],["whole",{"_index":1393,"title":{},"body":{"components/HomeComponent.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{},"changelog.html":{}}}],["whose",{"_index":1884,"title":{},"body":{"components/OntologySearchComponent.html":{},"classes/OntologyState.html":{},"miscellaneous/functions.html":{}}}],["width",{"_index":461,"title":{},"body":{"components/AgeSelectorComponent.html":{},"components/BodyComponent.html":{},"components/CalloutComponent.html":{},"components/GenderSelectorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/NavigationComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologyTreeComponent.html":{},"components/Organ3dComponent.html":{},"components/OrganComponent.html":{},"components/SearchCategoriesComponent.html":{},"components/TissueComponent.html":{},"components/TissuesBrowserGridComponent.html":{},"components/TissuesBrowserGridItemComponent.html":{}}}],["width($default",{"_index":3060,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["width($n",{"_index":3054,"title":{},"body":{"components/TissuesBrowserGridComponent.html":{}}}],["without",{"_index":2027,"title":{},"body":{"injectables/OntologyService.html":{},"classes/SearchState.html":{},"license.html":{}}}],["without(state.technologies",{"_index":2661,"title":{},"body":{"classes/SearchState.html":{}}}],["without(state.tmc",{"_index":2658,"title":{},"body":{"classes/SearchState.html":{}}}],["won't",{"_index":2055,"title":{},"body":{"classes/OntologyState.html":{}}}],["work",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/TissueComponent.html":{}}}],["working",{"_index":621,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{}}}],["world",{"_index":2895,"title":{},"body":{"components/TissueComponent.html":{}}}],["world.getitemat(0",{"_index":2901,"title":{},"body":{"components/TissueComponent.html":{}}}],["wrap",{"_index":2476,"title":{},"body":{"components/SearchCategoriesComponent.html":{},"components/SearchComponent.html":{},"components/TissuesBrowserGridComponent.html":{}}}],["wrapper",{"_index":2472,"title":{},"body":{"components/SearchCategoriesComponent.html":{}}}],["wrapper/container",{"_index":470,"title":{},"body":{"components/AgeSelectorComponent.html":{}}}],["x",{"_index":1065,"title":{},"body":{"components/CalloutComponent.html":{},"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"miscellaneous/functions.html":{}}}],["y",{"_index":1063,"title":{},"body":{"components/CalloutComponent.html":{},"components/Organ3dComponent.html":{},"components/SearchCategoriesComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"components/TissueComponent.html":{},"miscellaneous/functions.html":{}}}],["yaml",{"_index":1587,"title":{},"body":{"injectables/LocalDatabaseService.html":{},"dependencies.html":{}}}],["years",{"_index":543,"title":{},"body":{"interfaces/Annotated.html":{},"interfaces/LocalDatabase.html":{},"interfaces/Patient.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"components/TissuesBrowserGridPopoverContentComponent.html":{}}}],["yellow",{"_index":2910,"title":{},"body":{"components/TissueComponent.html":{}}}],["yes",{"_index":1205,"title":{},"body":{"classes/FilterBuilder.html":{},"injectables/LocalDatabaseService.html":{},"components/Organ3dComponent.html":{},"injectables/SearchService.html":{},"classes/SetAgeRangeFilter.html":{},"classes/SetGenderFilter.html":{},"classes/SetLocation.html":{},"components/TissueComponent.html":{},"miscellaneous/functions.html":{}}}],["yielding",{"_index":2983,"title":{},"body":{"guards/TissueResolverService.html":{}}}],["yml",{"_index":1581,"title":{},"body":{"injectables/LocalDatabaseService.html":{}}}],["youtube",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{}}}],["z",{"_index":1946,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/Organ3dComponent.html":{},"classes/ThreeJsLayer.html":{},"interfaces/ThreeJsLayerOptions.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":3261,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":286,"title":{},"body":{"modules/AboutModule.html":{},"modules/AgeSelectorModule.html":{},"interfaces/Annotated.html":{},"modules/AppModule.html":{},"modules/AppRenderInitModule.html":{},"modules/BodyModule.html":{},"modules/CalloutModule.html":{},"modules/GenderSelectorModule.html":{},"modules/HeaderModule.html":{},"modules/HomeModule.html":{},"interfaces/LocalDatabase.html":{},"modules/MainModule.html":{},"modules/MetadataModule.html":{},"modules/NavigationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"components/Organ3dComponent.html":{},"modules/Organ3dModule.html":{},"modules/OrganModule.html":{},"interfaces/Patient.html":{},"modules/SearchCategoriesModule.html":{},"modules/SearchModule.html":{},"interfaces/TissueCell.html":{},"interfaces/TissueImage.html":{},"modules/TissueModule.html":{},"interfaces/TissueOverlay.html":{},"interfaces/TissueSample.html":{},"interfaces/TissueSlice.html":{},"modules/TissuesBrowserGridItemModule.html":{},"modules/TissuesBrowserGridModule.html":{},"modules/TissuesBrowserGridPopoverContentModule.html":{},"modules/TissuesBrowserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/about/about.component.ts\n\n\n    \n        Description\n    \n    \n        Component for about modal, that gives brief description of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(aboutModal: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/about/about.component.ts:12\n                            \n                        \n\n                \n                    \n                            Creates an instance of about component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aboutModal\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:22\n                \n            \n\n\n            \n                \n                    Closes About modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n/**\n * Component for about modal, that gives brief description of the application.\n */\n@Component({\n  selector: 'ccf-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n  /**\n   * Creates an instance of about component.\n   * @param aboutModalService Modal service responsible for opening and closing of the modal.\n   */\n  constructor(private readonly aboutModal: MatDialog) { }\n\n  /**\n   * Closes About modal.\n   */\n  close(): void {\n    this.aboutModal.closeAll();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      HuBMAP\n      The Human Biomolecular Atlas Project\n\n      \n        \n         The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis technologies,\n         computational tools, and to generate foundational tissue maps in order to accelerate the construction of an atlas of\n         the human body for the understanding the relationship between tissue organization and function.\n         https://hubmapconsortium.org\n        \n\n\n        Common Coordinate Framework (CCF)\n        \n          The HuBMAP common coordinate (reference) framework is under active development. It aims to spatially annotate and index\n          HuBMAP data so this data can be spatially located and explored efficiently. The CCF v0.5.0 became available in March 2019.\n          CCF Ontology documentation is available here\n          and OWL file is available on GitHub.\n        \n\n        CCF Exploration User Interface (EUI)\n        \n          The CCF EUI represents data across multiple scales, supporting navigation by multiple coordinate systems,\n          including spatial, physiologic, and organ-based browsing. The first proof-of-concept user interface for the CCF\n          v0.5.0 became available in June 2019 and continues to evolve as more data becomes available. CCF EUI specification is\n          available here\n          and code is available on GitHub.\n          A demo video is on YouTube here.\n        \n\n        Acknowledgements\n        \n          The CCF work was completed by Katy Börner, Bruce Herr II, Paul Macklin, Randy Heiland & Ellen Quardokus,\n          Indiana University, Bloomington, IN; Griffin Weber, Harvard Medical School, Boston, MA; and Samuel Friedman,\n          Opto-Knowledge Systems, Inc. with expert input by the HuBMAP team. Data was provided by the Tissue Mapping Center (TMC)\n          at Vanderbilt University. The work was funded by NIH Award OT2OD026671.\n        \n      \n\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.ccf-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .heading {\n      margin-bottom: 0;\n      font-size: 0.875rem;\n      font-weight: bold;\n    }\n\n    .close {\n      .close-icon {\n        float: right;\n        margin-top: 1rem;\n        margin-right: 1rem;\n        cursor: pointer;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin-bottom: 0;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .footer {\n      padding-top: 1.5rem;\n      .nih-logo {\n        height: 2.25rem;\n        display: block;\n        margin: auto;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              HuBMAP      The Human Biomolecular Atlas Project                       The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis technologies,         computational tools, and to generate foundational tissue maps in order to accelerate the construction of an atlas of         the human body for the understanding the relationship between tissue organization and function.         https://hubmapconsortium.org                Common Coordinate Framework (CCF)                  The HuBMAP common coordinate (reference) framework is under active development. It aims to spatially annotate and index          HuBMAP data so this data can be spatially located and explored efficiently. The CCF v0.5.0 became available in March 2019.          CCF Ontology documentation is available here          and OWL file is available on GitHub.                CCF Exploration User Interface (EUI)                  The CCF EUI represents data across multiple scales, supporting navigation by multiple coordinate systems,          including spatial, physiologic, and organ-based browsing. The first proof-of-concept user interface for the CCF          v0.5.0 became available in June 2019 and continues to evolve as more data becomes available. CCF EUI specification is          available here          and code is available on GitHub.          A demo video is on YouTube here.                Acknowledgements                  The CCF work was completed by Katy Börner, Bruce Herr II, Paul Macklin, Randy Heiland & Ellen Quardokus,          Indiana University, Bloomington, IN; Griffin Weber, Harvard Medical School, Boston, MA; and Samuel Friedman,          Opto-Knowledge Systems, Inc. with expert input by the HuBMAP team. Data was provided by the Tissue Mapping Center (TMC)          at Vanderbilt University. The work was funded by NIH Award OT2OD026671.                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutModule.html":{"url":"modules/AboutModule.html","title":"module - AboutModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutModule\n\n\n\ncluster_AboutModule_declarations\n\n\n\ncluster_AboutModule_exports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAboutModule\n\nAboutModule\n\nAboutModule -->\n\nAboutComponent->AboutModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nAboutModule->AboutComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/about/about.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for the about modal.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AboutComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { AboutComponent } from './about.component';\n\n\n/**\n * Module for the about modal.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatDialogModule\n  ],\n  declarations: [\n    AboutComponent\n  ],\n  exports: [\n    AboutComponent\n  ]\n})\nexport class AboutModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AgeSelectorComponent.html":{"url":"components/AgeSelectorComponent.html","title":"component - AgeSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AgeSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/age-selector/age-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Component containing a button that when clicked will show a slider popover.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-age-selector\n            \n\n            \n                styleUrls\n                ./age-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./age-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                highValue\n                            \n                            \n                                    Private\n                                isSliderInitialized\n                            \n                            \n                                isSliderOpen\n                            \n                            \n                                lowValue\n                            \n                            \n                                options\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                popoverElement\n                            \n                            \n                                popoverPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeSliderPopover\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                sliderValueChanged\n                            \n                            \n                                toggleSliderPopover\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ageRangeLabel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, element: ElementRef, search: SearchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/age-selector/age-selector.component.ts:74\n                            \n                        \n\n                \n                    \n                            Creates an instance of age selector component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The overlay service used to create the slider popover.\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the component's element. Used during event handling.\n\n                                                        \n                                                \n                                                \n                                                        search\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service providing functionality for updating the search state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/age-selector/age-selector.component.ts:112\n                \n            \n\n\n            \n                \n                    Listens to document click and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/age-selector/age-selector.component.ts:148\n                \n            \n\n\n            \n                \n                    Creates and initialized the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/age-selector/age-selector.component.ts:100\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sliderValueChanged\n                        \n                        \n                    \n                \n            \n            \n                \nsliderValueChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/age-selector/age-selector.component.ts:138\n                \n            \n\n\n            \n                \n                    Handler for updates to the slider values.\nUpdates the search state with the new age range.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/age-selector/age-selector.component.ts:128\n                \n            \n\n\n            \n                \n                    Toggles the visibility of the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : this.options.ceil\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/age-selector/age-selector.component.ts:52\n                            \n                        \n\n                \n                    \n                        Value bound to the sliders high pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isSliderInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/age-selector/age-selector.component.ts:74\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover has been created and initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSliderOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/age-selector/age-selector.component.ts:31\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover is shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : this.options.floor\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/age-selector/age-selector.component.ts:47\n                            \n                        \n\n                \n                    \n                        Value bound to the sliders low pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    floor: ageConstraints.min,\n    ceil: ageConstraints.max,\n    step: 1,\n    hideLimitLabels: true,\n    hidePointerLabels: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/age-selector/age-selector.component.ts:36\n                            \n                        \n\n                \n                    \n                        Slider options.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OverlayRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/age-selector/age-selector.component.ts:69\n                            \n                        \n\n                \n                    \n                        Reference to the slider popover overlay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popover', {read: ElementRef, static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/age-selector/age-selector.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the popover element.\nThis is undefined until the slider popover is initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverPortal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CdkPortal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CdkPortal, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/age-selector/age-selector.component.ts:20\n                            \n                        \n\n                \n                    \n                        Reference to the template for the slider popover.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ageRangeLabel\n                    \n                \n\n                \n                    \n                        getageRangeLabel()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/age-selector/age-selector.component.ts:57\n                                \n                            \n                    \n                        \n                                Computes the current age range for display in the button.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport { Component, ElementRef, HostListener, OnDestroy, ViewChild } from '@angular/core';\nimport { Options } from 'ng5-slider';\n\nimport { SearchService, ageConstraints } from '../../shared/services/search/search.service';\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-age-selector',\n  templateUrl: './age-selector.component.html',\n  styleUrls: ['./age-selector.component.scss']\n})\nexport class AgeSelectorComponent implements OnDestroy {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement: ElementRef;\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options: Options = {\n    floor: ageConstraints.min,\n    ceil: ageConstraints.max,\n    step: 1,\n    hideLimitLabels: true,\n    hidePointerLabels: true\n  };\n\n  /**\n   * Value bound to the sliders low pointer value.\n   */\n  lowValue: number = this.options.floor;\n\n  /**\n   * Value bound to the sliders high pointer value.\n   */\n  highValue: number = this.options.ceil;\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get ageRangeLabel(): string {\n    const { lowValue, highValue, options: { ceil } } = this;\n    const suffix = highValue === ceil ? '+' : '';\n    if (lowValue === highValue) {\n      return `Age: ${lowValue}${suffix}`;\n    }\n    return `Age: ${lowValue}-${highValue}${suffix}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of age selector component.\n   *\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   * @param search Service providing functionality for updating the search state.\n   */\n  constructor(\n    overlay: Overlay,\n    private element: ElementRef,\n    private search: SearchService\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'age-selector-pane',\n      positionStrategy\n    });\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy() {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target'])\n  @HostListener('document:touchstart', ['$event.target'])\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    if (!isSliderOpen) {\n      return;\n    } else if (element.nativeElement.contains(target)) {\n      return;\n    } else if (popoverElement && popoverElement.nativeElement.contains(target)) {\n      return;\n    }\n\n    this.isSliderOpen = false;\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (!isSliderInitialized && !isSliderOpen) { this.initializeSliderPopover(); }\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Updates the search state with the new age range.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue, options: { floor, ceil }, search } = this;\n    const min = lowValue !== floor ? lowValue : undefined;\n    const max = highValue !== ceil ? highValue : undefined;\n    search.setAgeRange(min, max);\n  }\n\n  /**\n   * Creates and initialized the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ options.floor }}\n      \n      \n      {{ options.ceil }}+\n    \n\n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./age-selector.component.scss\n                \n                @import 'global/colors';\n\n.ccf-age-selector.wrapper {\n  .container {\n    .form-field {\n      width: 8.5rem;\n      height: 3rem;\n      padding: 0 0.25rem 0 0.25rem;\n\n      &.highlight {\n        background: $age-slider-background-color;\n      }\n    }\n  }\n}\n\n// Styles for the popover slider\n// NOTE: This must NOT be nested inside the wrapper/container!\n::ng-deep .age-selector-pane {\n  padding-left: 0.75rem; // Keep this padding in sync with the padding on the .selector class in ccf-search\n}\n\n.ccf-age-selector.detached {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 15.625rem;\n  padding: 1rem; // NOTE: Use padding instead of margin!\n  border: 1px solid $border-color;\n  box-shadow: 0.125rem 0.125rem 0.25rem #9e9e9e;\n  background: $age-slider-background-color;\n\n  &.hidden {\n    visibility: hidden;\n\n    ::ng-deep * {\n      // Force all slider elements to become hidden\n      visibility: hidden !important;\n    }\n  }\n\n  .slider ::ng-deep {\n    margin-top: 15px;\n    margin-bottom: 15px;\n\n    .ng5-slider-bar {\n      background: $age-slider-bar-color;\n    }\n\n    .ng5-slider-selection {\n      background: $age-slider-selection-color;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 0.75rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: 0.125rem - ($pointer-size / 2);\n      background-color: $age-slider-selection-color;\n      border: 0.0625rem solid $background-color;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  .label {\n    &.min {\n      margin-right: 1rem;\n    }\n\n    &.max {\n      margin-left: 1rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ options.floor }}                  {{ options.ceil }}+                          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AgeSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgeSelectorModule.html":{"url":"modules/AgeSelectorModule.html","title":"module - AgeSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AgeSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgeSelectorModule\n\n\n\ncluster_AgeSelectorModule_declarations\n\n\n\ncluster_AgeSelectorModule_exports\n\n\n\n\nAgeSelectorComponent\n\nAgeSelectorComponent\n\n\n\nAgeSelectorModule\n\nAgeSelectorModule\n\nAgeSelectorModule -->\n\nAgeSelectorComponent->AgeSelectorModule\n\n\n\n\n\nAgeSelectorComponent \n\nAgeSelectorComponent \n\nAgeSelectorComponent  -->\n\nAgeSelectorModule->AgeSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/age-selector/age-selector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AgeSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AgeSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { AgeSelectorComponent } from './age-selector.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatSelectModule,\n    OverlayModule,\n    PortalModule,\n    Ng5SliderModule\n  ],\n  declarations: [AgeSelectorComponent],\n  exports: [AgeSelectorComponent]\n})\nexport class AgeSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Annotated.html":{"url":"interfaces/Annotated.html","title":"interface - Annotated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Annotated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/database/database.models.ts\n        \n\n            \n                Description\n            \n            \n                Data which has been marked up with simple metadata (generally for display)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        metadata\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique identifier for this item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Additional data to display in popovers, etc.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Annotated {\n  /**\n   * A unique identifier for this item.\n   */\n  id: string;\n\n  /**\n   * Additional data to display in popovers, etc.\n   */\n  metadata: { [label: string]: string };\n}\n\n/**\n * A person who has donated tissues\n */\nexport interface Patient extends Annotated {\n  /**\n   * The organization that excised the donor's tissue\n   */\n  provider: 'TMC-Vanderbilt' | 'TMC-UCSD' | 'TMC-Stanford' | 'TMC-Florida' | 'TMC-CalTech' | string;\n\n  /**\n   * Age of the donor (in years) at the time of death\n   */\n  age: number;\n\n  /**\n   * Gender of the patient\n   */\n  gender: 'male' | 'female' | 'undefined';\n\n  /**\n   * Anatomical Locations that were excised from the donor. Use either common labels or\n   * the corresponding UBERON or HuBMAP id (UBERON_XXXX or HUBMAP_YYYY).\n   */\n  anatomicalLocations: string[];\n\n  // Internal fields\n  /**\n   * Identifiers of containing ontology nodes and their parent chains.\n   * Used to speed up inclusion checks.\n   */\n  ontologyNodeIds: string[];\n}\n\n/**\n * A tissue sample excised from a donor\n */\nexport interface TissueSample extends Annotated {\n  /**\n   * The patient from whom the tissue was excised\n   */\n  patient: Patient;\n\n  /**\n   * An URL to the svg overlay\n   */\n  overlayUrl: string;\n}\n\n/**\n * A slice of a tissue sample\n */\nexport interface TissueSlice extends Annotated {\n  /**\n   * The tissue sample from which a slice was extracted\n   */\n  sample: TissueSample;\n}\n\n/**\n * An image of a tissue slice\n */\nexport interface TissueImage extends Annotated {\n  /**\n   * The tissue slice from which an image was extracted\n   */\n  slice: TissueSlice;\n\n  /**\n   * The technology used to extract the image\n   */\n  technology: 'IHC' | 'PAS' | 'IMS' | 'MxIF' | 'AF' | string;\n\n  /**\n   * A URL to download the source image\n   */\n  sourceUrl: string;\n\n  /**\n   * A URL to a small-sized version of the image. Should be a .png, .jpg, or .gif.\n   */\n  thumbnailUrl: string;\n\n  /**\n   * Additional data to display in popovers, etc. for the thumbnail\n   */\n  thumbnailMetadata: { [label: string]: string };\n\n  /**\n   * A URL to a tiled version of the image\n   */\n  tileUrl: string;\n\n  /**\n   * The type of tiles at the URL\n   */\n  tileType: 'deep-zoom' | 'google-maps' | string;\n\n  /**\n   * The number of pixels per meter for the image\n   */\n  pixelsPerMeter: number;\n}\n\n/**\n * An overlay that can be placed atop a TissueImage\n */\nexport interface TissueOverlay extends Annotated {\n  /**\n   * The tissue image this overlay can be placed atop\n   */\n  image: TissueImage;\n\n  /**\n   * The label for the overlay.\n   */\n  label: string;\n\n  /**\n   * Anatomical location for the overlay.\n   */\n  anatomicalLocations: string[];\n\n\n  /**\n   * An URL for the SVG overlay.\n   */\n  overlayUrl: string;\n\n}\n\n/**\n * A tissue cell that was extracted/discovered from a tissue slice\n */\nexport interface TissueCell extends TissueOverlay {\n  /**\n   * The tissue slice from which an image was extracted/discovered\n   */\n  slice: TissueSlice;\n\n  /**\n   * The type of cell discovered\n   */\n  cellType: string;\n}\n\n/**\n * A local database of patients, samples, slices, images, etc.\n *\n * NOTE: A remote database will be the norm, so do not reference this\n * unless you are working with the local database implementation directly.\n */\nexport interface LocalDatabase {\n  /** Patients/donors in the database */\n  patients: Patient[];\n  /** Tissue samples in the database */\n  samples: TissueSample[];\n  /** Tissue slices in the database */\n  slices: TissueSlice[];\n  /** Tissue images in the database */\n  images: TissueImage[];\n  /** Tissue image overlays in the database */\n  overlays: TissueOverlay[];\n  /** Tissue cells in the database */\n  cells: TissueCell[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Root component for CCF-UI.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Root component for CCF-UI.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRenderInitModule\n\nAppRenderInitModule\n\nAppModule -->\n\nAppRenderInitModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAppStateModule\n\nAppStateModule\n\nAppModule -->\n\nAppStateModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRenderInitModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            AppStateModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRenderInitModule } from './app-render-init.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppStateModule } from './app-state.module';\nimport { AppComponent } from './app.component';\nimport { MainModule } from './views/main/main.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n\n    AppRenderInitModule,\n    AppRoutingModule,\n    AppStateModule,\n    MainModule,\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRenderInitModule.html":{"url":"modules/AppRenderInitModule.html","title":"module - AppRenderInitModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRenderInitModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-render-init.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, NgModule } from '@angular/core';\nimport { Style } from 'mapbox-gl';\nimport { NgxMapboxGLModule } from 'ngx-mapbox-gl';\n\n/** Token for injecting the blank mapbox style. */\nexport const BLANK_MAPBOX_STYLE = new InjectionToken('Blank Mapbox style', {\n  providedIn: 'root',\n  factory: () => ({\n    id: 'blank',\n    version: 8,\n    name: 'Blank',\n    center: [0, 0],\n    zoom: 0,\n    sources: {},\n    sprite: 'https://cdn.jsdelivr.net/gh/lukasmartinelli/osm-liberty@gh-pages/sprites/osm-liberty',\n    glyphs: 'https://cdn.jsdelivr.net/gh/orangemug/font-glyphs@gh-pages/glyphs/{fontstack}/{range}.pbf',\n    layers: [\n      {\n        id: 'background',\n        type: 'background',\n        paint: {\n          'background-color': 'rgba(255,255,255,1)'\n        }\n      }\n    ]\n  })\n});\n\n@NgModule({\n  imports: [NgxMapboxGLModule],\n  exports: [NgxMapboxGLModule]\n})\nexport class AppRenderInitModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TissueResolverService } from './shared/resolvers/tissue-resolver/tissue-resolver.service';\n\nexport const routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./views/home/home.module').then(m => m.HomeModule)\"\n  },\n  {\n    path: 'body',\n    loadChildren: () => \"import('./views/body/body.module').then(m => m.BodyModule)\"\n  },\n  {\n    path: 'organ/:organId',\n    loadChildren: () => \"import('./views/organ/organ.module').then(m => m.OrganModule)\"\n  },\n  {\n    path: 'tissues',\n    loadChildren: () => \"import('./views/tissues-browser/tissues-browser.module').then(m => m.TissuesBrowserModule)\"\n  },\n  {\n    path: 'tissue/:tissueId',\n    loadChildren: () => \"import('./views/tissue/tissue.module').then(m => m.TissueModule)\",\n    resolve: {\n      tissue: TissueResolverService\n    }\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/home'\n  },\n  {\n    // This should probably go to a 404 page in the future.\n    path: '**',\n    redirectTo: '/home'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppStateModule.html":{"url":"modules/AppStateModule.html","title":"module - AppStateModule","body":"\n                   \n\n\n\n\n    Modules\n    AppStateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-state.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDispatchPluginModule } from '@ngxs-labs/dispatch-decorator';\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { environment } from '../environments/environment';\nimport { IconRegistryState } from './shared/state/icon-registry/icon-registry.state';\nimport { NavigationState } from './shared/state/navigation/navigation.state';\nimport { OntologyState } from './shared/state/ontology/ontology.state';\nimport { SearchState } from './shared/state/search/search.state';\n\n/**\n * The top level states to be registered at app start.\n */\nconst rootStates = [\n  OntologyState,\n  IconRegistryState,\n  NavigationState,\n  SearchState\n  // Add additional root states here!\n];\n\n@NgModule({\n  imports: [\n    NgxsModule.forRoot(rootStates, { developmentMode: !environment.production }),\n    NgxsRouterPluginModule.forRoot(),\n    NgxsDispatchPluginModule.forRoot(),\n  ]\n})\nexport class AppStateModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BodyComponent.html":{"url":"components/BodyComponent.html","title":"component - BodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/body/body.component.ts\n\n\n    \n        Description\n    \n    \n        Component displaying a body (male/female/both) image, overlays and information.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-body\n            \n\n            \n                styleUrls\n                ./body.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./body.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bodyImagePath$\n                            \n                            \n                                bodyOverlays$\n                            \n                            \n                                hoverOrganName\n                            \n                            \n                                metadata\n                            \n                            \n                                metadataSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                capitalize\n                            \n                            \n                                clearOrganHover\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                organHover\n                            \n                            \n                                pluralize\n                            \n                            \n                                pluralizeSuffix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bodyService: BodyDataService, navigator: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/body/body.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of body component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        bodyService\n                                                  \n                                                        \n                                                                        BodyDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the localdatabase for body component\n\n                                                        \n                                                \n                                                \n                                                        navigator\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Navigation service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            capitalize\n                        \n                        \n                    \n                \n            \n            \n                \ncapitalize(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/body/body.component.ts:93\n                \n            \n\n\n            \n                \n                    Capitalizes the value passed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string that need to be capitalizze.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        capitalized string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearOrganHover\n                        \n                        \n                    \n                \n            \n            \n                \nclearOrganHover()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/body/body.component.ts:82\n                \n            \n\n\n            \n                \n                    Event called when user's mouse moves out of the organ after {mouseleave}.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/body/body.component.ts:62\n                \n            \n\n\n            \n                \n                    Angular's lifecycle hook, Unsubscribing all observable subscriptiotns.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/body/body.component.ts:54\n                \n            \n\n\n            \n                \n                    Initialization function called when component is initilized.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            organHover\n                        \n                        \n                    \n                \n            \n            \n                \norganHover(organ: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/body/body.component.ts:72\n                \n            \n\n\n            \n                \n                    Event called when user hovers over the organs on the body {mouseenter}.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organ\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the organ that is hovered over.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pluralize\n                        \n                        \n                    \n                \n            \n            \n                \npluralize(count: number, suffix: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/body/body.component.ts:115\n                \n            \n\n\n            \n                \n                    Creates a string of the count with a suffix that has been pluralized.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item count.\n\n                                    \n                                \n                                \n                                    suffix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The singular suffix.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The count string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pluralizeSuffix\n                        \n                        \n                    \n                \n            \n            \n                \npluralizeSuffix(count: number, suffix: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/body/body.component.ts:104\n                \n            \n\n\n            \n                \n                    Appends an 's' to the end of a suffix if the count is not one.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item count.\n\n                                    \n                                \n                                \n                                    suffix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The singular suffix.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The pluralized suffix.\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyImagePath$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/body/body.component.ts:21\n                            \n                        \n\n                \n                    \n                        Observable for path of body images, like male, female etc.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyOverlays$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/body/body.component.ts:36\n                            \n                        \n\n                \n                    \n                        Obervable for the overlays of body.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverOrganName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/body/body.component.ts:26\n                            \n                        \n\n                \n                    \n                        Keeps the name of the organ that is hovered over by the user on the body.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/body/body.component.ts:31\n                            \n                        \n\n                \n                    \n                        Metadata for the organ overlay on the body.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metadataSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/body/body.component.ts:41\n                            \n                        \n\n                \n                    \n                        Metadata subscription which gets the data for particular organ overlay over body.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { capitalize } from 'lodash';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { BodyDataService } from '../../shared/services/body-data/body-data.service';\nimport { NavigationService } from '../../shared/services/navigation/navigation.service';\n\n/**\n * Component displaying a body (male/female/both) image, overlays and information.\n */\n@Component({\n  selector: 'ccf-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.scss']\n})\n\nexport class BodyComponent implements OnInit, OnDestroy {\n  /**\n   * Observable for path of body images, like male, female etc.\n   */\n  bodyImagePath$: Observable;\n\n  /**\n   * Keeps the name of the organ that is hovered over by the user on the body.\n   */\n  hoverOrganName: string;\n\n  /**\n   * Metadata for the organ overlay on the body.\n   */\n  metadata: { [label: string]: string }[];\n\n  /**\n   * Obervable for the overlays of body.\n   */\n  bodyOverlays$: Observable;\n\n  /**\n   * Metadata subscription which gets the data for particular organ overlay over body.\n   */\n  metadataSubscription: Subscription;\n\n  /**\n   * Creates an instance of body component.\n   * @param bodyService Service to interact with the localdatabase for body component\n   * @param navigator Navigation service\n   */\n  constructor(readonly bodyService: BodyDataService, readonly navigator: NavigationService) {\n  }\n\n  /**\n   * Initialization function called when component is initilized.\n   */\n  ngOnInit(): void {\n    this.bodyImagePath$ = this.bodyService.getBodySourcePath();\n    this.bodyOverlays$ = this.bodyService.getBodyOverlays();\n  }\n\n  /**\n   * Angular's lifecycle hook, Unsubscribing all observable subscriptiotns.\n   */\n  ngOnDestroy(): void {\n    if (this.metadataSubscription) {\n      this.metadataSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Event called when user hovers over the organs on the body {mouseenter}.\n   * @param organ Name of the organ that is hovered over.\n   */\n  organHover(organ: string): void {\n    this.hoverOrganName = organ;\n    this.metadataSubscription =  this.bodyService.getMetadata(organ).subscribe(metadata => {\n      this.metadata = metadata;\n    });\n  }\n\n  /**\n   * Event called when user's mouse moves out of the organ after {mouseleave}.\n   */\n  clearOrganHover(): void {\n    this.metadata = undefined;\n    this.hoverOrganName = undefined;\n    this.metadataSubscription.unsubscribe();\n  }\n\n  /**\n   * Capitalizes the value passed.\n   * @param value The string that need to be capitalizze.\n   * @returns capitalized string.\n   */\n  capitalize(value: string): string {\n    return capitalize(value);\n  }\n\n  /**\n   * Appends an 's' to the end of a suffix if the count is not one.\n   *\n   * @param count The item count.\n   * @param suffix The singular suffix.\n   * @returns The pluralized suffix.\n   */\n  pluralizeSuffix(count: number, suffix: string): string {\n    return `${suffix}${count !== 1 ? 's' : ''}`;\n  }\n\n  /**\n   * Creates a string of the count with a suffix that has been pluralized.\n   *\n   * @param count The item count.\n   * @param suffix The singular suffix.\n   * @returns The count string.\n   */\n  pluralize(count: number, suffix: string): string {\n    return `${count} ${this.pluralizeSuffix(count, suffix)}`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n          \n            \n              {{ counts.patientsCount }} {{ pluralizeSuffix(counts.patientsCount, 'Patient') }}\n              {{ pluralize(counts.tissueSamplesCount, 'Tissue sample') }} \n              {{ pluralize(counts.tissueSlicesCount, 'Tissue slice') }}\n              {{ pluralize(counts.tissueImagesCount, 'Tissue image') }}\n              {{ pluralize(counts.cells, 'Cell') }}\n            \n          \n        \n      \n      \n        \n          \n            ORGAN:\n            {{ capitalize(hoverOrganName) }}\n          \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./body.component.scss\n                \n                .ccf-ui-body.wrapper {\n  height: 100%;\n\n  .container {\n    display: flex;\n    height: 100%;\n\n    .body-details-container {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      text-align: center;\n\n      .organ {\n        left: 70%;\n      }\n\n      .body {\n        width: 76%;\n        height: 100%;\n\n        .overlay {\n          cursor: pointer;\n        }\n      }\n\n      .organ-metadata {\n        width: 24%;\n        .header {\n          display: flex;\n          justify-content: center;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ counts.patientsCount }} {{ pluralizeSuffix(counts.patientsCount, \\'Patient\\') }}              {{ pluralize(counts.tissueSamplesCount, \\'Tissue sample\\') }}               {{ pluralize(counts.tissueSlicesCount, \\'Tissue slice\\') }}              {{ pluralize(counts.tissueImagesCount, \\'Tissue image\\') }}              {{ pluralize(counts.cells, \\'Cell\\') }}                                                                        ORGAN:            {{ capitalize(hoverOrganName) }}                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BodyDataService.html":{"url":"injectables/BodyDataService.html","title":"injectable - BodyDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BodyDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/body-data/body-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides data for the body component.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                countObservableMap\n                            \n                            \n                                    Private\n                                    Readonly\n                                pathToImages\n                            \n                            \n                                    Private\n                                patientFilterBuilder\n                            \n                            \n                                    Private\n                                searchState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCountsObservable\n                            \n                            \n                                getBodyOverlays\n                            \n                            \n                                getBodySourcePath\n                            \n                            \n                                getCounts\n                            \n                            \n                                    Private\n                                getCountsFor\n                            \n                            \n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localDatabase: LocalDatabaseService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/body-data/body-data.service.ts:28\n                            \n                        \n\n                \n                    \n                            Creates an instance of body data service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        localDatabase\n                                                  \n                                                        \n                                                                        LocalDatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The database.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global store.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createCountsObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCountsObservable(sampleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/body-data/body-data.service.ts:108\n                \n            \n\n\n            \n                \n                    Creates an observable returning counts for the specified tissue sample id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The indetifier.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the counts.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBodyOverlays\n                        \n                        \n                    \n                \n            \n            \n                \ngetBodyOverlays()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/body-data/body-data.service.ts:80\n                \n            \n\n\n            \n                \n                    Gets body overlays.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Body overlays Ids with corresponding path.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBodySourcePath\n                        \n                        \n                    \n                \n            \n            \n                \ngetBodySourcePath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/body-data/body-data.service.ts:54\n                \n            \n\n\n            \n                \n                    Gets body source path\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable of body source path\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCounts\n                        \n                        \n                    \n                \n            \n            \n                \ngetCounts(sample: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/body-data/body-data.service.ts:92\n                \n            \n\n\n            \n                \n                    Queries the number of slices, images, etc. that exists for a sample.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sample\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The tissue sample for which to count objects.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The counts of the different objects.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCountsFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountsFor(method, selector: (state: any) => void, path: PropertyPath, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/body-data/body-data.service.ts:151\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Queries the number of items exists of a specific object type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The database method used to query items.\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter builder selector for the associated object type.\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                            PropertyPath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path which's value must match the provided value.\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A value to match against (usually an identifier)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting a count of the objects.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \ngetMetadata(organ: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/body-data/body-data.service.ts:67\n                \n            \n\n\n            \n                \n                    TODO - based on the data format, the logic needs to be updated\nGets the metadata for the organ on body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organ\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable for metadata for the organ on body\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            countObservableMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new WeakMap>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/body-data/body-data.service.ts:23\n                            \n                        \n\n                \n                    \n                        Mapping used to prevent the recreation of expensive count operations.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            pathToImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.ccfAssetUrl + '/body'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/body-data/body-data.service.ts:28\n                            \n                        \n\n                \n                    \n                        Path to images of tissues - TODO - this will come from a json file eventually\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            patientFilterBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(SearchState.patientFilterBuilder)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/body-data/body-data.service.ts:48\n                            \n                        \n\n                \n                    \n                        Emits the filter builder for patient.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(SearchState)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/body-data/body-data.service.ts:42\n                            \n                        \n\n                \n                    \n                        Emits the current search state.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { map as loMap, PropertyPath } from 'lodash';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, pluck, share, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { FilterBuilder } from '../../common/filter/filter-builder';\nimport { LocalDatabaseService } from '../../services/database/local/local-database.service';\nimport { Patient } from '../../state/database/database.models';\nimport { CountMetaData } from '../../state/organ-meta-data/organ-meta-data.model';\nimport { SearchStateModel } from '../../state/search/search.model';\nimport { SearchState } from '../../state/search/search.state';\n\n/**\n * Provides data for the body component.\n */\n@Injectable()\nexport class BodyDataService {\n  /**\n   * Mapping used to prevent the recreation of expensive count operations.\n   */\n  private readonly countObservableMap = new WeakMap>();\n\n  /**\n   * Path to images of tissues - TODO - this will come from a json file eventually\n   */\n  private readonly pathToImages = environment.ccfAssetUrl + '/body';\n\n  /**\n   * Creates an instance of body data service.\n   *\n   * @param localDatabase The database.\n   * @param store The global store.\n   */\n  constructor(private readonly localDatabase: LocalDatabaseService, private readonly store: Store) {}\n\n  /**\n   * Emits the current search state.\n   */\n  @Select(SearchState)\n  private searchState: Observable;\n\n  /**\n   * Emits the filter builder for patient.\n   */\n  @Select(SearchState.patientFilterBuilder)\n  private patientFilterBuilder: Observable>;\n\n  /**\n   * Gets body source path\n   * @returns Observable of body source path\n   */\n  getBodySourcePath(): Observable {\n    return this.searchState.pipe(\n      pluck('gender'),\n      map(gender => gender !== undefined ? gender : 'both'),\n      map(id => id && `${this.pathToImages}/${id}/`)\n    );\n  }\n\n  /**\n   * TODO - based on the data format, the logic needs to be updated\n   * Gets the metadata for the organ on body\n   * @returns Observable for metadata for the organ on body\n   */\n  getMetadata(organ: string): Observable {\n    return this.patientFilterBuilder.pipe(\n      map(builder => builder.addIncludes('anatomicalLocations', organ)),\n      map(builder => builder.toFilter()),\n      switchMap(filter => this.localDatabase.getPatients(filter)),\n      map(patients => loMap(patients, 'metadata'))\n    );\n  }\n\n  /**\n   * Gets body overlays.\n   * @returns Body overlays Ids with corresponding path.\n   */\n  getBodyOverlays(): Observable {\n    return of(['kidney', 'heart'].map(s => {\n      return {id: s, path: `${this.pathToImages}/overlays/${s}/${s}.svg`};\n    }));\n  }\n\n  /**\n   * Queries the number of slices, images, etc. that exists for a sample.\n   *\n   * @param sample The tissue sample for which to count objects.\n   * @returns The counts of the different objects.\n   */\n  getCounts(sample: any): Observable {\n    if (this.countObservableMap.has(sample)) {\n      return this.countObservableMap.get(sample);\n    }\n\n    const result = this.createCountsObservable(sample.id);\n    this.countObservableMap.set(sample, result);\n    return result;\n  }\n\n  /**\n   * Creates an observable returning counts for the specified tissue sample id.\n   *\n   * @param sampleId The indetifier.\n   * @returns An observable emitting the counts.\n   */\n  private createCountsObservable(sampleId: string): Observable {\n    const patientCountObservable = this.getCountsFor(\n      'getPatients', SearchState.patientFilterBuilder,\n      'anatomicalLocations[0]', sampleId\n    );\n    const sampleCountObservable = this.getCountsFor(\n      'getTissueSamples', SearchState.tissueSampleFilterBuilder,\n      'patient.anatomicalLocations[0]', sampleId\n    );\n    const sliceCountObservable = this.getCountsFor(\n      'getTissueSlices', SearchState.tissueSliceFilterBuilder,\n      'sample.patient.anatomicalLocations[0]', sampleId\n    );\n    const imageCountObservable = this.getCountsFor(\n      'getTissueImages', SearchState.tissueImageFilterBuilder,\n      'slice.sample.patient.anatomicalLocations[0]', sampleId\n    );\n    const counts = combineLatest(\n      [patientCountObservable, sampleCountObservable,\n      sliceCountObservable, imageCountObservable]\n    ).pipe(\n      map(([patientCount, sampleCount, sliceCount, imageCount]) => ({\n        patientsCount: patientCount,\n        tissueSamplesCount: sampleCount,\n        tissueSlicesCount: sliceCount,\n        tissueImagesCount: imageCount,\n        cells: 0\n      })),\n      share()\n    );\n\n    return counts;\n  }\n\n  /**\n   * Queries the number of items exists of a specific object type.\n   *\n   * @param method The database method used to query items.\n   * @param selector The filter builder selector for the associated object type.\n   * @param path Path which's value must match the provided value.\n   * @param value A value to match against (usually an identifier)\n   * @returns An observable emitting a count of the objects.\n   */\n  private getCountsFor(\n    method: keyof LocalDatabaseService,\n    selector: (state: any) => FilterBuilder,\n    path: PropertyPath,\n    value: string\n  ): Observable {\n    const { localDatabase: db, store } = this;\n    const queryFun = db[method].bind(db) as (filter: (obj: T) => boolean) => Observable;\n    return store.select(selector).pipe(\n      map(builder => builder.addMatches(path, value)),\n      map(builder => builder.toFilter()),\n      switchMap(queryFun),\n      map(items => items.length)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyModule.html":{"url":"modules/BodyModule.html","title":"module - BodyModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_declarations\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_providers\n\n\n\n\nBodyComponent\n\nBodyComponent\n\n\n\nBodyModule\n\nBodyModule\n\nBodyModule -->\n\nBodyComponent->BodyModule\n\n\n\n\n\nBodyRoutingModule\n\nBodyRoutingModule\n\nBodyModule -->\n\nBodyRoutingModule->BodyModule\n\n\n\n\n\nCalloutModule\n\nCalloutModule\n\nBodyModule -->\n\nCalloutModule->BodyModule\n\n\n\n\n\nMetadataModule\n\nMetadataModule\n\nBodyModule -->\n\nMetadataModule->BodyModule\n\n\n\n\n\nBodyDataService\n\nBodyDataService\n\nBodyModule -->\n\nBodyDataService->BodyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/body/body.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BodyDataService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BodyRoutingModule\n                        \n                        \n                            CalloutModule\n                        \n                        \n                            MetadataModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BodyRoutingModule } from './body-routing.module';\nimport { BodyComponent } from './body.component';\nimport { BodyDataService } from '../../shared/services/body-data/body-data.service';\nimport { MetadataModule } from 'src/app/components/metadata/metadata.module';\nimport { CalloutModule } from 'src/app/components/callout/callout.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BodyRoutingModule,\n    CalloutModule,\n    MetadataModule\n  ],\n  declarations: [ BodyComponent ],\n  providers: [ BodyDataService ]\n})\nexport class BodyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyRoutingModule.html":{"url":"modules/BodyRoutingModule.html","title":"module - BodyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/body/body-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { BodyComponent } from './body.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: BodyComponent\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BodyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalloutComponent.html":{"url":"components/CalloutComponent.html","title":"component - CalloutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CalloutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/callout/callout.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a callout with arbitraty contents on a svg.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-callout, [ccf-callout]\n            \n\n            \n                styleUrls\n                ./callout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./callout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                linePath\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                portal\n                            \n                            \n                                    Private\n                                updater\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cancelUpdates\n                            \n                            \n                                    Private\n                                createLinePath\n                            \n                            \n                                    Private\n                                createPositionStrategy\n                            \n                            \n                                    Private\n                                getCenter\n                            \n                            \n                                    Private\n                                isValidSvgElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                scheduleUpdates\n                            \n                            \n                                    Private\n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                boundary\n                            \n                            \n                                centroid\n                            \n                            \n                                forcePosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, overlay: Overlay)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/callout/callout.component.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of callout component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The path element which will be connected to the callout contents.\n\n                                                        \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to create and configure the overlay.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        boundary\n                    \n                \n                \n                    \n                        Type :     SVGGraphicsElement\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/callout/callout.component.ts:17\n                            \n                        \n                \n                    \n                        Boundary to which the callout line should be drawn.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        centroid\n                    \n                \n                \n                    \n                        Type :     SVGGraphicsElement\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/callout/callout.component.ts:22\n                            \n                        \n                \n                    \n                        Element who's center will be used as the start of the callout line.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        forcePosition\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/callout/callout.component.ts:28\n                            \n                        \n                \n                    \n                        Forces the callout position to either left or right.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            cancelUpdates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelUpdates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/callout/callout.component.ts:185\n                \n            \n\n\n            \n                \n                    Clears the update interval.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createLinePath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLinePath(x: number, y: number, position: \"left\" | \"right\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/callout/callout.component.ts:164\n                \n            \n\n\n            \n                \n                    Creates a svg path from a center position to the boundary.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The center x position\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The center y position\n\n                                    \n                                \n                                \n                                    position\n                                    \n                                            \"left\" | \"right\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the path should go to the left or right side of the boundary.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A svg path.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createPositionStrategy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPositionStrategy(position: \"left\" | \"right\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/callout/callout.component.ts:146\n                \n            \n\n\n            \n                \n                    Creates a position strategy for an overlay that will connect to this' elements path.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"left\" | \"right\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether to put the overlay to the left or right of the connected element.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PositionStrategy\n\n                    \n                    \n                        A new position strategy.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter(element: SVGGraphicsElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/callout/callout.component.ts:135\n                \n            \n\n\n            \n                \n                    Calculates the center of a svg element.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            SVGGraphicsElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The svg element.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isValidSvgElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidSvgElement(element: SVGGraphicsElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/callout/callout.component.ts:123\n                \n            \n\n\n            \n                \n                    Determines whether a svg element exists and has a position/dimensions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            SVGGraphicsElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The svg element.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the element exists and has a position/dimensions.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/callout/callout.component.ts:66\n                \n            \n\n\n            \n                \n                    Angular's AfterViewInit hook.\nRuns the initial update after an small delay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/callout/callout.component.ts:77\n                \n            \n\n\n            \n                \n                    Angular's OnChanges hook.\nDetects changes to boundary and centroid.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The changed properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/callout/callout.component.ts:87\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up intervals, timeouts, etc., and destroys the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scheduleUpdates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleUpdates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/callout/callout.component.ts:175\n                \n            \n\n\n            \n                \n                    Adhoc solution for updating when the search drawer is expanded/collapsed.\nFIXME: This is really inefficient and better solutions needs to be researched.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/callout/callout.component.ts:95\n                \n            \n\n\n            \n                \n                    Updates the position of the callout. Creating it if needed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            linePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/callout/callout.component.ts:38\n                            \n                        \n\n                \n                    \n                        Svg path for drawing the line.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OverlayRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/callout/callout.component.ts:43\n                            \n                        \n\n                \n                    \n                        Controller of the overlay containing the callout contents.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            portal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CdkPortal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CdkPortal, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/callout/callout.component.ts:33\n                            \n                        \n\n                \n                    \n                        Template of the callout contents.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/callout/callout.component.ts:48\n                            \n                        \n\n                \n                    \n                        Interval id running updates.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef, PositionStrategy } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport { AfterViewInit, Component, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges, ViewChild } from '@angular/core';\n\n/**\n * Displays a callout with arbitraty contents on a svg.\n */\n@Component({\n  selector: 'ccf-callout, [ccf-callout]',\n  templateUrl: './callout.component.html',\n  styleUrls: ['./callout.component.scss']\n})\nexport class CalloutComponent implements AfterViewInit, OnChanges, OnDestroy {\n  /**\n   * Boundary to which the callout line should be drawn.\n   */\n  @Input() boundary: SVGGraphicsElement;\n\n  /**\n   * Element who's center will be used as the start of the callout line.\n   */\n  @Input() centroid: SVGGraphicsElement;\n\n\n  /**\n   * Forces the callout position to either left or right.\n   */\n  @Input() forcePosition: 'left' | 'right';\n\n  /**\n   * Template of the callout contents.\n   */\n  @ViewChild(CdkPortal, { static: true }) portal: CdkPortal;\n\n  /**\n   * Svg path for drawing the line.\n   */\n  linePath: string;\n\n  /**\n   * Controller of the overlay containing the callout contents.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Interval id running updates.\n   */\n  private updater: any;\n\n  /**\n   * Creates an instance of callout component.\n   *\n   * @param element The path element which will be connected to the callout contents.\n   * @param overlay Service used to create and configure the overlay.\n   */\n  constructor(private element: ElementRef, private overlay: Overlay) {\n    const position: ConnectedPosition = { originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({ positionStrategy });\n  }\n\n  /**\n   * Angular's AfterViewInit hook.\n   * Runs the initial update after an small delay.\n   */\n  ngAfterViewInit() {\n    // This hook doesn't like values changing in it!? -> delay call.\n    setTimeout(() => this.update(), 10);\n  }\n\n  /**\n   * Angular's OnChanges hook.\n   * Detects changes to boundary and centroid.\n   *\n   * @param changes The changed properties.\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if ('boundary' in changes || 'centroid' in changes) {\n      this.update();\n    }\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up intervals, timeouts, etc., and destroys the overlay.\n   */\n  ngOnDestroy() {\n    this.cancelUpdates();\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Updates the position of the callout. Creating it if needed.\n   */\n  private update(): void {\n    const { boundary, centroid, forcePosition, overlayRef, portal } = this;\n    if (!this.isValidSvgElement(boundary) || !this.isValidSvgElement(centroid)) {\n      this.cancelUpdates();\n      overlayRef.detach();\n      setTimeout(() => this.update(), 50);\n      return;\n    } else if (!overlayRef.hasAttached()) {\n      overlayRef.attach(portal);\n    }\n\n    const [x, y] = this.getCenter(this.centroid);\n    const [mid] = this.getCenter(this.boundary);\n    const position = forcePosition || (x  overlayRef.updatePosition(), 10);\n    this.scheduleUpdates();\n  }\n\n  /**\n   * Determines whether a svg element exists and has a position/dimensions.\n   *\n   * @param element The svg element.\n   * @returns True if the element exists and has a position/dimensions.\n   */\n  private isValidSvgElement(element: SVGGraphicsElement): boolean {\n    if (!element) { return false; }\n    const { x, y, width, height } = element.getBBox();\n    return x !== 0 || y !== 0 || width !== 0 || height !== 0;\n  }\n\n  /**\n   * Calculates the center of a svg element.\n   *\n   * @param element The svg element.\n   * @returns The center of the svg element's container.\n   */\n  private getCenter(element: SVGGraphicsElement): [number, number] {\n    const { x, y, width, height } = element.getBBox();\n    return [x + width / 2, y + height / 2];\n  }\n\n  /**\n   * Creates a position strategy for an overlay that will connect to this' elements path.\n   *\n   * @param position Whether to put the overlay to the left or right of the connected element.\n   * @returns A new position strategy.\n   */\n  private createPositionStrategy(position: 'left' | 'right'): PositionStrategy {\n    const connectedPosition: ConnectedPosition = {\n      originX: position === 'left' ? 'start' : 'end',\n      originY: 'center',\n      overlayX: position === 'left' ? 'end' : 'start',\n      overlayY: 'center'\n    };\n    return this.overlay.position().flexibleConnectedTo(this.element).withPositions([connectedPosition]);\n  }\n\n  /**\n   * Creates a svg path from a center position to the boundary.\n   *\n   * @param x The center x position\n   * @param y The center y position\n   * @param position Whether the path should go to the left or right side of the boundary.\n   * @returns A svg path.\n   */\n  private createLinePath(x: number, y: number, position: 'left' | 'right'): string {\n    const bbox = this.boundary.getBBox();\n    const boundary = position === 'left' ? bbox.x : bbox.x + bbox.width;\n    const path = `M ${x} ${y} L ${boundary} ${y}`;\n    return path;\n  }\n\n  /**\n   * Adhoc solution for updating when the search drawer is expanded/collapsed.\n   * FIXME: This is really inefficient and better solutions needs to be researched.\n   */\n  private scheduleUpdates(): void {\n    const { updater } = this;\n    if (updater === undefined) {\n      this.updater = setInterval(() => this.update(), 100);\n    }\n  }\n\n  /**\n   * Clears the update interval.\n   */\n  private cancelUpdates(): void {\n    const { updater } = this;\n    if (updater) { clearInterval(updater); }\n    this.updater = undefined;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./callout.component.scss\n                \n                .callout.callout-line {\n  pointer-events: none;\n  stroke: #000000;\n  stroke-width: 0.0625rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalloutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CalloutModule.html":{"url":"modules/CalloutModule.html","title":"module - CalloutModule","body":"\n                   \n\n\n\n\n    Modules\n    CalloutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CalloutModule\n\n\n\ncluster_CalloutModule_declarations\n\n\n\ncluster_CalloutModule_exports\n\n\n\n\nCalloutComponent\n\nCalloutComponent\n\n\n\nCalloutModule\n\nCalloutModule\n\nCalloutModule -->\n\nCalloutComponent->CalloutModule\n\n\n\n\n\nCalloutComponent \n\nCalloutComponent \n\nCalloutComponent  -->\n\nCalloutModule->CalloutComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/callout/callout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalloutComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalloutComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CalloutComponent } from './callout.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule\n  ],\n  declarations: [CalloutComponent],\n  exports: [CalloutComponent]\n})\nexport class CalloutModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountMetaData.html":{"url":"interfaces/CountMetaData.html","title":"interface - CountMetaData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountMetaData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/organ-meta-data/organ-meta-data.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cells\n                                \n                                \n                                        patientsCount\n                                \n                                \n                                        tissueImagesCount\n                                \n                                \n                                        tissueSamplesCount\n                                \n                                \n                                        tissueSlicesCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cells\n                                    \n                                \n                                \n                                    \n                                        cells:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patientsCount\n                                    \n                                \n                                \n                                    \n                                        patientsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueImagesCount\n                                    \n                                \n                                \n                                    \n                                        tissueImagesCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueSamplesCount\n                                    \n                                \n                                \n                                    \n                                        tissueSamplesCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueSlicesCount\n                                    \n                                \n                                \n                                    \n                                        tissueSlicesCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CountMetaData {\n    patientsCount: number;\n    tissueSamplesCount: number;\n    tissueSlicesCount: number;\n    tissueImagesCount: number;\n    cells: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountMetadata.html":{"url":"interfaces/CountMetadata.html","title":"interface - CountMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/organ-data/organ-data.service.ts\n        \n\n            \n                Description\n            \n            \n                A collection of counts for different objects.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cells\n                                \n                                \n                                        patients\n                                \n                                \n                                        tissueImages\n                                \n                                \n                                        tissueSamples\n                                \n                                \n                                        tissueSlices\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cells\n                                    \n                                \n                                \n                                    \n                                        cells:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of cells.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patients\n                                    \n                                \n                                \n                                    \n                                        patients:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of patients.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueImages\n                                    \n                                \n                                \n                                    \n                                        tissueImages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of tissue images.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueSamples\n                                    \n                                \n                                \n                                    \n                                        tissueSamples:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of tissue samples.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueSlices\n                                    \n                                \n                                \n                                    \n                                        tissueSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of tissue slices.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { PropertyPath } from 'lodash';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, pluck, share, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { FilterBuilder } from '../../common/filter/filter-builder';\nimport { TissueSample } from '../../state/database/database.models';\nimport { NavigationState } from '../../state/navigation/navigation.state';\nimport { SearchState } from '../../state/search/search.state';\nimport { LocalDatabaseService } from '../database/local/local-database.service';\n\n/**\n * A collection of counts for different objects.\n */\nexport interface CountMetadata {\n  /**\n   * The number of patients.\n   */\n  patients: number;\n\n  /**\n   * The number of tissue samples.\n   */\n  tissueSamples: number;\n\n  /**\n   * The number of tissue slices.\n   */\n  tissueSlices: number;\n\n  /**\n   * The number of tissue images.\n   */\n  tissueImages: number;\n\n  /**\n   * The number of cells.\n   */\n  cells: number;\n}\n\n/**\n * Injectable organ data service talks to local database.\n */\n@Injectable()\nexport class OrganDataService {\n  /**\n   * Base path to images of tissues - TODO - this will come from a json file eventually\n   */\n  private readonly basePath = environment.ccfAssetUrl + '/organ';\n\n  /**\n   * Mapping from a tissue sample to an observable emitting counts.\n   * Used to prevent the creation of new observables and the subsequent multiple queries.\n   */\n  private readonly countObservableMap = new WeakMap>();\n\n  /**\n   * Emits the currently active organ.\n   */\n  @Select(NavigationState.activeOrgan)\n  private activeOrgan: Observable; // FIXME: Update with proper organ object\n\n  /**\n   * Emits the path for currently active organ's image.\n   */\n  readonly organImagePath = this.activeOrgan.pipe(\n    pluck('id'),\n    map(id => id && `${this.basePath}/${id}/organ.svg#organ`)\n  );\n\n  /**\n   * Emits the overlay objects for currently active organ.\n   */\n  readonly organOverlays = this.activeOrgan.pipe(\n    pluck('id'),\n    switchMap(id => this.store.select(SearchState.tissueSampleFilterBuilder).pipe(\n      map(builder => builder.addMatches('patient.anatomicalLocations[0]', id)),\n      map(builder => builder.toFilter())\n    )),\n    switchMap(filter => this.localDatabase.getTissueSamples(filter))\n  );\n\n  /**\n   * Creates an instance of organ data service.\n   *\n   * @param localDatabase Database from which organ and related data is fetched.\n   * @param store The global store.\n   */\n  constructor(\n    private readonly localDatabase: LocalDatabaseService,\n    private readonly store: Store\n  ) { }\n\n  /**\n   * Queries the number of slices, images, etc. that exists for a sample.\n   *\n   * @param sample The tissue sample for which to count objects.\n   * @returns The counts of the different objects.\n   */\n  getCounts(sample: TissueSample): Observable {\n    if (this.countObservableMap.has(sample)) {\n      return this.countObservableMap.get(sample);\n    }\n\n    const result = this.createCountsObservable(sample.id);\n    this.countObservableMap.set(sample, result);\n    return result;\n  }\n\n  /**\n   * Creates an observable returning counts for the specified tissue sample id.\n   *\n   * @param sampleId The indetifier.\n   * @returns An observable emitting the counts.\n   */\n  private createCountsObservable(sampleId: string): Observable {\n    const sliceCountObservable = this.getCountsFor('getTissueSlices', SearchState.tissueSliceFilterBuilder, 'sample.id', sampleId);\n    const imageCountObservable = this.getCountsFor('getTissueImages', SearchState.tissueImageFilterBuilder, 'slice.sample.id', sampleId);\n    const counts = combineLatest([sliceCountObservable, imageCountObservable]).pipe(\n      map(([sliceCount, imageCount]) => ({\n        patients: 1,\n        tissueSamples: 1,\n        tissueSlices: sliceCount,\n        tissueImages: imageCount,\n        cells: 0\n      })),\n      share()\n    );\n\n    return counts;\n  }\n\n  /**\n   * Queries the number of items exists of a specific object type.\n   *\n   * @param method The database method used to query items.\n   * @param selector The filter builder selector for the associated object type.\n   * @param path Path which's value must match the provided value.\n   * @param value A value to match against (usually an identifier)\n   * @returns An observable emitting a count of the objects.\n   */\n  private getCountsFor(\n    method: keyof LocalDatabaseService,\n    selector: (state: any) => FilterBuilder,\n    path: PropertyPath,\n    value: string\n  ): Observable {\n    const { localDatabase: db, store } = this;\n    const queryFun = db[method].bind(db) as (filter: (obj: T) => boolean) => Observable;\n    return store.select(selector).pipe(\n      map(builder => builder.addMatches(path, value)),\n      map(builder => builder.toFilter()),\n      switchMap(queryFun),\n      map(items => items.length)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterBuilder.html":{"url":"classes/FilterBuilder.html","title":"class - FilterBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/common/filter/filter-builder.ts\n        \n\n            \n                Description\n            \n            \n                Utility class for creating database filters.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCompare\n                            \n                            \n                                    Private\n                                addFilter\n                            \n                            \n                                addIncludedIn\n                            \n                            \n                                addIncludes\n                            \n                            \n                                addMatches\n                            \n                            \n                                addOverlapsBy\n                            \n                            \n                                    Private\n                                getAllFilters\n                            \n                            \n                                toFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filter?: FilterPred, next?: FilterBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/common/filter/filter-builder.ts:49\n                            \n                        \n\n                \n                    \n                            Creates an instance of filter builder.\nNote: Arguments are for internal use only!\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                  \n                                                        \n                                                                        FilterPred\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                A filter function.\n\n                                                        \n                                                \n                                                \n                                                        next\n                                                  \n                                                        \n                                                                        FilterBuilder\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Reference to the next builder in the filter chain.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCompare\n                        \n                        \n                    \n                \n            \n            \n                \naddCompare(path: PropertyPath, compare: Compare, value: U)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/common/filter/filter-builder.ts:81\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        U\n                    \n                \n            \n\n            \n                \n                    Adds a filter that compares to a value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyPath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The path of the property to compare.\n\n                                    \n                                \n                                \n                                    compare\n                                    \n                                                Compare\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The comparison operation to perform.\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                            U\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to compare against.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        A new FilterBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addFilter(filter: FilterPred)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/common/filter/filter-builder.ts:143\n                \n            \n\n\n            \n                \n                    Creates a new FilterBuilder with a new filter and this as the next builder.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterPred\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter for the new builder.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The new FilterBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addIncludedIn\n                        \n                        \n                    \n                \n            \n            \n                \naddIncludedIn(path: PropertyPath, values: U[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/common/filter/filter-builder.ts:108\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        U\n                    \n                \n            \n\n            \n                \n                    Adds a filter that checks if it matches one of many values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyPath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The path of the property to check for inclusion.\n\n                                    \n                                \n                                \n                                    values\n                                    \n                                            U[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The values that should be matched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        A new FilterBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addIncludes\n                        \n                        \n                    \n                \n            \n            \n                \naddIncludes(path: PropertyPath, value: U)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/common/filter/filter-builder.ts:95\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        U\n                    \n                \n            \n\n            \n                \n                    Adds a filter that checks if it contains a value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyPath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The path of the property to check inclusion in.\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                            U\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value that should be included.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        A new FilterBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMatches\n                        \n                        \n                    \n                \n            \n            \n                \naddMatches(path: PropertyPath, value: U)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/common/filter/filter-builder.ts:68\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        U\n                    \n                \n            \n\n            \n                \n                    Adds a filter that matches a value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyPath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The path of the property to match.\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                            U\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to match against.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        A new FilterBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addOverlapsBy\n                        \n                        \n                    \n                \n            \n            \n                \naddOverlapsBy(path: PropertyPath, values: U[], iteratee?: ValueIteratee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/common/filter/filter-builder.ts:122\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        U\n                    \n                \n            \n\n            \n                \n                    Adds a filter that checks if at least one values matches.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyPath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The path of the property to check for overlay.\n\n                                    \n                                \n                                \n                                    values\n                                    \n                                            U[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The values that should be matched.\n\n                                    \n                                \n                                \n                                    iteratee\n                                    \n                                            ValueIteratee\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional function that will be applied to each value to create the matching.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        A new FilterBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAllFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/common/filter/filter-builder.ts:152\n                \n            \n\n\n            \n                \n                    Produces an array of all filters in the chain of builders.\n\n\n                    \n                    \n                    \n                        Returns :         FilterPred[]\n\n                    \n                    \n                        An array of all filters.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toFilter\n                        \n                        \n                    \n                \n            \n            \n                \ntoFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/common/filter/filter-builder.ts:133\n                \n            \n\n\n            \n                \n                    Creates a predicate function combining all filters in this builder.\n\n\n                    \n                    \n                    \n                        Returns :         FilterPred\n\n                    \n                    \n                        The predicate.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  eq,\n  gt,\n  gte,\n  includes,\n  intersectionBy,\n  lt,\n  lte,\n  matchesProperty,\n  negate,\n  overEvery,\n  property,\n  PropertyPath,\n  ValueIteratee,\n} from 'lodash';\n\n/**\n * Predicate type.\n */\nexport type FilterPred = (obj: T) => boolean;\n\n/**\n * Enumeration for selecting a comparison operation.\n */\nexport const enum Compare {\n  equal,\n  not_equal,\n  less_than,\n  less_than_equal,\n  greater_than,\n  greater_than_equal\n}\n\n/**\n * Mapping from `enum Compare` values to actual comparison functions.\n */\nconst compareMethods = {\n  [Compare.equal]: eq,\n  [Compare.not_equal]: negate(eq),\n  [Compare.less_than]: lt,\n  [Compare.less_than_equal]: lte,\n  [Compare.greater_than]: gt,\n  [Compare.greater_than_equal]: gte\n};\n\n/**\n * Utility class for creating database filters.\n */\nexport class FilterBuilder {\n  /**\n   * Creates an instance of filter builder.\n   * Note: Arguments are for internal use only!\n   *\n   * @param [filter] A filter function.\n   * @param [next] Reference to the next builder in the filter chain.\n   */\n  constructor(private filter?: FilterPred, private next?: FilterBuilder) {\n    if (filter === undefined && next !== undefined) { return next; }\n  }\n\n  /**\n   * Adds a filter that matches a value.\n   *\n   * @param path The path of the property to match.\n   * @param value The value to match against.\n   * @returns A new `FilterBuilder`\n   */\n  addMatches(path: PropertyPath, value: U): FilterBuilder {\n    if (value === undefined) { return this; }\n    return this.addFilter(matchesProperty(path, value));\n  }\n\n  /**\n   * Adds a filter that compares to a value.\n   *\n   * @param path The path of the property to compare.\n   * @param compare The comparison operation to perform.\n   * @param value The value to compare against.\n   * @returns A new `FilterBuilder`\n   */\n  addCompare(path: PropertyPath, compare: Compare, value: U): FilterBuilder {\n    if (value === undefined) { return this; }\n    const method = compareMethods[compare] as (v1: U, v2: U) => boolean;\n    const getter = property(path);\n    return this.addFilter(obj => method(getter(obj), value));\n  }\n\n  /**\n   * Adds a filter that checks if it contains a value.\n   *\n   * @param path The path of the property to check inclusion in.\n   * @param value The value that should be included.\n   * @returns A new `FilterBuilder`\n   */\n  addIncludes(path: PropertyPath, value: U): FilterBuilder {\n    if (value === undefined) { return this; }\n    const getter = property(path);\n    return this.addFilter(obj => includes(getter(obj), value));\n  }\n\n  /**\n   * Adds a filter that checks if it matches one of many values.\n   *\n   * @param path The path of the property to check for inclusion.\n   * @param values The values that should be matched.\n   * @returns A new `FilterBuilder`\n   */\n  addIncludedIn(path: PropertyPath, values: U[]): FilterBuilder {\n    if (values === undefined || values.length === 0) { return this; }\n    const getter = property(path);\n    return this.addFilter(obj => includes(values, getter(obj)));\n  }\n\n  /**\n   * Adds a filter that checks if at least one values matches.\n   *\n   * @param path The path of the property to check for overlay.\n   * @param values The values that should be matched.\n   * @param [iteratee] An optional function that will be applied to each value to create the matching.\n   * @returns A new `FilterBuilder`\n   */\n  addOverlapsBy(path: PropertyPath, values: U[], iteratee?: ValueIteratee): FilterBuilder {\n    if (values === undefined || values.length === 0) { return this; }\n    const getter = property(path);\n    return this.addFilter(obj => intersectionBy(getter(obj), values, iteratee).length !== 0);\n  }\n\n  /**\n   * Creates a predicate function combining all filters in this builder.\n   *\n   * @returns The predicate.\n   */\n  toFilter(): FilterPred {\n    return overEvery(this.getAllFilters());\n  }\n\n  /**\n   * Creates a new `FilterBuilder` with a new filter and `this` as the next builder.\n   *\n   * @param filter The filter for the new builder.\n   * @returns The new `FilterBuilder`\n   */\n  private addFilter(filter: FilterPred): FilterBuilder {\n    return new FilterBuilder(filter, this);\n  }\n\n  /**\n   * Produces an array of all filters in the chain of builders.\n   *\n   * @returns An array of all filters.\n   */\n  private getAllFilters(): FilterPred[] {\n    const result: FilterPred[] = [];\n    let head: FilterBuilder = this;\n    while (head !== undefined && head.filter !== undefined) {\n      result.push(head.filter);\n      head = head.next;\n    }\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlatNode.html":{"url":"classes/FlatNode.html","title":"class - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/ontology-tree/shared/flat-node.ts\n        \n\n            \n                Description\n            \n            \n                A flat tree node.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    expandable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(original: OntologyNode, level: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ontology-tree/shared/flat-node.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of flat node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        original\n                                                  \n                                                        \n                                                                        OntologyNode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The original ontology node object.\n\n                                                        \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The level of the new flat node in the tree.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(original: OntologyNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ontology-tree/shared/flat-node.ts:24\n                \n            \n\n\n            \n                \n                    Creates a flat node from a ontology node object and a level in the tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original ontology node object.\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The level of the new flat node in the tree.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlatNode\n\n                    \n                    \n                        The newly created flat node.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/ontology-tree/shared/flat-node.ts:10\n                                \n                            \n                    \n                        \n                                Same as the original node's label.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expandable\n                    \n                \n\n                \n                    \n                        getexpandable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/ontology-tree/shared/flat-node.ts:15\n                                \n                            \n                    \n                        \n                                Indicates whether this node has children.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { OntologyNode } from '../../../shared/state/ontology/ontology.model';\n\n/**\n * A flat tree node.\n */\nexport class FlatNode {\n  /**\n   * Same as the original node's label.\n   */\n  get label(): string { return this.original.label; }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean { return this.original.children.length > 0; }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(readonly original: OntologyNode, readonly level: number) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenderSelectorComponent.html":{"url":"components/GenderSelectorComponent.html","title":"component - GenderSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GenderSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/gender-selector/gender-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Component for selecting a searched gender.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-gender-selector\n            \n\n            \n                styleUrls\n                ./gender-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./gender-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(search: SearchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/gender-selector/gender-selector.component.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of gender selector component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        search\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to update the state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(value: \"male\" | \"female\" | \"male-female\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/gender-selector/gender-selector.component.ts:26\n                \n            \n\n\n            \n                \n                    Updates the searched gender.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            \"male\" | \"female\" | \"male-female\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The button value that has been selected.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { SearchService } from '../../shared/services/search/search.service';\n\n/**\n * Component for selecting a searched gender.\n */\n@Component({\n  selector: 'ccf-gender-selector',\n  templateUrl: './gender-selector.component.html',\n  styleUrls: ['./gender-selector.component.scss']\n})\nexport class GenderSelectorComponent {\n  /**\n   * Creates an instance of gender selector component.\n   *\n   * @param search The service used to update the state.\n   */\n  constructor(private search: SearchService) { }\n\n  /**\n   * Updates the searched gender.\n   *\n   * @param value The button value that has been selected.\n   */\n  selectionChanged(value: 'male' | 'female' | 'male-female'): void {\n    const gender = value !== 'male-female' ? value : undefined;\n    this.search.setGender(gender);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n      \n\n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./gender-selector.component.scss\n                \n                @import 'global/colors';\n\n.ccf-gender-selector.wrapper {\n  .container {\n    .icon {\n      $icon-size: 2rem;\n\n      width: $icon-size;\n      height: $icon-size;\n      font-size: $icon-size;\n    }\n\n    .svg-icon {\n      box-sizing: content-box;\n    }\n\n    .group {\n      border: none;\n      border-radius: 0;\n\n      .toggle {\n        margin: 0 0.25rem;\n        border-radius: 4px;\n        color: $active-button-contrast-color;\n        background-color: $icon-color;\n        opacity: 0.3;\n\n        &.mat-button-toggle-checked {\n          background-color: $active-button-color;\n          opacity: 1;\n        }\n\n        &:first-child {\n          margin-left: 0;\n        }\n\n        &:last-child {\n          margin-right: 0;\n        }\n\n        ::ng-deep {\n          .mat-button-toggle-label-content {\n            padding: 0 8px;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenderSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GenderSelectorModule.html":{"url":"modules/GenderSelectorModule.html","title":"module - GenderSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    GenderSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GenderSelectorModule\n\n\n\ncluster_GenderSelectorModule_declarations\n\n\n\ncluster_GenderSelectorModule_exports\n\n\n\n\nGenderSelectorComponent\n\nGenderSelectorComponent\n\n\n\nGenderSelectorModule\n\nGenderSelectorModule\n\nGenderSelectorModule -->\n\nGenderSelectorComponent->GenderSelectorModule\n\n\n\n\n\nGenderSelectorComponent \n\nGenderSelectorComponent \n\nGenderSelectorComponent  -->\n\nGenderSelectorModule->GenderSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/gender-selector/gender-selector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GenderSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GenderSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { GenderSelectorComponent } from './gender-selector.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonToggleModule,\n    MatIconModule\n  ],\n  declarations: [GenderSelectorComponent],\n  exports: [GenderSelectorComponent]\n})\nexport class GenderSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Component displayed at the top of the page. Contains the HuBMAP logo and an info button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAboutItemHovered\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAboutDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:18\n                            \n                        \n\n                \n                    \n                            Creates an instance of toolbar component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to open modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openAboutDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenAboutDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/header/header.component.ts:30\n                \n            \n\n\n            \n                \n                    Opens the about modal dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAboutItemHovered\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/header/header.component.ts:18\n                            \n                        \n\n                \n                    \n                        Indicates whether the about item is currenlty being hovered over.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { AboutComponent } from '../../components/about/about.component';\n\n/**\n * Component displayed at the top of the page. Contains the HuBMAP logo and an info button.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  /**\n   * Indicates whether the about item is currenlty being hovered over.\n   */\n  isAboutItemHovered = false;\n\n  /**\n   * Creates an instance of toolbar component.\n   *\n   * @param dialog Service used to open modal dialogs.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n   /**\n   * Opens the about modal dialog.\n   */\n  openAboutDialog(): void {\n    this.dialog.open(AboutComponent, {\n      width: '50rem'\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n    \n\n    \n      info_outline\n      \n        info\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import 'global/sizes', 'global/colors', 'global/mixins';\n\n.ccf-header.wrapper {\n  .container {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: $header-height;\n    padding: 0 1rem;\n    background: $background-color;\n    @include default-border(bottom);\n\n    .filler {\n      flex-grow: 100000;\n    }\n\n    .logo {\n      width: 9rem;\n      color: #223352; // Default color for HuBMAP logo icon\n    }\n\n    .about {\n      cursor: pointer;\n\n      .icon {\n        $icon-size: 2.25rem;\n\n        width: $icon-size;\n        height: $icon-size;\n        font-size: $icon-size;\n        color: $icon-color;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  info_outline              info            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nAboutModule\n\nAboutModule\n\nHeaderModule -->\n\nAboutModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AboutComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { AboutComponent } from '../about/about.component';\nimport { AboutModule } from '../about/about.module';\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatIconModule,\n    AboutModule\n  ],\n  declarations: [\n    HeaderComponent\n  ],\n  exports: [\n    HeaderComponent\n  ],\n  entryComponents: [\n    AboutComponent\n  ]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        The initial view of the app. Contains general information.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The initial view of the app. Contains general information.\n */\n@Component({\n  selector: 'ccf-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent { }\n\n    \n\n    \n        \n  \n    HuBMAP Exploration User Interface v0.6.0\n    \n        Proof-of-Concept Exploration User Interface (EUI) for the Common Coordinate Framework (CCF).\n    \n    \n        The current user interface supports:\n    \n    \n      \n        Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level.\n        Filtering by metadata (age, gender, TMC, and technology), results are presented at all views.\n        Submit questions and comments on the CCF EUI.\n        Semantic search by ontology, results are presented at all levels.\n        Data download at the whole body, organ, tissue, and cell level, i.e., link to https://sampledata.hubmapconsortium.org.\n      \n    \n    \n        Revision: 11/08/2019\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .ccf-home.wrapper {\n  .container {\n    margin: auto;\n    display: block;\n    width: 55%;\n    padding-top: 10rem;\n\n    .subtitle {\n      margin: 1rem 1rem 1rem 0;\n    }\n\n    .list-header {\n      font-size: 0.9em;\n    }\n\n    .list-container {\n      .list {\n        font-size: 0.9em;\n      }\n    }\n\n    .revision-text {\n      margin: 1rem 1rem 1rem 0;\n      font-size: 0.8em;\n    }\n\n    .logo {\n      width: 20rem;\n      margin: auto;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      HuBMAP Exploration User Interface v0.6.0            Proof-of-Concept Exploration User Interface (EUI) for the Common Coordinate Framework (CCF).                The current user interface supports:                      Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level.        Filtering by metadata (age, gender, TMC, and technology), results are presented at all views.        Submit questions and comments on the CCF EUI.        Semantic search by ontology, results are presented at all levels.        Data download at the whole body, organ, tissue, and cell level, i.e., link to https://sampledata.hubmapconsortium.org.                      Revision: 11/08/2019                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { HomeComponent } from '../home/home.component';\nimport { HomeRoutingModule } from './home-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HomeRoutingModule\n  ],\n  declarations: [\n    HomeComponent\n  ]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/home/home-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: HomeComponent\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/icon-registry/icon-registry.model.ts\n        \n\n            \n                Description\n            \n            \n                Definitions for registering an icon.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SafeResourceUrl, SafeHtml } from '@angular/platform-browser';\n\n/**\n * Definitions for registering an icon.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IconRegistryState.html":{"url":"classes/IconRegistryState.html","title":"class - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n\n            \n                Implements\n            \n            \n                        NgxsOnInit\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngxsOnInit\n                            \n                            \n                                registerIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/icon-registry/icon-registry.state.ts:59\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngxsOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngxsOnInit(undefined: StateContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/state/icon-registry/icon-registry.state.ts:75\n                \n            \n\n\n            \n                \n                    Ngxs' OnInit hook.\nRegisters the default icons.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerIcon\n                        \n                        \n                    \n                \n            \n            \n                \nregisterIcon(undefined: StateContext, undefined: RegisterIcon)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RegisterIcon)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/icon-registry/icon-registry.state.ts:50\n                \n            \n\n\n            \n                \n                    Handle RegisterIcon actions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                RegisterIcon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Action, NgxsOnInit, State, StateContext } from '@ngxs/store';\nimport { filter as loFilter, map as loMap } from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { defaultIcons } from './default-icons';\nimport { RegisterIcon, RegistrationError, RegistrationSuccess } from './icon-registry.action';\nimport { IconDefinition } from './icon-registry.model';\n\n/**\n * Determines the `MatIconRegistry` method and arguments to invoke for a specific `IconDefinition`.\n *\n * @param definition The definition for which to determine the appropriate method and arguments.\n * @returns An object containing the `MatIconRegistry` method name and argument to invoke it with.\n */\nfunction getRegistrationMethod({ name, namespace, url, html }: IconDefinition): { methodName: string, args: any[] } {\n  if (!url && !html) {\n    throw new Error('IconDefinition must have either an url or html');\n  }\n\n  let methodName: string;\n  if (name && namespace) {\n    methodName = url ? 'addSvgIconInNamespace' : 'addSvgIconLiteralInNamespace';\n  } else if (name) {\n    methodName = url ? 'addSvgIcon' : 'addSvgIconLiteral';\n  } else if (namespace) {\n    methodName = url ? 'addSvgIconSetInNamespace' : 'addSvgIconSetLiteralInNamespace';\n  } else {\n    methodName = url ? 'addSvgIconSet' : 'addSvgIconSetLiteral';\n  }\n\n  return { methodName, args: loFilter([namespace, name, url || html]) };\n}\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@State({\n  name: 'iconRegistry'\n})\nexport class IconRegistryState implements NgxsOnInit {\n  /**\n   * Handle `RegisterIcon` actions.\n   *\n   * @param context The state context.\n   * @param action The `RegisterIcon` action.\n   */\n  @Action(RegisterIcon)\n  registerIcon({ dispatch }: StateContext, { definition }: RegisterIcon): Observable {\n    try {\n      const { methodName, args } = getRegistrationMethod(definition);\n\n      this.registry[methodName](...args);\n      return dispatch(new RegistrationSuccess());\n    } catch (error) {\n      return dispatch(new RegistrationError(error));\n    }\n  }\n\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize urls and html.\n   */\n  constructor(private registry: MatIconRegistry, private sanitizer: DomSanitizer) { }\n\n  /**\n   * Ngxs' OnInit hook.\n   * Registers the default icons.\n   *\n   * @param context The state context.\n   */\n  ngxsOnInit({ dispatch }: StateContext) {\n    const { sanitizer } = this;\n    const actions = loMap(defaultIcons, (def) => new RegisterIcon({\n      ...def,\n      url: def.url && sanitizer.bypassSecurityTrustResourceUrl(def.url),\n      html: def.html && sanitizer.bypassSecurityTrustHtml(def.html)\n    }));\n\n    dispatch(actions);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdObject.html":{"url":"interfaces/IdObject.html","title":"interface - IdObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IdObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/ontology/internal/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@id' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@id' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from '../ontology.model';\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject] | undefined;\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json),\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JsonOntologyNode.html":{"url":"interfaces/JsonOntologyNode.html","title":"interface - JsonOntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JsonOntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/ontology/internal/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Structure of a single json ontology node.\n\n            \n\n            \n                Extends\n            \n            \n                        IdObject\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                \n                                \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                    \n                                \n                                \n                                    \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym:         ValueObject[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValueObject[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Json synonyms property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                    \n                                \n                                \n                                    \n                                        http://www.w3.org/2000/01/rdf-schema#label:         [ValueObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [ValueObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json label property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:      | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json parent property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from '../ontology.model';\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject] | undefined;\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json),\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalDatabase.html":{"url":"interfaces/LocalDatabase.html","title":"interface - LocalDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/database/database.models.ts\n        \n\n            \n                Description\n            \n            \n                A local database of patients, samples, slices, images, etc.\nNOTE: A remote database will be the norm, so do not reference this\nunless you are working with the local database implementation directly.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cells\n                                \n                                \n                                        images\n                                \n                                \n                                        overlays\n                                \n                                \n                                        patients\n                                \n                                \n                                        samples\n                                \n                                \n                                        slices\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cells\n                                    \n                                \n                                \n                                    \n                                        cells:         TissueCell[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueCell[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue cells in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                    \n                                \n                                \n                                    \n                                        images:         TissueImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueImage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue images in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlays\n                                    \n                                \n                                \n                                    \n                                        overlays:         TissueOverlay[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueOverlay[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue image overlays in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patients\n                                    \n                                \n                                \n                                    \n                                        patients:         Patient[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Patient[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Patients/donors in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        samples\n                                    \n                                \n                                \n                                    \n                                        samples:         TissueSample[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueSample[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue samples in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slices\n                                    \n                                \n                                \n                                    \n                                        slices:         TissueSlice[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueSlice[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue slices in the database \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Annotated {\n  /**\n   * A unique identifier for this item.\n   */\n  id: string;\n\n  /**\n   * Additional data to display in popovers, etc.\n   */\n  metadata: { [label: string]: string };\n}\n\n/**\n * A person who has donated tissues\n */\nexport interface Patient extends Annotated {\n  /**\n   * The organization that excised the donor's tissue\n   */\n  provider: 'TMC-Vanderbilt' | 'TMC-UCSD' | 'TMC-Stanford' | 'TMC-Florida' | 'TMC-CalTech' | string;\n\n  /**\n   * Age of the donor (in years) at the time of death\n   */\n  age: number;\n\n  /**\n   * Gender of the patient\n   */\n  gender: 'male' | 'female' | 'undefined';\n\n  /**\n   * Anatomical Locations that were excised from the donor. Use either common labels or\n   * the corresponding UBERON or HuBMAP id (UBERON_XXXX or HUBMAP_YYYY).\n   */\n  anatomicalLocations: string[];\n\n  // Internal fields\n  /**\n   * Identifiers of containing ontology nodes and their parent chains.\n   * Used to speed up inclusion checks.\n   */\n  ontologyNodeIds: string[];\n}\n\n/**\n * A tissue sample excised from a donor\n */\nexport interface TissueSample extends Annotated {\n  /**\n   * The patient from whom the tissue was excised\n   */\n  patient: Patient;\n\n  /**\n   * An URL to the svg overlay\n   */\n  overlayUrl: string;\n}\n\n/**\n * A slice of a tissue sample\n */\nexport interface TissueSlice extends Annotated {\n  /**\n   * The tissue sample from which a slice was extracted\n   */\n  sample: TissueSample;\n}\n\n/**\n * An image of a tissue slice\n */\nexport interface TissueImage extends Annotated {\n  /**\n   * The tissue slice from which an image was extracted\n   */\n  slice: TissueSlice;\n\n  /**\n   * The technology used to extract the image\n   */\n  technology: 'IHC' | 'PAS' | 'IMS' | 'MxIF' | 'AF' | string;\n\n  /**\n   * A URL to download the source image\n   */\n  sourceUrl: string;\n\n  /**\n   * A URL to a small-sized version of the image. Should be a .png, .jpg, or .gif.\n   */\n  thumbnailUrl: string;\n\n  /**\n   * Additional data to display in popovers, etc. for the thumbnail\n   */\n  thumbnailMetadata: { [label: string]: string };\n\n  /**\n   * A URL to a tiled version of the image\n   */\n  tileUrl: string;\n\n  /**\n   * The type of tiles at the URL\n   */\n  tileType: 'deep-zoom' | 'google-maps' | string;\n\n  /**\n   * The number of pixels per meter for the image\n   */\n  pixelsPerMeter: number;\n}\n\n/**\n * An overlay that can be placed atop a TissueImage\n */\nexport interface TissueOverlay extends Annotated {\n  /**\n   * The tissue image this overlay can be placed atop\n   */\n  image: TissueImage;\n\n  /**\n   * The label for the overlay.\n   */\n  label: string;\n\n  /**\n   * Anatomical location for the overlay.\n   */\n  anatomicalLocations: string[];\n\n\n  /**\n   * An URL for the SVG overlay.\n   */\n  overlayUrl: string;\n\n}\n\n/**\n * A tissue cell that was extracted/discovered from a tissue slice\n */\nexport interface TissueCell extends TissueOverlay {\n  /**\n   * The tissue slice from which an image was extracted/discovered\n   */\n  slice: TissueSlice;\n\n  /**\n   * The type of cell discovered\n   */\n  cellType: string;\n}\n\n/**\n * A local database of patients, samples, slices, images, etc.\n *\n * NOTE: A remote database will be the norm, so do not reference this\n * unless you are working with the local database implementation directly.\n */\nexport interface LocalDatabase {\n  /** Patients/donors in the database */\n  patients: Patient[];\n  /** Tissue samples in the database */\n  samples: TissueSample[];\n  /** Tissue slices in the database */\n  slices: TissueSlice[];\n  /** Tissue images in the database */\n  images: TissueImage[];\n  /** Tissue image overlays in the database */\n  overlays: TissueOverlay[];\n  /** Tissue cells in the database */\n  cells: TissueCell[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalDatabaseService.html":{"url":"injectables/LocalDatabaseService.html","title":"injectable - LocalDatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalDatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/database/local/local-database.service.ts\n        \n\n            \n                Description\n            \n            \n                A service connecting to a small in-memory local tissue database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _database$\n                            \n                            \n                                    Private\n                                emulatedHttpDelay\n                            \n                            \n                                    Private\n                                localDatabaseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPatients\n                            \n                            \n                                getTissueImages\n                            \n                            \n                                getTissueOverlays\n                            \n                            \n                                getTissueSamples\n                            \n                            \n                                getTissueSlices\n                            \n                            \n                                    Private\n                                query\n                            \n                            \n                                    Private\n                                setPatientOntologyPositions\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    database$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/database/local/local-database.service.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of the local database service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPatients\n                        \n                        \n                    \n                \n            \n            \n                \ngetPatients(filter?: (item?: Patient) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/database/local/local-database.service.ts:73\n                \n            \n\n\n            \n                \n                    Query function to get patients from the tissue database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a function used to optionally filter the associated data array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTissueImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetTissueImages(filter?: (item?: TissueImage) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/database/local/local-database.service.ts:100\n                \n            \n\n\n            \n                \n                    Query function to get tissue images from the tissue database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a function used to optionally filter the associated data array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTissueOverlays\n                        \n                        \n                    \n                \n            \n            \n                \ngetTissueOverlays(filter?: (item?: TissueOverlay) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/database/local/local-database.service.ts:109\n                \n            \n\n\n            \n                \n                    Gets tissue overlays\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a function used to optionally filter the associated data array.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable for the tissue overlays.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTissueSamples\n                        \n                        \n                    \n                \n            \n            \n                \ngetTissueSamples(filter?: (item?: TissueSample) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/database/local/local-database.service.ts:82\n                \n            \n\n\n            \n                \n                    Query function to get tissue samples from the tissue database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a function used to optionally filter the associated data array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTissueSlices\n                        \n                        \n                    \n                \n            \n            \n                \ngetTissueSlices(filter?: (item?: TissueSlice) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/database/local/local-database.service.ts:91\n                \n            \n\n\n            \n                \n                    Query function to get tissue slices from the tissue database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a function used to optionally filter the associated data array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(field: string, filter?: (item?: T) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/database/local/local-database.service.ts:119\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Query function to get data items from the tissue database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a field in the LocalDatabase to pluck\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a function used to optionally filter the associated data array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setPatientOntologyPositions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPatientOntologyPositions(db: LocalDatabase, ontology: OntologyStateModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/database/local/local-database.service.ts:141\n                \n            \n\n\n            \n                \n                    Sets patient ontology positions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    db\n                                    \n                                                LocalDatabase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The database on which to set ontology positions.\n\n                                    \n                                \n                                \n                                    ontology\n                                    \n                                                OntologyStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current state of the ontology.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocalDatabase\n\n                    \n                    \n                        The database.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _database$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/database/local/local-database.service.ts:40\n                            \n                        \n\n                \n                    \n                        cached local database observable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emulatedHttpDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 500\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/database/local/local-database.service.ts:32\n                            \n                        \n\n                \n                    \n                        Max delay to use when emulating network responses\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            localDatabaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.localDatabaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/database/local/local-database.service.ts:37\n                            \n                        \n\n                \n                    \n                        URL to the local database to download in .yml format\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        database$\n                    \n                \n\n                \n                    \n                        getdatabase$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/database/local/local-database.service.ts:50\n                                \n                            \n                    \n                        \n                                The tissue database, parsed from a remote yml file\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { safeLoad } from 'js-yaml';\nimport { at, filter as loFilter, flatMap, forEach, last, split, uniq } from 'lodash';\nimport { combineLatest, Observable } from 'rxjs';\nimport { delay, map, pluck, shareReplay, skip } from 'rxjs/operators';\n\nimport { environment } from '../../../../../environments/environment';\nimport { OntologyStateModel } from '../../../../shared/state/ontology/ontology.model';\nimport { OntologyState } from '../../../../shared/state/ontology/ontology.state';\nimport {\n  LocalDatabase,\n  Patient,\n  TissueImage,\n  TissueOverlay,\n  TissueSample,\n  TissueSlice,\n} from '../../../state/database/database.models';\n\n\n/**\n * A service connecting to a small in-memory local tissue database\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalDatabaseService {\n  /**\n   * Max delay to use when emulating network responses\n   */\n  private emulatedHttpDelay = 500;\n\n  /**\n   * URL to the local database to download in .yml format\n   */\n  private localDatabaseUrl = environment.localDatabaseUrl;\n\n  /** cached local database observable */\n  private _database$: Observable;\n\n  /**\n   * Creates an instance of the local database service.\n   */\n  constructor(private http: HttpClient, private store: Store) {}\n\n  /**\n   * The tissue database, parsed from a remote yml file\n   */\n  private get database$(): Observable {\n    if (!this._database$) {\n      this._database$ = combineLatest(\n        [this.http.get(this.localDatabaseUrl, {responseType: 'text'}).pipe(\n          map(results => safeLoad(results))\n        ),\n        this.store.select(OntologyState)]\n      ).pipe(\n        // Skip first emission as it contains the empty ontology state.\n        skip(1),\n        map(([db, ontology]) => this.setPatientOntologyPositions(db, ontology)),\n        shareReplay(1)\n      );\n    }\n\n    return this._database$;\n  }\n\n  /**\n   * Query function to get patients from the tissue database\n   *\n   * @param filter a function used to optionally filter the associated data array\n   */\n  getPatients(filter?: (item: Patient) => boolean): Observable {\n    return this.query('patients', filter);\n  }\n\n  /**\n   * Query function to get tissue samples from the tissue database\n   *\n   * @param filter a function used to optionally filter the associated data array\n   */\n  getTissueSamples(filter?: (item: TissueSample) => boolean): Observable {\n    return this.query('samples', filter);\n  }\n\n  /**\n   * Query function to get tissue slices from the tissue database\n   *\n   * @param filter a function used to optionally filter the associated data array\n   */\n  getTissueSlices(filter?: (item: TissueSlice) => boolean): Observable {\n    return this.query('slices', filter);\n  }\n\n  /**\n   * Query function to get tissue images from the tissue database\n   *\n   * @param filter a function used to optionally filter the associated data array\n   */\n  getTissueImages(filter?: (item: TissueImage) => boolean): Observable {\n    return this.query('images', filter);\n  }\n\n  /**\n   * Gets tissue overlays\n   * @param [filter] a function used to optionally filter the associated data array.\n   * @returns An observable for the tissue overlays.\n   */\n  getTissueOverlays(filter?: (item: TissueOverlay) => boolean): Observable {\n    return this.query('overlays', filter);\n  }\n\n  /**\n   * Query function to get data items from the tissue database\n   *\n   * @param field a field in the LocalDatabase to pluck\n   * @param filter a function used to optionally filter the associated data array\n   */\n  private query(field: string, filter?: (item: T) => boolean): Observable {\n    let data$: Observable = this.database$.pipe(pluck(field));\n\n    // Filter data items if a filter function is provided\n    if (filter) {\n      data$ = data$.pipe(map((items: T[]) => items.filter(filter)));\n    }\n\n    // Add an emulated delay\n    const emulatedHttpDelay = Math.round(Math.random() * this.emulatedHttpDelay);\n    data$ = data$.pipe(delay(emulatedHttpDelay));\n\n    return data$;\n  }\n\n  /**\n   * Sets patient ontology positions\n   *\n   * @param db The database on which to set ontology positions.\n   * @param ontology The current state of the ontology.\n   * @returns The database.\n   */\n  private setPatientOntologyPositions(db: LocalDatabase, ontology: OntologyStateModel): LocalDatabase {\n    const { nodes } = ontology;\n    const namesToNode: { [name: string]: string } = {};\n\n    forEach(nodes, node => {\n      namesToNode[last(split(node.id))] = node.id;\n      namesToNode[node.label] = node.id;\n      forEach(node.synonymLabels, syn => namesToNode[syn] = node.id);\n    });\n\n    forEach(db.patients, patient => {\n      const baseIds = loFilter(at(namesToNode, patient.anatomicalLocations));\n      patient.ontologyNodeIds = uniq(flatMap(baseIds, id => {\n        const result = [];\n        let current = nodes[id];\n        while (current !== undefined) {\n          result.push(current.id);\n          current = nodes[current.parent];\n        }\n        return result;\n      }));\n    });\n\n    return db;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/main/main.component.ts\n\n\n    \n        Description\n    \n    \n        Main view containing common items to all subviews.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-main\n            \n\n            \n                styleUrls\n                ./main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchActive\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigation: NavigationService, search: SearchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/main/main.component.ts:18\n                            \n                        \n\n                \n                    \n                            Creates an instance of main component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navigation\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The navigation service used to determine active routes.\n\n                                                        \n                                                \n                                                \n                                                        search\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The search service used to fetch a description of the current search.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/main/main.component.ts:18\n                            \n                        \n\n                \n                    \n                        Indicates whether the search drawer is active(open)/inactive(closed).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { NavigationService } from '../../shared/services/navigation/navigation.service';\nimport { SearchService } from '../../shared/services/search/search.service';\n\n/**\n * Main view containing common items to all subviews.\n */\n@Component({\n  selector: 'ccf-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent {\n  /**\n   * Indicates whether the search drawer is active(open)/inactive(closed).\n   */\n  searchActive = true;\n\n  /**\n   * Creates an instance of main component.\n   *\n   * @param navigation The navigation service used to determine active routes.\n   * @param search The search service used to fetch a description of the current search.\n   */\n  constructor(\n    readonly navigation: NavigationService,\n    readonly search: SearchService\n  ) { }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n\n      \n        \n          \n        \n\n        \n          \n            {{ search.searchCriteria | async }}\n            \n              cloud_download\n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./main.component.scss\n                \n                @import 'global/sizes', 'global/colors';\n\n.ccf-main.wrapper {\n  .container {\n    .header {\n      height: $header-height;\n    }\n\n    .contents-area {\n      display: flex;\n      height: calc(100vh - #{$header-height});\n\n      .navigation {\n        width: $navigation-width;\n        height: 100%;\n      }\n\n      .drawer {\n        width: 100%;\n        background: none;\n\n        .search {\n          width: $search-width;\n          background: $search-drawer-background-color;\n        }\n\n        .contents {\n          height: 100%;\n\n          .top-bar {\n            position: absolute;\n            right: 0;\n            margin: 1rem;\n            display: flex;\n\n            .search-criteria {\n              font-weight: 500;\n              line-height: 1.6rem;\n              padding-right: 1rem;\n            }\n\n            .download {\n              color: $download-icon-color;\n            }\n          }\n\n          .outlet {\n            height: 100%;\n            padding: 3.5rem 1.5rem 1.5rem 1.5rem;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ search.searchCriteria | async }}                          cloud_download                                                                          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_MainModule_exports\n\n\n\n\nMainComponent\n\nMainComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainComponent->MainModule\n\n\n\n\n\nMainComponent \n\nMainComponent \n\nMainComponent  -->\n\nMainModule->MainComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nMainModule -->\n\nHeaderModule->MainModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nMainModule -->\n\nNavigationModule->MainModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nMainModule -->\n\nSearchModule->MainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/main/main.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            NavigationModule\n                        \n                        \n                            SearchModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\nimport { HeaderModule } from '../../components/header/header.module';\nimport { NavigationModule } from '../../components/navigation/navigation.module';\nimport { SearchModule } from '../../components/search/search.module';\nimport { MainComponent } from './main.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    HeaderModule,\n    MatSidenavModule,\n    BrowserAnimationsModule,\n    SearchModule,\n    NavigationModule,\n    MatIconModule\n  ],\n  declarations: [MainComponent],\n  exports: [MainComponent]\n})\nexport class MainModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataComponent.html":{"url":"components/MetadataComponent.html","title":"component - MetadataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MetadataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/metadata/metadata.component.ts\n\n\n    \n        Description\n    \n    \n        metadata common component to dsiplay metadata of bidy, organ tisues and cells.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-metadata\n            \n\n            \n                styleUrls\n                ./metadata.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./metadata.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        metadata\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/metadata/metadata.component.ts:15\n                            \n                        \n                \n                    \n                        Input  of metadata component is list of metadata objects.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * metadata common component to dsiplay metadata of bidy, organ tisues and cells.\n */\n@Component({\n  selector: 'ccf-metadata',\n  templateUrl: './metadata.component.html',\n  styleUrls: ['./metadata.component.scss']\n})\nexport class MetadataComponent {\n  /**\n   * Input  of metadata component is list of metadata objects.\n   */\n  @Input() metadata: { [label: string]: string }[];\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ item.key }}:\n          {{ item.value }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./metadata.component.scss\n                \n                .metadata.wrapper {\n  .row {\n    font-size: 0.75rem;\n\n    .label {\n      text-align: right;\n    }\n\n    .value {\n      text-align: left;\n      padding-left: 1.5rem;\n      font-weight: bold;\n    }\n  }\n\n  .container {\n    .metadata-table {\n      float: right;\n      padding-right: 1rem;\n      margin-top: 1rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ item.key }}:          {{ item.value }}                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MetadataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MetadataModule.html":{"url":"modules/MetadataModule.html","title":"module - MetadataModule","body":"\n                   \n\n\n\n\n    Modules\n    MetadataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MetadataModule\n\n\n\ncluster_MetadataModule_declarations\n\n\n\ncluster_MetadataModule_exports\n\n\n\n\nMetadataComponent\n\nMetadataComponent\n\n\n\nMetadataModule\n\nMetadataModule\n\nMetadataModule -->\n\nMetadataComponent->MetadataModule\n\n\n\n\n\nMetadataComponent \n\nMetadataComponent \n\nMetadataComponent  -->\n\nMetadataModule->MetadataComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/metadata/metadata.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MetadataComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MetadataComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MetadataComponent } from './metadata.component';\n\n@NgModule({\n  declarations: [MetadataComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [MetadataComponent]\n})\nexport class MetadataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navigation/navigation.component.ts\n\n\n    \n        Description\n    \n    \n        A sidebar component with buttons for navigating between different views.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isCommentItemHovered\n                            \n                            \n                                    Private\n                                    Readonly\n                                searchActiveSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSearchActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchActiveChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigator: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navigation/navigation.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of leftbar component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navigator\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to get correct url paths.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        searchActive\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:18\n                            \n                        \n                \n                    \n                        Indicates whether the search icon is considered active or not.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchActiveChange\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:23\n                            \n                        \n                \n                    \n                        Emits whenever the search icon is activated/deactivated.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearchActive\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearchActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation/navigation.component.ts:48\n                \n            \n\n\n            \n                \n                    Toggles the state of the search.\nAlso emits the new state to searchActive.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCommentItemHovered\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:28\n                            \n                        \n\n                \n                    \n                        Indicates whether the comment item is currenlty being hovered over.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            searchActiveSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:33\n                            \n                        \n\n                \n                    \n                        Internal subject for searchActive.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Output, Input } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { NavigationService } from '../../shared/services/navigation/navigation.service';\n\n/**\n * A sidebar component with buttons for navigating between different views.\n */\n@Component({\n  selector: 'ccf-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent {\n  /**\n   * Indicates whether the search icon is considered active or not.\n   */\n  @Input() searchActive = false;\n\n  /**\n   * Emits whenever the search icon is activated/deactivated.\n   */\n  @Output() searchActiveChange: Observable;\n\n  /**\n   * Indicates whether the comment item is currenlty being hovered over.\n   */\n  isCommentItemHovered = false;\n\n  /**\n   * Internal subject for `searchActive`.\n   */\n  private readonly searchActiveSubject = new Subject();\n\n  /**\n   * Creates an instance of leftbar component.\n   *\n   * @param navigator The service used to get correct url paths.\n   */\n  constructor(readonly navigator: NavigationService) {\n    this.searchActiveChange = this.searchActiveSubject.asObservable();\n  }\n\n  /**\n   * Toggles the state of the search.\n   * Also emits the new state to `searchActive`.\n   */\n  toggleSearchActive(): void {\n    this.searchActive = !this.searchActive;\n    this.searchActiveSubject.next(this.searchActive);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      search\n    \n\n    \n      home\n       HOME \n    \n\n    \n      \n       BODY \n    \n\n    \n      \n       ORGAN \n    \n\n    \n      view_comfy\n       TISSUE \n    \n\n    \n      \n       CELL \n    \n\n    \n    \n\n    \n      \n      \n      \n        comment\n      \n       Comment \n    \n  \n\n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                @import 'global/sizes', 'global/colors', 'global/mixins';\n\n.ccf-navigation.wrapper {\n  height: 100%;\n\n  .container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    padding-bottom: 1rem;\n    background: $background-color;\n    @include default-border(right);\n\n    .icon {\n      $icon-padding-left: 0.75rem;\n      $icon-padding-right: 0.75rem;\n      $icon-size: $navigation-width - $icon-padding-left - $icon-padding-right;\n\n      width: $icon-size;\n      height: $icon-size;\n      font-size: $icon-size;\n      padding-left: $icon-padding-left;\n      padding-right: $icon-padding-right;\n    }\n\n    .svg-icon {\n      box-sizing: content-box;\n    }\n\n    .item {\n      margin-bottom: 0.5rem;\n      color: $icon-color;\n      outline: none;\n      cursor: pointer;\n\n      .label {\n        font-size: 0.625rem;\n        text-align: center;\n      }\n\n      &.active {\n        color: $active-icon-color;\n      }\n    }\n\n    .search {\n      padding-top: 0.5rem;\n      padding-bottom: 0.5rem;\n      margin-bottom: 0;\n\n      &.active {\n        background: $active-button-color;\n\n        .icon {\n          color: $active-button-contrast-color;\n        }\n      }\n    }\n\n    .home {\n      margin-top: 0.5rem;\n    }\n\n    .feedback {\n      margin-bottom: 0;\n      text-decoration: none;\n    }\n\n    .filler {\n      flex-grow: 1000000; // Huge number to make it consume extra space\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            search              home       HOME                      BODY                      ORGAN               view_comfy       TISSUE                      CELL                                           comment             Comment       '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavigationModule.html":{"url":"modules/NavigationModule.html","title":"module - NavigationModule","body":"\n                   \n\n\n\n\n    Modules\n    NavigationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_exports\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\n\n\nNavigationModule\n\nNavigationModule\n\nNavigationModule -->\n\nNavigationComponent->NavigationModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nNavigationModule->NavigationComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/navigation/navigation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavigationComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\n\nimport { NavigationComponent } from './navigation.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    RouterModule\n  ],\n  declarations: [\n    NavigationComponent\n  ],\n  exports: [\n    NavigationComponent\n  ]\n})\nexport class NavigationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/navigation/navigation.service.ts\n        \n\n            \n                Description\n            \n            \n                Contains utility for managing url to different locations in the app.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bodyPath\n                            \n                            \n                                    Readonly\n                                homePath\n                            \n                            \n                                    Readonly\n                                isHomeActive\n                            \n                            \n                                    Private\n                                navigation\n                            \n                            \n                                    Readonly\n                                organPath\n                            \n                            \n                                    Readonly\n                                tissuePath\n                            \n                            \n                                    Readonly\n                                tissuesBrowserPath\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganPath\n                            \n                            \n                                createTissuePath\n                            \n                            \n                                navigateToHome\n                            \n                            \n                                navigateToTissueBrowser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOrganPath\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOrganPath(organId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/navigation/navigation.service.ts:96\n                \n            \n\n\n            \n                \n                    Creates an url to the organ view for a specific organ.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The tissue identifier.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        The url segments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTissuePath\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTissuePath(tissueId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/navigation/navigation.service.ts:106\n                \n            \n\n\n            \n                \n                    Creates an url to the tissue view for a specific tissue.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tissueId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The tissue identifier.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        The url segments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToHome\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToHome()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Dispatch()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/navigation/navigation.service.ts:114\n                \n            \n\n\n            \n                \n                    Causes a router change to the home view.\n\n\n                    \n                        Returns :     Navigate\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToTissueBrowser\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToTissueBrowser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Dispatch()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/navigation/navigation.service.ts:122\n                \n            \n\n\n            \n                \n                    Causes a router change to the tissue browser view.\n\n\n                    \n                        Returns :     Navigate\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            bodyPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSinglePathObservable('/body')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/navigation/navigation.service.ts:68\n                            \n                        \n\n                \n                    \n                        The path to the body view.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            homePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSinglePathObservable('/home')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/navigation/navigation.service.ts:63\n                            \n                        \n\n                \n                    \n                        The path to the home view.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isHomeActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.url.pipe(map(url => url === '/home'))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/navigation/navigation.service.ts:88\n                            \n                        \n\n                \n                    \n                        Determines whether the home route is active.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            navigation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(NavigationState)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/navigation/navigation.service.ts:58\n                            \n                        \n\n                \n                    \n                        Listener on the nagivation state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            organPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createPathWithIdentifier('/organ', this.navigation.pipe(pluck('activeOrgan', 'id')))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/navigation/navigation.service.ts:78\n                            \n                        \n\n                \n                    \n                        The path to the currently active organ view.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tissuePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createPathWithIdentifier('/tissue', this.navigation.pipe(pluck('activeTissue', 'id')))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/navigation/navigation.service.ts:83\n                            \n                        \n\n                \n                    \n                        The path to the currently active tissue view.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tissuesBrowserPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSinglePathObservable('/tissues')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/navigation/navigation.service.ts:73\n                            \n                        \n\n                \n                    \n                        The path to the tissues browser view.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(RouterState.url)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/navigation/navigation.service.ts:52\n                            \n                        \n\n                \n                    \n                        Currently active url.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Navigate, RouterState } from '@ngxs/router-plugin';\nimport { Select } from '@ngxs/store';\nimport { concat } from 'lodash';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\n\nimport { NavigationStateModel } from '../../state/navigation/navigation.model';\nimport { NavigationState } from '../../state/navigation/navigation.state';\n\n\n/**\n * Creates an observable that emits a path and then completes on every subscription.\n *\n * @param path The path to emit.\n * @returns The new observable emitting a single path.\n */\nfunction createSinglePathObservable(path: string | any[]): Observable {\n  const subject = new ReplaySubject(1);\n  subject.next(path);\n  subject.complete();\n  return subject.asObservable();\n}\n\n/**\n * Creates an observable that emits a path constructed from a prefix and\n * an identifier from another observable.\n *\n * @param prefix The path prefix.\n * @param identifier An observable emitting identifiers.\n * @returns The new observable emitting the constructed paths.\n */\nfunction createPathWithIdentifier(prefix: string | any[], identifier: Observable): Observable {\n  return identifier.pipe(\n    distinctUntilChanged(),\n    map(id => id && concat(prefix, id))\n  );\n}\n\n/**\n * Contains utility for managing url to different locations in the app.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  /**\n   * Currently active url.\n   */\n  @Select(RouterState.url)\n  private url: Observable;\n\n  /**\n   * Listener on the nagivation state.\n   */\n  @Select(NavigationState)\n  private navigation: Observable;\n\n  /**\n   * The path to the home view.\n   */\n  readonly homePath = createSinglePathObservable('/home');\n\n  /**\n   * The path to the body view.\n   */\n  readonly bodyPath = createSinglePathObservable('/body');\n\n  /**\n   * The path to the tissues browser view.\n   */\n  readonly tissuesBrowserPath = createSinglePathObservable('/tissues');\n\n  /**\n   * The path to the currently active organ view.\n   */\n  readonly organPath = createPathWithIdentifier('/organ', this.navigation.pipe(pluck('activeOrgan', 'id')));\n\n  /**\n   * The path to the currently active tissue view.\n   */\n  readonly tissuePath = createPathWithIdentifier('/tissue', this.navigation.pipe(pluck('activeTissue', 'id')));\n\n  /**\n   * Determines whether the home route is active.\n   */\n  readonly isHomeActive = this.url.pipe(map(url => url === '/home'));\n\n  /**\n   * Creates an url to the organ view for a specific organ.\n   *\n   * @param organId The tissue identifier.\n   * @returns The url segments.\n   */\n  createOrganPath(organId: string): any[] {\n    return ['/organ', organId];\n  }\n\n  /**\n   * Creates an url to the tissue view for a specific tissue.\n   *\n   * @param tissueId The tissue identifier.\n   * @returns The url segments.\n   */\n  createTissuePath(tissueId: string): any[] {\n    return ['/tissue', tissueId];\n  }\n\n  /**\n   * Causes a router change to the home view.\n   */\n  @Dispatch()\n  navigateToHome(): Navigate {\n    return new Navigate(['/home']);\n  }\n\n  /**\n   * Causes a router change to the tissue browser view.\n   */\n  @Dispatch()\n  navigateToTissueBrowser(): Navigate {\n    return new Navigate(['/tissues']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigationState.html":{"url":"classes/NavigationState.html","title":"class - NavigationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/navigation/navigation.state.ts\n        \n\n            \n                Description\n            \n            \n                State storing the active navigations.\n\n            \n\n\n            \n                Implements\n            \n            \n                        NgxsOnInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tissuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                activeOrgan\n                            \n                            \n                                    Static\n                                activeTissue\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                setActiveOrgan\n                            \n                            \n                                setActiveTissue\n                            \n                            \n                                    Static\n                                tissues\n                            \n                            \n                                updateActiveFromRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(database: LocalDatabaseService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/navigation/navigation.state.ts:68\n                            \n                        \n\n                \n                    \n                            Creates an instance of navigation state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                        LocalDatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The local database.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global ngxs store.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tissuesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/navigation/navigation.state.ts:28\n                            \n                        \n\n                \n                    \n                        Subscription for getting the active tissues.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            activeOrgan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activeOrgan(state: NavigationStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/navigation/navigation.state.ts:50\n                \n            \n\n\n            \n                \n                    Selector for the currently active organ.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                NavigationStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            activeTissue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activeTissue(state: NavigationStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/navigation/navigation.state.ts:42\n                \n            \n\n\n            \n                \n                    Selector for the currently active tissue.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                NavigationStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TissueImage | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/state/navigation/navigation.state.ts:98\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy lifecycle hook.\nCleans up subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngxsOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: StateContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/state/navigation/navigation.state.ts:83\n                \n            \n\n\n            \n                \n                    Initializes the state from the database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setActiveOrgan\n                        \n                        \n                    \n                \n            \n            \n                \nsetActiveOrgan(ctx: StateContext, route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/state/navigation/navigation.state.ts:125\n                \n            \n\n\n            \n                \n                    Sets the active organ based on the route.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state context.\n\n                                    \n                                \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active route to an organ.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setActiveTissue\n                        \n                        \n                    \n                \n            \n            \n                \nsetActiveTissue(ctx: StateContext, route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/state/navigation/navigation.state.ts:108\n                \n            \n\n\n            \n                \n                    Sets the active based on from the route.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state context.\n\n                                    \n                                \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active route to a tissue.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            tissues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tissues(state: NavigationStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/navigation/navigation.state.ts:34\n                \n            \n\n\n            \n                \n                    Selector for the TissueImage array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                NavigationStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TissueImage[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateActiveFromRoute\n                        \n                        \n                    \n                \n            \n            \n                \nupdateActiveFromRoute(ctx: StateContext, action: RouterDataResolved)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RouterDataResolved)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/navigation/navigation.state.ts:58\n                \n            \n\n\n            \n                \n                    Updates the state on navigation to an organ or tissue.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            RouterDataResolved\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { RouterDataResolved } from '@ngxs/router-plugin';\nimport { Action, NgxsOnInit, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\nimport { LocalDatabaseService } from '../../services/database/local/local-database.service';\nimport { TissueImage } from '../database/database.models';\nimport { SearchState } from '../search/search.state';\nimport { NavigationStateModel } from './navigation.model';\n\n/**\n * State storing the active navigations.\n */\n@State({\n  name: 'navigation',\n  defaults: {\n    tissues: [],\n    activeTissue: undefined,\n    activeOrgan: undefined\n  }\n})\nexport class NavigationState implements NgxsOnInit, OnDestroy {\n  /**\n   * Subscription for getting the active tissues.\n   */\n  private tissuesSubscription: Subscription;\n\n  /**\n   * Selector for the `TissueImage` array.\n   */\n  @Selector()\n  static tissues(state: NavigationStateModel): TissueImage[] {\n    return state.tissues;\n  }\n\n  /**\n   * Selector for the currently active tissue.\n   */\n  @Selector()\n  static activeTissue(state: NavigationStateModel): TissueImage | undefined {\n    return state.activeTissue;\n  }\n\n  /**\n   * Selector for the currently active organ.\n   */\n  @Selector()\n  static activeOrgan(state: NavigationStateModel): { id: string } | undefined { // FIXME: Update with proper organ object\n    return state.activeOrgan;\n  }\n\n  /**\n   * Updates the state on navigation to an organ or tissue.\n   */\n  @Action(RouterDataResolved)\n  updateActiveFromRoute(ctx: StateContext, action: RouterDataResolved): void {\n    const route = action.routerState.root.firstChild;\n    if (!route) { return; }\n\n    const { tissueId, organId } = route.params;\n    if (tissueId) {\n      this.setActiveTissue(ctx, route);\n    } else if (organId) {\n      this.setActiveOrgan(ctx, route);\n    }\n  }\n\n  /**\n   * Creates an instance of navigation state.\n   *\n   * @param database The local database.\n   * @param store The global ngxs store.\n   */\n  constructor(private database: LocalDatabaseService, private store: Store) { }\n\n  /**\n   * Initializes the state from the database.\n   *\n   * @param ctx The state context.\n   */\n  ngxsOnInit(ctx: StateContext): void {\n    const { database, store } = this;\n    const tissuesSource = store.select(SearchState.tissueImageFilterBuilder).pipe(\n      filter(builder => !!builder),\n      map(builder => builder.toFilter()),\n      switchMap(tissueFilter => database.getTissueImages(tissueFilter))\n    );\n\n    this.tissuesSubscription = tissuesSource.subscribe(tissues => ctx.patchState({ tissues }));\n  }\n\n  /**\n   * Angular's OnDestroy lifecycle hook.\n   * Cleans up subscriptions.\n   */\n  ngOnDestroy() {\n    this.tissuesSubscription.unsubscribe();\n  }\n\n  /**\n   * Sets the active based on from the route.\n   *\n   * @param ctx The state context.\n   * @param route The active route to a tissue.\n   */\n  setActiveTissue(ctx: StateContext, route: ActivatedRouteSnapshot): void {\n    const state = ctx.getState();\n    const tissue: TissueImage = route.data['tissue'];\n    if (tissue && state.activeTissue !== tissue) {\n      ctx.patchState({\n        activeTissue: tissue,\n        activeOrgan: { id: tissue.slice.sample.patient.anatomicalLocations[0] } // FIXME: Update with proper organ object\n      });\n    }\n  }\n\n  /**\n   * Sets the active organ based on the route.\n   *\n   * @param ctx The state context.\n   * @param route The active route to an organ.\n   */\n  setActiveOrgan(ctx: StateContext, route: ActivatedRouteSnapshot): void {\n    const state = ctx.getState();\n    const id: string = route.params['organId'];\n    if (!state.activeOrgan || state.activeOrgan.id !== id) {\n      ctx.patchState({\n        activeTissue: undefined,\n        activeOrgan: { id: id } // FIXME: Update with proper organ object\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavigationStateModel.html":{"url":"interfaces/NavigationStateModel.html","title":"interface - NavigationStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NavigationStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/navigation/navigation.model.ts\n        \n\n            \n                Description\n            \n            \n                Navigation state model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeOrgan\n                                \n                                \n                                        activeTissue\n                                \n                                \n                                        tissues\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeOrgan\n                                    \n                                \n                                \n                                    \n                                        activeOrgan:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The organ displayed in the organ view.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        activeTissue\n                                    \n                                \n                                \n                                    \n                                        activeTissue:         TissueImage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueImage\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The currently active tissue displayed in the cell view.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissues\n                                    \n                                \n                                \n                                    \n                                        tissues:         TissueImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueImage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissues to display in the browser view.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TissueImage } from '../database/database.models';\n\n/**\n * Navigation state model.\n */\nexport interface NavigationStateModel {\n  /**\n   * Tissues to display in the browser view.\n   */\n  tissues: TissueImage[];\n\n  /**\n   * The currently active tissue displayed in the cell view.\n   */\n  activeTissue: TissueImage;\n\n  /**\n   * The organ displayed in the organ view.\n   */\n  activeOrgan: { id: string }; // FIXME: Correct typing\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyNode.html":{"url":"interfaces/OntologyNode.html","title":"interface - OntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/ontology/ontology.model.ts\n        \n\n            \n                Description\n            \n            \n                A node in the ontology tree.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        parent\n                                \n                                \n                                        synonymLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of child identifiers.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of this node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for this ontology node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The identifier of the parent node. undefined if this is the root node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synonymLabels\n                                    \n                                \n                                \n                                    \n                                        synonymLabels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Labels for the synonyms of the label of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface OntologyNode {\n  /**\n   * The unique identifier of this node.\n   */\n  id: string;\n\n  /**\n   * Label for this ontology node.\n   */\n  label: string;\n\n  /**\n   * The identifier of the parent node. `undefined` if this is the root node.\n   */\n  parent: string | undefined;\n\n  /**\n   * An array of child identifiers.\n   */\n  children: string[];\n\n  /**\n   * Labels for the synonyms of the label of this node.\n   */\n  synonymLabels: string[];\n}\n\n/**\n * A flat representation of an ontology tree.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySearchComponent.html":{"url":"components/OntologySearchComponent.html","title":"component - OntologySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ontology-search/ontology-search.component.ts\n\n\n    \n        Description\n    \n    \n        Ontology Search Component responsible for searching the ontology\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-search\n            \n\n            \n                styleUrls\n                ./ontology-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredResults$\n                            \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFormatter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                    Private\n                                sortBySynonymResult\n                            \n                            \n                                    Private\n                                sortLexically\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchService: OntologySearchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ontology-search/ontology-search.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of searchService which provides all the search functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ontology-search/ontology-search.component.ts:24\n                            \n                        \n                \n                    \n                        Output event-emitter which emits the id of the OntologyNode whose label was\nselected by the user in the search-results\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFormatter\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFormatter(option: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ontology-search/ontology-search.component.ts:91\n                \n            \n\n\n            \n                \n                    A formatter function to enable different display and selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a part of the search result entry to be displayed as a display value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ontology-search/ontology-search.component.ts:45\n                \n            \n\n\n            \n                \n                    on-init lifecycle hook for this component -\ngets the searched value from the view, sends it to the filter function in the OntologyService,\nand gets the search results from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ontology-search/ontology-search.component.ts:78\n                \n            \n\n\n            \n                \n                    Callback function triggered when the user selects a value from search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of MatAutocompleteSelectedEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sortBySynonymResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortBySynonymResult(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ontology-search/ontology-search.component.ts:70\n                \n            \n\n\n            \n                \n                    Sorts by results which have synonyms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 or -1\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sortLexically\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortLexically(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ontology-search/ontology-search.component.ts:61\n                \n            \n\n\n            \n                \n                    Sorts lexically\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        lower case value of node label\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredResults$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ontology-search/ontology-search.component.ts:32\n                            \n                        \n\n                \n                    \n                        Observable which provides the filtered search results\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ontology-search/ontology-search.component.ts:28\n                            \n                        \n\n                \n                    \n                        Instance of FormControl - tracks the value and validation status of an individual form control\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { get, sortBy } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologySearchService, SearchResult } from '../../shared/services/ontology-search/ontology-search.service';\nimport { OntologyNode } from '../../shared/state/ontology/ontology.model';\n\n/**\n * Ontology Search Component responsible for searching the ontology\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss']\n})\nexport class OntologySearchComponent implements OnInit {\n  /**\n   * Output event-emitter which emits the id of the OntologyNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() selected = new EventEmitter();\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new FormControl();\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$: Observable;\n\n  /**\n   * Creates an instance of ontology search component.\n   * @param searchService instance of searchService which provides all the search functionality\n   */\n  constructor(private searchService: OntologySearchService) { }\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit() {\n    this.filteredResults$ = this.formControl.valueChanges.pipe(\n      filter(value => typeof value === 'string'),\n      startWith(''),\n      switchMap(value => this.searchService.filter(value)),\n      map(searchResults => sortBy(searchResults, [\n        this.sortBySynonymResult, 'index', this.sortLexically\n      ]))\n    );\n  }\n\n  /**\n   * Sorts lexically\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  private sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  private sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, 'option.value.node');\n    if (node) {\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option: SearchResult): string {\n    if (option) {\n      return option.displayLabel.join('');\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        {{option.displayLabel[0]}}\n        {{option.displayLabel[1]}}\n        {{option.displayLabel[2]}}\n      \n    \n\n    help\n  \n\n\n    \n\n    \n                \n                    ./ontology-search.component.scss\n                \n                .ccf-ontology-search.wrapper {\n  .field {\n    width: 100%;\n  }\n\n  .help-icon {\n    cursor: pointer;\n    z-index: 100;\n    opacity: 0.5;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-end {\n      border-radius: 0 500px 500px 0;\n    }\n\n    .mat-form-field-outline-start {\n      border-radius: 500px 0 0 500px;\n      min-width: 40px;\n    }\n\n    .mat-form-field-outline {\n      top: 0.7em;\n      border-radius: 31.25rem;\n      background-color: #ffffff;\n    }\n  }\n}\n\n::ng-deep .ccf-ontology-search.detached {\n  .search-term {\n    text-decoration: underline;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{option.displayLabel[0]}}        {{option.displayLabel[1]}}        {{option.displayLabel[2]}}              help  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySearchModule.html":{"url":"modules/OntologySearchModule.html","title":"module - OntologySearchModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/ontology-search/ontology-search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { PopoverModule } from 'ngx-smart-popover';\n\nimport { OntologySearchComponent } from './ontology-search.component';\n\n@NgModule({\n  declarations: [OntologySearchComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatIconModule,\n    MatInputModule,\n    PopoverModule\n  ],\n  exports: [OntologySearchComponent]\n})\nexport class OntologySearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologySearchService.html":{"url":"injectables/OntologySearchService.html","title":"injectable - OntologySearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologySearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable OntologySearchService responsible for search result computations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodes$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                formatLabel\n                            \n                            \n                                getIndexOfMatch\n                            \n                            \n                                    Private\n                                lookup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ontology-search/ontology-search.service.ts:39\n                \n            \n\n\n            \n                \n                    Searches the ontology with the search-term\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an array of search-results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatLabel\n                        \n                        \n                    \n                \n            \n            \n                \nformatLabel(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ontology-search/ontology-search.service.ts:96\n                \n            \n\n\n            \n                \n                    Formats label based on where the search-term was found in the OntologyNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        label or first synonym-label of OntologyNode which has the search-term\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search-term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        an array in the form of [prefix, search-term, suffix]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIndexOfMatch\n                        \n                        \n                    \n                \n            \n            \n                \ngetIndexOfMatch(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ontology-search/ontology-search.service.ts:86\n                \n            \n\n\n            \n                \n                    Gets index of match in the ontology label\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the provided ontology node label or synonym label\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the searched text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the index of the match in the label\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lookup(nodes: OntologyNode[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ontology-search/ontology-search.service.ts:51\n                \n            \n\n\n            \n                \n                    looks up ontology nodes and composes search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                OntologyNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ontology nodes\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SearchResult[]\n\n                    \n                    \n                        search results\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(OntologyState.nodes)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/ontology-search/ontology-search.service.ts:32\n                            \n                        \n\n                \n                    \n                        ontology state\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../state/ontology/ontology.model';\nimport { OntologyState } from '../../state/ontology/ontology.state';\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n  /** label to be displayed in the view */\n  displayLabel: string[];\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /**\n   * ontology state\n   */\n  @Select(OntologyState.nodes)\n  nodes$: Observable;\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: OntologyNode[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    nodes.forEach((node) => {\n      const condition = node.label.toLowerCase().includes(searchValue);\n\n      if (condition && !searchResults.get(node.id)) {\n        searchResults.set(node.id, {\n          index: this.getIndexOfMatch(node.label, searchValue),\n          displayLabel: this.formatLabel(node.label, searchValue),\n          node: node\n        });\n      } else {\n        const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n        if (match && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n            displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n            node: node\n          });\n        }\n      }\n    });\n\n    return Array.from(searchResults.values());\n  }\n\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologyService.html":{"url":"injectables/OntologyService.html","title":"injectable - OntologyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ontology/ontology.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for interacting with the ontology tree state.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootNode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChildren\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ontology/ontology.service.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the global store.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChildren\n                        \n                        \n                    \n                \n            \n            \n                \ngetChildren(node: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ontology/ontology.service.ts:39\n                \n            \n\n\n            \n                \n                    Fetches the children of an ontology node.\nNote: This can be called without a reference to this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node for which to get children.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyNode[]\n\n                    \n                    \n                        An array of children, empty if the node has no children.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(OntologyState.rootNode)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/ontology/ontology.service.ts:20\n                            \n                        \n\n                \n                    \n                        The current root node in the ontology tree.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { at } from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { OntologyNode, OntologyStateModel } from '../../state/ontology/ontology.model';\nimport { OntologyState } from '../../state/ontology/ontology.state';\n\n/**\n * Service for interacting with the ontology tree state.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologyService {\n  /**\n   * The current root node in the ontology tree.\n   */\n  @Select(OntologyState.rootNode)\n  rootNode: Observable;\n\n  /**\n   * Creates an instance of ontology service.\n   *\n   * @param store A reference to the global store.\n   */\n  constructor(private store: Store) {\n    // Make method callable without this.\n    this.getChildren = this.getChildren.bind(this);\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OntologyState.html":{"url":"classes/OntologyState.html","title":"class - OntologyState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OntologyState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Ontology tree state.\n\n            \n\n\n            \n                Implements\n            \n            \n                        NgxsOnInit\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngxsOnInit\n                            \n                            \n                                    Static\n                                nodes\n                            \n                            \n                                    Static\n                                rootNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/ontology/ontology.state.ts:97\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngxsOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: StateContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/state/ontology/ontology.state.ts:111\n                \n            \n\n\n            \n                \n                    Ngxs' OnInit hook.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            nodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nodes(state: OntologyStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/ontology/ontology.state.ts:87\n                \n            \n\n\n            \n                \n                    Selects all nodes in the ontology tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                OntologyStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            rootNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rootNode(state: OntologyStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/ontology/ontology.state.ts:95\n                \n            \n\n\n            \n                \n                    Selects the ontology tree's root node.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                OntologyStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { NgxsOnInit, Selector, State, StateContext } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial, values } from 'lodash';\nimport { map, tap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { JsonOntologyNode, jsonToOntologyNode } from './internal/json-ontology';\nimport { OntologyNode, OntologyStateModel } from './ontology.model';\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[undefined as any] = { children: [] } as any;\n\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[undefined as any].children);\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[undefined as any];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = { id: 'body', label: 'body', parent: undefined, children: organIds, synonymLabels: [] };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Ontology tree state.\n */\n@State({\n  name: 'ontology',\n  defaults: {\n    root: undefined,\n    nodes: {}\n  }\n})\nexport class OntologyState implements NgxsOnInit {\n  /**\n   * Selects all nodes in the ontology tree.\n   */\n  @Selector()\n  static nodes(state: OntologyStateModel): OntologyNode[] {\n    return values(state.nodes);\n  }\n\n  /**\n   * Selects the ontology tree's root node.\n   */\n  @Selector()\n  static rootNode(state: OntologyStateModel): OntologyNode {\n    return state.nodes[state.root];\n  }\n\n  /**\n   * Creates an instance of ontology state.\n   *\n   * @param http The http service.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Ngxs' OnInit hook.\n   *\n   * @param ctx The state context.\n   */\n  ngxsOnInit(ctx: StateContext) {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => ctx.setState(ontology));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyStateModel.html":{"url":"interfaces/OntologyStateModel.html","title":"interface - OntologyStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/ontology/ontology.model.ts\n        \n\n            \n                Description\n            \n            \n                A flat representation of an ontology tree.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        nodes\n                                \n                                \n                                        root\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hash table of nodes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier of the root node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface OntologyNode {\n  /**\n   * The unique identifier of this node.\n   */\n  id: string;\n\n  /**\n   * Label for this ontology node.\n   */\n  label: string;\n\n  /**\n   * The identifier of the parent node. `undefined` if this is the root node.\n   */\n  parent: string | undefined;\n\n  /**\n   * An array of child identifiers.\n   */\n  children: string[];\n\n  /**\n   * Labels for the synonyms of the label of this node.\n   */\n  synonymLabels: string[];\n}\n\n/**\n * A flat representation of an ontology tree.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologyTreeComponent.html":{"url":"components/OntologyTreeComponent.html","title":"component - OntologyTreeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologyTreeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ontology-tree/ontology-tree.component.ts\n\n\n    \n        Description\n    \n    \n        Represents a expandable tree of an ontology.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-tree\n            \n\n            \n                styleUrls\n                ./ontology-tree.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-tree.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _getChildren\n                            \n                            \n                                    Private\n                                    Optional\n                                _nodes\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                    Readonly\n                                dataSource\n                            \n                            \n                                    Readonly\n                                flattener\n                            \n                            \n                                    Readonly\n                                indent\n                            \n                            \n                                    Private\n                                    Optional\n                                selectedNode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandAndSelect\n                            \n                            \n                                isInnerNode\n                            \n                            \n                                isSelected\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                getChildren\n                            \n                            \n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nodeSelected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodes\n                                \n                                \n                                    getChildren\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ontology-tree/ontology-tree.component.ts:92\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology tree component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        getChildren\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:44\n                            \n                        \n                \n                    \n                        Method for fetching the children of a node.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodes\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:33\n                            \n                        \n                \n                    \n                        The node like objects to display in the tree.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nodeSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:54\n                            \n                        \n                \n                    \n                        Emits an event whenever a node has been selected.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expandAndSelect\n                        \n                        \n                    \n                \n            \n            \n                \nexpandAndSelect(node: OntologyNode, getParent: (node: OntologyNode) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:106\n                \n            \n\n\n            \n                \n                    Expands the tree to show a node and sets the currect selection to that node.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node to expand to and select.\n\n                                    \n                                \n                                \n                                    getParent\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInnerNode\n                        \n                        \n                    \n                \n            \n            \n                \nisInnerNode(this: void, _index: number, node: FlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:139\n                \n            \n\n\n            \n                \n                    Determines whether a node can be expanded.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    node\n                                    \n                                                FlatNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node to test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the node has children.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisSelected(node: FlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:150\n                \n            \n\n\n            \n                \n                    Determines whether a node is currently selected.\nOnly a single node can be selected at any time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                FlatNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node to test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the node is the currently selected node.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(node: FlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:160\n                \n            \n\n\n            \n                \n                    Sets a node to be the currently selected node.\nDeselects the previously selected node.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                FlatNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node to select.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _getChildren\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:92\n                            \n                        \n\n                \n                    \n                        Storage for getter/setter 'getChildren'.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologyNode[]\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:87\n                            \n                        \n\n                \n                    \n                        Storage for getter/setter 'nodes'.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FlatTreeControl(getLevel, isExpandable)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:64\n                            \n                        \n\n                \n                    \n                        Tree controller.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTreeFlatDataSource(this.control, this.flattener)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:77\n                            \n                        \n\n                \n                    \n                        Data source of flat nodes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            flattener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTreeFlattener(\n    FlatNode.create, getLevel, isExpandable,\n    invoke.bind(undefined, this, 'getChildren')\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:69\n                            \n                        \n\n                \n                    \n                        Node flattener.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            indent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.5rem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:59\n                            \n                        \n\n                \n                    \n                        Indentation of each level in the tree.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            selectedNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FlatNode\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:82\n                            \n                        \n\n                \n                    \n                        Currently selected node.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodes\n                    \n                \n\n                \n                    \n                        getnodes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:38\n                                \n                            \n\n                \n                    \n                        setnodes(nodes: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:33\n                                \n                            \n                    \n                        \n                                The node like objects to display in the tree.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            nodes\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        getChildren\n                    \n                \n\n                \n                    \n                        getgetChildren()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:49\n                                \n                            \n\n                \n                    \n                        setgetChildren(fun: function)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/ontology-tree/ontology-tree.component.ts:44\n                                \n                            \n                    \n                        \n                                Method for fetching the children of a node.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fun\n                                                    \n                                                            \n                                                                            function\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { FlatTreeControl } from '@angular/cdk/tree';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { filter, invoke, property } from 'lodash';\n\nimport { OntologyNode } from '../../shared/state/ontology/ontology.model';\nimport { FlatNode } from './shared/flat-node';\n\n/**\n * Getter function for 'level' on a flat node.\n */\nconst getLevel = property('level');\n\n/**\n * Getter function for 'expandable' on a flat node.\n */\nconst isExpandable = property('expandable');\n\n/**\n * Represents a expandable tree of an ontology.\n */\n@Component({\n  selector: 'ccf-ontology-tree',\n  templateUrl: './ontology-tree.component.html',\n  styleUrls: ['./ontology-tree.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OntologyTreeComponent {\n  /**\n   * The node like objects to display in the tree.\n   */\n  @Input()\n  set nodes(nodes: OntologyNode[]) {\n    this._nodes = nodes;\n    if (this.control) { this.dataSource.data = this._nodes; }\n  }\n\n  get nodes(): OntologyNode[] { return this._nodes; }\n\n  /**\n   * Method for fetching the children of a node.\n   */\n  @Input()\n  set getChildren(fun: (node: OntologyNode) => OntologyNode[]) {\n    this._getChildren = fun;\n    this.dataSource.data = this.nodes;\n  }\n\n  get getChildren(): (node: OntologyNode) => OntologyNode[] { return this._getChildren; }\n\n  /**\n   * Emits an event whenever a node has been selected.\n   */\n  @Output() nodeSelected = new EventEmitter();\n\n  /**\n   * Indentation of each level in the tree.\n   */\n  readonly indent: number | string = '1.5rem';\n\n  /**\n   * Tree controller.\n   */\n  readonly control = new FlatTreeControl(getLevel, isExpandable);\n\n  /**\n   * Node flattener.\n   */\n  readonly flattener = new MatTreeFlattener(\n    FlatNode.create, getLevel, isExpandable,\n    invoke.bind(undefined, this, 'getChildren')\n  );\n\n  /**\n   * Data source of flat nodes.\n   */\n  readonly dataSource = new MatTreeFlatDataSource(this.control, this.flattener);\n\n  /**\n   * Currently selected node.\n   */\n  private selectedNode?: FlatNode = undefined;\n\n  /**\n   * Storage for getter/setter 'nodes'.\n   */\n  private _nodes?: OntologyNode[] = undefined;\n\n  /**\n   * Storage for getter/setter 'getChildren'.\n   */\n  private _getChildren?: (node: OntologyNode) => OntologyNode[];\n\n  /**\n   * Creates an instance of ontology tree component.\n   *\n   * @param cdr The change detector.\n   */\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Expands the tree to show a node and sets the currect selection to that node.\n   *\n   * @param node The node to expand to and select.\n   */\n  expandAndSelect(node: OntologyNode, getParent: (node: OntologyNode) => OntologyNode): void {\n    const { cdr, control } = this;\n\n    // Add all parents to a set\n    const parents = new Set();\n    let current = getParent(node);\n    while (current) {\n      parents.add(current);\n      current = getParent(current);\n    }\n\n    // Find corresponding flat nodes\n    const parentFlatNodes = filter(control.dataNodes, flat => parents.has(flat.original));\n    const flatNode = control.dataNodes.find(flat => flat.original === node);\n\n    // Expand nodes\n    control.collapseAll();\n    for (const flat of parentFlatNodes) { control.expand(flat); }\n\n    // Select the node\n    this.selectedNode = undefined;\n    this.select(flatNode);\n\n    // Detect changes\n    cdr.detectChanges();\n  }\n\n  /**\n   * Determines whether a node can be expanded.\n   *\n   * @param node The node to test.\n   * @returns True if the node has children.\n   */\n  isInnerNode(this: void, _index: number, node: FlatNode): boolean {\n    return node.expandable;\n  }\n\n  /**\n   * Determines whether a node is currently selected.\n   * Only a single node can be selected at any time.\n   *\n   * @param node  The node to test.\n   * @returns True if the node is the currently selected node.\n   */\n  isSelected(node: FlatNode): boolean {\n    return node === this.selectedNode;\n  }\n\n  /**\n   * Sets a node to be the currently selected node.\n   * Deselects the previously selected node.\n   *\n   * @param node The node to select.\n   */\n  select(node: FlatNode): void {\n    let { selectedNode } = this;\n    this.selectedNode = selectedNode = node !== selectedNode ? node : undefined;\n    this.nodeSelected.emit(selectedNode && selectedNode.original);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{ node.label }}\n  \n\n  \n  \n    \n    \n    \n  \n\n  \n  \n    \n      \n        {{ control.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./ontology-tree.component.scss\n                \n                @import 'global/colors';\n\n.ccf-ontology-tree.container {\n  background: none;\n\n  .node {\n    min-height: 0;\n    font-size: 1rem;\n\n    .toggle {\n      width: 1.5rem;\n      height: 1.5rem;\n      line-height: normal;\n    }\n\n    .text {\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n      cursor: pointer;\n      color: $text-color;\n    }\n\n    .selected {\n      color: $active-text-color;\n      font-weight: 700;\n    }\n  }\n\n}\n\n::ng-deep .ccf-ontology-tree.tooltip {\n  font-size: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ node.label }}                                          {{ control.isExpanded(node) ? \\'expand_more\\' : \\'chevron_right\\' }}                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologyTreeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyTreeModule.html":{"url":"modules/OntologyTreeModule.html","title":"module - OntologyTreeModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyTreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/ontology-tree/ontology-tree.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Organ3dComponent.html":{"url":"components/Organ3dComponent.html","title":"component - Organ3dComponent","body":"\n                   \n\n\n\n\n\n  Components\n  Organ3dComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/organ3d/organ3d.component.ts\n\n\n    \n        Description\n    \n    \n        A component displaying a 3-dimensional organ model.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-organ3d\n            \n\n            \n                styleUrls\n                ./organ3d.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organ3d.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                baseScene\n                            \n                            \n                                    Readonly\n                                center\n                            \n                            \n                                    Private\n                                layer\n                            \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Readonly\n                                pitch\n                            \n                            \n                                    Readonly\n                                sceneOpacity\n                            \n                            \n                                    Readonly\n                                sceneSize\n                            \n                            \n                                    Readonly\n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addLight\n                            \n                            \n                                    Private\n                                    Async\n                                loadBase\n                            \n                            \n                                    Private\n                                loadGltf\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onMapLoad\n                            \n                            \n                                    Private\n                                resetPositionScaleRotation\n                            \n                            \n                                    Private\n                                setPositionScaleRotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                base\n                            \n                            \n                                baseRotation\n                            \n                            \n                                lightColor\n                            \n                            \n                                lightIntensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(style: Style)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/organ3d/organ3d.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructs a new 3D organ component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                    Style\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The default mapbox style.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        base\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:20\n                            \n                        \n                \n                    \n                        URL to the base model. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        baseRotation\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:22\n                            \n                        \n                \n                    \n                        Rotation of the base model. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lightColor\n                    \n                \n                \n                    \n                        Type :     string | number | Color\n\n                    \n                \n                \n                    \n                        Default value : 0x404040\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:25\n                            \n                        \n                \n                    \n                        Scene light color. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lightIntensity\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:27\n                            \n                        \n                \n                    \n                        Scene light intensity. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addLight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addLight(color: string | number | Color, intensity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/organ3d/organ3d.component.ts:95\n                \n            \n\n\n            \n                \n                    Adds an ambient light to the scene.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                            string | number | Color\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.lightColor\n                                    \n\n                                    \n                                        The color value of the light.\n\n                                    \n                                \n                                \n                                    intensity\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.lightIntensity\n                                    \n\n                                    \n                                        The intensity of the light.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            loadBase\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadBase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/organ3d/organ3d.component.ts:115\n                \n            \n\n\n            \n                \n                    Loads the base GLTF model and adds it to the scene.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadGltf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadGltf(source: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/organ3d/organ3d.component.ts:106\n                \n            \n\n\n            \n                \n                    Loads a GLTF asset.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The asset url.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The loaded asset.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/organ3d/organ3d.component.ts:62\n                \n            \n\n\n            \n                \n                    OnChange lifecycle hook.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onMapLoad\n                        \n                        \n                    \n                \n            \n            \n                \nonMapLoad(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/organ3d/organ3d.component.ts:77\n                \n            \n\n\n            \n                \n                    Initializes the different map layers/scenes.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mapbox map instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetPositionScaleRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPositionScaleRotation(scene: Scene)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/organ3d/organ3d.component.ts:148\n                \n            \n\n\n            \n                \n                    Resets the position, scale, and rotation of a scene.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                            Scene\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scene to reset.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setPositionScaleRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPositionScaleRotation(scene: Scene, size: number, rotation?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/organ3d/organ3d.component.ts:130\n                \n            \n\n\n            \n                \n                    Sets the position, scale, and rotation of a scene.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                            Scene\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scene to change.\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The size of the new bounding box.\n\n                                    \n                                \n                                \n                                    rotation\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The rotation of the scene.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            baseScene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:48\n                            \n                        \n\n                \n                    \n                        The base model scene. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            center\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [-0.000016948963462937172, 0.0008592520813976989]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:31\n                            \n                        \n\n                \n                    \n                        Center of the map. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            layer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ThreeJsLayer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:46\n                            \n                        \n\n                \n                    \n                        The threejs map layer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:44\n                            \n                        \n\n                \n                    \n                        The map instance. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            pitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:35\n                            \n                        \n\n                \n                    \n                        Initial pitch of the map. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sceneOpacity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:41\n                            \n                        \n\n                \n                    \n                        Opacity of the threejs scenes added to the map. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sceneSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:39\n                            \n                        \n\n                \n                    \n                        Size of threejs scenes added to the map. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            zoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [18.5]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/organ3d/organ3d.component.ts:33\n                            \n                        \n\n                \n                    \n                        Initial zoom of the map. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Map, Style } from 'mapbox-gl';\nimport { AmbientLight, Color, Scene } from 'three';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nimport { BLANK_MAPBOX_STYLE } from '../../app-render-init.module';\nimport { centerObject, setObjectOpacity, setObjectRotation, setObjectSize } from '../../shared/3d/object3d-util';\nimport { ThreeJsLayer } from '../../shared/3d/threejs-layer';\n\n/**\n * A component displaying a 3-dimensional organ model.\n */\n@Component({\n  selector: 'ccf-organ3d',\n  templateUrl: './organ3d.component.html',\n  styleUrls: ['./organ3d.component.scss']\n})\nexport class Organ3dComponent implements OnChanges {\n  /** URL to the base model. */\n  @Input() base: string;\n  /** Rotation of the base model. */\n  @Input() baseRotation: { x?: number, y?: number, z?: number };\n\n  /** Scene light color. */\n  @Input() lightColor: string | number | Color = 0x404040;\n  /** Scene light intensity. */\n  @Input() lightIntensity = 10;\n\n  // Mapbox config\n  /** Center of the map. */\n  readonly center = [-0.000016948963462937172, 0.0008592520813976989];\n  /** Initial zoom of the map. */\n  readonly zoom = [18.5];\n  /** Initial pitch of the map. */\n  readonly pitch = 60;\n\n  // Scene config\n  /** Size of threejs scenes added to the map. */\n  readonly sceneSize = 100;\n  /** Opacity of the threejs scenes added to the map. */\n  readonly sceneOpacity = 0.5;\n\n  /** The map instance. */\n  private map!: Map;\n  /** The threejs map layer. */\n  private layer!: ThreeJsLayer;\n  /** The base model scene. */\n  private baseScene?: Scene;\n\n  /**\n   * Constructs a new 3D organ component.\n   *\n   * @param style The default mapbox style.\n   */\n  constructor(@Inject(BLANK_MAPBOX_STYLE) readonly style: Style) {}\n\n  /**\n   * OnChange lifecycle hook.\n   *\n   * @param changes The updated properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('base' in changes && this.layer) {\n      this.layer.scene.remove(this.baseScene);\n      this.loadBase();\n    } else if ('baseRotation' in changes && this.baseScene) {\n      this.resetPositionScaleRotation(this.baseScene);\n      this.setPositionScaleRotation(this.baseScene, this.sceneSize, this.baseRotation);\n    }\n  }\n\n  /**\n   * Initializes the different map layers/scenes.\n   *\n   * @param map The mapbox map instance.\n   */\n  onMapLoad(map: Map): void {\n    this.map = map;\n    this.layer = new ThreeJsLayer({\n      id: 'base-layer',\n      position: [0, 0]\n    });\n\n    this.map.addLayer(this.layer);\n    this.addLight();\n    this.loadBase();\n  }\n\n  /**\n   * Adds an ambient light to the scene.\n   *\n   * @param [color] The color value of the light.\n   * @param [intensity] The intensity of the light.\n   */\n  private addLight(color: string | number | Color = this.lightColor, intensity = this.lightIntensity): void {\n    const light = new AmbientLight(color, intensity);\n    this.layer.scene.add(light);\n  }\n\n  /**\n   * Loads a GLTF asset.\n   *\n   * @param source The asset url.\n   * @returns The loaded asset.\n   */\n  private loadGltf(source: string): Promise {\n    return new Promise((resolve, reject) => {\n      new GLTFLoader().load(source, resolve, undefined, reject);\n    });\n  }\n\n  /**\n   * Loads the base GLTF model and adds it to the scene.\n   */\n  private async loadBase(): Promise {\n    const gltf = await this.loadGltf(this.base);\n    const scene = this.baseScene = gltf.scene;\n    setObjectOpacity(scene, this.sceneOpacity, true);\n    this.setPositionScaleRotation(scene, this.sceneSize, this.baseRotation);\n    this.layer.scene.add(scene);\n  }\n\n  /**\n   * Sets the position, scale, and rotation of a scene.\n   *\n   * @param scene The scene to change.\n   * @param size The size of the new bounding box.\n   * @param [rotation] The rotation of the scene.\n   */\n  private setPositionScaleRotation(\n    scene: Scene, size: number,\n    rotation?: { x?: number, y?: number, z?: number }\n  ): void {\n    if (rotation !== undefined) {\n      const { x, y, z } = rotation;\n      setObjectRotation(scene, x, y, z);\n    }\n\n    setObjectSize(scene, size);\n    centerObject(scene);\n  }\n\n  /**\n   * Resets the position, scale, and rotation of a scene.\n   *\n   * @param scene The scene to reset.\n   */\n  private resetPositionScaleRotation(scene: Scene): void {\n    scene.position.setScalar(0);\n    scene.scale.setScalar(1);\n    scene.rotation.set(0, 0, 0);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./organ3d.component.scss\n                \n                mgl-map {\n  width: 100%;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Organ3dComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Organ3dModule.html":{"url":"modules/Organ3dModule.html","title":"module - Organ3dModule","body":"\n                   \n\n\n\n\n    Modules\n    Organ3dModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Organ3dModule\n\n\n\ncluster_Organ3dModule_declarations\n\n\n\ncluster_Organ3dModule_exports\n\n\n\n\nOrgan3dComponent\n\nOrgan3dComponent\n\n\n\nOrgan3dModule\n\nOrgan3dModule\n\nOrgan3dModule -->\n\nOrgan3dComponent->Organ3dModule\n\n\n\n\n\nOrgan3dComponent \n\nOrgan3dComponent \n\nOrgan3dComponent  -->\n\nOrgan3dModule->Organ3dComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/organ3d/organ3d.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Organ3dComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Organ3dComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgxMapboxGLModule } from 'ngx-mapbox-gl';\n\nimport { Organ3dComponent } from '../organ3d/organ3d.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxMapboxGLModule\n  ],\n  declarations: [Organ3dComponent],\n  exports: [Organ3dComponent]\n})\nexport class Organ3dModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganComponent.html":{"url":"components/OrganComponent.html","title":"component - OrganComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/organ/organ.component.ts\n\n\n    \n        Description\n    \n    \n        Displays an organ with overlays.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-organ\n            \n\n            \n                styleUrls\n                ./organ.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organ.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMetadata\n                            \n                            \n                                    Public\n                                    Readonly\n                                dataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pluralize\n                            \n                            \n                                pluralizeSuffix\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    is3D\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: OrganDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/organ/organ.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of organ component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        OrganDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch organ related data for display.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pluralize\n                        \n                        \n                    \n                \n            \n            \n                \npluralize(count: number, suffix: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/organ/organ.component.ts:52\n                \n            \n\n\n            \n                \n                    Creates a string of the count with a suffix that has been pluralized.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item count.\n\n                                    \n                                \n                                \n                                    suffix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The singular suffix.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The count string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pluralizeSuffix\n                        \n                        \n                    \n                \n            \n            \n                \npluralizeSuffix(count: number, suffix: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/organ/organ.component.ts:41\n                \n            \n\n\n            \n                \n                    Appends an 's' to the end of a suffix if the count is not one.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item count.\n\n                                    \n                                \n                                \n                                    suffix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The singular suffix.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The pluralized suffix.\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeMetadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | \n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/organ/organ.component.ts:22\n                            \n                        \n\n                \n                    \n                        Metadata that is shown on the right hand side table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            dataService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OrganDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/organ/organ.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to fetch organ related data for display.\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        is3D\n                    \n                \n\n                \n                    \n                        getis3D()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/organ/organ.component.ts:25\n                                \n                            \n                    \n                        \n                                Whether to show the 3D demo. \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport cheet from 'cheet.js';\n\nimport { OrganDataService } from '../../shared/services/organ-data/organ-data.service';\n\n/** Whether to show the 3D demo. Toggled by the key sequence \"3d\" */\nlet is3D = false;\ncheet('3 d', () => is3D = !is3D);\n\n/**\n * Displays an organ with overlays.\n */\n@Component({\n  selector: 'ccf-organ',\n  templateUrl: './organ.component.html',\n  styleUrls: ['./organ.component.scss']\n})\nexport class OrganComponent {\n  /**\n   * Metadata that is shown on the right hand side table.\n   */\n  activeMetadata: [{ [label: string]: string }] | [] = [];\n\n  /** Whether to show the 3D demo. */\n  get is3D(): boolean { return is3D; }\n\n  /**\n   * Creates an instance of organ component.\n   *\n   * @param dataService Service used to fetch organ related data for display.\n   */\n  constructor(public readonly dataService: OrganDataService) { }\n\n  /**\n   * Appends an 's' to the end of a suffix if the count is not one.\n   *\n   * @param count The item count.\n   * @param suffix The singular suffix.\n   * @returns The pluralized suffix.\n   */\n  pluralizeSuffix(count: number, suffix: string): string {\n    return `${suffix}${count !== 1 ? 's' : ''}`;\n  }\n\n  /**\n   * Creates a string of the count with a suffix that has been pluralized.\n   *\n   * @param count The item count.\n   * @param suffix The singular suffix.\n   * @returns The count string.\n   */\n  pluralize(count: number, suffix: string): string {\n    return `${count} ${this.pluralizeSuffix(count, suffix)}`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        \n        \n          \n            {{ counts.patients }} {{ pluralizeSuffix(counts.patients, 'Patient') }}\n            {{ pluralize(counts.tissueSamples, 'Tissue sample') }} \n            {{ pluralize(counts.tissueSlices, 'Tissue slice') }}\n            {{ pluralize(counts.tissueImages, 'Tissue image') }}\n            {{ pluralize(counts.cells, 'Cell') }}\n          \n        \n      \n    \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./organ.component.scss\n                \n                .ccf-organ.wrapper {\n  height: 100%;\n\n  .container {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .organ-group {\n      width: 76%;\n      height: 100%;\n\n      .overlay {\n        cursor: pointer;\n      }\n\n      .centroid {\n        visibility: hidden;\n      }\n    }\n\n    .metadata {\n      width: 24%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ counts.patients }} {{ pluralizeSuffix(counts.patients, \\'Patient\\') }}            {{ pluralize(counts.tissueSamples, \\'Tissue sample\\') }}             {{ pluralize(counts.tissueSlices, \\'Tissue slice\\') }}            {{ pluralize(counts.tissueImages, \\'Tissue image\\') }}            {{ pluralize(counts.cells, \\'Cell\\') }}                                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganDataService.html":{"url":"injectables/OrganDataService.html","title":"injectable - OrganDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrganDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/organ-data/organ-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable organ data service talks to local database.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeOrgan\n                            \n                            \n                                    Private\n                                    Readonly\n                                basePath\n                            \n                            \n                                    Private\n                                    Readonly\n                                countObservableMap\n                            \n                            \n                                    Readonly\n                                organImagePath\n                            \n                            \n                                    Readonly\n                                organOverlays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCountsObservable\n                            \n                            \n                                getCounts\n                            \n                            \n                                    Private\n                                getCountsFor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localDatabase: LocalDatabaseService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/organ-data/organ-data.service.ts:84\n                            \n                        \n\n                \n                    \n                            Creates an instance of organ data service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        localDatabase\n                                                  \n                                                        \n                                                                        LocalDatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Database from which organ and related data is fetched.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global store.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createCountsObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCountsObservable(sampleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/organ-data/organ-data.service.ts:119\n                \n            \n\n\n            \n                \n                    Creates an observable returning counts for the specified tissue sample id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The indetifier.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the counts.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCounts\n                        \n                        \n                    \n                \n            \n            \n                \ngetCounts(sample: TissueSample)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/organ-data/organ-data.service.ts:103\n                \n            \n\n\n            \n                \n                    Queries the number of slices, images, etc. that exists for a sample.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sample\n                                    \n                                                TissueSample\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The tissue sample for which to count objects.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The counts of the different objects.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCountsFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountsFor(method, selector: (state: any) => void, path: PropertyPath, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/organ-data/organ-data.service.ts:145\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Queries the number of items exists of a specific object type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The database method used to query items.\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter builder selector for the associated object type.\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                            PropertyPath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path which's value must match the provided value.\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A value to match against (usually an identifier)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting a count of the objects.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeOrgan\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(NavigationState.activeOrgan)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/organ-data/organ-data.service.ts:64\n                            \n                        \n\n                \n                    \n                        Emits the currently active organ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            basePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.ccfAssetUrl + '/organ'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/organ-data/organ-data.service.ts:52\n                            \n                        \n\n                \n                    \n                        Base path to images of tissues - TODO - this will come from a json file eventually\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            countObservableMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new WeakMap>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/organ-data/organ-data.service.ts:58\n                            \n                        \n\n                \n                    \n                        Mapping from a tissue sample to an observable emitting counts.\nUsed to prevent the creation of new observables and the subsequent multiple queries.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            organImagePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.activeOrgan.pipe(\n    pluck('id'),\n    map(id => id && `${this.basePath}/${id}/organ.svg#organ`)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/organ-data/organ-data.service.ts:69\n                            \n                        \n\n                \n                    \n                        Emits the path for currently active organ's image.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            organOverlays\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.activeOrgan.pipe(\n    pluck('id'),\n    switchMap(id => this.store.select(SearchState.tissueSampleFilterBuilder).pipe(\n      map(builder => builder.addMatches('patient.anatomicalLocations[0]', id)),\n      map(builder => builder.toFilter())\n    )),\n    switchMap(filter => this.localDatabase.getTissueSamples(filter))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/organ-data/organ-data.service.ts:77\n                            \n                        \n\n                \n                    \n                        Emits the overlay objects for currently active organ.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { PropertyPath } from 'lodash';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, pluck, share, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { FilterBuilder } from '../../common/filter/filter-builder';\nimport { TissueSample } from '../../state/database/database.models';\nimport { NavigationState } from '../../state/navigation/navigation.state';\nimport { SearchState } from '../../state/search/search.state';\nimport { LocalDatabaseService } from '../database/local/local-database.service';\n\n/**\n * A collection of counts for different objects.\n */\nexport interface CountMetadata {\n  /**\n   * The number of patients.\n   */\n  patients: number;\n\n  /**\n   * The number of tissue samples.\n   */\n  tissueSamples: number;\n\n  /**\n   * The number of tissue slices.\n   */\n  tissueSlices: number;\n\n  /**\n   * The number of tissue images.\n   */\n  tissueImages: number;\n\n  /**\n   * The number of cells.\n   */\n  cells: number;\n}\n\n/**\n * Injectable organ data service talks to local database.\n */\n@Injectable()\nexport class OrganDataService {\n  /**\n   * Base path to images of tissues - TODO - this will come from a json file eventually\n   */\n  private readonly basePath = environment.ccfAssetUrl + '/organ';\n\n  /**\n   * Mapping from a tissue sample to an observable emitting counts.\n   * Used to prevent the creation of new observables and the subsequent multiple queries.\n   */\n  private readonly countObservableMap = new WeakMap>();\n\n  /**\n   * Emits the currently active organ.\n   */\n  @Select(NavigationState.activeOrgan)\n  private activeOrgan: Observable; // FIXME: Update with proper organ object\n\n  /**\n   * Emits the path for currently active organ's image.\n   */\n  readonly organImagePath = this.activeOrgan.pipe(\n    pluck('id'),\n    map(id => id && `${this.basePath}/${id}/organ.svg#organ`)\n  );\n\n  /**\n   * Emits the overlay objects for currently active organ.\n   */\n  readonly organOverlays = this.activeOrgan.pipe(\n    pluck('id'),\n    switchMap(id => this.store.select(SearchState.tissueSampleFilterBuilder).pipe(\n      map(builder => builder.addMatches('patient.anatomicalLocations[0]', id)),\n      map(builder => builder.toFilter())\n    )),\n    switchMap(filter => this.localDatabase.getTissueSamples(filter))\n  );\n\n  /**\n   * Creates an instance of organ data service.\n   *\n   * @param localDatabase Database from which organ and related data is fetched.\n   * @param store The global store.\n   */\n  constructor(\n    private readonly localDatabase: LocalDatabaseService,\n    private readonly store: Store\n  ) { }\n\n  /**\n   * Queries the number of slices, images, etc. that exists for a sample.\n   *\n   * @param sample The tissue sample for which to count objects.\n   * @returns The counts of the different objects.\n   */\n  getCounts(sample: TissueSample): Observable {\n    if (this.countObservableMap.has(sample)) {\n      return this.countObservableMap.get(sample);\n    }\n\n    const result = this.createCountsObservable(sample.id);\n    this.countObservableMap.set(sample, result);\n    return result;\n  }\n\n  /**\n   * Creates an observable returning counts for the specified tissue sample id.\n   *\n   * @param sampleId The indetifier.\n   * @returns An observable emitting the counts.\n   */\n  private createCountsObservable(sampleId: string): Observable {\n    const sliceCountObservable = this.getCountsFor('getTissueSlices', SearchState.tissueSliceFilterBuilder, 'sample.id', sampleId);\n    const imageCountObservable = this.getCountsFor('getTissueImages', SearchState.tissueImageFilterBuilder, 'slice.sample.id', sampleId);\n    const counts = combineLatest([sliceCountObservable, imageCountObservable]).pipe(\n      map(([sliceCount, imageCount]) => ({\n        patients: 1,\n        tissueSamples: 1,\n        tissueSlices: sliceCount,\n        tissueImages: imageCount,\n        cells: 0\n      })),\n      share()\n    );\n\n    return counts;\n  }\n\n  /**\n   * Queries the number of items exists of a specific object type.\n   *\n   * @param method The database method used to query items.\n   * @param selector The filter builder selector for the associated object type.\n   * @param path Path which's value must match the provided value.\n   * @param value A value to match against (usually an identifier)\n   * @returns An observable emitting a count of the objects.\n   */\n  private getCountsFor(\n    method: keyof LocalDatabaseService,\n    selector: (state: any) => FilterBuilder,\n    path: PropertyPath,\n    value: string\n  ): Observable {\n    const { localDatabase: db, store } = this;\n    const queryFun = db[method].bind(db) as (filter: (obj: T) => boolean) => Observable;\n    return store.select(selector).pipe(\n      map(builder => builder.addMatches(path, value)),\n      map(builder => builder.toFilter()),\n      switchMap(queryFun),\n      map(items => items.length)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganModule.html":{"url":"modules/OrganModule.html","title":"module - OrganModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganModule\n\n\n\ncluster_OrganModule_declarations\n\n\n\ncluster_OrganModule_imports\n\n\n\ncluster_OrganModule_providers\n\n\n\n\nOrganComponent\n\nOrganComponent\n\n\n\nOrganModule\n\nOrganModule\n\nOrganModule -->\n\nOrganComponent->OrganModule\n\n\n\n\n\nCalloutModule\n\nCalloutModule\n\nOrganModule -->\n\nCalloutModule->OrganModule\n\n\n\n\n\nMetadataModule\n\nMetadataModule\n\nOrganModule -->\n\nMetadataModule->OrganModule\n\n\n\n\n\nOrgan3dModule\n\nOrgan3dModule\n\nOrganModule -->\n\nOrgan3dModule->OrganModule\n\n\n\n\n\nOrganRoutingModule\n\nOrganRoutingModule\n\nOrganModule -->\n\nOrganRoutingModule->OrganModule\n\n\n\n\n\nOrganDataService\n\nOrganDataService\n\nOrganModule -->\n\nOrganDataService->OrganModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/organ/organ.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            OrganDataService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CalloutModule\n                        \n                        \n                            MetadataModule\n                        \n                        \n                            Organ3dModule\n                        \n                        \n                            OrganRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CalloutModule } from '../../components/callout/callout.module';\nimport { MetadataModule } from '../../components/metadata/metadata.module';\nimport { Organ3dModule } from '../../components/organ3d/organ3d.module';\nimport { OrganDataService } from '../../shared/services/organ-data/organ-data.service';\nimport { OrganRoutingModule } from './organ-routing.module';\nimport { OrganComponent } from './organ.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    CalloutModule,\n    MetadataModule,\n    Organ3dModule,\n    OrganRoutingModule,\n  ],\n  declarations: [\n    OrganComponent\n  ],\n  providers: [OrganDataService]\n})\nexport class OrganModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganRoutingModule.html":{"url":"modules/OrganRoutingModule.html","title":"module - OrganRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/organ/organ-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { OrganComponent } from './organ.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: OrganComponent\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrganRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Patient.html":{"url":"interfaces/Patient.html","title":"interface - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/database/database.models.ts\n        \n\n            \n                Description\n            \n            \n                A person who has donated tissues\n\n            \n\n            \n                Extends\n            \n            \n                        Annotated\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        anatomicalLocations\n                                \n                                \n                                        gender\n                                \n                                \n                                        ontologyNodeIds\n                                \n                                \n                                        provider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Age of the donor (in years) at the time of death\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalLocations\n                                    \n                                \n                                \n                                    \n                                        anatomicalLocations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Anatomical Locations that were excised from the donor. Use either common labels or\nthe corresponding UBERON or HuBMAP id (UBERON_XXXX or HUBMAP_YYYY).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:     \"male\" | \"female\" | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\" | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gender of the patient\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyNodeIds\n                                    \n                                \n                                \n                                    \n                                        ontologyNodeIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifiers of containing ontology nodes and their parent chains.\nUsed to speed up inclusion checks.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:     \"TMC-Vanderbilt\" | \"TMC-UCSD\" | \"TMC-Stanford\" | \"TMC-Florida\" | \"TMC-CalTech\" | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"TMC-Vanderbilt\" | \"TMC-UCSD\" | \"TMC-Stanford\" | \"TMC-Florida\" | \"TMC-CalTech\" | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The organization that excised the donor's tissue\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Annotated {\n  /**\n   * A unique identifier for this item.\n   */\n  id: string;\n\n  /**\n   * Additional data to display in popovers, etc.\n   */\n  metadata: { [label: string]: string };\n}\n\n/**\n * A person who has donated tissues\n */\nexport interface Patient extends Annotated {\n  /**\n   * The organization that excised the donor's tissue\n   */\n  provider: 'TMC-Vanderbilt' | 'TMC-UCSD' | 'TMC-Stanford' | 'TMC-Florida' | 'TMC-CalTech' | string;\n\n  /**\n   * Age of the donor (in years) at the time of death\n   */\n  age: number;\n\n  /**\n   * Gender of the patient\n   */\n  gender: 'male' | 'female' | 'undefined';\n\n  /**\n   * Anatomical Locations that were excised from the donor. Use either common labels or\n   * the corresponding UBERON or HuBMAP id (UBERON_XXXX or HUBMAP_YYYY).\n   */\n  anatomicalLocations: string[];\n\n  // Internal fields\n  /**\n   * Identifiers of containing ontology nodes and their parent chains.\n   * Used to speed up inclusion checks.\n   */\n  ontologyNodeIds: string[];\n}\n\n/**\n * A tissue sample excised from a donor\n */\nexport interface TissueSample extends Annotated {\n  /**\n   * The patient from whom the tissue was excised\n   */\n  patient: Patient;\n\n  /**\n   * An URL to the svg overlay\n   */\n  overlayUrl: string;\n}\n\n/**\n * A slice of a tissue sample\n */\nexport interface TissueSlice extends Annotated {\n  /**\n   * The tissue sample from which a slice was extracted\n   */\n  sample: TissueSample;\n}\n\n/**\n * An image of a tissue slice\n */\nexport interface TissueImage extends Annotated {\n  /**\n   * The tissue slice from which an image was extracted\n   */\n  slice: TissueSlice;\n\n  /**\n   * The technology used to extract the image\n   */\n  technology: 'IHC' | 'PAS' | 'IMS' | 'MxIF' | 'AF' | string;\n\n  /**\n   * A URL to download the source image\n   */\n  sourceUrl: string;\n\n  /**\n   * A URL to a small-sized version of the image. Should be a .png, .jpg, or .gif.\n   */\n  thumbnailUrl: string;\n\n  /**\n   * Additional data to display in popovers, etc. for the thumbnail\n   */\n  thumbnailMetadata: { [label: string]: string };\n\n  /**\n   * A URL to a tiled version of the image\n   */\n  tileUrl: string;\n\n  /**\n   * The type of tiles at the URL\n   */\n  tileType: 'deep-zoom' | 'google-maps' | string;\n\n  /**\n   * The number of pixels per meter for the image\n   */\n  pixelsPerMeter: number;\n}\n\n/**\n * An overlay that can be placed atop a TissueImage\n */\nexport interface TissueOverlay extends Annotated {\n  /**\n   * The tissue image this overlay can be placed atop\n   */\n  image: TissueImage;\n\n  /**\n   * The label for the overlay.\n   */\n  label: string;\n\n  /**\n   * Anatomical location for the overlay.\n   */\n  anatomicalLocations: string[];\n\n\n  /**\n   * An URL for the SVG overlay.\n   */\n  overlayUrl: string;\n\n}\n\n/**\n * A tissue cell that was extracted/discovered from a tissue slice\n */\nexport interface TissueCell extends TissueOverlay {\n  /**\n   * The tissue slice from which an image was extracted/discovered\n   */\n  slice: TissueSlice;\n\n  /**\n   * The type of cell discovered\n   */\n  cellType: string;\n}\n\n/**\n * A local database of patients, samples, slices, images, etc.\n *\n * NOTE: A remote database will be the norm, so do not reference this\n * unless you are working with the local database implementation directly.\n */\nexport interface LocalDatabase {\n  /** Patients/donors in the database */\n  patients: Patient[];\n  /** Tissue samples in the database */\n  samples: TissueSample[];\n  /** Tissue slices in the database */\n  slices: TissueSlice[];\n  /** Tissue images in the database */\n  images: TissueImage[];\n  /** Tissue image overlays in the database */\n  overlays: TissueOverlay[];\n  /** Tissue cells in the database */\n  cells: TissueCell[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterIcon.html":{"url":"classes/RegisterIcon.html","title":"class - RegisterIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/icon-registry/icon-registry.action.ts\n        \n\n            \n                Description\n            \n            \n                Action for registering an icon either through an url or html.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(definition: IconDefinition)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/icon-registry/icon-registry.action.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an instance of register icon.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        definition\n                                                  \n                                                        \n                                                                        IconDefinition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data for the icon to register.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Icon Registry API] Register Icon'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/icon-registry/icon-registry.action.ts:8\n                            \n                        \n\n                \n                    \n                        Action type \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IconDefinition } from './icon-registry.model';\n\n/**\n * Action for registering an icon either through an url or html.\n */\nexport class RegisterIcon {\n  /** Action type */\n  static readonly type = '[Icon Registry API] Register Icon';\n\n  /**\n   * Creates an instance of register icon.\n   *\n   * @param definition Data for the icon to register.\n   */\n  constructor(readonly definition: IconDefinition) { }\n}\n\n/**\n * Action dispatched on a successfully processed `RegisterIcon`.\n */\nexport class RegistrationSuccess {\n  /** Action type */\n  static readonly type = '[Icon Registry API] Icon Registration Success';\n}\n\n/**\n * Action dispatched when an error occurs during the handling of `RegisterIcon`.\n */\nexport class RegistrationError {\n  /** Action type */\n  static readonly type = '[Icon Registry API] Icon Registration Error';\n\n  /**\n   * Creates an instance of registration error.\n   *\n   * @param error The error that occured during registration of an icon.\n   */\n  constructor(readonly error: Error) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistrationError.html":{"url":"classes/RegistrationError.html","title":"class - RegistrationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistrationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/icon-registry/icon-registry.action.ts\n        \n\n            \n                Description\n            \n            \n                Action dispatched when an error occurs during the handling of RegisterIcon.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: Error)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/icon-registry/icon-registry.action.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration error.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    Error\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The error that occured during registration of an icon.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Icon Registry API] Icon Registration Error'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/icon-registry/icon-registry.action.ts:31\n                            \n                        \n\n                \n                    \n                        Action type \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IconDefinition } from './icon-registry.model';\n\n/**\n * Action for registering an icon either through an url or html.\n */\nexport class RegisterIcon {\n  /** Action type */\n  static readonly type = '[Icon Registry API] Register Icon';\n\n  /**\n   * Creates an instance of register icon.\n   *\n   * @param definition Data for the icon to register.\n   */\n  constructor(readonly definition: IconDefinition) { }\n}\n\n/**\n * Action dispatched on a successfully processed `RegisterIcon`.\n */\nexport class RegistrationSuccess {\n  /** Action type */\n  static readonly type = '[Icon Registry API] Icon Registration Success';\n}\n\n/**\n * Action dispatched when an error occurs during the handling of `RegisterIcon`.\n */\nexport class RegistrationError {\n  /** Action type */\n  static readonly type = '[Icon Registry API] Icon Registration Error';\n\n  /**\n   * Creates an instance of registration error.\n   *\n   * @param error The error that occured during registration of an icon.\n   */\n  constructor(readonly error: Error) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistrationSuccess.html":{"url":"classes/RegistrationSuccess.html","title":"class - RegistrationSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistrationSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/icon-registry/icon-registry.action.ts\n        \n\n            \n                Description\n            \n            \n                Action dispatched on a successfully processed RegisterIcon.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Icon Registry API] Icon Registration Success'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/icon-registry/icon-registry.action.ts:23\n                            \n                        \n\n                \n                    \n                        Action type \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IconDefinition } from './icon-registry.model';\n\n/**\n * Action for registering an icon either through an url or html.\n */\nexport class RegisterIcon {\n  /** Action type */\n  static readonly type = '[Icon Registry API] Register Icon';\n\n  /**\n   * Creates an instance of register icon.\n   *\n   * @param definition Data for the icon to register.\n   */\n  constructor(readonly definition: IconDefinition) { }\n}\n\n/**\n * Action dispatched on a successfully processed `RegisterIcon`.\n */\nexport class RegistrationSuccess {\n  /** Action type */\n  static readonly type = '[Icon Registry API] Icon Registration Success';\n}\n\n/**\n * Action dispatched when an error occurs during the handling of `RegisterIcon`.\n */\nexport class RegistrationError {\n  /** Action type */\n  static readonly type = '[Icon Registry API] Icon Registration Error';\n\n  /**\n   * Creates an instance of registration error.\n   *\n   * @param error The error that occured during registration of an icon.\n   */\n  constructor(readonly error: Error) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchCategoriesComponent.html":{"url":"components/SearchCategoriesComponent.html","title":"component - SearchCategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchCategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search-categories/search-categories.component.ts\n\n\n    \n        Description\n    \n    \n        Search categories responsible for the search functionality through a given set of categories\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-search-categories\n            \n\n            \n                styleUrls\n                ./search-categories.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-categories.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                selectedFilterCategories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                removePrefix\n                            \n                            \n                                selected\n                            \n                            \n                                    Private\n                                updateSearchState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterCategories\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchService: SearchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search-categories/search-categories.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of Search Caetgories component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of the SearchService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterCategories\n                    \n                \n                \n                    \n                        Type :     Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/search-categories/search-categories.component.ts:17\n                            \n                        \n                \n                    \n                        Input of search filters with their categories as a Map\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisSelected(category: string, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search-categories/search-categories.component.ts:73\n                \n            \n\n\n            \n                \n                    Determines whether the filter value is selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        filter category to which the filter value belongs\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the filter value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search-categories/search-categories.component.ts:38\n                \n            \n\n\n            \n                \n                    on changes lifecycle hook for this component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of SimpleChanges which provides the changed value of the Input variable to this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removePrefix\n                        \n                        \n                    \n                \n            \n            \n                \nremovePrefix(category: string, displayName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search-categories/search-categories.component.ts:85\n                \n            \n\n\n            \n                \n                    Removes the prefix of a filter string if it is a common one that should not be displayed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The category of the filter.\n\n                                    \n                                \n                                \n                                    displayName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The trimmed filter.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(category: string, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search-categories/search-categories.component.ts:51\n                \n            \n\n\n            \n                \n                    function responsible to update the selectedfilterCategories data-structure\nand dispatch actions to update the data-structures for categories in the search-state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        filterCategory to which the search filter value belongs\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        filter value selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateSearchState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSearchState(operation: string, category: string, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search-categories/search-categories.component.ts:98\n                \n            \n\n\n            \n                \n                    Uses the search-service to update the search state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string to indicate if the filterValue is being selected or unselected\n\n                                    \n                                \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        filter category to which the filter value belongs\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        filter value being selected/unselected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search-categories/search-categories.component.ts:21\n                            \n                        \n\n                \n                    \n                        Keeps track of the filter categories - keys of the filterCategories(above) to display them as tabs on the UI\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedFilterCategories\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search-categories/search-categories.component.ts:25\n                            \n                        \n\n                \n                    \n                        Selected search filters maintained as a Map\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SearchService } from '../../shared/services/search/search.service';\n\n/**\n * Search categories responsible for the search functionality through a given set of categories\n */\n@Component({\n  selector: 'ccf-search-categories',\n  templateUrl: './search-categories.component.html',\n  styleUrls: ['./search-categories.component.scss']\n})\nexport class SearchCategoriesComponent implements OnChanges {\n  /**\n   * Input of search filters with their categories as a Map\n   */\n  @Input() filterCategories: Map;\n  /**\n   * Keeps track of the filter categories - keys of the filterCategories(above) to display them as tabs on the UI\n   */\n  categories: Array;\n  /**\n   * Selected search filters maintained as a Map\n   */\n  selectedFilterCategories = new Map>();\n\n  /**\n   * Creates an instance of Search Caetgories component.\n   * @param searchService instance of the SearchService\n   */\n  constructor(private searchService: SearchService) {\n  }\n\n  /**\n   * on changes lifecycle hook for this component\n   * @param changes instance of SimpleChanges which provides the changed value of the Input variable to this component\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if ('filterCategories' in changes) {\n      // gets the search filter categories\n      this.categories = Array.from(this.filterCategories.keys());\n    }\n  }\n\n  /**\n   * function responsible to update the selectedfilterCategories data-structure\n   * and dispatch actions to update the data-structures for categories in the search-state\n   * @param category filterCategory to which the search filter value belongs\n   * @param filter filter value selected\n   */\n  selected(category: string, filter: string) {\n    let filterValues = this.selectedFilterCategories.get(category);\n    if (!filterValues) {\n      filterValues = new Set();\n      this.selectedFilterCategories.set(category, filterValues);\n    }\n\n    if (!filterValues.has(filter)) {\n      filterValues.add(filter);\n      this.updateSearchState('select', category, filter);\n    } else {\n      filterValues.delete(filter);\n      this.updateSearchState('unselect', category, filter);\n    }\n  }\n\n  /**\n   * Determines whether the filter value is selected\n   * @param category filter category to which the filter value belongs\n   * @param filter the filter value\n   * @returns boolean\n   */\n  isSelected(category: string, filter: string) {\n    const selectedFilterValues = this.selectedFilterCategories.get(category);\n    return category && selectedFilterValues && selectedFilterValues.has(filter);\n  }\n\n  /**\n   * Removes the prefix of a filter string if it is a common one that should not be displayed.\n   *\n   * @param category The category of the filter.\n   * @param filter The filter to trim.\n   * @returns The trimmed filter.\n   */\n  removePrefix(category: string, displayName: string): string {\n    if (category === 'TMCs' && displayName.startsWith('TMC-')) {\n      return displayName.slice(4);\n    }\n    return displayName;\n  }\n\n  /**\n   * Uses the search-service to update the search state\n   * @param operation string to indicate if the filterValue is being selected or unselected\n   * @param category filter category to which the filter value belongs\n   * @param filter filter value being selected/unselected\n   */\n  private updateSearchState(operation: string, category: string, filter: string) {\n    if (operation === 'select') {\n      switch (category) {\n        case 'Technologies': this.searchService.selectTechnology(filter); break;\n        case 'TMCs': this.searchService.selectTMC(filter); break;\n      }\n    }\n\n    if (operation === 'unselect') {\n      switch (category) {\n        case 'Technologies': this.searchService.unselectTechnology(filter); break;\n        case 'TMCs': this.searchService.unselectTMC(filter); break;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ category }}\n        \n      \n\n      \n        \n          {{ removePrefix(category, filter.displayName) }}\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./search-categories.component.scss\n                \n                .ccf-search-categories {\n  &.wrapper {\n    .container {\n      width: 100%;\n\n      .tab {\n        width: auto;\n        line-height: 1.5rem;\n        border-bottom: 2px solid transparent;\n        display: flex;\n        align-content: center;\n        justify-content: space-between;\n        padding: 0 1rem;\n      }\n\n      .search-criteria-content {\n        display: flex;\n        flex-flow: row wrap;\n        align-content: flex-start;\n        background-color: white;\n        // padding: 0.5rem;\n        height: 7rem;\n        width: 100%;\n        border: 1px solid lightgray;\n        overflow-y: auto;\n\n        .filter {\n          width: fit-content;\n          height: fit-content;\n          margin: 0.25rem;\n          padding: 0.75rem;\n          text-align: center;\n          background: lightgray;\n          font-size: 0.75rem;\n          border-radius: 2px;\n          border: 1px solid #dcdcdc;\n          cursor: pointer;\n\n          &.selected {\n            background: darkgray;\n          }\n        }\n      }\n\n      ::ng-deep .mat-tab-header {\n\n        .mat-ink-bar {\n          height: 4px;\n        }\n\n        .mat-tab-header-pagination {\n          box-shadow: none;\n        }\n\n        .mat-tab-label {\n          padding: 0;\n          min-width: auto;\n          opacity: 1;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ category }}                                      {{ removePrefix(category, filter.displayName) }}                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchCategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchCategoriesModule.html":{"url":"modules/SearchCategoriesModule.html","title":"module - SearchCategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchCategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchCategoriesModule\n\n\n\ncluster_SearchCategoriesModule_declarations\n\n\n\ncluster_SearchCategoriesModule_exports\n\n\n\n\nSearchCategoriesComponent\n\nSearchCategoriesComponent\n\n\n\nSearchCategoriesModule\n\nSearchCategoriesModule\n\nSearchCategoriesModule -->\n\nSearchCategoriesComponent->SearchCategoriesModule\n\n\n\n\n\nSearchCategoriesComponent \n\nSearchCategoriesComponent \n\nSearchCategoriesComponent  -->\n\nSearchCategoriesModule->SearchCategoriesComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/search-categories/search-categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SearchCategoriesComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SearchCategoriesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { SearchCategoriesComponent } from './search-categories.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [SearchCategoriesComponent],\n  imports: [\n    CommonModule,\n    MatChipsModule,\n    MatTabsModule,\n    MatTooltipModule\n  ],\n  exports: [SearchCategoriesComponent]\n})\nexport class SearchCategoriesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search/search.component.ts\n\n\n    \n        Description\n    \n    \n        Container component for search filters.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterCategories\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontology: OntologyService, search: SearchService, store: Store, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search/search.component.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontology\n                                                  \n                                                        \n                                                                        OntologyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to interact with the ontology.\n\n                                                        \n                                                \n                                                \n                                                        search\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to update the search state.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global state.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(ontologyNode: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:63\n                \n            \n\n\n            \n                \n                    Expands and selects the ontology node in the tree\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontologyNode\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the selected ontology node\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterCategories\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map([\n    ['Technologies', [\n      {displayName: 'IMS', tooltip: 'Imaging Mass Spectrometry'},\n      {displayName: 'MxIF', tooltip: 'Multiplex Immunofluorescence'},\n      {displayName: 'AF', tooltip: 'Autofluorescence'},\n      {displayName: 'PAS', tooltip: 'Periodic Acid Schiff'},\n      {displayName: 'IHC', tooltip: 'Immunohistochemistry'}]],\n\n    ['TMCs', [\n      {displayName: 'TMC-Vanderbilt', tooltip: 'Vanderbilt University'},\n      {displayName: 'TMC-UCSD', tooltip: 'University of California San Diego'},\n      {displayName: 'TMC-Stanford', tooltip: 'Stanford University'},\n      {displayName: 'TMC-Florida', tooltip: 'University of Florida'},\n      {displayName: 'TMC-CalTech', tooltip: 'California Institute of Technology'}\n    ]]\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:28\n                            \n                        \n\n                \n                    \n                        Available search filter categories and their values, TODO - needs to be fetched from the data\nbased on the implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tree\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologyTreeComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(OntologyTreeComponent, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:23\n                            \n                        \n\n                \n                    \n                        View child of search component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { OntologyNode } from 'src/app/shared/state/ontology/ontology.model';\nimport { OntologyState } from 'src/app/shared/state/ontology/ontology.state';\n\nimport { OntologyService } from '../../shared/services/ontology/ontology.service';\nimport { SearchService } from '../../shared/services/search/search.service';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\nimport { NavigationService } from 'src/app/shared/services/navigation/navigation.service';\n\n/**\n * Container component for search filters.\n */\n@Component({\n  selector: 'ccf-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree: OntologyTreeComponent;\n  /**\n  * Available search filter categories and their values, TODO - needs to be fetched from the data\n  * based on the implementation\n  */\n  filterCategories = new Map([\n    ['Technologies', [\n      {displayName: 'IMS', tooltip: 'Imaging Mass Spectrometry'},\n      {displayName: 'MxIF', tooltip: 'Multiplex Immunofluorescence'},\n      {displayName: 'AF', tooltip: 'Autofluorescence'},\n      {displayName: 'PAS', tooltip: 'Periodic Acid Schiff'},\n      {displayName: 'IHC', tooltip: 'Immunohistochemistry'}]],\n\n    ['TMCs', [\n      {displayName: 'TMC-Vanderbilt', tooltip: 'Vanderbilt University'},\n      {displayName: 'TMC-UCSD', tooltip: 'University of California San Diego'},\n      {displayName: 'TMC-Stanford', tooltip: 'Stanford University'},\n      {displayName: 'TMC-Florida', tooltip: 'University of Florida'},\n      {displayName: 'TMC-CalTech', tooltip: 'California Institute of Technology'}\n    ]]\n  ]);\n\n  /**\n   * Creates an instance of search component.\n   *\n   * @param ontology The service used to interact with the ontology.\n   * @param search Service used to update the search state.\n   * @param store The global state.\n   */\n  constructor(\n    readonly ontology: OntologyService,\n    readonly search: SearchService,\n    private store: Store,\n    private readonly navigationService: NavigationService\n  ) { }\n\n  /**\n   * Expands and selects the ontology node in the tree\n   * @param ontologyNode the selected ontology node\n   */\n  selected(ontologyNode: OntologyNode) {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    this.tree.expandAndSelect(ontologyNode, node => nodes[node.parent]);\n    this.navigationService.navigateToTissueBrowser();\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n      \n    \n    \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                .ccf-search.wrapper {\n  height: 100%;\n\n  .container {\n    height: 100%;\n    background: #f5f5f5;\n    padding: 0.75rem;\n    display: flex;\n    flex-direction: column;\n\n    .age-gender-container {\n      display: flex;\n      flex-wrap: wrap;\n      align-items: flex-end;\n      justify-content: flex-start;\n\n      .age {\n        padding-left: 0.75rem;\n      }\n    }\n\n    .tree {\n      margin-top: 1rem;\n      overflow: auto;\n    }\n\n    .filler {\n      flex-grow: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SearchModule_exports\n\n\n\n\nSearchComponent\n\nSearchComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nSearchComponent->SearchModule\n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSearchModule->SearchComponent \n\n\n\n\n\nAgeSelectorModule\n\nAgeSelectorModule\n\nSearchModule -->\n\nAgeSelectorModule->SearchModule\n\n\n\n\n\nGenderSelectorModule\n\nGenderSelectorModule\n\nSearchModule -->\n\nGenderSelectorModule->SearchModule\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nSearchModule -->\n\nOntologySearchModule->SearchModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nSearchModule -->\n\nOntologyTreeModule->SearchModule\n\n\n\n\n\nSearchCategoriesModule\n\nSearchCategoriesModule\n\nSearchModule -->\n\nSearchCategoriesModule->SearchModule\n\n\n\nSearchModule -->\n\nSearchCategoriesModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SearchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgeSelectorModule\n                        \n                        \n                            GenderSelectorModule\n                        \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                        \n                            SearchCategoriesModule\n                        \n                        \n                            SearchCategoriesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { AgeSelectorModule } from '../age-selector/age-selector.module';\nimport { GenderSelectorModule } from '../gender-selector/gender-selector.module';\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { SearchCategoriesModule } from '../search-categories/search-categories.module';\nimport { SearchComponent } from './search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AgeSelectorModule,\n    GenderSelectorModule,\n    OntologySearchModule,\n    SearchCategoriesModule,\n    OntologyTreeModule,\n    SearchCategoriesModule,\n  ],\n  declarations: [SearchComponent],\n  exports: [SearchComponent]\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Search result interface type for the search results\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayLabel\n                                \n                                \n                                        index\n                                \n                                \n                                        node\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayLabel\n                                    \n                                \n                                \n                                    \n                                        displayLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label to be displayed in the view \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ensures order of search-results \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:         OntologyNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    instance of OntologyNode, provides data associated with a search result \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../state/ontology/ontology.model';\nimport { OntologyState } from '../../state/ontology/ontology.state';\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n  /** label to be displayed in the view */\n  displayLabel: string[];\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /**\n   * ontology state\n   */\n  @Select(OntologyState.nodes)\n  nodes$: Observable;\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: OntologyNode[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    nodes.forEach((node) => {\n      const condition = node.label.toLowerCase().includes(searchValue);\n\n      if (condition && !searchResults.get(node.id)) {\n        searchResults.set(node.id, {\n          index: this.getIndexOfMatch(node.label, searchValue),\n          displayLabel: this.formatLabel(node.label, searchValue),\n          node: node\n        });\n      } else {\n        const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n        if (match && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n            displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n            node: node\n          });\n        }\n      }\n    });\n\n    return Array.from(searchResults.values());\n  }\n\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/search/search.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides search functionality.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                searchCriteria\n                            \n                            \n                                    Private\n                                searchState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectTechnology\n                            \n                            \n                                selectTMC\n                            \n                            \n                                setAgeRange\n                            \n                            \n                                setGender\n                            \n                            \n                                setLocation\n                            \n                            \n                                unselectTechnology\n                            \n                            \n                                unselectTMC\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectTechnology\n                        \n                        \n                    \n                \n            \n            \n                \nselectTechnology(technology: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Dispatch()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/search/search.service.ts:90\n                \n            \n\n\n            \n                \n                    Dispatches an action to select the searched technologies category value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    technology\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SelectTechnology\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectTMC\n                        \n                        \n                    \n                \n            \n            \n                \nselectTMC(tmc: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Dispatch()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/search/search.service.ts:99\n                \n            \n\n\n            \n                \n                    Dispatches an action to select the searched TMCs category value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tmc\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SelectTMC\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAgeRange\n                        \n                        \n                    \n                \n            \n            \n                \nsetAgeRange(min?: number, max?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Dispatch()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/search/search.service.ts:72\n                \n            \n\n\n            \n                \n                    Dispatchs an action to update the search age range.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The lower bound of the range (inclusive).\n\n                                    \n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The upper bound of the range (inclusive).\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SetAgeRangeFilter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGender\n                        \n                        \n                    \n                \n            \n            \n                \nsetGender(gender?: \"male\" | \"female\")\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Dispatch()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/search/search.service.ts:81\n                \n            \n\n\n            \n                \n                    Dispatchs an action to update the search gender.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gender\n                                    \n                                            \"male\" | \"female\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The gender to limit searches to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SetGenderFilter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLocation\n                        \n                        \n                    \n                \n            \n            \n                \nsetLocation(location: OntologyNode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Dispatch()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/search/search.service.ts:127\n                \n            \n\n\n            \n                \n                    Dispatchs an action to update the searched anatomical locations.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SetLocation\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unselectTechnology\n                        \n                        \n                    \n                \n            \n            \n                \nunselectTechnology(technology: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Dispatch()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/search/search.service.ts:108\n                \n            \n\n\n            \n                \n                    Dispatches an action to unselect the Technology category value removed from search\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    technology\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unselected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UnselectTechnology\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unselectTMC\n                        \n                        \n                    \n                \n            \n            \n                \nunselectTMC(tmc: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Dispatch()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/search/search.service.ts:117\n                \n            \n\n\n            \n                \n                    Dispatches an action to unselect the TMC category value removed from search\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tmc\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unselected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UnselectTMC\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            searchCriteria\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.searchState.pipe(\n    filter(state => !!state),\n    map(createSearchCriteriaDescription)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/search/search.service.ts:60\n                            \n                        \n\n                \n                    \n                        Emits strings with information about the current search.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(SearchState)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/search/search.service.ts:55\n                            \n                        \n\n                \n                    \n                        Current search state.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { defaultTo, join } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../state/ontology/ontology.model';\nimport {\n  SelectTechnology, SelectTMC, SetAgeRangeFilter, SetGenderFilter, SetLocation, UnselectTechnology, UnselectTMC,\n} from '../../state/search/search.action';\nimport { SearchStateModel } from '../../state/search/search.model';\nimport { SearchState } from '../../state/search/search.state';\n\n/**\n * defines the constraint on age range.\n * min and max are used in age slider.\n */\nexport const ageConstraints = {\n  min: 18,\n  max: 89\n};\n\n/**\n * Creates a description of a search.\n *\n * @param state The search state.\n * @returns The description of the search criteria.\n */\nfunction createSearchCriteriaDescription({ ageRange: [minAge, maxAge], gender }: SearchStateModel): string {\n  let ageDescription = `Age ${defaultTo(minAge, ageConstraints.min)}-${defaultTo(maxAge, ageConstraints.max + '+')}`;\n  if (minAge === maxAge || minAge === ageConstraints.max || maxAge === ageConstraints.min) {\n    if (maxAge !== undefined) {\n      ageDescription = `Age ${maxAge}`;\n    } else if (minAge !== undefined) {\n      ageDescription = `Age ${minAge}+`;\n    }\n  }\n  const genderDescription = gender === 'male' ? 'Male' : gender === 'female' ? 'Female' : 'Female & Male';\n  const descriptions = [genderDescription, ageDescription];\n  return join(descriptions, ' | ');\n}\n\n/**\n * Provides search functionality.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  /**\n   * Current search state.\n   */\n  @Select(SearchState)\n  private searchState: Observable;\n\n  /**\n   * Emits strings with information about the current search.\n   */\n  readonly searchCriteria = this.searchState.pipe(\n    filter(state => !!state),\n    map(createSearchCriteriaDescription)\n  );\n\n  /**\n   * Dispatchs an action to update the search age range.\n   *\n   * @param [min] The lower bound of the range (inclusive).\n   * @param [max] The upper bound of the range (inclusive).\n   */\n  @Dispatch()\n  setAgeRange(min?: number, max?: number): SetAgeRangeFilter {\n    return new SetAgeRangeFilter(min, max);\n  }\n\n  /**\n   * Dispatchs an action to update the search gender.\n   * @param [gender] The gender to limit searches to.\n   */\n  @Dispatch()\n  setGender(gender?: 'male' | 'female'): SetGenderFilter {\n    return new SetGenderFilter(gender);\n  }\n\n  /**\n   * Dispatches an action to select the searched technologies category value\n   * @param technology selected\n   */\n  @Dispatch()\n  selectTechnology(technology: string): SelectTechnology {\n    return new SelectTechnology(technology);\n  }\n\n  /**\n   * Dispatches an action to select the searched TMCs category value\n   * @param tmc selected\n   */\n  @Dispatch()\n  selectTMC(tmc: string): SelectTMC {\n    return new SelectTMC(tmc);\n  }\n\n  /**\n   * Dispatches an action to unselect the Technology category value removed from search\n   * @param technology unselected\n   */\n  @Dispatch()\n  unselectTechnology(technology: string): UnselectTechnology {\n    return new UnselectTechnology(technology);\n  }\n\n  /**\n   * Dispatches an action to unselect the TMC category value removed from search\n   * @param tmc unselected\n   */\n  @Dispatch()\n  unselectTMC(tmc: string): UnselectTMC {\n    return new UnselectTMC(tmc);\n  }\n\n  /**\n   * Dispatchs an action to update the searched anatomical locations.\n   *\n   * @param locations The names of the anatomical locations.\n   */\n  @Dispatch()\n  setLocation(location: OntologyNode): SetLocation {\n    return new SetLocation(location);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchState.html":{"url":"classes/SearchState.html","title":"class - SearchState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/search/search.state.ts\n        \n\n            \n                Description\n            \n            \n                Contains the currently active search parameters.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTechnology\n                            \n                            \n                                addTMC\n                            \n                            \n                                    Static\n                                location\n                            \n                            \n                                    Static\n                                patientFilterBuilder\n                            \n                            \n                                removeTechnology\n                            \n                            \n                                removeTMC\n                            \n                            \n                                setAgeRange\n                            \n                            \n                                setGender\n                            \n                            \n                                setLocation\n                            \n                            \n                                    Static\n                                tissueImageFilterBuilder\n                            \n                            \n                                    Static\n                                tissueSampleFilterBuilder\n                            \n                            \n                                    Static\n                                tissueSliceFilterBuilder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTechnology\n                        \n                        \n                    \n                \n            \n            \n                \naddTechnology(ctx: StateContext, action: SelectTechnology)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SelectTechnology)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:146\n                \n            \n\n\n            \n                \n                    Adds a technology to the active search.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                SelectTechnology\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTMC\n                        \n                        \n                    \n                \n            \n            \n                \naddTMC(ctx: StateContext, action: SelectTMC)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SelectTMC)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:128\n                \n            \n\n\n            \n                \n                    Adds a TMC to the active search.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                SelectTMC\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            location\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    location(state: SearchStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:36\n                \n            \n\n\n            \n                \n                    Selects the current ontology node location.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SearchStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            patientFilterBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patientFilterBuilder(state: SearchStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:46\n                \n            \n\n\n            \n                \n                    Creates a filter function for patient image objects based on the current search state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SearchStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A sanpshot of the current state.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        A filter function that returns true for all objects matching the current search.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTechnology\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTechnology(ctx: StateContext, action: UnselectTechnology)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(UnselectTechnology)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:155\n                \n            \n\n\n            \n                \n                    Removes a technology to the active search.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                UnselectTechnology\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTMC\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTMC(ctx: StateContext, action: UnselectTMC)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(UnselectTMC)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:137\n                \n            \n\n\n            \n                \n                    Removes a TMC to the active search.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                UnselectTMC\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAgeRange\n                        \n                        \n                    \n                \n            \n            \n                \nsetAgeRange(ctx: StateContext, action: SetAgeRangeFilter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetAgeRangeFilter)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:120\n                \n            \n\n\n            \n                \n                    Updates the age range of the active search.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                SetAgeRangeFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGender\n                        \n                        \n                    \n                \n            \n            \n                \nsetGender(ctx: StateContext, action: SetGenderFilter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetGenderFilter)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:112\n                \n            \n\n\n            \n                \n                    Updates the gender of the active search.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                SetGenderFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLocation\n                        \n                        \n                    \n                \n            \n            \n                \nsetLocation(ctx: StateContext, action: SetLocation)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetLocation)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:164\n                \n            \n\n\n            \n                \n                    Set the active search ontology location.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                SetLocation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            tissueImageFilterBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tissueImageFilterBuilder(state: SearchStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:97\n                \n            \n\n\n            \n                \n                    Creates a filter function for tissue image objects based on the current search state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SearchStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A snapshot of the current state.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        A filter function that returns true for all objects matching the current search.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            tissueSampleFilterBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tissueSampleFilterBuilder(state: SearchStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:63\n                \n            \n\n\n            \n                \n                    Creates a filter function for tissue sample objects based on the current search state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SearchStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A snapshot of the current state.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        A filter function that returns true for all objects matching the current search.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            tissueSliceFilterBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tissueSliceFilterBuilder(state: SearchStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/state/search/search.state.ts:80\n                \n            \n\n\n            \n                \n                    Creates a filter function for tissue slice objects based on the current search state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SearchStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A snapshot of the current state.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        A filter function that returns true for all objects matching the current search.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { without } from 'lodash';\n\nimport { Compare, FilterBuilder } from '../../common/filter/filter-builder';\nimport { Patient, TissueImage, TissueSample, TissueSlice } from '../database/database.models';\nimport { OntologyNode } from '../ontology/ontology.model';\nimport {\n  SelectTechnology,\n  SelectTMC,\n  SetAgeRangeFilter,\n  SetGenderFilter,\n  SetLocation,\n  UnselectTechnology,\n  UnselectTMC,\n} from './search.action';\nimport { SearchStateModel } from './search.model';\n\n/**\n * Contains the currently active search parameters.\n */\n@State({\n  name: 'search',\n  defaults: {\n    gender: undefined,\n    ageRange: [undefined, undefined],\n    tmc: [],\n    technologies: [],\n    location: undefined\n  }\n})\nexport class SearchState {\n  /**\n   * Selects the current ontology node location.\n   */\n  @Selector()\n  static location(state: SearchStateModel): OntologyNode {\n    return state.location;\n  }\n\n  /**\n   * Creates a filter function for patient image objects based on the current search state.\n   * @param state A sanpshot of the current state.\n   * @returns A filter function that returns true for all objects matching the current search.\n   */\n  @Selector()\n  static patientFilterBuilder(state: SearchStateModel): FilterBuilder {\n    const { gender, ageRange: [min, max], tmc, location = { id: undefined } } = state;\n    return new FilterBuilder()\n      .addMatches('gender', gender)\n      .addCompare('age', Compare.greater_than_equal, min)\n      .addCompare('age', Compare.less_than_equal, max)\n      .addIncludedIn('provider', tmc)\n      .addIncludes('ontologyNodeIds', location.id);\n  }\n\n  /**\n   * Creates a filter function for tissue sample objects based on the current search state.\n   *\n   * @param state A snapshot of the current state.\n   * @returns A filter function that returns true for all objects matching the current search.\n   */\n  @Selector()\n  static tissueSampleFilterBuilder(state: SearchStateModel): FilterBuilder {\n    const { gender, ageRange: [min, max], tmc, location = { id: undefined } } = state;\n    return new FilterBuilder()\n      .addMatches('patient.gender', gender)\n      .addCompare('patient.age', Compare.greater_than_equal, min)\n      .addCompare('patient.age', Compare.less_than_equal, max)\n      .addIncludedIn('patient.provider', tmc)\n      .addIncludes('patient.ontologyNodeIds', location.id);\n  }\n\n  /**\n   * Creates a filter function for tissue slice objects based on the current search state.\n   *\n   * @param state A snapshot of the current state.\n   * @returns A filter function that returns true for all objects matching the current search.\n   */\n  @Selector()\n  static tissueSliceFilterBuilder(state: SearchStateModel): FilterBuilder {\n    const { gender, ageRange: [min, max], tmc, location = { id: undefined } } = state;\n    return new FilterBuilder()\n      .addMatches('sample.patient.gender', gender)\n      .addCompare('sample.patient.age', Compare.greater_than_equal, min)\n      .addCompare('sample.patient.age', Compare.less_than_equal, max)\n      .addIncludedIn('sample.patient.provider', tmc)\n      .addIncludes('sample.patient.ontologyNodeIds', location.id);\n  }\n\n  /**\n   * Creates a filter function for tissue image objects based on the current search state.\n   *\n   * @param state A snapshot of the current state.\n   * @returns A filter function that returns true for all objects matching the current search.\n   */\n  @Selector()\n  static tissueImageFilterBuilder(state: SearchStateModel): FilterBuilder {\n    const { gender, ageRange: [min, max], tmc, technologies, location = { id: undefined } } = state;\n    return new FilterBuilder()\n      .addMatches('slice.sample.patient.gender', gender)\n      .addCompare('slice.sample.patient.age', Compare.greater_than_equal, min)\n      .addCompare('slice.sample.patient.age', Compare.less_than_equal, max)\n      .addIncludedIn('slice.sample.patient.provider', tmc)\n      .addIncludes('slice.sample.patient.ontologyNodeIds', location.id)\n      .addIncludedIn('technology', technologies);\n  }\n\n  /**\n   * Updates the gender of the active search.\n   */\n  @Action(SetGenderFilter)\n  setGender(ctx: StateContext, action: SetGenderFilter): void {\n    ctx.patchState({ gender: action.gender });\n  }\n\n  /**\n   * Updates the age range of the active search.\n   */\n  @Action(SetAgeRangeFilter)\n  setAgeRange(ctx: StateContext, action: SetAgeRangeFilter): void {\n    ctx.patchState({ ageRange: [action.min, action.max] });\n  }\n\n  /**\n   * Adds a TMC to the active search.\n   */\n @Action(SelectTMC)\n  addTMC(ctx: StateContext, action: SelectTMC): void {\n    const state = ctx.getState();\n    ctx.patchState({ tmc: [...state.tmc, action.tmc] });\n  }\n\n  /**\n   * Removes a TMC to the active search.\n   */\n  @Action(UnselectTMC)\n  removeTMC(ctx: StateContext, action: UnselectTMC): void {\n    const state = ctx.getState();\n    ctx.patchState({ tmc: without(state.tmc, action.tmc) });\n  }\n\n  /**\n   * Adds a technology to the active search.\n   */\n  @Action(SelectTechnology)\n  addTechnology(ctx: StateContext, action: SelectTechnology): void {\n    const state = ctx.getState();\n    ctx.patchState({ technologies: [...state.technologies, action.technology] });\n  }\n\n  /**\n   * Removes a technology to the active search.\n   */\n  @Action(UnselectTechnology)\n  removeTechnology(ctx: StateContext, action: UnselectTechnology): void {\n    const state = ctx.getState();\n    ctx.patchState({ technologies: without(state.technologies, action.technology) });\n  }\n\n  /**\n   * Set the active search ontology location.\n   */\n  @Action(SetLocation)\n  setLocation(ctx: StateContext, action: SetLocation): void {\n    ctx.patchState({ location: action.location });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchStateModel.html":{"url":"interfaces/SearchStateModel.html","title":"interface - SearchStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/search/search.model.ts\n        \n\n            \n                Description\n            \n            \n                Search state model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ageRange\n                                \n                                \n                                        gender\n                                \n                                \n                                        location\n                                \n                                \n                                        technologies\n                                \n                                \n                                        tmc\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                    \n                                \n                                \n                                    \n                                        ageRange:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The age range.\nAn undefined value in the tuple incicates no lower/upper boundary for the range.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:     \"male\" | \"female\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The gender (or undefined for any gender).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         OntologyNode | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The currently selected anatomical location.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of active technologies.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tmc\n                                    \n                                \n                                \n                                    \n                                        tmc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of active TMCs.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OntologyNode } from '../ontology/ontology.model';\n\n/**\n * Search state model.\n */\nexport interface SearchStateModel {\n  /**\n   * The gender (or undefined for any gender).\n   */\n  gender: 'male'| 'female' | undefined;\n\n  /**\n   * The age range.\n   * An undefined value in the tuple incicates no lower/upper boundary for the range.\n   */\n  ageRange: [number | undefined, number | undefined];\n\n  /**\n   * A list of active TMCs.\n   */\n  tmc: string[];\n\n  /**\n   * A list of active technologies.\n   */\n  technologies: string[];\n\n  /**\n   * The currently selected anatomical location.\n   */\n  location: OntologyNode | undefined;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectTMC.html":{"url":"classes/SelectTMC.html","title":"class - SelectTMC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectTMC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/search/search.action.ts\n        \n\n            \n                Description\n            \n            \n                Add a TMC to the search selection.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tmc: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/search/search.action.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of select tmc.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tmc\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The TMC type to add.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Search API] Select TMC'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/search/search.action.ts:39\n                            \n                        \n\n                \n                    \n                        Action type \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OntologyNode } from '../ontology/ontology.model';\n\n/**\n * Set/Unset the searched gender.\n */\nexport class SetGenderFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Gender Filter';\n\n  /**\n   * Creates an instance of set gender filter.\n   *\n   * @param [gender] The gender male, female, or undefined for any gender.\n   */\n  constructor(readonly gender?: 'male' | 'female') { }\n}\n\n/**\n * Set/Unset the searched age range.\n */\nexport class SetAgeRangeFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Age Range Filter';\n\n  /**\n   * Creates an instance of set age range filter.\n   *\n   * @param [min] The minimum age (inclusive)\n   * @param [max] The maximum age (inclusive)\n   */\n  constructor(readonly min?: number, readonly max?: number) { }\n}\n\n/**\n * Add a TMC to the search selection.\n */\nexport class SelectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Select TMC';\n\n  /**\n   * Creates an instance of select tmc.\n   *\n   * @param tmc The TMC type to add.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Remove a TMC from the search selection.\n */\nexport class UnselectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Unselect TMC';\n\n  /**\n   * Creates an instance of unselect tmc.\n   *\n   * @param tmc The TMC type to remove.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Add a technology to the search selection.\n */\nexport class SelectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Select Technology';\n\n  /**\n   * Creates an instance of select technology.\n   *\n   * @param technology The technology to add.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Remove a technology from the search selection.\n */\nexport class UnselectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Unselect Technology';\n\n  /**\n   * Creates an instance of unselect technology.\n   *\n   * @param technology The technology to remove.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Set the searched onotological location.\n */\nexport class SetLocation {\n  /** Action type */\n  static readonly type = '[Search API] Set Locations';\n\n  /**\n   * Creates an instance of set location.\n   *\n   * @param location The new location.\n   */\n  constructor(readonly location?: OntologyNode) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectTechnology.html":{"url":"classes/SelectTechnology.html","title":"class - SelectTechnology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectTechnology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/search/search.action.ts\n        \n\n            \n                Description\n            \n            \n                Add a technology to the search selection.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(technology: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/search/search.action.ts:69\n                            \n                        \n\n                \n                    \n                            Creates an instance of select technology.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        technology\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The technology to add.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Search API] Select Technology'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/search/search.action.ts:69\n                            \n                        \n\n                \n                    \n                        Action type \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OntologyNode } from '../ontology/ontology.model';\n\n/**\n * Set/Unset the searched gender.\n */\nexport class SetGenderFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Gender Filter';\n\n  /**\n   * Creates an instance of set gender filter.\n   *\n   * @param [gender] The gender male, female, or undefined for any gender.\n   */\n  constructor(readonly gender?: 'male' | 'female') { }\n}\n\n/**\n * Set/Unset the searched age range.\n */\nexport class SetAgeRangeFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Age Range Filter';\n\n  /**\n   * Creates an instance of set age range filter.\n   *\n   * @param [min] The minimum age (inclusive)\n   * @param [max] The maximum age (inclusive)\n   */\n  constructor(readonly min?: number, readonly max?: number) { }\n}\n\n/**\n * Add a TMC to the search selection.\n */\nexport class SelectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Select TMC';\n\n  /**\n   * Creates an instance of select tmc.\n   *\n   * @param tmc The TMC type to add.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Remove a TMC from the search selection.\n */\nexport class UnselectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Unselect TMC';\n\n  /**\n   * Creates an instance of unselect tmc.\n   *\n   * @param tmc The TMC type to remove.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Add a technology to the search selection.\n */\nexport class SelectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Select Technology';\n\n  /**\n   * Creates an instance of select technology.\n   *\n   * @param technology The technology to add.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Remove a technology from the search selection.\n */\nexport class UnselectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Unselect Technology';\n\n  /**\n   * Creates an instance of unselect technology.\n   *\n   * @param technology The technology to remove.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Set the searched onotological location.\n */\nexport class SetLocation {\n  /** Action type */\n  static readonly type = '[Search API] Set Locations';\n\n  /**\n   * Creates an instance of set location.\n   *\n   * @param location The new location.\n   */\n  constructor(readonly location?: OntologyNode) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetAgeRangeFilter.html":{"url":"classes/SetAgeRangeFilter.html","title":"class - SetAgeRangeFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetAgeRangeFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/search/search.action.ts\n        \n\n            \n                Description\n            \n            \n                Set/Unset the searched age range.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min?: number, max?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/search/search.action.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of set age range filter.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The minimum age (inclusive)\n\n                                                        \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The maximum age (inclusive)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Search API] Set Age Range Filter'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/search/search.action.ts:23\n                            \n                        \n\n                \n                    \n                        Action type \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OntologyNode } from '../ontology/ontology.model';\n\n/**\n * Set/Unset the searched gender.\n */\nexport class SetGenderFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Gender Filter';\n\n  /**\n   * Creates an instance of set gender filter.\n   *\n   * @param [gender] The gender male, female, or undefined for any gender.\n   */\n  constructor(readonly gender?: 'male' | 'female') { }\n}\n\n/**\n * Set/Unset the searched age range.\n */\nexport class SetAgeRangeFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Age Range Filter';\n\n  /**\n   * Creates an instance of set age range filter.\n   *\n   * @param [min] The minimum age (inclusive)\n   * @param [max] The maximum age (inclusive)\n   */\n  constructor(readonly min?: number, readonly max?: number) { }\n}\n\n/**\n * Add a TMC to the search selection.\n */\nexport class SelectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Select TMC';\n\n  /**\n   * Creates an instance of select tmc.\n   *\n   * @param tmc The TMC type to add.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Remove a TMC from the search selection.\n */\nexport class UnselectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Unselect TMC';\n\n  /**\n   * Creates an instance of unselect tmc.\n   *\n   * @param tmc The TMC type to remove.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Add a technology to the search selection.\n */\nexport class SelectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Select Technology';\n\n  /**\n   * Creates an instance of select technology.\n   *\n   * @param technology The technology to add.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Remove a technology from the search selection.\n */\nexport class UnselectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Unselect Technology';\n\n  /**\n   * Creates an instance of unselect technology.\n   *\n   * @param technology The technology to remove.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Set the searched onotological location.\n */\nexport class SetLocation {\n  /** Action type */\n  static readonly type = '[Search API] Set Locations';\n\n  /**\n   * Creates an instance of set location.\n   *\n   * @param location The new location.\n   */\n  constructor(readonly location?: OntologyNode) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetGenderFilter.html":{"url":"classes/SetGenderFilter.html","title":"class - SetGenderFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetGenderFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/search/search.action.ts\n        \n\n            \n                Description\n            \n            \n                Set/Unset the searched gender.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gender?: \"male\" | \"female\")\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/search/search.action.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an instance of set gender filter.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        gender\n                                                  \n                                                        \n                                                                    \"male\" | \"female\"\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The gender male, female, or undefined for any gender.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Search API] Set Gender Filter'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/search/search.action.ts:8\n                            \n                        \n\n                \n                    \n                        Action type \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OntologyNode } from '../ontology/ontology.model';\n\n/**\n * Set/Unset the searched gender.\n */\nexport class SetGenderFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Gender Filter';\n\n  /**\n   * Creates an instance of set gender filter.\n   *\n   * @param [gender] The gender male, female, or undefined for any gender.\n   */\n  constructor(readonly gender?: 'male' | 'female') { }\n}\n\n/**\n * Set/Unset the searched age range.\n */\nexport class SetAgeRangeFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Age Range Filter';\n\n  /**\n   * Creates an instance of set age range filter.\n   *\n   * @param [min] The minimum age (inclusive)\n   * @param [max] The maximum age (inclusive)\n   */\n  constructor(readonly min?: number, readonly max?: number) { }\n}\n\n/**\n * Add a TMC to the search selection.\n */\nexport class SelectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Select TMC';\n\n  /**\n   * Creates an instance of select tmc.\n   *\n   * @param tmc The TMC type to add.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Remove a TMC from the search selection.\n */\nexport class UnselectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Unselect TMC';\n\n  /**\n   * Creates an instance of unselect tmc.\n   *\n   * @param tmc The TMC type to remove.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Add a technology to the search selection.\n */\nexport class SelectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Select Technology';\n\n  /**\n   * Creates an instance of select technology.\n   *\n   * @param technology The technology to add.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Remove a technology from the search selection.\n */\nexport class UnselectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Unselect Technology';\n\n  /**\n   * Creates an instance of unselect technology.\n   *\n   * @param technology The technology to remove.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Set the searched onotological location.\n */\nexport class SetLocation {\n  /** Action type */\n  static readonly type = '[Search API] Set Locations';\n\n  /**\n   * Creates an instance of set location.\n   *\n   * @param location The new location.\n   */\n  constructor(readonly location?: OntologyNode) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetLocation.html":{"url":"classes/SetLocation.html","title":"class - SetLocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetLocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/search/search.action.ts\n        \n\n            \n                Description\n            \n            \n                Set the searched onotological location.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(location?: OntologyNode)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/search/search.action.ts:99\n                            \n                        \n\n                \n                    \n                            Creates an instance of set location.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        OntologyNode\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The new location.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Search API] Set Locations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/search/search.action.ts:99\n                            \n                        \n\n                \n                    \n                        Action type \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OntologyNode } from '../ontology/ontology.model';\n\n/**\n * Set/Unset the searched gender.\n */\nexport class SetGenderFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Gender Filter';\n\n  /**\n   * Creates an instance of set gender filter.\n   *\n   * @param [gender] The gender male, female, or undefined for any gender.\n   */\n  constructor(readonly gender?: 'male' | 'female') { }\n}\n\n/**\n * Set/Unset the searched age range.\n */\nexport class SetAgeRangeFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Age Range Filter';\n\n  /**\n   * Creates an instance of set age range filter.\n   *\n   * @param [min] The minimum age (inclusive)\n   * @param [max] The maximum age (inclusive)\n   */\n  constructor(readonly min?: number, readonly max?: number) { }\n}\n\n/**\n * Add a TMC to the search selection.\n */\nexport class SelectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Select TMC';\n\n  /**\n   * Creates an instance of select tmc.\n   *\n   * @param tmc The TMC type to add.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Remove a TMC from the search selection.\n */\nexport class UnselectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Unselect TMC';\n\n  /**\n   * Creates an instance of unselect tmc.\n   *\n   * @param tmc The TMC type to remove.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Add a technology to the search selection.\n */\nexport class SelectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Select Technology';\n\n  /**\n   * Creates an instance of select technology.\n   *\n   * @param technology The technology to add.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Remove a technology from the search selection.\n */\nexport class UnselectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Unselect Technology';\n\n  /**\n   * Creates an instance of unselect technology.\n   *\n   * @param technology The technology to remove.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Set the searched onotological location.\n */\nexport class SetLocation {\n  /** Action type */\n  static readonly type = '[Search API] Set Locations';\n\n  /**\n   * Creates an instance of set location.\n   *\n   * @param location The new location.\n   */\n  constructor(readonly location?: OntologyNode) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThreeJsLayer.html":{"url":"classes/ThreeJsLayer.html","title":"class - ThreeJsLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThreeJsLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/3d/threejs-layer.ts\n        \n\n            \n                Description\n            \n            \n                A mapbox custom layer for adding threejs scenes to a map.\n\n            \n\n\n            \n                Implements\n            \n            \n                        CustomLayerInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                camera\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Optional\n                                map\n                            \n                            \n                                    Private\n                                renderer\n                            \n                            \n                                    Readonly\n                                renderingMode\n                            \n                            \n                                    Readonly\n                                scene\n                            \n                            \n                                    Private\n                                transformMatrix\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Optional\n                                unitScale\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onAdd\n                            \n                            \n                                onRemove\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ThreeJsLayerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/3d/threejs-layer.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of ThreeJsLayer.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ThreeJsLayerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The layer options.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Camera()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/3d/threejs-layer.ts:30\n                            \n                        \n\n                \n                    \n                        The threejs camera for this layer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/3d/threejs-layer.ts:19\n                            \n                        \n\n                \n                    \n                        Identifier for this layer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/3d/threejs-layer.ts:25\n                            \n                        \n\n                \n                    \n                        Mapbox map instance on which the layer is attached. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            renderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebGLRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/3d/threejs-layer.ts:34\n                            \n                        \n\n                \n                    \n                        The renderer used for drawing the scene. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            renderingMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '3d'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/3d/threejs-layer.ts:23\n                            \n                        \n\n                \n                    \n                        3D rendering \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Scene()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/3d/threejs-layer.ts:28\n                            \n                        \n\n                \n                    \n                        The threejs scene on which objects can be added. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transformMatrix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Matrix4\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/3d/threejs-layer.ts:36\n                            \n                        \n\n                \n                    \n                        Transformation matrix for correct camera views. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'custom'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/3d/threejs-layer.ts:21\n                            \n                        \n\n                \n                    \n                        Custom layer type. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unitScale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/3d/threejs-layer.ts:32\n                            \n                        \n\n                \n                    \n                        The unit scale for converting between scene values and map values. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAdd\n                        \n                        \n                    \n                \n            \n            \n                \nonAdd(map: Map, gl: WebGLRenderingContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/3d/threejs-layer.ts:53\n                \n            \n\n\n            \n                \n                    Adds this layer to a map. Automatically called by mapbox.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The map.\n\n                                    \n                                \n                                \n                                    gl\n                                    \n                                            WebGLRenderingContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The rendering context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(_map: Map, _gl: WebGLRenderingContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/3d/threejs-layer.ts:77\n                \n            \n\n\n            \n                \n                    Cleans up the resources used be this layer. Automatically called by mapbox.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _map\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The map.\n\n                                    \n                                \n                                \n                                    _gl\n                                    \n                                            WebGLRenderingContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The rendering context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender(_gl: WebGLRenderingContext, matrixElements: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/3d/threejs-layer.ts:88\n                \n            \n\n\n            \n                \n                    Renders the threejs scene onto the map. Automatically called by mapbox.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _gl\n                                    \n                                            WebGLRenderingContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The rendering context.\n\n                                    \n                                \n                                \n                                    matrixElements\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current projection matrix.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CustomLayerInterface, Map, MercatorCoordinate, LngLatLike } from 'mapbox-gl';\nimport { Camera, Matrix4, Scene, Vector3, WebGLRenderer } from 'three';\n\n/**\n * Options for the threejs layer.\n */\ninterface ThreeJsLayerOptions {\n  /** Identifier for this layer. */\n  id: string;\n  /** Map position of this layer. */\n  position?: LngLatLike;\n}\n\n/**\n * A mapbox custom layer for adding threejs scenes to a map.\n */\nexport class ThreeJsLayer implements CustomLayerInterface {\n  /** Identifier for this layer. */\n  readonly id: string;\n  /** Custom layer type. */\n  readonly type = 'custom';\n  /** 3D rendering */\n  readonly renderingMode = '3d';\n  /** Mapbox map instance on which the layer is attached. */\n  map?: Map;\n\n  /** The threejs scene on which objects can be added. */\n  readonly scene = new Scene();\n  /** The threejs camera for this layer. */\n  readonly camera = new Camera();\n  /** The unit scale for converting between scene values and map values. */\n  unitScale?: number;\n  /** The renderer used for drawing the scene. */\n  private renderer!: WebGLRenderer;\n  /** Transformation matrix for correct camera views. */\n  private transformMatrix!: Matrix4;\n\n  /**\n   * Creates an instance of ThreeJsLayer.\n   *\n   * @param options The layer options.\n   */\n  constructor(readonly options: ThreeJsLayerOptions) {\n    this.id = options.id;\n  }\n\n  /**\n   * Adds this layer to a map. Automatically called by mapbox.\n   *\n   * @param map The map.\n   * @param gl The rendering context.\n   */\n  onAdd(map: Map, gl: WebGLRenderingContext): void {\n    this.map = map;\n    this.renderer = new WebGLRenderer({\n      canvas: map.getCanvas(),\n      context: gl,\n      antialias: true\n    });\n    this.renderer.autoClear = false;\n\n    // Create the transform matrix\n    const position = this.options.position || map.getCenter();\n    const coordinates = MercatorCoordinate.fromLngLat(position);\n    const { x, y, z } = coordinates;\n    const scale = this.unitScale = coordinates.meterInMercatorCoordinateUnits();\n    this.transformMatrix = new Matrix4().makeTranslation(x, y, z)\n      .scale(new Vector3(scale, -scale, scale));\n  }\n\n  /**\n   * Cleans up the resources used be this layer. Automatically called by mapbox.\n   *\n   * @param _map The map.\n   * @param _gl The rendering context.\n   */\n  onRemove(_map: Map, _gl: WebGLRenderingContext): void {\n    this.scene.dispose();\n    this.renderer.dispose();\n  }\n\n  /**\n   * Renders the threejs scene onto the map. Automatically called by mapbox.\n   *\n   * @param _gl The rendering context.\n   * @param matrixElements The current projection matrix.\n   */\n  render(_gl: WebGLRenderingContext, matrixElements: number[]): void {\n    const matrix = new Matrix4().fromArray(matrixElements)\n      .multiply(this.transformMatrix);\n\n    this.camera.projectionMatrix = matrix;\n    this.renderer.state.reset();\n    this.renderer.render(this.scene, this.camera);\n    this.map.triggerRepaint();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThreeJsLayerOptions.html":{"url":"interfaces/ThreeJsLayerOptions.html","title":"interface - ThreeJsLayerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ThreeJsLayerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/3d/threejs-layer.ts\n        \n\n            \n                Description\n            \n            \n                Options for the threejs layer.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        position\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier for this layer. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     LngLatLike\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LngLatLike\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Map position of this layer. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CustomLayerInterface, Map, MercatorCoordinate, LngLatLike } from 'mapbox-gl';\nimport { Camera, Matrix4, Scene, Vector3, WebGLRenderer } from 'three';\n\n/**\n * Options for the threejs layer.\n */\ninterface ThreeJsLayerOptions {\n  /** Identifier for this layer. */\n  id: string;\n  /** Map position of this layer. */\n  position?: LngLatLike;\n}\n\n/**\n * A mapbox custom layer for adding threejs scenes to a map.\n */\nexport class ThreeJsLayer implements CustomLayerInterface {\n  /** Identifier for this layer. */\n  readonly id: string;\n  /** Custom layer type. */\n  readonly type = 'custom';\n  /** 3D rendering */\n  readonly renderingMode = '3d';\n  /** Mapbox map instance on which the layer is attached. */\n  map?: Map;\n\n  /** The threejs scene on which objects can be added. */\n  readonly scene = new Scene();\n  /** The threejs camera for this layer. */\n  readonly camera = new Camera();\n  /** The unit scale for converting between scene values and map values. */\n  unitScale?: number;\n  /** The renderer used for drawing the scene. */\n  private renderer!: WebGLRenderer;\n  /** Transformation matrix for correct camera views. */\n  private transformMatrix!: Matrix4;\n\n  /**\n   * Creates an instance of ThreeJsLayer.\n   *\n   * @param options The layer options.\n   */\n  constructor(readonly options: ThreeJsLayerOptions) {\n    this.id = options.id;\n  }\n\n  /**\n   * Adds this layer to a map. Automatically called by mapbox.\n   *\n   * @param map The map.\n   * @param gl The rendering context.\n   */\n  onAdd(map: Map, gl: WebGLRenderingContext): void {\n    this.map = map;\n    this.renderer = new WebGLRenderer({\n      canvas: map.getCanvas(),\n      context: gl,\n      antialias: true\n    });\n    this.renderer.autoClear = false;\n\n    // Create the transform matrix\n    const position = this.options.position || map.getCenter();\n    const coordinates = MercatorCoordinate.fromLngLat(position);\n    const { x, y, z } = coordinates;\n    const scale = this.unitScale = coordinates.meterInMercatorCoordinateUnits();\n    this.transformMatrix = new Matrix4().makeTranslation(x, y, z)\n      .scale(new Vector3(scale, -scale, scale));\n  }\n\n  /**\n   * Cleans up the resources used be this layer. Automatically called by mapbox.\n   *\n   * @param _map The map.\n   * @param _gl The rendering context.\n   */\n  onRemove(_map: Map, _gl: WebGLRenderingContext): void {\n    this.scene.dispose();\n    this.renderer.dispose();\n  }\n\n  /**\n   * Renders the threejs scene onto the map. Automatically called by mapbox.\n   *\n   * @param _gl The rendering context.\n   * @param matrixElements The current projection matrix.\n   */\n  render(_gl: WebGLRenderingContext, matrixElements: number[]): void {\n    const matrix = new Matrix4().fromArray(matrixElements)\n      .multiply(this.transformMatrix);\n\n    this.camera.projectionMatrix = matrix;\n    this.renderer.state.reset();\n    this.renderer.render(this.scene, this.camera);\n    this.map.triggerRepaint();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueCell.html":{"url":"interfaces/TissueCell.html","title":"interface - TissueCell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TissueCell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/database/database.models.ts\n        \n\n            \n                Description\n            \n            \n                A tissue cell that was extracted/discovered from a tissue slice\n\n            \n\n            \n                Extends\n            \n            \n                        TissueOverlay\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cellType\n                                \n                                \n                                        slice\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cellType\n                                    \n                                \n                                \n                                    \n                                        cellType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of cell discovered\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice\n                                    \n                                \n                                \n                                    \n                                        slice:         TissueSlice\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueSlice\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tissue slice from which an image was extracted/discovered\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Annotated {\n  /**\n   * A unique identifier for this item.\n   */\n  id: string;\n\n  /**\n   * Additional data to display in popovers, etc.\n   */\n  metadata: { [label: string]: string };\n}\n\n/**\n * A person who has donated tissues\n */\nexport interface Patient extends Annotated {\n  /**\n   * The organization that excised the donor's tissue\n   */\n  provider: 'TMC-Vanderbilt' | 'TMC-UCSD' | 'TMC-Stanford' | 'TMC-Florida' | 'TMC-CalTech' | string;\n\n  /**\n   * Age of the donor (in years) at the time of death\n   */\n  age: number;\n\n  /**\n   * Gender of the patient\n   */\n  gender: 'male' | 'female' | 'undefined';\n\n  /**\n   * Anatomical Locations that were excised from the donor. Use either common labels or\n   * the corresponding UBERON or HuBMAP id (UBERON_XXXX or HUBMAP_YYYY).\n   */\n  anatomicalLocations: string[];\n\n  // Internal fields\n  /**\n   * Identifiers of containing ontology nodes and their parent chains.\n   * Used to speed up inclusion checks.\n   */\n  ontologyNodeIds: string[];\n}\n\n/**\n * A tissue sample excised from a donor\n */\nexport interface TissueSample extends Annotated {\n  /**\n   * The patient from whom the tissue was excised\n   */\n  patient: Patient;\n\n  /**\n   * An URL to the svg overlay\n   */\n  overlayUrl: string;\n}\n\n/**\n * A slice of a tissue sample\n */\nexport interface TissueSlice extends Annotated {\n  /**\n   * The tissue sample from which a slice was extracted\n   */\n  sample: TissueSample;\n}\n\n/**\n * An image of a tissue slice\n */\nexport interface TissueImage extends Annotated {\n  /**\n   * The tissue slice from which an image was extracted\n   */\n  slice: TissueSlice;\n\n  /**\n   * The technology used to extract the image\n   */\n  technology: 'IHC' | 'PAS' | 'IMS' | 'MxIF' | 'AF' | string;\n\n  /**\n   * A URL to download the source image\n   */\n  sourceUrl: string;\n\n  /**\n   * A URL to a small-sized version of the image. Should be a .png, .jpg, or .gif.\n   */\n  thumbnailUrl: string;\n\n  /**\n   * Additional data to display in popovers, etc. for the thumbnail\n   */\n  thumbnailMetadata: { [label: string]: string };\n\n  /**\n   * A URL to a tiled version of the image\n   */\n  tileUrl: string;\n\n  /**\n   * The type of tiles at the URL\n   */\n  tileType: 'deep-zoom' | 'google-maps' | string;\n\n  /**\n   * The number of pixels per meter for the image\n   */\n  pixelsPerMeter: number;\n}\n\n/**\n * An overlay that can be placed atop a TissueImage\n */\nexport interface TissueOverlay extends Annotated {\n  /**\n   * The tissue image this overlay can be placed atop\n   */\n  image: TissueImage;\n\n  /**\n   * The label for the overlay.\n   */\n  label: string;\n\n  /**\n   * Anatomical location for the overlay.\n   */\n  anatomicalLocations: string[];\n\n\n  /**\n   * An URL for the SVG overlay.\n   */\n  overlayUrl: string;\n\n}\n\n/**\n * A tissue cell that was extracted/discovered from a tissue slice\n */\nexport interface TissueCell extends TissueOverlay {\n  /**\n   * The tissue slice from which an image was extracted/discovered\n   */\n  slice: TissueSlice;\n\n  /**\n   * The type of cell discovered\n   */\n  cellType: string;\n}\n\n/**\n * A local database of patients, samples, slices, images, etc.\n *\n * NOTE: A remote database will be the norm, so do not reference this\n * unless you are working with the local database implementation directly.\n */\nexport interface LocalDatabase {\n  /** Patients/donors in the database */\n  patients: Patient[];\n  /** Tissue samples in the database */\n  samples: TissueSample[];\n  /** Tissue slices in the database */\n  slices: TissueSlice[];\n  /** Tissue images in the database */\n  images: TissueImage[];\n  /** Tissue image overlays in the database */\n  overlays: TissueOverlay[];\n  /** Tissue cells in the database */\n  cells: TissueCell[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TissueComponent.html":{"url":"components/TissueComponent.html","title":"component - TissueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TissueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/tissue/tissue.component.ts\n\n\n    \n        Description\n    \n    \n        Component for viewing an individual tissue image\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tissue\n            \n\n            \n                styleUrls\n                ./tissue.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tissue.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadata$\n                            \n                            \n                                organName$\n                            \n                            \n                                    Private\n                                overlayActivationSubscription\n                            \n                            \n                                overlayEl\n                            \n                            \n                                overlayHeight\n                            \n                            \n                                overlayViewBox\n                            \n                            \n                                    Private\n                                overlayVisibility\n                            \n                            \n                                overlayWidth\n                            \n                            \n                                scalebar\n                            \n                            \n                                    Private\n                                tileSourceSubscription\n                            \n                            \n                                tissueOverlay$\n                            \n                            \n                                    Private\n                                tissuePixelsPerMeterSubscription\n                            \n                            \n                                viewer\n                            \n                            \n                                viewerEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayState\n                            \n                            \n                                    Private\n                                initializeViewer\n                            \n                            \n                                isVisible\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setOverlaySize\n                            \n                            \n                                    Private\n                                setScaleBar\n                            \n                            \n                                setVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: TissueDataService, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/tissue/tissue.component.ts:100\n                            \n                        \n\n                \n                    \n                            Creates an instance of tissue component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        TissueDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to fetch the tissue information.\n\n                                                        \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to interact with Open Seadragon's html elements.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayState\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayState(cond: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/tissue/tissue.component.ts:151\n                \n            \n\n\n            \n                \n                    Utility function for setting the display attribute on an element.\nReturns none when the provided condition is falsy.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cond\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The condition on which to display/hide an element.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"none\" | undefined\n\n                    \n                    \n                        none if cond is falsy else undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeViewer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeViewer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/tissue/tissue.component.ts:194\n                \n            \n\n\n            \n                \n                    Initializes the Open Seadragon Viewer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible(overlay: TissueOverlay)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/tissue/tissue.component.ts:161\n                \n            \n\n\n            \n                \n                    Determines whether an overlay is visible.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    overlay\n                                    \n                                                TissueOverlay\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The overlay to test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the visibility is Visible or AlwaysVisible, else false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/tissue/tissue.component.ts:121\n                \n            \n\n\n            \n                \n                    Angular's AfterViewInit hook.\nInitializes the Open Seadragon viewer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/tissue/tissue.component.ts:137\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nDestroys the Open Seadragon viewer and cleans up subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setOverlaySize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOverlaySize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/tissue/tissue.component.ts:221\n                \n            \n\n\n            \n                \n                    Sets the size and view box on the top svg overlay element.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setScaleBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setScaleBar(pixelsPerMeter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/tissue/tissue.component.ts:237\n                \n            \n\n\n            \n                \n                    Sets instance of scalebar pluging of OpenSeaDragon\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pixelsPerMeter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(overlay: TissueOverlay, visibility: \"on\" | \"off\" | \"toggle\", always?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/tissue/tissue.component.ts:173\n                \n            \n\n\n            \n                \n                    Sets, unsets, or toggles the visibility for an overlay.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    overlay\n                                    \n                                                TissueOverlay\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The overlay on which to set the visibility.\n\n                                    \n                                \n                                \n                                    visibility\n                                    \n                                            \"on\" | \"off\" | \"toggle\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether to set, unset, or toggle the visibility.\n\n                                    \n                                \n                                \n                                    always\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        If present the always visible flag will be updated instead of the regular visibility flag.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metadata$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.dataService.getMetadata().pipe(map(data => [data]))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:49\n                            \n                        \n\n                \n                    \n                        Observable emitting the metadata for the current tissue.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organName$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.dataService.getOrganName().pipe(map(capitalize))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:44\n                            \n                        \n\n                \n                    \n                        Observable emitting the name of the organ for the current tissue.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayActivationSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            overlayEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('overlayEl', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:39\n                            \n                        \n\n                \n                    \n                        Top svg element of the overlays. Will be moved into Open Seadragon's view.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            overlayHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:75\n                            \n                        \n\n                \n                    \n                        Overlay height in viewport coordinates (0 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            overlayViewBox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0 0 0 0'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:80\n                            \n                        \n\n                \n                    \n                        Overlay view box in original image coordinates.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new WeakMap()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:85\n                            \n                        \n\n                \n                    \n                        Mapping containing the current visibility state for each overlay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            overlayWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:70\n                            \n                        \n\n                \n                    \n                        Tissue metadata\nOverlay width in viewport coordinates (0 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scalebar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:65\n                            \n                        \n\n                \n                    \n                        Scalebar of tissue viewer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tileSourceSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:90\n                            \n                        \n\n                \n                    \n                        Subscription for the tile source url.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tissueOverlay$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.dataService.getTissueOverlays().pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:54\n                            \n                        \n\n                \n                    \n                        Observable emitting the overlays for the current tissue.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tissuePixelsPerMeterSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:95\n                            \n                        \n\n                \n                    \n                        Metadata subscription of tissue component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:60\n                            \n                        \n\n                \n                    \n                        The Open Seadragon Viewer instance.\nRefer to https://openseadragon.github.io/ for documentation.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewerEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('viewerEl', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/tissue/tissue.component.ts:34\n                            \n                        \n\n                \n                    \n                        Element on to which Open Seadragon is mounted.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import 'svg-overlay';\n\nimport { AfterViewInit, Component, ElementRef, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { capitalize, get } from 'lodash';\nimport { Viewer } from 'openseadragon';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\n\nimport { Scalebar } from '../../external-libraries/openseadragon-scalebar';\nimport { TissueDataService } from '../../shared/services/tissue-data/tissue-data.service';\nimport { TissueOverlay } from '../../shared/state/database/database.models';\n\n/**\n * Bit flags indicating the current visibility status of an overlay.\n */\nconst enum OverlayVisibility {\n  Hidden = 0,\n  Visible = 1,\n  AlwaysVisible = 2\n}\n\n/**\n * Component for viewing an individual tissue image\n */\n@Component({\n  selector: 'ccf-tissue',\n  templateUrl: './tissue.component.html',\n  styleUrls: ['./tissue.component.scss']\n})\nexport class TissueComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Element on to which Open Seadragon is mounted.\n   */\n  @ViewChild('viewerEl', { static: true }) viewerEl: ElementRef;\n\n  /**\n   * Top svg element of the overlays. Will be moved into Open Seadragon's view.\n   */\n  @ViewChild('overlayEl', { static: true }) overlayEl: ElementRef;\n\n  /**\n   * Observable emitting the name of the organ for the current tissue.\n   */\n  organName$ = this.dataService.getOrganName().pipe(map(capitalize));\n\n  /**\n   * Observable emitting the metadata for the current tissue.\n   */\n  metadata$ = this.dataService.getMetadata().pipe(map(data => [data]));\n\n  /**\n   * Observable emitting the overlays for the current tissue.\n   */\n  tissueOverlay$: Observable = this.dataService.getTissueOverlays().pipe(share());\n\n  /**\n   * The Open Seadragon Viewer instance.\n   * Refer to https://openseadragon.github.io/ for documentation.\n   */\n  viewer: any;\n\n  /**\n   * Scalebar of tissue viewer\n   */\n  scalebar: any;\n  /**\n   * Tissue metadata\n   * Overlay width in viewport coordinates (0 ();\n\n  /**\n   * Subscription for the tile source url.\n   */\n  private tileSourceSubscription: Subscription;\n\n  /**\n   * Metadata subscription of tissue component\n   */\n  private tissuePixelsPerMeterSubscription: Subscription;\n\n  /*\n   * Subscription for listening to overlay activations.\n   */\n  private overlayActivationSubscription: Subscription;\n\n  /**\n   * Creates an instance of tissue component.\n   *\n   * @param dataService The service used to fetch the tissue information.\n   * @param renderer Used to interact with Open Seadragon's html elements.\n   */\n  constructor(\n    private dataService: TissueDataService,\n    private renderer: Renderer2\n  ) {\n    this.overlayActivationSubscription = this.dataService.activatedOverlay$.subscribe(overlay => {\n      this.setVisibility(overlay, 'on', 'always');\n    });\n  }\n\n  /**\n   * Angular's AfterViewInit hook.\n   * Initializes the Open Seadragon viewer.\n   */\n  ngAfterViewInit() {\n    // This hook doesn't like changes! Do the work at a later cycle.\n    setTimeout(() => {\n      this.initializeViewer();\n      this.tissuePixelsPerMeterSubscription = this.dataService.getTissuePixelsPerMeter()\n        .subscribe(pixelsPerMeter => this.setScaleBar(pixelsPerMeter));\n      this.tileSourceSubscription = this.dataService\n        .getTissueSourcePath()\n        .subscribe(path => this.viewer.open(path));\n    });\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Destroys the Open Seadragon viewer and cleans up subscriptions.\n   */\n  ngOnDestroy() {\n    this.tileSourceSubscription.unsubscribe();\n    this.tissuePixelsPerMeterSubscription.unsubscribe();\n    this.overlayActivationSubscription.unsubscribe();\n    this.viewer.destroy();\n  }\n\n  /**\n   * Utility function for setting the `display` attribute on an element.\n   * Returns `none` when the provided condition is falsy.\n   *\n   * @param cond The condition on which to display/hide an element.\n   * @returns `none` if `cond` is falsy else `undefined`\n   */\n  displayState(cond: any): 'none' | undefined {\n    return !!cond ? undefined : 'none';\n  }\n\n  /**\n   * Determines whether an overlay is visible.\n   *\n   * @param overlay The overlay to test.\n   * @returns `true` if the visibility is `Visible` or `AlwaysVisible`, else `false`.\n   */\n  isVisible(overlay: TissueOverlay): boolean {\n    const visibility = this.overlayVisibility.get(overlay) || OverlayVisibility.Hidden;\n    return visibility !== OverlayVisibility.Hidden;\n  }\n\n  /**\n   * Sets, unsets, or toggles the visibility for an overlay.\n   *\n   * @param overlay The overlay on which to set the visibility.\n   * @param visibility Whether to set, unset, or toggle the visibility.\n   * @param [always] If present the always visible flag will be updated instead of the regular visibility flag.\n   */\n  setVisibility(overlay: TissueOverlay, visibility: 'on' | 'off' | 'toggle', always?: 'always'): void {\n    const current = this.overlayVisibility.get(overlay) || OverlayVisibility.Hidden;\n    const bits = always ? OverlayVisibility.AlwaysVisible : OverlayVisibility.Visible;\n    let updated = current;\n\n    // tslint:disable:no-bitwise\n    if (visibility === 'on') {\n      updated |= bits;\n    } else if (visibility === 'off') {\n      updated &= ~bits;\n    } else {\n      updated ^= bits;\n    }\n    // tslint:enable:no-bitwise\n\n    this.overlayVisibility.set(overlay, updated);\n  }\n\n  /**\n   * Initializes the Open Seadragon Viewer.\n   */\n  private initializeViewer(): void {\n    const { renderer, overlayEl, viewerEl } = this;\n    // Initialize OpenSeadragon Viewer\n    const viewer = this.viewer = new Viewer({\n      element: viewerEl.nativeElement,\n      prefixUrl: 'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/images/',\n      showNavigator: true,\n      navigatorPosition: 'ABSOLUTE',\n      navigatorTop: '2.5rem',\n      navigatorLeft: '0.25rem',\n      navigatorHeight: '6rem',\n      navigatorWidth: '8rem',\n      defaultZoomLevel: 1,\n      visibilityRatio: 1\n    });\n\n    // Add tissue overlay element\n    const overlay = viewer.svgOverlay();\n    renderer.appendChild(overlay.node(), overlayEl.nativeElement);\n\n    // Setup event handling\n    viewer.addHandler('open', () => this.setOverlaySize());\n  }\n\n  /**\n   * Sets the size and view box on the top svg overlay element.\n   */\n  private setOverlaySize(): void {\n    const { viewer: { viewport, world } } = this;\n    const { x, y, width, height } = viewport.getBounds();\n    // There should only be a single image loaded\n    // There might be a better way to get this!\n    const { source: { dimensions: { x: imageWidth, y: imageHeight } } } = world.getItemAt(0);\n\n    this.overlayWidth = 2 * x + width;\n    this.overlayHeight = 2 * y + height;\n    this.overlayViewBox = `0 0 ${imageWidth} ${imageHeight}`;\n  }\n\n  /**\n   * Sets instance of scalebar pluging of OpenSeaDragon\n   * @param data metadata\n   */\n  private setScaleBar(pixelsPerMeter: number): void {\n    if (!isNaN(pixelsPerMeter)) {\n      this.scalebar = new Scalebar({\n        viewer: this.viewer,\n        minWidth: '100px',\n        stayInsideImage: true,\n        pixelsPerMeter: pixelsPerMeter,\n        color: 'yellow',\n        fontColor: 'white'\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        {{ overlay.label }}\n      \n    \n  \n\n  \n    {{ organName$ | async }}\n\n    \n      \n        \n          \n            Details\n          \n        \n\n        \n      \n    \n  \n\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./tissue.component.scss\n                \n                @import 'global/colors', 'global/mixins';\n\n.tissue.wrapper {\n  display: flex;\n  height: 100%;\n\n  .view {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    padding-right: 0.5rem;\n\n    .mount-point {\n      flex-grow: 1;\n      padding-bottom: 1rem;\n    }\n\n    .overlay-toggles .button {\n      margin: 0.25rem;\n      background: $alternative-button-background-color;\n\n      &.toggled {\n        color: $active-button-contrast-color;\n        background: $active-button-color;\n      }\n\n      ::ng-deep .mat-button-toggle-label-content {\n        line-height: 2.25rem;\n      }\n    }\n  }\n\n  .metadata {\n    width: 24%;\n    padding-left: 0.5rem;\n\n    .organ-name {\n      margin-bottom: 2rem;\n      font-size: 1.2rem;\n      font-weight: normal;\n    }\n\n    .details {\n      @include default-border(bottom);\n\n      .panel {\n        box-shadow: none;\n\n        .header {\n          border: 1px solid #e0e0e0;\n          padding: 0.5rem;\n        }\n\n        .title {\n          font-size: 0.85rem;\n          font-weight: bold;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ overlay.label }}                  {{ organName$ | async }}                                        Details                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TissueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueDataService.html":{"url":"injectables/TissueDataService.html","title":"injectable - TissueDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TissueDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/tissue-data/tissue-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable data service for individual tissue view's data\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activatedOverlay$\n                            \n                            \n                                    Private\n                                activeTissue\n                            \n                            \n                                    Private\n                                location\n                            \n                            \n                                    Private\n                                tissueOverlay$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                findMatchingOverlay\n                            \n                            \n                                getMetadata\n                            \n                            \n                                getOrganName\n                            \n                            \n                                getTissueOverlays\n                            \n                            \n                                getTissuePixelsPerMeter\n                            \n                            \n                                getTissueSourcePath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(database: LocalDatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of tissue data service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                        LocalDatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The database\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findMatchingOverlay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMatchingOverlay(location: OntologyNode, overlays: TissueOverlay[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:104\n                \n            \n\n\n            \n                \n                    Finds the overlay that matches an ontology node.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ontology node.\n\n                                    \n                                \n                                \n                                    overlays\n                                    \n                                                TissueOverlay[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The overlays.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TissueOverlay\n\n                    \n                    \n                        The matching overlay object or undefined if no match.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:85\n                \n            \n\n\n            \n                \n                    Gets the metadata for the queried tissue-id\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable for metadata for the tissue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganName\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:93\n                \n            \n\n\n            \n                \n                    Gets organ name\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        organ name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTissueOverlays\n                        \n                        \n                    \n                \n            \n            \n                \ngetTissueOverlays()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:77\n                \n            \n\n\n            \n                \n                    Gets tissue overlays\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of overlays\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTissuePixelsPerMeter\n                        \n                        \n                    \n                \n            \n            \n                \ngetTissuePixelsPerMeter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:69\n                \n            \n\n\n            \n                \n                    Gets tissue pixels per meter\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable of tissue pixels per meter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTissueSourcePath\n                        \n                        \n                    \n                \n            \n            \n                \ngetTissueSourcePath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:61\n                \n            \n\n\n            \n                \n                    Gets tissue source path\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable of tissue source path\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activatedOverlay$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : combineLatest(\n    [this.location, this.tissueOverlay$]\n  ).pipe(\n    filter(([location]) => !!location),\n    map(([location, overlays]) => this.findMatchingOverlay(location, overlays)),\n    filter(overlay => !!overlay),\n    share()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:41\n                            \n                        \n\n                \n                    \n                        Emits whenever an overlay should be activated from the current search.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeTissue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(NavigationState.activeTissue)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:22\n                            \n                        \n\n                \n                    \n                        Emits the currently active tissue image.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(SearchState.location)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:28\n                            \n                        \n\n                \n                    \n                        Emits the current ontology node location.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tissueOverlay$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.activeTissue.pipe(\n    switchMap(active => this.database.getTissueOverlays(overlay => overlay.image === active)),\n    share()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/tissue-data/tissue-data.service.ts:33\n                            \n                        \n\n                \n                    \n                        Emits overlays for the currently active tissue image.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { find, includes, map as loMap, some, toLower } from 'lodash';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, pluck, share, switchMap } from 'rxjs/operators';\n\nimport { TissueImage, TissueOverlay } from '../../state/database/database.models';\nimport { NavigationState } from '../../state/navigation/navigation.state';\nimport { OntologyNode } from '../../state/ontology/ontology.model';\nimport { SearchState } from '../../state/search/search.state';\nimport { LocalDatabaseService } from '../database/local/local-database.service';\n\n/**\n * Injectable data service for individual tissue view's data\n */\n@Injectable()\nexport class TissueDataService {\n  /**\n   * Emits the currently active tissue image.\n   */\n  @Select(NavigationState.activeTissue)\n  private activeTissue: Observable;\n\n  /**\n   * Emits the current ontology node location.\n   */\n  @Select(SearchState.location)\n  private location: Observable;\n\n  /**\n   * Emits overlays for the currently active tissue image.\n   */\n  private tissueOverlay$ = this.activeTissue.pipe(\n    switchMap(active => this.database.getTissueOverlays(overlay => overlay.image === active)),\n    share()\n  );\n\n  /**\n   * Emits whenever an overlay should be activated from the current search.\n   */\n  activatedOverlay$ = combineLatest(\n    [this.location, this.tissueOverlay$]\n  ).pipe(\n    filter(([location]) => !!location),\n    map(([location, overlays]) => this.findMatchingOverlay(location, overlays)),\n    filter(overlay => !!overlay),\n    share()\n  );\n\n  /**\n   * Creates an instance of tissue data service.\n   *\n   * @param database The database\n   */\n  constructor(private database: LocalDatabaseService) { }\n\n  /**\n   * Gets tissue source path\n   * @returns Observable of tissue source path\n   */\n  getTissueSourcePath(): Observable {\n    return this.activeTissue.pipe(pluck('tileUrl'));\n  }\n\n  /**\n   * Gets tissue pixels per meter\n   * @returns Observable of tissue pixels per meter\n   */\n  getTissuePixelsPerMeter(): Observable {\n    return this.activeTissue.pipe(pluck('pixelsPerMeter'));\n  }\n\n  /**\n   * Gets tissue overlays\n   * @returns Observable of overlays\n   */\n  getTissueOverlays(): Observable {\n    return this.tissueOverlay$;\n  }\n\n  /**\n   * Gets the metadata for the queried tissue-id\n   * @returns Observable for metadata for the tissue\n   */\n  getMetadata(): Observable {\n    return this.activeTissue.pipe(pluck('metadata'));\n  }\n\n  /**\n   * Gets organ name\n   * @returns organ name\n   */\n  getOrganName(): Observable {\n    return this.activeTissue.pipe(pluck('slice', 'sample', 'patient', 'anatomicalLocations', 0));\n  }\n\n  /**\n   * Finds the overlay that matches an ontology node.\n   *\n   * @param location The ontology node.\n   * @param overlays The overlays.\n   * @returns The matching overlay object or undefined if no match.\n   */\n  private findMatchingOverlay(location: OntologyNode, overlays: TissueOverlay[]): TissueOverlay {\n    return find(overlays, overlay => {\n      const locations = loMap(overlay.anatomicalLocations, toLower);\n      if (includes(locations, toLower(location.id))) { return true; }\n      if (includes(locations, toLower(location.label))) { return true; }\n      return some(location.synonymLabels, synonym => includes(locations, toLower(synonym)));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueImage.html":{"url":"interfaces/TissueImage.html","title":"interface - TissueImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TissueImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/database/database.models.ts\n        \n\n            \n                Description\n            \n            \n                An image of a tissue slice\n\n            \n\n            \n                Extends\n            \n            \n                        Annotated\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pixelsPerMeter\n                                \n                                \n                                        slice\n                                \n                                \n                                        sourceUrl\n                                \n                                \n                                        technology\n                                \n                                \n                                        thumbnailMetadata\n                                \n                                \n                                        thumbnailUrl\n                                \n                                \n                                        tileType\n                                \n                                \n                                        tileUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pixelsPerMeter\n                                    \n                                \n                                \n                                    \n                                        pixelsPerMeter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of pixels per meter for the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice\n                                    \n                                \n                                \n                                    \n                                        slice:         TissueSlice\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueSlice\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tissue slice from which an image was extracted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceUrl\n                                    \n                                \n                                \n                                    \n                                        sourceUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A URL to download the source image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technology\n                                    \n                                \n                                \n                                    \n                                        technology:     \"IHC\" | \"PAS\" | \"IMS\" | \"MxIF\" | \"AF\" | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"IHC\" | \"PAS\" | \"IMS\" | \"MxIF\" | \"AF\" | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The technology used to extract the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnailMetadata\n                                    \n                                \n                                \n                                    \n                                        thumbnailMetadata:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Additional data to display in popovers, etc. for the thumbnail\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnailUrl\n                                    \n                                \n                                \n                                    \n                                        thumbnailUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A URL to a small-sized version of the image. Should be a .png, .jpg, or .gif.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tileType\n                                    \n                                \n                                \n                                    \n                                        tileType:     \"deep-zoom\" | \"google-maps\" | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"deep-zoom\" | \"google-maps\" | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of tiles at the URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tileUrl\n                                    \n                                \n                                \n                                    \n                                        tileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A URL to a tiled version of the image\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Annotated {\n  /**\n   * A unique identifier for this item.\n   */\n  id: string;\n\n  /**\n   * Additional data to display in popovers, etc.\n   */\n  metadata: { [label: string]: string };\n}\n\n/**\n * A person who has donated tissues\n */\nexport interface Patient extends Annotated {\n  /**\n   * The organization that excised the donor's tissue\n   */\n  provider: 'TMC-Vanderbilt' | 'TMC-UCSD' | 'TMC-Stanford' | 'TMC-Florida' | 'TMC-CalTech' | string;\n\n  /**\n   * Age of the donor (in years) at the time of death\n   */\n  age: number;\n\n  /**\n   * Gender of the patient\n   */\n  gender: 'male' | 'female' | 'undefined';\n\n  /**\n   * Anatomical Locations that were excised from the donor. Use either common labels or\n   * the corresponding UBERON or HuBMAP id (UBERON_XXXX or HUBMAP_YYYY).\n   */\n  anatomicalLocations: string[];\n\n  // Internal fields\n  /**\n   * Identifiers of containing ontology nodes and their parent chains.\n   * Used to speed up inclusion checks.\n   */\n  ontologyNodeIds: string[];\n}\n\n/**\n * A tissue sample excised from a donor\n */\nexport interface TissueSample extends Annotated {\n  /**\n   * The patient from whom the tissue was excised\n   */\n  patient: Patient;\n\n  /**\n   * An URL to the svg overlay\n   */\n  overlayUrl: string;\n}\n\n/**\n * A slice of a tissue sample\n */\nexport interface TissueSlice extends Annotated {\n  /**\n   * The tissue sample from which a slice was extracted\n   */\n  sample: TissueSample;\n}\n\n/**\n * An image of a tissue slice\n */\nexport interface TissueImage extends Annotated {\n  /**\n   * The tissue slice from which an image was extracted\n   */\n  slice: TissueSlice;\n\n  /**\n   * The technology used to extract the image\n   */\n  technology: 'IHC' | 'PAS' | 'IMS' | 'MxIF' | 'AF' | string;\n\n  /**\n   * A URL to download the source image\n   */\n  sourceUrl: string;\n\n  /**\n   * A URL to a small-sized version of the image. Should be a .png, .jpg, or .gif.\n   */\n  thumbnailUrl: string;\n\n  /**\n   * Additional data to display in popovers, etc. for the thumbnail\n   */\n  thumbnailMetadata: { [label: string]: string };\n\n  /**\n   * A URL to a tiled version of the image\n   */\n  tileUrl: string;\n\n  /**\n   * The type of tiles at the URL\n   */\n  tileType: 'deep-zoom' | 'google-maps' | string;\n\n  /**\n   * The number of pixels per meter for the image\n   */\n  pixelsPerMeter: number;\n}\n\n/**\n * An overlay that can be placed atop a TissueImage\n */\nexport interface TissueOverlay extends Annotated {\n  /**\n   * The tissue image this overlay can be placed atop\n   */\n  image: TissueImage;\n\n  /**\n   * The label for the overlay.\n   */\n  label: string;\n\n  /**\n   * Anatomical location for the overlay.\n   */\n  anatomicalLocations: string[];\n\n\n  /**\n   * An URL for the SVG overlay.\n   */\n  overlayUrl: string;\n\n}\n\n/**\n * A tissue cell that was extracted/discovered from a tissue slice\n */\nexport interface TissueCell extends TissueOverlay {\n  /**\n   * The tissue slice from which an image was extracted/discovered\n   */\n  slice: TissueSlice;\n\n  /**\n   * The type of cell discovered\n   */\n  cellType: string;\n}\n\n/**\n * A local database of patients, samples, slices, images, etc.\n *\n * NOTE: A remote database will be the norm, so do not reference this\n * unless you are working with the local database implementation directly.\n */\nexport interface LocalDatabase {\n  /** Patients/donors in the database */\n  patients: Patient[];\n  /** Tissue samples in the database */\n  samples: TissueSample[];\n  /** Tissue slices in the database */\n  slices: TissueSlice[];\n  /** Tissue images in the database */\n  images: TissueImage[];\n  /** Tissue image overlays in the database */\n  overlays: TissueOverlay[];\n  /** Tissue cells in the database */\n  cells: TissueCell[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissueModule.html":{"url":"modules/TissueModule.html","title":"module - TissueModule","body":"\n                   \n\n\n\n\n    Modules\n    TissueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TissueModule\n\n\n\ncluster_TissueModule_declarations\n\n\n\ncluster_TissueModule_imports\n\n\n\ncluster_TissueModule_providers\n\n\n\n\nTissueComponent\n\nTissueComponent\n\n\n\nTissueModule\n\nTissueModule\n\nTissueModule -->\n\nTissueComponent->TissueModule\n\n\n\n\n\nMetadataModule\n\nMetadataModule\n\nTissueModule -->\n\nMetadataModule->TissueModule\n\n\n\n\n\nTissueRoutingModule\n\nTissueRoutingModule\n\nTissueModule -->\n\nTissueRoutingModule->TissueModule\n\n\n\n\n\nTissueDataService\n\nTissueDataService\n\nTissueModule -->\n\nTissueDataService->TissueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/tissue/tissue.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TissueComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TissueDataService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MetadataModule\n                        \n                        \n                            TissueRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MetadataModule } from 'src/app/components/metadata/metadata.module';\n\nimport { TissueDataService } from '../../shared/services/tissue-data/tissue-data.service';\nimport { TissueRoutingModule } from './tissue-routing.module';\nimport { TissueComponent } from './tissue.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n\n    MetadataModule,\n    TissueRoutingModule,\n  ],\n  declarations: [\n    TissueComponent\n  ],\n  providers: [ TissueDataService ]\n})\nexport class TissueModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueOverlay.html":{"url":"interfaces/TissueOverlay.html","title":"interface - TissueOverlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TissueOverlay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/database/database.models.ts\n        \n\n            \n                Description\n            \n            \n                An overlay that can be placed atop a TissueImage\n\n            \n\n            \n                Extends\n            \n            \n                        Annotated\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        anatomicalLocations\n                                \n                                \n                                        image\n                                \n                                \n                                        label\n                                \n                                \n                                        overlayUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalLocations\n                                    \n                                \n                                \n                                    \n                                        anatomicalLocations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Anatomical location for the overlay.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         TissueImage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueImage\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tissue image this overlay can be placed atop\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label for the overlay.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayUrl\n                                    \n                                \n                                \n                                    \n                                        overlayUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An URL for the SVG overlay.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Annotated {\n  /**\n   * A unique identifier for this item.\n   */\n  id: string;\n\n  /**\n   * Additional data to display in popovers, etc.\n   */\n  metadata: { [label: string]: string };\n}\n\n/**\n * A person who has donated tissues\n */\nexport interface Patient extends Annotated {\n  /**\n   * The organization that excised the donor's tissue\n   */\n  provider: 'TMC-Vanderbilt' | 'TMC-UCSD' | 'TMC-Stanford' | 'TMC-Florida' | 'TMC-CalTech' | string;\n\n  /**\n   * Age of the donor (in years) at the time of death\n   */\n  age: number;\n\n  /**\n   * Gender of the patient\n   */\n  gender: 'male' | 'female' | 'undefined';\n\n  /**\n   * Anatomical Locations that were excised from the donor. Use either common labels or\n   * the corresponding UBERON or HuBMAP id (UBERON_XXXX or HUBMAP_YYYY).\n   */\n  anatomicalLocations: string[];\n\n  // Internal fields\n  /**\n   * Identifiers of containing ontology nodes and their parent chains.\n   * Used to speed up inclusion checks.\n   */\n  ontologyNodeIds: string[];\n}\n\n/**\n * A tissue sample excised from a donor\n */\nexport interface TissueSample extends Annotated {\n  /**\n   * The patient from whom the tissue was excised\n   */\n  patient: Patient;\n\n  /**\n   * An URL to the svg overlay\n   */\n  overlayUrl: string;\n}\n\n/**\n * A slice of a tissue sample\n */\nexport interface TissueSlice extends Annotated {\n  /**\n   * The tissue sample from which a slice was extracted\n   */\n  sample: TissueSample;\n}\n\n/**\n * An image of a tissue slice\n */\nexport interface TissueImage extends Annotated {\n  /**\n   * The tissue slice from which an image was extracted\n   */\n  slice: TissueSlice;\n\n  /**\n   * The technology used to extract the image\n   */\n  technology: 'IHC' | 'PAS' | 'IMS' | 'MxIF' | 'AF' | string;\n\n  /**\n   * A URL to download the source image\n   */\n  sourceUrl: string;\n\n  /**\n   * A URL to a small-sized version of the image. Should be a .png, .jpg, or .gif.\n   */\n  thumbnailUrl: string;\n\n  /**\n   * Additional data to display in popovers, etc. for the thumbnail\n   */\n  thumbnailMetadata: { [label: string]: string };\n\n  /**\n   * A URL to a tiled version of the image\n   */\n  tileUrl: string;\n\n  /**\n   * The type of tiles at the URL\n   */\n  tileType: 'deep-zoom' | 'google-maps' | string;\n\n  /**\n   * The number of pixels per meter for the image\n   */\n  pixelsPerMeter: number;\n}\n\n/**\n * An overlay that can be placed atop a TissueImage\n */\nexport interface TissueOverlay extends Annotated {\n  /**\n   * The tissue image this overlay can be placed atop\n   */\n  image: TissueImage;\n\n  /**\n   * The label for the overlay.\n   */\n  label: string;\n\n  /**\n   * Anatomical location for the overlay.\n   */\n  anatomicalLocations: string[];\n\n\n  /**\n   * An URL for the SVG overlay.\n   */\n  overlayUrl: string;\n\n}\n\n/**\n * A tissue cell that was extracted/discovered from a tissue slice\n */\nexport interface TissueCell extends TissueOverlay {\n  /**\n   * The tissue slice from which an image was extracted/discovered\n   */\n  slice: TissueSlice;\n\n  /**\n   * The type of cell discovered\n   */\n  cellType: string;\n}\n\n/**\n * A local database of patients, samples, slices, images, etc.\n *\n * NOTE: A remote database will be the norm, so do not reference this\n * unless you are working with the local database implementation directly.\n */\nexport interface LocalDatabase {\n  /** Patients/donors in the database */\n  patients: Patient[];\n  /** Tissue samples in the database */\n  samples: TissueSample[];\n  /** Tissue slices in the database */\n  slices: TissueSlice[];\n  /** Tissue images in the database */\n  images: TissueImage[];\n  /** Tissue image overlays in the database */\n  overlays: TissueOverlay[];\n  /** Tissue cells in the database */\n  cells: TissueCell[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TissueResolverService.html":{"url":"guards/TissueResolverService.html","title":"guard - TissueResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TissueResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/resolvers/tissue-resolver/tissue-resolver.service.ts\n            \n\n                \n                Description\n                \n                \n                    Service for fetching the TissueImage object associated with a tissue route.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchTissue\n                            \n                            \n                                    Private\n                                findTissue\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(database: LocalDatabaseService, navigator: NavigationService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/resolvers/tissue-resolver/tissue-resolver.service.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of tissue resolver service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                        LocalDatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The database from which data is fetched.\n\n                                                        \n                                                \n                                                \n                                                        navigator\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to navigate to the home view in case of errors.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The store containing the tissues.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchTissue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchTissue(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/resolvers/tissue-resolver/tissue-resolver.service.ts:66\n                \n            \n\n\n            \n                \n                    Fetches a matching tissue from the database.\nIf no matching tissue is found or an error occurs this will navigate to the home view.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The identifier of the tissue object to fetch.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable yielding a single matching tissue if found.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findTissue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findTissue(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/resolvers/tissue-resolver/tissue-resolver.service.ts:51\n                \n            \n\n\n            \n                \n                    Searches the navigation state for a matching tissue object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The identifier of the tissue object to search for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TissueImage\n\n                    \n                    \n                        The found tissue object or undefined.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/resolvers/tissue-resolver/tissue-resolver.service.ts:40\n                \n            \n\n\n            \n                \n                    Attempt to fetch the TissueImage object with an identifier specified by the route.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The tissue route that will be activated on successful data fetching.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TissueImage | Observable\n\n                    \n                    \n                        resolve Either the in memory object or an observable returning the database query.\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { find } from 'lodash';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError, filter, map, take, throwIfEmpty } from 'rxjs/operators';\n\nimport { LocalDatabaseService } from '../../services/database/local/local-database.service';\nimport { NavigationService } from '../../services/navigation/navigation.service';\nimport { TissueImage } from '../../state/database/database.models';\nimport { NavigationStateModel } from '../../state/navigation/navigation.model';\nimport { NavigationState } from '../../state/navigation/navigation.state';\n\n/**\n * Service for fetching the `TissueImage` object associated with a tissue route.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TissueResolverService implements Resolve {\n  /**\n   * Creates an instance of tissue resolver service.\n   *\n   * @param database The database from which data is fetched.\n   * @param navigator Service used to navigate to the home view in case of errors.\n   * @param store The store containing the tissues.\n   */\n  constructor(\n    private database: LocalDatabaseService,\n    private navigator: NavigationService,\n    private store: Store\n  ) { }\n\n  /**\n   * Attempt to fetch the `TissueImage` object with an identifier specified by the route.\n   *\n   * @param route The tissue route that will be activated on successful data fetching.\n   * @returns resolve Either the in memory object or an observable returning the database query.\n   */\n  resolve(route: ActivatedRouteSnapshot): TissueImage | Observable {\n    const { tissueId } = route.params;\n    return this.findTissue(tissueId) || this.fetchTissue(tissueId);\n  }\n\n  /**\n   * Searches the navigation state for a matching tissue object.\n   *\n   * @param id The identifier of the tissue object to search for.\n   * @returns The found tissue object or undefined.\n   */\n  private findTissue(id: string): TissueImage {\n    const snapshot: NavigationStateModel = this.store.selectSnapshot(NavigationState);\n    if (snapshot.activeTissue && snapshot.activeTissue.id === id) {\n      return snapshot.activeTissue;\n    }\n    return find(snapshot.tissues, ['id', id]);\n  }\n\n  /**\n   * Fetches a matching tissue from the database.\n   * If no matching tissue is found or an error occurs this will navigate to the home view.\n   *\n   * @param id The identifier of the tissue object to fetch.\n   * @returns An observable yielding a single matching tissue if found.\n   */\n  private fetchTissue(id: string): Observable {\n    return this.database.getTissueImages(tissue => tissue.id === id).pipe(\n      take(1),\n      filter(tissues => tissues.length > 0),\n      throwIfEmpty(() => new Error(`No tissue for identifier ${id}`)),\n      map(([tissue]) => tissue),\n      catchError(error => {\n        // TODO: Log error\n        this.navigator.navigateToHome();\n        return EMPTY;\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissueRoutingModule.html":{"url":"modules/TissueRoutingModule.html","title":"module - TissueRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TissueRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/tissue/tissue-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TissueComponent } from './tissue.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TissueComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TissueRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueSample.html":{"url":"interfaces/TissueSample.html","title":"interface - TissueSample","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TissueSample\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/database/database.models.ts\n        \n\n            \n                Description\n            \n            \n                A tissue sample excised from a donor\n\n            \n\n            \n                Extends\n            \n            \n                        Annotated\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        overlayUrl\n                                \n                                \n                                        patient\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overlayUrl\n                                    \n                                \n                                \n                                    \n                                        overlayUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An URL to the svg overlay\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patient\n                                    \n                                \n                                \n                                    \n                                        patient:         Patient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Patient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The patient from whom the tissue was excised\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Annotated {\n  /**\n   * A unique identifier for this item.\n   */\n  id: string;\n\n  /**\n   * Additional data to display in popovers, etc.\n   */\n  metadata: { [label: string]: string };\n}\n\n/**\n * A person who has donated tissues\n */\nexport interface Patient extends Annotated {\n  /**\n   * The organization that excised the donor's tissue\n   */\n  provider: 'TMC-Vanderbilt' | 'TMC-UCSD' | 'TMC-Stanford' | 'TMC-Florida' | 'TMC-CalTech' | string;\n\n  /**\n   * Age of the donor (in years) at the time of death\n   */\n  age: number;\n\n  /**\n   * Gender of the patient\n   */\n  gender: 'male' | 'female' | 'undefined';\n\n  /**\n   * Anatomical Locations that were excised from the donor. Use either common labels or\n   * the corresponding UBERON or HuBMAP id (UBERON_XXXX or HUBMAP_YYYY).\n   */\n  anatomicalLocations: string[];\n\n  // Internal fields\n  /**\n   * Identifiers of containing ontology nodes and their parent chains.\n   * Used to speed up inclusion checks.\n   */\n  ontologyNodeIds: string[];\n}\n\n/**\n * A tissue sample excised from a donor\n */\nexport interface TissueSample extends Annotated {\n  /**\n   * The patient from whom the tissue was excised\n   */\n  patient: Patient;\n\n  /**\n   * An URL to the svg overlay\n   */\n  overlayUrl: string;\n}\n\n/**\n * A slice of a tissue sample\n */\nexport interface TissueSlice extends Annotated {\n  /**\n   * The tissue sample from which a slice was extracted\n   */\n  sample: TissueSample;\n}\n\n/**\n * An image of a tissue slice\n */\nexport interface TissueImage extends Annotated {\n  /**\n   * The tissue slice from which an image was extracted\n   */\n  slice: TissueSlice;\n\n  /**\n   * The technology used to extract the image\n   */\n  technology: 'IHC' | 'PAS' | 'IMS' | 'MxIF' | 'AF' | string;\n\n  /**\n   * A URL to download the source image\n   */\n  sourceUrl: string;\n\n  /**\n   * A URL to a small-sized version of the image. Should be a .png, .jpg, or .gif.\n   */\n  thumbnailUrl: string;\n\n  /**\n   * Additional data to display in popovers, etc. for the thumbnail\n   */\n  thumbnailMetadata: { [label: string]: string };\n\n  /**\n   * A URL to a tiled version of the image\n   */\n  tileUrl: string;\n\n  /**\n   * The type of tiles at the URL\n   */\n  tileType: 'deep-zoom' | 'google-maps' | string;\n\n  /**\n   * The number of pixels per meter for the image\n   */\n  pixelsPerMeter: number;\n}\n\n/**\n * An overlay that can be placed atop a TissueImage\n */\nexport interface TissueOverlay extends Annotated {\n  /**\n   * The tissue image this overlay can be placed atop\n   */\n  image: TissueImage;\n\n  /**\n   * The label for the overlay.\n   */\n  label: string;\n\n  /**\n   * Anatomical location for the overlay.\n   */\n  anatomicalLocations: string[];\n\n\n  /**\n   * An URL for the SVG overlay.\n   */\n  overlayUrl: string;\n\n}\n\n/**\n * A tissue cell that was extracted/discovered from a tissue slice\n */\nexport interface TissueCell extends TissueOverlay {\n  /**\n   * The tissue slice from which an image was extracted/discovered\n   */\n  slice: TissueSlice;\n\n  /**\n   * The type of cell discovered\n   */\n  cellType: string;\n}\n\n/**\n * A local database of patients, samples, slices, images, etc.\n *\n * NOTE: A remote database will be the norm, so do not reference this\n * unless you are working with the local database implementation directly.\n */\nexport interface LocalDatabase {\n  /** Patients/donors in the database */\n  patients: Patient[];\n  /** Tissue samples in the database */\n  samples: TissueSample[];\n  /** Tissue slices in the database */\n  slices: TissueSlice[];\n  /** Tissue images in the database */\n  images: TissueImage[];\n  /** Tissue image overlays in the database */\n  overlays: TissueOverlay[];\n  /** Tissue cells in the database */\n  cells: TissueCell[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueSlice.html":{"url":"interfaces/TissueSlice.html","title":"interface - TissueSlice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TissueSlice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/database/database.models.ts\n        \n\n            \n                Description\n            \n            \n                A slice of a tissue sample\n\n            \n\n            \n                Extends\n            \n            \n                        Annotated\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sample\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sample\n                                    \n                                \n                                \n                                    \n                                        sample:         TissueSample\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TissueSample\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tissue sample from which a slice was extracted\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Annotated {\n  /**\n   * A unique identifier for this item.\n   */\n  id: string;\n\n  /**\n   * Additional data to display in popovers, etc.\n   */\n  metadata: { [label: string]: string };\n}\n\n/**\n * A person who has donated tissues\n */\nexport interface Patient extends Annotated {\n  /**\n   * The organization that excised the donor's tissue\n   */\n  provider: 'TMC-Vanderbilt' | 'TMC-UCSD' | 'TMC-Stanford' | 'TMC-Florida' | 'TMC-CalTech' | string;\n\n  /**\n   * Age of the donor (in years) at the time of death\n   */\n  age: number;\n\n  /**\n   * Gender of the patient\n   */\n  gender: 'male' | 'female' | 'undefined';\n\n  /**\n   * Anatomical Locations that were excised from the donor. Use either common labels or\n   * the corresponding UBERON or HuBMAP id (UBERON_XXXX or HUBMAP_YYYY).\n   */\n  anatomicalLocations: string[];\n\n  // Internal fields\n  /**\n   * Identifiers of containing ontology nodes and their parent chains.\n   * Used to speed up inclusion checks.\n   */\n  ontologyNodeIds: string[];\n}\n\n/**\n * A tissue sample excised from a donor\n */\nexport interface TissueSample extends Annotated {\n  /**\n   * The patient from whom the tissue was excised\n   */\n  patient: Patient;\n\n  /**\n   * An URL to the svg overlay\n   */\n  overlayUrl: string;\n}\n\n/**\n * A slice of a tissue sample\n */\nexport interface TissueSlice extends Annotated {\n  /**\n   * The tissue sample from which a slice was extracted\n   */\n  sample: TissueSample;\n}\n\n/**\n * An image of a tissue slice\n */\nexport interface TissueImage extends Annotated {\n  /**\n   * The tissue slice from which an image was extracted\n   */\n  slice: TissueSlice;\n\n  /**\n   * The technology used to extract the image\n   */\n  technology: 'IHC' | 'PAS' | 'IMS' | 'MxIF' | 'AF' | string;\n\n  /**\n   * A URL to download the source image\n   */\n  sourceUrl: string;\n\n  /**\n   * A URL to a small-sized version of the image. Should be a .png, .jpg, or .gif.\n   */\n  thumbnailUrl: string;\n\n  /**\n   * Additional data to display in popovers, etc. for the thumbnail\n   */\n  thumbnailMetadata: { [label: string]: string };\n\n  /**\n   * A URL to a tiled version of the image\n   */\n  tileUrl: string;\n\n  /**\n   * The type of tiles at the URL\n   */\n  tileType: 'deep-zoom' | 'google-maps' | string;\n\n  /**\n   * The number of pixels per meter for the image\n   */\n  pixelsPerMeter: number;\n}\n\n/**\n * An overlay that can be placed atop a TissueImage\n */\nexport interface TissueOverlay extends Annotated {\n  /**\n   * The tissue image this overlay can be placed atop\n   */\n  image: TissueImage;\n\n  /**\n   * The label for the overlay.\n   */\n  label: string;\n\n  /**\n   * Anatomical location for the overlay.\n   */\n  anatomicalLocations: string[];\n\n\n  /**\n   * An URL for the SVG overlay.\n   */\n  overlayUrl: string;\n\n}\n\n/**\n * A tissue cell that was extracted/discovered from a tissue slice\n */\nexport interface TissueCell extends TissueOverlay {\n  /**\n   * The tissue slice from which an image was extracted/discovered\n   */\n  slice: TissueSlice;\n\n  /**\n   * The type of cell discovered\n   */\n  cellType: string;\n}\n\n/**\n * A local database of patients, samples, slices, images, etc.\n *\n * NOTE: A remote database will be the norm, so do not reference this\n * unless you are working with the local database implementation directly.\n */\nexport interface LocalDatabase {\n  /** Patients/donors in the database */\n  patients: Patient[];\n  /** Tissue samples in the database */\n  samples: TissueSample[];\n  /** Tissue slices in the database */\n  slices: TissueSlice[];\n  /** Tissue images in the database */\n  images: TissueImage[];\n  /** Tissue image overlays in the database */\n  overlays: TissueOverlay[];\n  /** Tissue cells in the database */\n  cells: TissueCell[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TissuesBrowserComponent.html":{"url":"components/TissuesBrowserComponent.html","title":"component - TissuesBrowserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TissuesBrowserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/tissues-browser/tissues-browser.component.ts\n\n\n    \n        Description\n    \n    \n        Base view of the tissues browser. Responsible for fetching data and passing it to the grid component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tissues-browser\n            \n\n            \n                styleUrls\n                ./tissues-browser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tissues-browser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: TissuesBrowserDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/tissues-browser/tissues-browser.component.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of tissues browser component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        TissuesBrowserDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service from which data is received.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { TissuesBrowserDataService } from '../../shared/services/tissues-browser-data/tissues-browser-data.service';\n\n/**\n * Base view of the tissues browser. Responsible for fetching data and passing it to the grid component.\n */\n@Component({\n  selector: 'ccf-tissues-browser',\n  templateUrl: './tissues-browser.component.html',\n  styleUrls: ['./tissues-browser.component.scss']\n})\nexport class TissuesBrowserComponent {\n  /**\n   * Creates an instance of tissues browser component.\n   *\n   * @param dataService The service from which data is received.\n   */\n  constructor(readonly dataService: TissuesBrowserDataService) { }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./tissues-browser.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TissuesBrowserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissuesBrowserDataService.html":{"url":"injectables/TissuesBrowserDataService.html","title":"injectable - TissuesBrowserDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TissuesBrowserDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/tissues-browser-data/tissues-browser-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the ontology nodes to display in the tissues browser.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Select(NavigationState.tissues)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/tissues-browser-data/tissues-browser-data.service.ts:17\n                            \n                        \n\n                \n                    \n                        Emits arrays of tissues corresponding to the current search.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\n\nimport { TissueImage } from '../../state/database/database.models';\nimport { NavigationState } from '../../state/navigation/navigation.state';\n\n/**\n * Provides the ontology nodes to display in the tissues browser.\n */\n@Injectable()\nexport class TissuesBrowserDataService {\n  /**\n   * Emits arrays of tissues corresponding to the current search.\n   */\n  @Select(NavigationState.tissues)\n  data: Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TissuesBrowserGridComponent.html":{"url":"components/TissuesBrowserGridComponent.html","title":"component - TissuesBrowserGridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TissuesBrowserGridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tissues-browser-grid/tissues-browser-grid.component.ts\n\n\n    \n        Description\n    \n    \n        A grid where each item can be hovered to display a popover.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tissues-browser-grid\n            \n\n            \n                styleUrls\n                ./tissues-browser-grid.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tissues-browser-grid.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePopoverItem\n                            \n                            \n                                    Static\n                                    Readonly\n                                defaultNumColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearActivePopoverItem\n                            \n                            \n                                setActivePopoverItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                numColumns\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :         TissueImage[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tissues-browser-grid/tissues-browser-grid.component.ts:22\n                            \n                        \n                \n                    \n                        Grid items.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        numColumns\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tissues-browser-grid/tissues-browser-grid.component.ts:27\n                            \n                        \n                \n                    \n                        Desired number of columns in the grid.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearActivePopoverItem\n                        \n                        \n                    \n                \n            \n            \n                \nclearActivePopoverItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tissues-browser-grid/tissues-browser-grid.component.ts:46\n                \n            \n\n\n            \n                \n                    Clears the active popover item.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setActivePopoverItem\n                        \n                        \n                    \n                \n            \n            \n                \nsetActivePopoverItem(item: TissueImage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tissues-browser-grid/tissues-browser-grid.component.ts:39\n                \n            \n\n\n            \n                \n                    Sets the active popover item.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                TissueImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activePopoverItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TissueImage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tissues-browser-grid/tissues-browser-grid.component.ts:32\n                            \n                        \n\n                \n                    \n                        Item currently being hovered.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            defaultNumColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tissues-browser-grid/tissues-browser-grid.component.ts:17\n                            \n                        \n\n                \n                    \n                        Default number of columns in the tissues browser grid.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { TissueImage } from '../../shared/state/database/database.models';\n\n/**\n * A grid where each item can be hovered to display a popover.\n */\n@Component({\n  selector: 'ccf-tissues-browser-grid',\n  templateUrl: './tissues-browser-grid.component.html',\n  styleUrls: ['./tissues-browser-grid.component.scss']\n})\nexport class TissuesBrowserGridComponent {\n  /**\n   * Default number of columns in the tissues browser grid.\n   */\n  static readonly defaultNumColumns = 6;\n\n  /**\n   * Grid items.\n   */\n  @Input() items: TissueImage[];\n\n  /**\n   * Desired number of columns in the grid.\n   */\n  @Input() numColumns: number;\n\n  /**\n   * Item currently being hovered.\n   */\n  activePopoverItem: TissueImage;\n\n  /**\n   * Sets the active popover item.\n   *\n   * @param item The item object.\n   */\n  setActivePopoverItem(item: TissueImage): void {\n    this.activePopoverItem = item;\n  }\n\n  /**\n   * Clears the active popover item.\n   */\n  clearActivePopoverItem(): void {\n    this.activePopoverItem = undefined;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n\n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tissues-browser-grid.component.scss\n                \n                $default-num-columns: 6;\n$num-column-classes: 12;\n$item-min-width: 220px;\n$item-max-width: 768px;\n$item-min-height: 160px;\n$item-max-height: 559px;\n$height-width-ratio: $item-min-height / $item-min-width;\n\n@function item-width($n) {\n  @return (100% / $n);\n}\n\n@function item-height($n) {\n  @return $height-width-ratio * item-width($n);\n}\n\n.tissues-browser-grid.wrapper {\n  .container {\n    .popover-container {\n      ::ng-deep .popover-content {\n        min-width: $item-min-width;\n        max-width: $item-max-width;\n        min-height: $item-min-height;\n        max-height: $item-max-height;\n\n        &.bs-popover-right {\n          margin-left: 0;\n        }\n\n        .popover-body {\n          line-height: normal;\n        }\n      }\n    }\n\n    .grid {\n      display: flex;\n      flex-flow: row wrap;\n      align-content: flex-start;\n\n      .item {\n        position: relative;\n        width: item-width($default-num-columns);\n        padding-top: item-height($default-num-columns);\n        min-width: $item-min-width;\n        max-width: $item-max-width;\n        min-height: $item-min-height;\n        max-height: $item-max-height;\n        margin: 4px;\n\n        @for $n from 1 through $num-column-classes {\n          &[data-num-columns=\"#{$n}\"] {\n            width: item-width($n);\n            padding-top: item-height($n);\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TissuesBrowserGridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TissuesBrowserGridItemComponent.html":{"url":"components/TissuesBrowserGridItemComponent.html","title":"component - TissuesBrowserGridItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TissuesBrowserGridItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tissues-browser-grid-item/tissues-browser-grid-item.component.ts\n\n\n    \n        Description\n    \n    \n        Encapsulates the content of a single tissues browser grid item.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tissues-browser-grid-item\n            \n\n            \n                styleUrls\n                ./tissues-browser-grid-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tissues-browser-grid-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbnailUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigator: NavigationService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tissues-browser-grid-item/tissues-browser-grid-item.component.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of tissues browser grid item component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navigator\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The navigation service.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The sanitaion service used to sanitize background image urls.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         TissueImage\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tissues-browser-grid-item/tissues-browser-grid-item.component.ts:20\n                            \n                        \n                \n                    \n                        The item for which to display a tile.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thumbnailUrl\n                    \n                \n\n                \n                    \n                        getthumbnailUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tissues-browser-grid-item/tissues-browser-grid-item.component.ts:25\n                                \n                            \n                    \n                        \n                                Gets the tile's background url.\n\n\n                                \n                                    Returns :         SafeStyle\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { NavigationService } from '../../shared/services/navigation/navigation.service';\nimport { TissueImage } from '../../shared/state/database/database.models';\n\n/**\n * Encapsulates the content of a single tissues browser grid item.\n */\n@Component({\n  selector: 'ccf-tissues-browser-grid-item',\n  templateUrl: './tissues-browser-grid-item.component.html',\n  styleUrls: ['./tissues-browser-grid-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TissuesBrowserGridItemComponent {\n  /**\n   * The item for which to display a tile.\n   */\n  @Input() item: TissueImage;\n\n  /**\n   * Gets the tile's background url.\n   */\n  get thumbnailUrl(): SafeStyle {\n    return this.sanitizer.bypassSecurityTrustStyle(`url(${this.item.thumbnailUrl})`);\n  }\n\n  /**\n   * Creates an instance of tissues browser grid item component.\n   *\n   * @param navigator The navigation service.\n   * @param sanitizer The sanitaion service used to sanitize background image urls.\n   */\n  constructor(readonly navigator: NavigationService, private sanitizer: DomSanitizer) { }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./tissues-browser-grid-item.component.scss\n                \n                .tissues-browser-grid-item.wrapper {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  &, * {\n    width: 100%;\n    height: 100%;\n  }\n\n  .container {\n    .tile {\n      background-size: cover;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TissuesBrowserGridItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissuesBrowserGridItemModule.html":{"url":"modules/TissuesBrowserGridItemModule.html","title":"module - TissuesBrowserGridItemModule","body":"\n                   \n\n\n\n\n    Modules\n    TissuesBrowserGridItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TissuesBrowserGridItemModule\n\n\n\ncluster_TissuesBrowserGridItemModule_declarations\n\n\n\ncluster_TissuesBrowserGridItemModule_exports\n\n\n\n\nTissuesBrowserGridItemComponent\n\nTissuesBrowserGridItemComponent\n\n\n\nTissuesBrowserGridItemModule\n\nTissuesBrowserGridItemModule\n\nTissuesBrowserGridItemModule -->\n\nTissuesBrowserGridItemComponent->TissuesBrowserGridItemModule\n\n\n\n\n\nTissuesBrowserGridItemComponent \n\nTissuesBrowserGridItemComponent \n\nTissuesBrowserGridItemComponent  -->\n\nTissuesBrowserGridItemModule->TissuesBrowserGridItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tissues-browser-grid-item/tissues-browser-grid-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TissuesBrowserGridItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TissuesBrowserGridItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TissuesBrowserGridItemComponent } from './tissues-browser-grid-item.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    TissuesBrowserGridItemComponent\n  ],\n  exports: [\n    TissuesBrowserGridItemComponent\n  ]\n})\nexport class TissuesBrowserGridItemModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissuesBrowserGridModule.html":{"url":"modules/TissuesBrowserGridModule.html","title":"module - TissuesBrowserGridModule","body":"\n                   \n\n\n\n\n    Modules\n    TissuesBrowserGridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TissuesBrowserGridModule\n\n\n\ncluster_TissuesBrowserGridModule_declarations\n\n\n\ncluster_TissuesBrowserGridModule_imports\n\n\n\ncluster_TissuesBrowserGridModule_exports\n\n\n\n\nTissuesBrowserGridComponent\n\nTissuesBrowserGridComponent\n\n\n\nTissuesBrowserGridModule\n\nTissuesBrowserGridModule\n\nTissuesBrowserGridModule -->\n\nTissuesBrowserGridComponent->TissuesBrowserGridModule\n\n\n\n\n\nTissuesBrowserGridComponent \n\nTissuesBrowserGridComponent \n\nTissuesBrowserGridComponent  -->\n\nTissuesBrowserGridModule->TissuesBrowserGridComponent \n\n\n\n\n\nTissuesBrowserGridItemModule\n\nTissuesBrowserGridItemModule\n\nTissuesBrowserGridModule -->\n\nTissuesBrowserGridItemModule->TissuesBrowserGridModule\n\n\n\n\n\nTissuesBrowserGridPopoverContentModule\n\nTissuesBrowserGridPopoverContentModule\n\nTissuesBrowserGridModule -->\n\nTissuesBrowserGridPopoverContentModule->TissuesBrowserGridModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tissues-browser-grid/tissues-browser-grid.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TissuesBrowserGridComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TissuesBrowserGridItemModule\n                        \n                        \n                            TissuesBrowserGridPopoverContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TissuesBrowserGridComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopoverModule } from 'ngx-smart-popover';\n\nimport { TissuesBrowserGridItemModule } from '../tissues-browser-grid-item/tissues-browser-grid-item.module';\nimport {\n  TissuesBrowserGridPopoverContentModule,\n} from '../tissues-browser-grid-popover-content/tissues-browser-grid-popover-content.module';\nimport { TissuesBrowserGridComponent } from './tissues-browser-grid.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PopoverModule,\n    TissuesBrowserGridItemModule,\n    TissuesBrowserGridPopoverContentModule\n  ],\n  declarations: [\n    TissuesBrowserGridComponent\n  ],\n  exports: [\n    TissuesBrowserGridComponent\n  ]\n})\nexport class TissuesBrowserGridModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TissuesBrowserGridPopoverContentComponent.html":{"url":"components/TissuesBrowserGridPopoverContentComponent.html","title":"component - TissuesBrowserGridPopoverContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TissuesBrowserGridPopoverContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tissues-browser-grid-popover-content/tissues-browser-grid-popover-content.component.ts\n\n\n    \n        Description\n    \n    \n        Contains the content of the tissues browser grid's popover.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tissues-browser-grid-popover-content\n            \n\n            \n                styleUrls\n                ./tissues-browser-grid-popover-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tissues-browser-grid-popover-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackByLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    age\n                                \n                                \n                                    genderIcon\n                                \n                                \n                                    metadata\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         TissueImage\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tissues-browser-grid-popover-content/tissues-browser-grid-popover-content.component.ts:19\n                            \n                        \n                \n                    \n                        The ontology node for which to display meta data.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByLabel\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByLabel(metadata: [string, any])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tissues-browser-grid-popover-content/tissues-browser-grid-popover-content.component.ts:48\n                \n            \n\n\n            \n                \n                    Tracks a meta data tuple by its label.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                            [string, any]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The label of the meta data.\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        age\n                    \n                \n\n                \n                    \n                        getage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tissues-browser-grid-popover-content/tissues-browser-grid-popover-content.component.ts:24\n                                \n                            \n                    \n                        \n                                Age in whole years.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        genderIcon\n                    \n                \n\n                \n                    \n                        getgenderIcon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tissues-browser-grid-popover-content/tissues-browser-grid-popover-content.component.ts:31\n                                \n                            \n                    \n                        \n                                Gender - male/female/undefined.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        metadata\n                    \n                \n\n                \n                    \n                        getmetadata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tissues-browser-grid-popover-content/tissues-browser-grid-popover-content.component.ts:38\n                                \n                            \n                    \n                        \n                                Meta data to display.\n\n\n                                \n                                    Returns :     []\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { get as loGet, toPairs as loToPairs } from 'lodash';\n\nimport { TissueImage } from '../../shared/state/database/database.models';\n\n/**\n * Contains the content of the tissues browser grid's popover.\n */\n@Component({\n  selector: 'ccf-tissues-browser-grid-popover-content',\n  templateUrl: './tissues-browser-grid-popover-content.component.html',\n  styleUrls: ['./tissues-browser-grid-popover-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TissuesBrowserGridPopoverContentComponent {\n  /**\n   * The ontology node for which to display meta data.\n   */\n  @Input() item: TissueImage;\n\n  /**\n   * Age in whole years.\n   */\n  get age(): string {\n    return String(loGet(this.item, ['slice', 'sample', 'patient', 'age'], '??'));\n  }\n\n  /**\n   * Gender - male/female/undefined.\n   */\n  get genderIcon(): string {\n    return 'gender:' + loGet(this.item, ['slice', 'sample', 'patient', 'gender'], 'undefined');\n  }\n\n  /**\n   * Meta data to display.\n   */\n  get metadata(): [string, any][] {\n    return loToPairs(loGet(this.item, 'thumbnailMetadata', { }));\n  }\n\n  /**\n   * Tracks a meta data tuple by its label.\n   *\n   * @param data Meta data tuple.\n   * @returns The label of the meta data.\n   */\n  trackByLabel(metadata: [string, any]): string {\n    return metadata[0];\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Age {{ age }}\n      \n    \n\n    \n      \n        {{ item[0] }}: {{ item[1] }}\n      \n    \n\n    \n      \n        cloud_download\n      \n    \n  \n\n    \n\n    \n                \n                    ./tissues-browser-grid-popover-content.component.scss\n                \n                @import 'global/colors';\n\n.tissues-browser-grid-popover-content.wrapper {\n  .container {\n    .icon {\n      color: $icon-color;\n      outline: none;\n    }\n\n    .header {\n      font-size: 16px;\n      font-weight: bold;\n\n      .gender {\n        position: absolute;\n        top: 8px;\n        right: 8px;\n      }\n    }\n\n    .body {\n      font-size: 12px;\n    }\n\n    .footer {\n      .download {\n        position: absolute;\n        bottom: 4px;\n        right: 8px;\n        cursor: pointer;\n        color: $download-icon-color;\n        outline: none;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Age {{ age }}                            {{ item[0] }}: {{ item[1] }}                            cloud_download            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'ccf-about'},{'name': 'AgeSelectorComponent', 'selector': 'ccf-age-selector'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyComponent', 'selector': 'ccf-body'},{'name': 'CalloutComponent', 'selector': 'ccf-callout, [ccf-callout]'},{'name': 'GenderSelectorComponent', 'selector': 'ccf-gender-selector'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HomeComponent', 'selector': 'ccf-home'},{'name': 'MainComponent', 'selector': 'ccf-main'},{'name': 'MetadataComponent', 'selector': 'ccf-metadata'},{'name': 'NavigationComponent', 'selector': 'ccf-navigation'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'Organ3dComponent', 'selector': 'ccf-organ3d'},{'name': 'OrganComponent', 'selector': 'ccf-organ'},{'name': 'SearchCategoriesComponent', 'selector': 'ccf-search-categories'},{'name': 'SearchComponent', 'selector': 'ccf-search'},{'name': 'TissueComponent', 'selector': 'ccf-tissue'},{'name': 'TissuesBrowserComponent', 'selector': 'ccf-tissues-browser'},{'name': 'TissuesBrowserGridComponent', 'selector': 'ccf-tissues-browser-grid'},{'name': 'TissuesBrowserGridItemComponent', 'selector': 'ccf-tissues-browser-grid-item'},{'name': 'TissuesBrowserGridPopoverContentComponent', 'selector': 'ccf-tissues-browser-grid-popover-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TissuesBrowserGridPopoverContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissuesBrowserGridPopoverContentModule.html":{"url":"modules/TissuesBrowserGridPopoverContentModule.html","title":"module - TissuesBrowserGridPopoverContentModule","body":"\n                   \n\n\n\n\n    Modules\n    TissuesBrowserGridPopoverContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TissuesBrowserGridPopoverContentModule\n\n\n\ncluster_TissuesBrowserGridPopoverContentModule_declarations\n\n\n\ncluster_TissuesBrowserGridPopoverContentModule_exports\n\n\n\n\nTissuesBrowserGridPopoverContentComponent\n\nTissuesBrowserGridPopoverContentComponent\n\n\n\nTissuesBrowserGridPopoverContentModule\n\nTissuesBrowserGridPopoverContentModule\n\nTissuesBrowserGridPopoverContentModule -->\n\nTissuesBrowserGridPopoverContentComponent->TissuesBrowserGridPopoverContentModule\n\n\n\n\n\nTissuesBrowserGridPopoverContentComponent \n\nTissuesBrowserGridPopoverContentComponent \n\nTissuesBrowserGridPopoverContentComponent  -->\n\nTissuesBrowserGridPopoverContentModule->TissuesBrowserGridPopoverContentComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tissues-browser-grid-popover-content/tissues-browser-grid-popover-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TissuesBrowserGridPopoverContentComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TissuesBrowserGridPopoverContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TissuesBrowserGridPopoverContentComponent } from './tissues-browser-grid-popover-content.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  declarations: [\n    TissuesBrowserGridPopoverContentComponent\n  ],\n  exports: [\n    TissuesBrowserGridPopoverContentComponent\n  ]\n})\nexport class TissuesBrowserGridPopoverContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissuesBrowserModule.html":{"url":"modules/TissuesBrowserModule.html","title":"module - TissuesBrowserModule","body":"\n                   \n\n\n\n\n    Modules\n    TissuesBrowserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TissuesBrowserModule\n\n\n\ncluster_TissuesBrowserModule_declarations\n\n\n\ncluster_TissuesBrowserModule_imports\n\n\n\ncluster_TissuesBrowserModule_providers\n\n\n\n\nTissuesBrowserComponent\n\nTissuesBrowserComponent\n\n\n\nTissuesBrowserModule\n\nTissuesBrowserModule\n\nTissuesBrowserModule -->\n\nTissuesBrowserComponent->TissuesBrowserModule\n\n\n\n\n\nTissuesBrowserGridModule\n\nTissuesBrowserGridModule\n\nTissuesBrowserModule -->\n\nTissuesBrowserGridModule->TissuesBrowserModule\n\n\n\n\n\nTissuesBrowserRoutingModule\n\nTissuesBrowserRoutingModule\n\nTissuesBrowserModule -->\n\nTissuesBrowserRoutingModule->TissuesBrowserModule\n\n\n\n\n\nTissuesBrowserDataService\n\nTissuesBrowserDataService\n\nTissuesBrowserModule -->\n\nTissuesBrowserDataService->TissuesBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/tissues-browser/tissues-browser.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TissuesBrowserComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TissuesBrowserDataService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TissuesBrowserGridModule\n                        \n                        \n                            TissuesBrowserRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TissuesBrowserGridModule } from '../../components/tissues-browser-grid/tissues-browser-grid.module';\nimport { TissuesBrowserDataService } from '../../shared/services/tissues-browser-data/tissues-browser-data.service';\nimport { TissuesBrowserRoutingModule } from './tissues-browser-routing.module';\nimport { TissuesBrowserComponent } from './tissues-browser.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TissuesBrowserRoutingModule,\n    TissuesBrowserGridModule\n  ],\n  declarations: [TissuesBrowserComponent],\n  providers: [TissuesBrowserDataService]\n})\nexport class TissuesBrowserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissuesBrowserRoutingModule.html":{"url":"modules/TissuesBrowserRoutingModule.html","title":"module - TissuesBrowserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TissuesBrowserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/tissues-browser/tissues-browser-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TissuesBrowserComponent } from './tissues-browser.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: TissuesBrowserComponent\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TissuesBrowserRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnselectTMC.html":{"url":"classes/UnselectTMC.html","title":"class - UnselectTMC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnselectTMC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/search/search.action.ts\n        \n\n            \n                Description\n            \n            \n                Remove a TMC from the search selection.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tmc: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/search/search.action.ts:54\n                            \n                        \n\n                \n                    \n                            Creates an instance of unselect tmc.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tmc\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The TMC type to remove.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Search API] Unselect TMC'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/search/search.action.ts:54\n                            \n                        \n\n                \n                    \n                        Action type \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OntologyNode } from '../ontology/ontology.model';\n\n/**\n * Set/Unset the searched gender.\n */\nexport class SetGenderFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Gender Filter';\n\n  /**\n   * Creates an instance of set gender filter.\n   *\n   * @param [gender] The gender male, female, or undefined for any gender.\n   */\n  constructor(readonly gender?: 'male' | 'female') { }\n}\n\n/**\n * Set/Unset the searched age range.\n */\nexport class SetAgeRangeFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Age Range Filter';\n\n  /**\n   * Creates an instance of set age range filter.\n   *\n   * @param [min] The minimum age (inclusive)\n   * @param [max] The maximum age (inclusive)\n   */\n  constructor(readonly min?: number, readonly max?: number) { }\n}\n\n/**\n * Add a TMC to the search selection.\n */\nexport class SelectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Select TMC';\n\n  /**\n   * Creates an instance of select tmc.\n   *\n   * @param tmc The TMC type to add.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Remove a TMC from the search selection.\n */\nexport class UnselectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Unselect TMC';\n\n  /**\n   * Creates an instance of unselect tmc.\n   *\n   * @param tmc The TMC type to remove.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Add a technology to the search selection.\n */\nexport class SelectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Select Technology';\n\n  /**\n   * Creates an instance of select technology.\n   *\n   * @param technology The technology to add.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Remove a technology from the search selection.\n */\nexport class UnselectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Unselect Technology';\n\n  /**\n   * Creates an instance of unselect technology.\n   *\n   * @param technology The technology to remove.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Set the searched onotological location.\n */\nexport class SetLocation {\n  /** Action type */\n  static readonly type = '[Search API] Set Locations';\n\n  /**\n   * Creates an instance of set location.\n   *\n   * @param location The new location.\n   */\n  constructor(readonly location?: OntologyNode) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnselectTechnology.html":{"url":"classes/UnselectTechnology.html","title":"class - UnselectTechnology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnselectTechnology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/search/search.action.ts\n        \n\n            \n                Description\n            \n            \n                Remove a technology from the search selection.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(technology: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/state/search/search.action.ts:84\n                            \n                        \n\n                \n                    \n                            Creates an instance of unselect technology.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        technology\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The technology to remove.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Search API] Unselect Technology'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/state/search/search.action.ts:84\n                            \n                        \n\n                \n                    \n                        Action type \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OntologyNode } from '../ontology/ontology.model';\n\n/**\n * Set/Unset the searched gender.\n */\nexport class SetGenderFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Gender Filter';\n\n  /**\n   * Creates an instance of set gender filter.\n   *\n   * @param [gender] The gender male, female, or undefined for any gender.\n   */\n  constructor(readonly gender?: 'male' | 'female') { }\n}\n\n/**\n * Set/Unset the searched age range.\n */\nexport class SetAgeRangeFilter {\n  /** Action type */\n  static readonly type = '[Search API] Set Age Range Filter';\n\n  /**\n   * Creates an instance of set age range filter.\n   *\n   * @param [min] The minimum age (inclusive)\n   * @param [max] The maximum age (inclusive)\n   */\n  constructor(readonly min?: number, readonly max?: number) { }\n}\n\n/**\n * Add a TMC to the search selection.\n */\nexport class SelectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Select TMC';\n\n  /**\n   * Creates an instance of select tmc.\n   *\n   * @param tmc The TMC type to add.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Remove a TMC from the search selection.\n */\nexport class UnselectTMC {\n  /** Action type */\n  static readonly type = '[Search API] Unselect TMC';\n\n  /**\n   * Creates an instance of unselect tmc.\n   *\n   * @param tmc The TMC type to remove.\n   */\n  constructor(readonly tmc: string) { }\n}\n\n/**\n * Add a technology to the search selection.\n */\nexport class SelectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Select Technology';\n\n  /**\n   * Creates an instance of select technology.\n   *\n   * @param technology The technology to add.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Remove a technology from the search selection.\n */\nexport class UnselectTechnology {\n  /** Action type */\n  static readonly type = '[Search API] Unselect Technology';\n\n  /**\n   * Creates an instance of unselect technology.\n   *\n   * @param technology The technology to remove.\n   */\n  constructor(readonly technology: string) { }\n}\n\n/**\n * Set the searched onotological location.\n */\nexport class SetLocation {\n  /** Action type */\n  static readonly type = '[Search API] Set Locations';\n\n  /**\n   * Creates an instance of set location.\n   *\n   * @param location The new location.\n   */\n  constructor(readonly location?: OntologyNode) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValueObject.html":{"url":"interfaces/ValueObject.html","title":"interface - ValueObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValueObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/state/ontology/internal/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@value' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @value\n                                    \n                                \n                                \n                                    \n                                        @value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@value' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from '../ontology.model';\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject] | undefined;\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json),\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) - Exploration User Interface (EUI).\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, gender, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-render-init.module.ts\n            \n            variable\n            BLANK_MAPBOX_STYLE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app-state.module.ts\n            \n            variable\n            rootStates\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/age-selector/age-selector.component.ts\n            \n            component\n            AgeSelectorComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/components/callout/callout.component.ts\n            \n            component\n            CalloutComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/components/gender-selector/gender-selector.component.ts\n            \n            component\n            GenderSelectorComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/metadata/metadata.component.ts\n            \n            component\n            MetadataComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/ontology-search/ontology-search.component.ts\n            \n            component\n            OntologySearchComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/components/ontology-tree/ontology-tree.component.ts\n            \n            component\n            OntologyTreeComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/components/ontology-tree/ontology-tree.component.ts\n            \n            variable\n            getLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/ontology-tree/ontology-tree.component.ts\n            \n            variable\n            isExpandable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/ontology-tree/shared/flat-node.ts\n            \n            class\n            FlatNode\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/organ3d/organ3d.component.ts\n            \n            component\n            Organ3dComponent\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/components/search-categories/search-categories.component.ts\n            \n            component\n            SearchCategoriesComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/components/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/tissues-browser-grid-item/tissues-browser-grid-item.component.ts\n            \n            component\n            TissuesBrowserGridItemComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/tissues-browser-grid-popover-content/tissues-browser-grid-popover-content.component.ts\n            \n            component\n            TissuesBrowserGridPopoverContentComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/tissues-browser-grid/tissues-browser-grid.component.ts\n            \n            component\n            TissuesBrowserGridComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/external-libraries/openseadragon-scalebar.ts\n            \n            function\n            Scalebar\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/3d/object3d-util.ts\n            \n            function\n            centerObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/3d/object3d-util.ts\n            \n            function\n            getBBox\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/3d/object3d-util.ts\n            \n            function\n            setObjectOpacity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/3d/object3d-util.ts\n            \n            function\n            setObjectRotation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/3d/object3d-util.ts\n            \n            function\n            setObjectSize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/3d/threejs-layer.ts\n            \n            class\n            ThreeJsLayer\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/shared/3d/threejs-layer.ts\n            \n            interface\n            ThreeJsLayerOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/common/filter/filter-builder.ts\n            \n            class\n            FilterBuilder\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/common/filter/filter-builder.ts\n            \n            variable\n            compareMethods\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/resolvers/tissue-resolver/tissue-resolver.service.ts\n            \n            guard\n            TissueResolverService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/body-data/body-data.service.ts\n            \n            injectable\n            BodyDataService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/shared/services/database/local/local-database.service.ts\n            \n            injectable\n            LocalDatabaseService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/shared/services/navigation/navigation.service.ts\n            \n            injectable\n            NavigationService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/shared/services/navigation/navigation.service.ts\n            \n            function\n            createPathWithIdentifier\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/navigation/navigation.service.ts\n            \n            function\n            createSinglePathObservable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/ontology-search/ontology-search.service.ts\n            \n            injectable\n            OntologySearchService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/ontology-search/ontology-search.service.ts\n            \n            interface\n            SearchResult\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/ontology/ontology.service.ts\n            \n            injectable\n            OntologyService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/organ-data/organ-data.service.ts\n            \n            injectable\n            OrganDataService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/organ-data/organ-data.service.ts\n            \n            interface\n            CountMetadata\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/search/search.service.ts\n            \n            injectable\n            SearchService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/search/search.service.ts\n            \n            function\n            createSearchCriteriaDescription\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/search/search.service.ts\n            \n            variable\n            ageConstraints\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/tissue-data/tissue-data.service.ts\n            \n            injectable\n            TissueDataService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/shared/services/tissues-browser-data/tissues-browser-data.service.ts\n            \n            injectable\n            TissuesBrowserDataService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/state/database/database.models.ts\n            \n            interface\n            Annotated\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/database/database.models.ts\n            \n            interface\n            LocalDatabase\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/state/database/database.models.ts\n            \n            interface\n            Patient\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/state/database/database.models.ts\n            \n            interface\n            TissueCell\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/database/database.models.ts\n            \n            interface\n            TissueImage\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/shared/state/database/database.models.ts\n            \n            interface\n            TissueOverlay\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/state/database/database.models.ts\n            \n            interface\n            TissueSample\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/database/database.models.ts\n            \n            interface\n            TissueSlice\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/state/icon-registry/default-icons.ts\n            \n            variable\n            defaultIcons\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/icon-registry/icon-registry.action.ts\n            \n            class\n            RegisterIcon\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/icon-registry/icon-registry.action.ts\n            \n            class\n            RegistrationError\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/icon-registry/icon-registry.action.ts\n            \n            class\n            RegistrationSuccess\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/state/icon-registry/icon-registry.model.ts\n            \n            interface\n            IconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/state/icon-registry/icon-registry.state.ts\n            \n            class\n            IconRegistryState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/state/icon-registry/icon-registry.state.ts\n            \n            function\n            getRegistrationMethod\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/navigation/navigation.model.ts\n            \n            interface\n            NavigationStateModel\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/state/navigation/navigation.state.ts\n            \n            class\n            NavigationState\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            interface\n            IdObject\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            interface\n            JsonOntologyNode\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            interface\n            ValueObject\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            function\n            jsonToOntologyNode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            variable\n            idExtractor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            variable\n            idProperty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            variable\n            labelExtractor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            variable\n            labelProperty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            variable\n            parentExtractor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            variable\n            parentProperty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            variable\n            synonymsExtractor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            variable\n            synonymsProperty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            variable\n            valueExtractor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/internal/json-ontology.ts\n            \n            variable\n            valueProperty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/ontology.model.ts\n            \n            interface\n            OntologyNode\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/ontology.model.ts\n            \n            interface\n            OntologyStateModel\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/ontology.state.ts\n            \n            class\n            OntologyState\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/ontology.state.ts\n            \n            function\n            addSubtree\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/ontology.state.ts\n            \n            function\n            createModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/ontology.state.ts\n            \n            function\n            linkChildren\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/ontology/ontology.state.ts\n            \n            function\n            pruneModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/state/organ-meta-data/organ-meta-data.model.ts\n            \n            interface\n            CountMetaData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/state/search/search.action.ts\n            \n            class\n            SelectTechnology\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/search/search.action.ts\n            \n            class\n            SelectTMC\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/search/search.action.ts\n            \n            class\n            SetAgeRangeFilter\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/search/search.action.ts\n            \n            class\n            SetGenderFilter\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/search/search.action.ts\n            \n            class\n            SetLocation\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/search/search.action.ts\n            \n            class\n            UnselectTechnology\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/search/search.action.ts\n            \n            class\n            UnselectTMC\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/state/search/search.model.ts\n            \n            interface\n            SearchStateModel\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/state/search/search.state.ts\n            \n            class\n            SearchState\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/views/body/body.component.ts\n            \n            component\n            BodyComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/views/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/views/main/main.component.ts\n            \n            component\n            MainComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/views/organ/organ.component.ts\n            \n            component\n            OrganComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/views/organ/organ.component.ts\n            \n            variable\n            is3D\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/views/tissue/tissue.component.ts\n            \n            component\n            TissueComponent\n            \n                95 %\n                (23/24)\n            \n        \n        \n            \n                \n                src/app/views/tissues-browser/tissues-browser.component.ts\n            \n            component\n            TissuesBrowserComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.13\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ^8.2.13\n        \n            @angular/compiler : ^8.2.13\n        \n            @angular/core : ^8.2.13\n        \n            @angular/forms : ^8.2.13\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^8.2.13\n        \n            @angular/platform-browser-dynamic : ^8.2.13\n        \n            @angular/router : ^8.2.13\n        \n            @ngxs-labs/dispatch-decorator : ^2.1.0\n        \n            @ngxs/router-plugin : ^3.5.1\n        \n            @ngxs/store : ^3.5.1\n        \n            cheet.js : ^0.3.3\n        \n            core-js : ^3.4.0\n        \n            js-yaml : ^3.13.1\n        \n            lodash : ^4.17.15\n        \n            mapbox-gl : ^1.5.0\n        \n            material-design-icons-iconfont : ^5.0.1\n        \n            ng5-slider : ^1.2.4\n        \n            ngx-mapbox-gl : ^4.1.0\n        \n            ngx-smart-popover : ^1.1.0\n        \n            openseadragon : ^2.4.1\n        \n            rxjs : ~6.5.3\n        \n            svg-overlay : git+https://github.com/openseadragon/svg-overlay.git\n        \n            three : ^0.105.0\n        \n            tslib : ^1.10.0\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Compare   (src/.../filter-builder.ts)\n                        \n                        \n                            OverlayVisibility   (src/.../tissue.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/common/filter/filter-builder.ts\n    \n        \n            \n                \n                    \n                        \n                        Compare\n                    \n                \n                    \n                        \n                            Enumeration for selecting a comparison operation.\n\n                        \n                    \n                        \n                            \n                                 equal\n                            \n                        \n                        \n                            \n                                 not_equal\n                            \n                        \n                        \n                            \n                                 less_than\n                            \n                        \n                        \n                            \n                                 less_than_equal\n                            \n                        \n                        \n                            \n                                 greater_than\n                            \n                        \n                        \n                            \n                                 greater_than_equal\n                            \n                        \n            \n        \n\n    src/app/views/tissue/tissue.component.ts\n    \n        \n            \n                \n                    \n                        \n                        OverlayVisibility\n                    \n                \n                    \n                        \n                            Bit flags indicating the current visibility status of an overlay.\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 Visible\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 AlwaysVisible\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addSubtree   (src/.../ontology.state.ts)\n                        \n                        \n                            centerObject   (src/.../object3d-util.ts)\n                        \n                        \n                            createModel   (src/.../ontology.state.ts)\n                        \n                        \n                            createPathWithIdentifier   (src/.../navigation.service.ts)\n                        \n                        \n                            createSearchCriteriaDescription   (src/.../search.service.ts)\n                        \n                        \n                            createSinglePathObservable   (src/.../navigation.service.ts)\n                        \n                        \n                            getBBox   (src/.../object3d-util.ts)\n                        \n                        \n                            getRegistrationMethod   (src/.../icon-registry.state.ts)\n                        \n                        \n                            jsonToOntologyNode   (src/.../json-ontology.ts)\n                        \n                        \n                            linkChildren   (src/.../ontology.state.ts)\n                        \n                        \n                            pruneModel   (src/.../ontology.state.ts)\n                        \n                        \n                            Scalebar   (src/.../openseadragon-scalebar.ts)\n                        \n                        \n                            setObjectOpacity   (src/.../object3d-util.ts)\n                        \n                        \n                            setObjectRotation   (src/.../object3d-util.ts)\n                        \n                        \n                            setObjectSize   (src/.../object3d-util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/state/ontology/ontology.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addSubtree\n                        \n                        \n                    \n                \n            \n            \n                \naddSubtree(nodes, acc, current)\n                \n            \n\n\n\n\n            \n                \n                    Adds all subtree nodes to an accumulator object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original tree of nodes.\n\n                                    \n                                \n                                \n                                    acc\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The accumulated tree of nodes.\n\n                                    \n                                \n                                \n                                    current\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node whose subtree should be added.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createModel\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModel(nodeMap)\n                \n            \n\n\n\n\n            \n                \n                    Creates an ontology state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodeMap\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node hash table.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyStateModel\n\n                    \n                    \n                        The ontology state model.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkChildren\n                        \n                        \n                    \n                \n            \n            \n                \nlinkChildren(nodeMap)\n                \n            \n\n\n\n\n            \n                \n                    Links all nodes to their parents.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodeMap\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The hash table of nodes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pruneModel\n                        \n                        \n                    \n                \n            \n            \n                \npruneModel(model, organIds)\n                \n            \n\n\n\n\n            \n                \n                    Creates a new tree with only the specified organs and their subtrees.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The full ontology tree.\n\n                                    \n                                \n                                \n                                    organIds\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The identifiers of the organs to keep.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyStateModel\n\n                    \n                    \n                        A new ontology tree.\n\n                    \n                \n            \n        \n    \n    src/app/shared/3d/object3d-util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            centerObject\n                        \n                        \n                    \n                \n            \n            \n                \ncenterObject(obj, alignZ)\n                \n            \n\n\n\n\n            \n                \n                    Centers a 3D object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to center.\n\n                                    \n                                \n                                \n                                    alignZ\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether to align the bottom or the middle of the bounding box on the z axis.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBBox\n                        \n                        \n                    \n                \n            \n            \n                \ngetBBox(obj)\n                \n            \n\n\n\n\n            \n                \n                    Calculates the bounding box of a 3D object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The 3D object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Box3\n\n                    \n                    \n                        The bounding box.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setObjectOpacity\n                        \n                        \n                    \n                \n            \n            \n                \nsetObjectOpacity(obj, opacity, transparent, recursive)\n                \n            \n\n\n\n\n            \n                \n                    Sets the opacity of a 3D object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to change.\n\n                                    \n                                \n                                \n                                    opacity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The opacity value.\n\n                                    \n                                \n                                \n                                    transparent\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether it should be transparent.\n\n                                    \n                                \n                                \n                                    recursive\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether it should set the opacity for all child objects.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setObjectRotation\n                        \n                        \n                    \n                \n            \n            \n                \nsetObjectRotation(obj, angleX?, angleY?, angleZ?)\n                \n            \n\n\n\n\n            \n                \n                    Rotates a 3D object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to rotate.\n\n                                    \n                                \n                                \n                                    angleX\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The x axis rotation.\n\n                                    \n                                \n                                \n                                    angleY\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The y axis rotation.\n\n                                    \n                                \n                                \n                                    angleZ\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The z axis rotation.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setObjectSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetObjectSize(obj, size)\n                \n            \n\n\n\n\n            \n                \n                    Scales a 3D object such that it fits into a box with sides size long.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to scale.\n\n                                    \n                                \n                                \n                                    size\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The size of the bounding box sides.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/shared/services/navigation/navigation.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createPathWithIdentifier\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePathWithIdentifier(prefix, identifier)\n                \n            \n\n\n\n\n            \n                \n                    Creates an observable that emits a path constructed from a prefix and\nan identifier from another observable.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prefix\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The path prefix.\n\n                                    \n                                \n                                \n                                    identifier\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An observable emitting identifiers.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The new observable emitting the constructed paths.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSinglePathObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSinglePathObservable(path)\n                \n            \n\n\n\n\n            \n                \n                    Creates an observable that emits a path and then completes on every subscription.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The path to emit.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The new observable emitting a single path.\n\n                    \n                \n            \n        \n    \n    src/app/shared/services/search/search.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSearchCriteriaDescription\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSearchCriteriaDescription(undefined)\n                \n            \n\n\n\n\n            \n                \n                    Creates a description of a search.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The description of the search criteria.\n\n                    \n                \n            \n        \n    \n    src/app/shared/state/icon-registry/icon-registry.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getRegistrationMethod\n                        \n                        \n                    \n                \n            \n            \n                \ngetRegistrationMethod(undefined)\n                \n            \n\n\n\n\n            \n                \n                    Determines the MatIconRegistry method and arguments to invoke for a specific IconDefinition.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        An object containing the MatIconRegistry method name and argument to invoke it with.\n\n                    \n                \n            \n        \n    \n    src/app/shared/state/ontology/internal/json-ontology.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            jsonToOntologyNode\n                        \n                        \n                    \n                \n            \n            \n                \njsonToOntologyNode(json)\n                \n            \n\n\n\n\n            \n                \n                    Converts a json encoded ontology node to an ontology node.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    json\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The json encoded node.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyNode\n\n                    \n                    \n                        The resulting ontology node.\n\n                    \n                \n            \n        \n    \n    src/app/external-libraries/openseadragon-scalebar.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Scalebar\n                        \n                        \n                    \n                \n            \n            \n                \nScalebar(options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - Exploration User Interface (EUI)\n\n\n\n\n\n\n\n\n\nCCF-EUI: Common Coordinate Framework (CCF) - Exploration User Interface (EUI)\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nCCF-EUI is developed at the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AgeSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRenderInitModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppStateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalloutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GenderSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MetadataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavigationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyTreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Organ3dModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchCategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissueRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissuesBrowserGridItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissuesBrowserGridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissuesBrowserGridPopoverContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissuesBrowserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissuesBrowserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutModule\n\n\n\ncluster_AboutModule_declarations\n\n\n\ncluster_AboutModule_exports\n\n\n\ncluster_AgeSelectorModule\n\n\n\ncluster_AgeSelectorModule_declarations\n\n\n\ncluster_AgeSelectorModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_declarations\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_providers\n\n\n\ncluster_CalloutModule\n\n\n\ncluster_CalloutModule_declarations\n\n\n\ncluster_CalloutModule_exports\n\n\n\ncluster_GenderSelectorModule\n\n\n\ncluster_GenderSelectorModule_declarations\n\n\n\ncluster_GenderSelectorModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_MainModule_exports\n\n\n\ncluster_MetadataModule\n\n\n\ncluster_MetadataModule_declarations\n\n\n\ncluster_MetadataModule_exports\n\n\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_exports\n\n\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_Organ3dModule\n\n\n\ncluster_Organ3dModule_declarations\n\n\n\ncluster_Organ3dModule_exports\n\n\n\ncluster_OrganModule\n\n\n\ncluster_OrganModule_declarations\n\n\n\ncluster_OrganModule_imports\n\n\n\ncluster_OrganModule_providers\n\n\n\ncluster_SearchCategoriesModule\n\n\n\ncluster_SearchCategoriesModule_declarations\n\n\n\ncluster_SearchCategoriesModule_exports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\ncluster_TissueModule\n\n\n\ncluster_TissueModule_declarations\n\n\n\ncluster_TissueModule_imports\n\n\n\ncluster_TissueModule_providers\n\n\n\ncluster_TissuesBrowserGridItemModule\n\n\n\ncluster_TissuesBrowserGridItemModule_declarations\n\n\n\ncluster_TissuesBrowserGridItemModule_exports\n\n\n\ncluster_TissuesBrowserGridModule\n\n\n\ncluster_TissuesBrowserGridModule_declarations\n\n\n\ncluster_TissuesBrowserGridModule_imports\n\n\n\ncluster_TissuesBrowserGridModule_exports\n\n\n\ncluster_TissuesBrowserGridPopoverContentModule\n\n\n\ncluster_TissuesBrowserGridPopoverContentModule_declarations\n\n\n\ncluster_TissuesBrowserGridPopoverContentModule_exports\n\n\n\ncluster_TissuesBrowserModule\n\n\n\ncluster_TissuesBrowserModule_declarations\n\n\n\ncluster_TissuesBrowserModule_imports\n\n\n\ncluster_TissuesBrowserModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAboutModule\n\nAboutModule\n\nAboutModule -->\n\nAboutComponent->AboutModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nAboutModule->AboutComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nAboutModule->HeaderModule\n\n\n\n\n\nAgeSelectorComponent\n\nAgeSelectorComponent\n\n\n\nAgeSelectorModule\n\nAgeSelectorModule\n\nAgeSelectorModule -->\n\nAgeSelectorComponent->AgeSelectorModule\n\n\n\n\n\nAgeSelectorComponent \n\nAgeSelectorComponent \n\nAgeSelectorComponent  -->\n\nAgeSelectorModule->AgeSelectorComponent \n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nAgeSelectorModule->SearchModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRenderInitModule\n\nAppRenderInitModule\n\nAppModule -->\n\nAppRenderInitModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAppStateModule\n\nAppStateModule\n\nAppModule -->\n\nAppStateModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nMainComponent \n\nMainComponent \n\nMainComponent  -->\n\nMainModule->MainComponent \n\n\n\n\n\nBodyComponent\n\nBodyComponent\n\n\n\nBodyModule\n\nBodyModule\n\nBodyModule -->\n\nBodyComponent->BodyModule\n\n\n\n\n\nBodyRoutingModule\n\nBodyRoutingModule\n\nBodyModule -->\n\nBodyRoutingModule->BodyModule\n\n\n\n\n\nCalloutModule\n\nCalloutModule\n\nBodyModule -->\n\nCalloutModule->BodyModule\n\n\n\n\n\nCalloutComponent \n\nCalloutComponent \n\nCalloutComponent  -->\n\nCalloutModule->CalloutComponent \n\n\n\n\n\nOrganModule\n\nOrganModule\n\nOrganModule -->\n\nCalloutModule->OrganModule\n\n\n\n\n\nMetadataModule\n\nMetadataModule\n\nBodyModule -->\n\nMetadataModule->BodyModule\n\n\n\n\n\nMetadataComponent \n\nMetadataComponent \n\nMetadataComponent  -->\n\nMetadataModule->MetadataComponent \n\n\n\nOrganModule -->\n\nMetadataModule->OrganModule\n\n\n\n\n\nTissueModule\n\nTissueModule\n\nTissueModule -->\n\nMetadataModule->TissueModule\n\n\n\n\n\nBodyDataService\n\nBodyDataService\n\nBodyModule -->\n\nBodyDataService->BodyModule\n\n\n\n\n\nCalloutComponent\n\nCalloutComponent\n\nCalloutModule -->\n\nCalloutComponent->CalloutModule\n\n\n\n\n\nGenderSelectorComponent\n\nGenderSelectorComponent\n\n\n\nGenderSelectorModule\n\nGenderSelectorModule\n\nGenderSelectorModule -->\n\nGenderSelectorComponent->GenderSelectorModule\n\n\n\n\n\nGenderSelectorComponent \n\nGenderSelectorComponent \n\nGenderSelectorComponent  -->\n\nGenderSelectorModule->GenderSelectorComponent \n\n\n\nSearchModule -->\n\nGenderSelectorModule->SearchModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\nMainModule -->\n\nHeaderModule->MainModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nMainModule -->\n\nMainComponent->MainModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nMainModule -->\n\nNavigationModule->MainModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nNavigationModule->NavigationComponent \n\n\n\nMainModule -->\n\nSearchModule->MainModule\n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSearchModule->SearchComponent \n\n\n\n\n\nMetadataComponent\n\nMetadataComponent\n\nMetadataModule -->\n\nMetadataComponent->MetadataModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nNavigationModule -->\n\nNavigationComponent->NavigationModule\n\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\nSearchModule -->\n\nOntologySearchModule->SearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\nSearchModule -->\n\nOntologyTreeModule->SearchModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\nOrgan3dComponent\n\nOrgan3dComponent\n\n\n\nOrgan3dModule\n\nOrgan3dModule\n\nOrgan3dModule -->\n\nOrgan3dComponent->Organ3dModule\n\n\n\n\n\nOrgan3dComponent \n\nOrgan3dComponent \n\nOrgan3dComponent  -->\n\nOrgan3dModule->Organ3dComponent \n\n\n\nOrganModule -->\n\nOrgan3dModule->OrganModule\n\n\n\n\n\nOrganComponent\n\nOrganComponent\n\nOrganModule -->\n\nOrganComponent->OrganModule\n\n\n\n\n\nOrganRoutingModule\n\nOrganRoutingModule\n\nOrganModule -->\n\nOrganRoutingModule->OrganModule\n\n\n\n\n\nOrganDataService\n\nOrganDataService\n\nOrganModule -->\n\nOrganDataService->OrganModule\n\n\n\n\n\nSearchCategoriesComponent\n\nSearchCategoriesComponent\n\n\n\nSearchCategoriesModule\n\nSearchCategoriesModule\n\nSearchCategoriesModule -->\n\nSearchCategoriesComponent->SearchCategoriesModule\n\n\n\nSearchModule -->\n\nSearchCategoriesModule->SearchModule\n\n\n\nSearchModule -->\n\nSearchCategoriesModule->SearchModule\n\n\n\n\n\nSearchCategoriesComponent \n\nSearchCategoriesComponent \n\nSearchCategoriesComponent  -->\n\nSearchCategoriesModule->SearchCategoriesComponent \n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nSearchModule -->\n\nSearchComponent->SearchModule\n\n\n\n\n\nTissueComponent\n\nTissueComponent\n\nTissueModule -->\n\nTissueComponent->TissueModule\n\n\n\n\n\nTissueRoutingModule\n\nTissueRoutingModule\n\nTissueModule -->\n\nTissueRoutingModule->TissueModule\n\n\n\n\n\nTissueDataService\n\nTissueDataService\n\nTissueModule -->\n\nTissueDataService->TissueModule\n\n\n\n\n\nTissuesBrowserGridItemComponent\n\nTissuesBrowserGridItemComponent\n\n\n\nTissuesBrowserGridItemModule\n\nTissuesBrowserGridItemModule\n\nTissuesBrowserGridItemModule -->\n\nTissuesBrowserGridItemComponent->TissuesBrowserGridItemModule\n\n\n\n\n\nTissuesBrowserGridItemComponent \n\nTissuesBrowserGridItemComponent \n\nTissuesBrowserGridItemComponent  -->\n\nTissuesBrowserGridItemModule->TissuesBrowserGridItemComponent \n\n\n\n\n\nTissuesBrowserGridModule\n\nTissuesBrowserGridModule\n\nTissuesBrowserGridModule -->\n\nTissuesBrowserGridItemModule->TissuesBrowserGridModule\n\n\n\n\n\nTissuesBrowserGridComponent\n\nTissuesBrowserGridComponent\n\nTissuesBrowserGridModule -->\n\nTissuesBrowserGridComponent->TissuesBrowserGridModule\n\n\n\n\n\nTissuesBrowserGridComponent \n\nTissuesBrowserGridComponent \n\nTissuesBrowserGridComponent  -->\n\nTissuesBrowserGridModule->TissuesBrowserGridComponent \n\n\n\n\n\nTissuesBrowserModule\n\nTissuesBrowserModule\n\nTissuesBrowserModule -->\n\nTissuesBrowserGridModule->TissuesBrowserModule\n\n\n\n\n\nTissuesBrowserGridPopoverContentModule\n\nTissuesBrowserGridPopoverContentModule\n\nTissuesBrowserGridModule -->\n\nTissuesBrowserGridPopoverContentModule->TissuesBrowserGridModule\n\n\n\n\n\nTissuesBrowserGridPopoverContentComponent \n\nTissuesBrowserGridPopoverContentComponent \n\nTissuesBrowserGridPopoverContentComponent  -->\n\nTissuesBrowserGridPopoverContentModule->TissuesBrowserGridPopoverContentComponent \n\n\n\n\n\nTissuesBrowserGridPopoverContentComponent\n\nTissuesBrowserGridPopoverContentComponent\n\nTissuesBrowserGridPopoverContentModule -->\n\nTissuesBrowserGridPopoverContentComponent->TissuesBrowserGridPopoverContentModule\n\n\n\n\n\nTissuesBrowserComponent\n\nTissuesBrowserComponent\n\nTissuesBrowserModule -->\n\nTissuesBrowserComponent->TissuesBrowserModule\n\n\n\n\n\nTissuesBrowserRoutingModule\n\nTissuesBrowserRoutingModule\n\nTissuesBrowserModule -->\n\nTissuesBrowserRoutingModule->TissuesBrowserModule\n\n\n\n\n\nTissuesBrowserDataService\n\nTissuesBrowserDataService\n\nTissuesBrowserModule -->\n\nTissuesBrowserDataService->TissuesBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        30 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    20 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        25 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DefaultIconDefinition   (src/.../default-icons.ts)\n                        \n                        \n                            FilterPred   (src/.../filter-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/state/icon-registry/default-icons.ts\n    \n    \n        \n            \n                \n                    \n                    DefaultIconDefinition\n                \n            \n            \n                \n                    Icon definition where url and html are strings instead of SafeResourceUrl or SafeHtml.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/shared/common/filter/filter-builder.ts\n    \n    \n        \n            \n                \n                    \n                    FilterPred\n                \n            \n            \n                \n                    Predicate type.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ageConstraints   (src/.../search.service.ts)\n                        \n                        \n                            BLANK_MAPBOX_STYLE   (src/.../app-render-init.module.ts)\n                        \n                        \n                            compareMethods   (src/.../filter-builder.ts)\n                        \n                        \n                            defaultIcons   (src/.../default-icons.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            getLevel   (src/.../ontology-tree.component.ts)\n                        \n                        \n                            idExtractor   (src/.../json-ontology.ts)\n                        \n                        \n                            idProperty   (src/.../json-ontology.ts)\n                        \n                        \n                            is3D   (src/.../organ.component.ts)\n                        \n                        \n                            isExpandable   (src/.../ontology-tree.component.ts)\n                        \n                        \n                            labelExtractor   (src/.../json-ontology.ts)\n                        \n                        \n                            labelProperty   (src/.../json-ontology.ts)\n                        \n                        \n                            parentExtractor   (src/.../json-ontology.ts)\n                        \n                        \n                            parentProperty   (src/.../json-ontology.ts)\n                        \n                        \n                            rootStates   (src/.../app-state.module.ts)\n                        \n                        \n                            synonymsExtractor   (src/.../json-ontology.ts)\n                        \n                        \n                            synonymsProperty   (src/.../json-ontology.ts)\n                        \n                        \n                            valueExtractor   (src/.../json-ontology.ts)\n                        \n                        \n                            valueProperty   (src/.../json-ontology.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/services/search/search.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ageConstraints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  min: 18,\n  max: 89\n}\n                        \n                    \n\n                \n                    \n                        defines the constraint on age range.\nmin and max are used in age slider.\n\n                    \n                \n\n            \n        \n\n    src/app/app-render-init.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BLANK_MAPBOX_STYLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('Blank Mapbox style', {\n  providedIn: 'root',\n  factory: () => ({\n    id: 'blank',\n    version: 8,\n    name: 'Blank',\n    center: [0, 0],\n    zoom: 0,\n    sources: {},\n    sprite: 'https://cdn.jsdelivr.net/gh/lukasmartinelli/osm-liberty@gh-pages/sprites/osm-liberty',\n    glyphs: 'https://cdn.jsdelivr.net/gh/orangemug/font-glyphs@gh-pages/glyphs/{fontstack}/{range}.pbf',\n    layers: [\n      {\n        id: 'background',\n        type: 'background',\n        paint: {\n          'background-color': 'rgba(255,255,255,1)'\n        }\n      }\n    ]\n  })\n})\n                        \n                    \n\n                \n                    \n                        Token for injecting the blank mapbox style. \n\n                    \n                \n\n            \n        \n\n    src/app/shared/common/filter/filter-builder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            compareMethods\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [Compare.equal]: eq,\n  [Compare.not_equal]: negate(eq),\n  [Compare.less_than]: lt,\n  [Compare.less_than_equal]: lte,\n  [Compare.greater_than]: gt,\n  [Compare.greater_than_equal]: gte\n}\n                        \n                    \n\n                \n                    \n                        Mapping from enum Compare values to actual comparison functions.\n\n                    \n                \n\n            \n        \n\n    src/app/shared/state/icon-registry/default-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultIcons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DefaultIconDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { name: 'male', namespace: 'gender', url: 'assets/icons/gender/male.svg' },\n  { name: 'female', namespace: 'gender', url: 'assets/icons/gender/female.svg' },\n  { name: 'male-female', namespace: 'gender', url: 'assets/icons/gender/male-female.svg' },\n  { name: 'undefined', namespace: 'gender', url: 'assets/icons/gender/male-female.svg' },\n\n  { name: 'body', namespace: 'toolbar', url: 'assets/icons/toolbar/body.svg' },\n  { name: 'organ', namespace: 'toolbar', url: 'assets/icons/toolbar/organ.svg' },\n  { name: 'cell', namespace: 'toolbar', url: 'assets/icons/toolbar/cell.svg' },\n  { name: 'comment-outline', namespace: 'toolbar', url: 'assets/icons/toolbar/comment-outline.svg' },\n\n  { name: 'hubmap-logo', namespace: 'app', url: 'assets/icons/app/hubmap-logo.svg' }\n\n  // Add additional icons that should be loaded on startup here!\n]\n                        \n                    \n\n                \n                    \n                        Icons that should be registered at startup.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  localDatabaseUrl: 'https://hubmapconsortium.github.io/ccf-ui-sampledata/v1/data.yml',\n  ccfAssetUrl: '/ccf-ui-sampledata/ccf',\n  ontologyUrl: 'https://cdn.jsdelivr.net/gh/hubmapconsortium/hubmap-ontology/ontologies/partonomy/reifications/partonomy.jsonld',\n  organNodes: [\n    'http://purl.obolibrary.org/obo/UBERON_0000948', // Heart\n    'http://purl.obolibrary.org/obo/UBERON_0002113', // Kidney\n  ]\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  localDatabaseUrl: 'https://hubmapconsortium.github.io/ccf-ui-sampledata/v1/data.yml',\n  ccfAssetUrl: '/ccf-ui-sampledata/ccf',\n  ontologyUrl: 'https://cdn.jsdelivr.net/gh/hubmapconsortium/hubmap-ontology/ontologies/partonomy/reifications/partonomy.jsonld',\n  organNodes: [\n    'http://purl.obolibrary.org/obo/UBERON_0000948', // Heart\n    'http://purl.obolibrary.org/obo/UBERON_0002113', // Kidney\n  ]\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/ontology-tree/ontology-tree.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getLevel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : property('level')\n                        \n                    \n\n                \n                    \n                        Getter function for 'level' on a flat node.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpandable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : property('expandable')\n                        \n                    \n\n                \n                    \n                        Getter function for 'expandable' on a flat node.\n\n                    \n                \n\n            \n        \n\n    src/app/shared/state/ontology/internal/json-ontology.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            idExtractor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : property(idProperty)\n                        \n                    \n\n                \n                    \n                        Function for extracting json id fields. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '@id'\n                        \n                    \n\n                \n                    \n                        Property name of json id field. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelExtractor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n)\n                        \n                    \n\n                \n                    \n                        Function for extracting json label fields. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://www.w3.org/2000/01/rdf-schema#label'\n                        \n                    \n\n                \n                    \n                        Property name of json label field. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentExtractor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n)\n                        \n                    \n\n                \n                    \n                        Function for extracting json parent fields. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'parent'\n                        \n                    \n\n                \n                    \n                        Property name of json parent field. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            synonymsExtractor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n)\n                        \n                    \n\n                \n                    \n                        Function for extracting json synonyms fields. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            synonymsProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'\n                        \n                    \n\n                \n                    \n                        Property name of json synonyms field. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueExtractor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : property(valueProperty)\n                        \n                    \n\n                \n                    \n                        Function for extracting json value fields. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '@value'\n                        \n                    \n\n                \n                    \n                        Property name of json value field. \n\n                    \n                \n\n            \n        \n\n    src/app/views/organ/organ.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            is3D\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n\n                \n                    \n                        Whether to show the 3D demo. Toggled by the key sequence \"3d\" \n\n                    \n                \n\n            \n        \n\n    src/app/app-state.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rootStates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  OntologyState,\n  IconRegistryState,\n  NavigationState,\n  SearchState\n  // Add additional root states here!\n]\n                        \n                    \n\n                \n                    \n                        The top level states to be registered at app start.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
